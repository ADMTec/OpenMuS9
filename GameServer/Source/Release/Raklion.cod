; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\Raklion.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_iUseRaklionEvent@@3HA			; g_iUseRaklionEvent
_DATA	SEGMENT
?g_iUseRaklionEvent@@3HA DD 01H				; g_iUseRaklionEvent
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CRaklion@@QAE@XZ				; CRaklion::CRaklion
PUBLIC	??1CRaklion@@UAE@XZ				; CRaklion::~CRaklion
PUBLIC	?Init@CRaklion@@QAEXXZ				; CRaklion::Init
PUBLIC	?ClearData@CRaklion@@QAEXXZ			; CRaklion::ClearData
PUBLIC	?LoadData@CRaklion@@QAEHPAD@Z			; CRaklion::LoadData
PUBLIC	?CheckData@CRaklion@@QAEXXZ			; CRaklion::CheckData
PUBLIC	?Run@CRaklion@@QAEXXZ				; CRaklion::Run
PUBLIC	?SetState@CRaklion@@QAEXH@Z			; CRaklion::SetState
PUBLIC	?SetNextState@CRaklion@@QAEXH@Z			; CRaklion::SetNextState
PUBLIC	?ChangeState@CRaklion@@QAEXHH@Z			; CRaklion::ChangeState
PUBLIC	?SetState_IDLE@CRaklion@@QAEXXZ			; CRaklion::SetState_IDLE
PUBLIC	?SetState_NOTIFY_1@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_1
PUBLIC	?SetState_STANDBY@CRaklion@@QAEXXZ		; CRaklion::SetState_STANDBY
PUBLIC	?SetState_NOTIFY_2@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_2
PUBLIC	?SetState_READY@CRaklion@@QAEXXZ		; CRaklion::SetState_READY
PUBLIC	?SetState_START_BATTLE@CRaklion@@QAEXXZ		; CRaklion::SetState_START_BATTLE
PUBLIC	?SetState_NOTIFY_3@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_3
PUBLIC	?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ		; CRaklion::SetState_CLOSE_DOOR
PUBLIC	?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ		; CRaklion::SetState_ALL_USER_DIE
PUBLIC	?SetState_NOTIFY_4@CRaklion@@QAEXXZ		; CRaklion::SetState_NOTIFY_4
PUBLIC	?SetState_END@CRaklion@@QAEXXZ			; CRaklion::SetState_END
PUBLIC	?ProcState_IDLE@CRaklion@@QAEXXZ		; CRaklion::ProcState_IDLE
PUBLIC	?ProcState_NOTIFY_1@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_1
PUBLIC	?ProcState_STANDBY@CRaklion@@QAEXXZ		; CRaklion::ProcState_STANDBY
PUBLIC	?ProcState_NOTIFY_2@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_2
PUBLIC	?ProcState_READY@CRaklion@@QAEXXZ		; CRaklion::ProcState_READY
PUBLIC	?ProcState_START_BATTLE@CRaklion@@QAEXXZ	; CRaklion::ProcState_START_BATTLE
PUBLIC	?ProcState_NOTIFY_3@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_3
PUBLIC	?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ		; CRaklion::ProcState_CLOSE_DOOR
PUBLIC	?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ	; CRaklion::ProcState_ALL_USER_DIE
PUBLIC	?ProcState_NOTIFY_4@CRaklion@@QAEXXZ		; CRaklion::ProcState_NOTIFY_4
PUBLIC	?ProcState_END@CRaklion@@QAEXXZ			; CRaklion::ProcState_END
PUBLIC	?SetRaklionEnable@CRaklion@@QAEXH@Z		; CRaklion::SetRaklionEnable
PUBLIC	?IsRaklionEnable@CRaklion@@QAEHXZ		; CRaklion::IsRaklionEnable
PUBLIC	?SetRaklionState@CRaklion@@QAEXH@Z		; CRaklion::SetRaklionState
PUBLIC	?GetRaklionState@CRaklion@@QAEHXZ		; CRaklion::GetRaklionState
PUBLIC	?SetRaklionDetailState@CRaklion@@QAEXH@Z	; CRaklion::SetRaklionDetailState
PUBLIC	?GetRaklionDetailState@CRaklion@@QAEHXZ		; CRaklion::GetRaklionDetailState
PUBLIC	?BossEggRegen@CRaklion@@QAEXXZ			; CRaklion::BossEggRegen
PUBLIC	?BossEggDie@CRaklion@@QAEXXZ			; CRaklion::BossEggDie
PUBLIC	?GetBossEggCount@CRaklion@@QAEHXZ		; CRaklion::GetBossEggCount
PUBLIC	?BossEggRegenAll@CRaklion@@QAEXXZ		; CRaklion::BossEggRegenAll
PUBLIC	?BossEggDeleteAll@CRaklion@@QAEXXZ		; CRaklion::BossEggDeleteAll
PUBLIC	?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ	; CRaklion::CheckUserOnRaklionBossMap
PUBLIC	?CheckEnterRaklion@CRaklion@@QAEHH@Z		; CRaklion::CheckEnterRaklion
PUBLIC	?OperateGmCommand@CRaklion@@QAEXHH@Z		; CRaklion::OperateGmCommand
PUBLIC	?UserMonsterCountCheck@CRaklion@@QAEXXZ		; CRaklion::UserMonsterCountCheck
PUBLIC	??_GCRaklion@@UAEPAXI@Z				; CRaklion::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7CRaklion@@6B@				; CRaklion::`vftable'
PUBLIC	?g_Raklion@@3VCRaklion@@A			; g_Raklion
PUBLIC	??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@ ; `string'
PUBLIC	??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@ ; `string'
PUBLIC	??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@ ; `string'
PUBLIC	??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@ ; `string'
PUBLIC	??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ ; `string'
PUBLIC	??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@ ; `string'
PUBLIC	??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@ ; `string'
PUBLIC	??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@ ; `string'
PUBLIC	??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ ; `string'
PUBLIC	??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@ ; `string'
PUBLIC	??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@ ; `string'
PUBLIC	??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@ ; `string'
PUBLIC	??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@ ; `string'
PUBLIC	??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ ; `string'
PUBLIC	??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ ; `string'
PUBLIC	??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@ ; `string'
PUBLIC	??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@ ; `string'
PUBLIC	??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@ ; `string'
PUBLIC	??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ ; `string'
PUBLIC	??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ ; `string'
PUBLIC	??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ ; `string'
PUBLIC	?RAKLION_TEST_LOG@@3VCLogToFile@@A		; RAKLION_TEST_LOG
PUBLIC	??_C@_0M@KFNBCMHL@?4?2LOG?2EVENT?$AA@		; `string'
PUBLIC	??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@	; `string'
PUBLIC	??_R4CRaklion@@6B@				; CRaklion::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRaklion@@@8				; CRaklion `RTTI Type Descriptor'
PUBLIC	??_R3CRaklion@@8				; CRaklion::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRaklion@@8				; CRaklion::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRaklion@@8			; CRaklion::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	_isalpha:PROC
EXTRN	_isdigit:PROC
EXTRN	_isspace:PROC
EXTRN	_isalnum:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	_fclose:PROC
EXTRN	_fgetc:PROC
EXTRN	_fopen:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_atof:PROC
EXTRN	__localtime64:PROC
EXTRN	__time64:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??0CRaklionBattleOfSelupan@@QAE@XZ:PROC		; CRaklionBattleOfSelupan::CRaklionBattleOfSelupan
EXTRN	??1CRaklionBattleOfSelupan@@UAE@XZ:PROC		; CRaklionBattleOfSelupan::~CRaklionBattleOfSelupan
EXTRN	?ResetAllData@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::ResetAllData
EXTRN	?Run@CRaklionBattleOfSelupan@@QAEXXZ:PROC	; CRaklionBattleOfSelupan::Run
EXTRN	?SetState@CRaklionBattleOfSelupan@@QAEXH@Z:PROC	; CRaklionBattleOfSelupan::SetState
EXTRN	?SetPatternCondition@CRaklionBattleOfSelupan@@QAEXHH@Z:PROC ; CRaklionBattleOfSelupan::SetPatternCondition
EXTRN	?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::SelupanLifeCheck
EXTRN	?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::DeleteSelupan
EXTRN	?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ:PROC ; CRaklionBattleOfSelupan::DeleteSummonMonster
EXTRN	?SetSelupanSkillDelay@CRaklionBattleOfSelupan@@QAEXH@Z:PROC ; CRaklionBattleOfSelupan::SetSelupanSkillDelay
EXTRN	??_ECRaklion@@UAEPAXI@Z:PROC			; CRaklion::`vector deleting destructor'
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?gObjSetMonster@@YAHHH@Z:PROC			; gObjSetMonster
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObjViewportClose@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjViewportClose
EXTRN	?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjViewportListProtocolDestroy
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
EXTRN	?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z:PROC ; CRaklionUtil::NotifyRaklionChangeState
EXTRN	?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z:PROC ; CRaklionUtil::NotifyRaklionSuccessValue
EXTRN	?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ:PROC	; CRaklionUtil::SendMsgAllUser
EXTRN	?CheckUserState@CRaklionBattleUserMng@@QAEXXZ:PROC ; CRaklionBattleUserMng::CheckUserState
EXTRN	?CheckBattleUsers@CRaklionBattleUserMng@@QAEHXZ:PROC ; CRaklionBattleUserMng::CheckBattleUsers
EXTRN	?IsBattleUser@CRaklionBattleUserMng@@QAEHH@Z:PROC ; CRaklionBattleUserMng::IsBattleUser
EXTRN	?gObjMonsterRegen@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjMonsterRegen
EXTRN	??0CLogToFile@@QAE@QAD0H@Z:PROC			; CLogToFile::CLogToFile
EXTRN	??1CLogToFile@@QAE@XZ:PROC			; CLogToFile::~CLogToFile
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?g_RaklionUtil@@3VCRaklionUtil@@A:DWORD		; g_RaklionUtil
EXTRN	?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A:BYTE ; g_RaklionBattleUserMng
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?g_Raklion@@3VCRaklion@@A DB 0e20H DUP (?)		; g_Raklion
?SMDFile@@3PAU_iobuf@@A DD 01H DUP (?)			; SMDFile
?TokenNumber@@3MA DD 01H DUP (?)			; TokenNumber
?TokenString@@3PADA DB 064H DUP (?)			; TokenString
?CurrentToken@@3W4SMDToken@@A DD 01H DUP (?)		; CurrentToken
?RAKLION_TEST_LOG@@3VCLogToFile@@A DB 010228H DUP (?)	; RAKLION_TEST_LOG
_BSS	ENDS
CRT$XCU	SEGMENT
?g_Raklion$initializer$@@3P6AXXZA DD FLAT:??__Eg_Raklion@@YAXXZ ; g_Raklion$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CRaklion@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRaklion@@8 DD FLAT:??_R0?AVCRaklion@@@8	; CRaklion::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_R2CRaklion@@8
rdata$r	SEGMENT
??_R2CRaklion@@8 DD FLAT:??_R1A@?0A@EA@CRaklion@@8	; CRaklion::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRaklion@@8
rdata$r	SEGMENT
??_R3CRaklion@@8 DD 00H					; CRaklion::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRaklion@@@8
data$r	SEGMENT
??_R0?AVCRaklion@@@8 DD FLAT:??_7type_info@@6B@		; CRaklion `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRaklion@@', 00H
data$r	ENDS
;	COMDAT ??_R4CRaklion@@6B@
rdata$r	SEGMENT
??_R4CRaklion@@6B@ DD 00H				; CRaklion::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRaklion@@@8
	DD	FLAT:??_R3CRaklion@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@
CONST	SEGMENT
??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@ DB 'RAKLION_TEST_LOG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KFNBCMHL@?4?2LOG?2EVENT?$AA@
CONST	SEGMENT
??_C@_0M@KFNBCMHL@?4?2LOG?2EVENT?$AA@ DB '.\LOG\EVENT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
CONST	SEGMENT
??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@ DB '['
	DB	' RAKLION ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] S'
	DB	'tate(%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
CONST	SEGMENT
??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@ DB '['
	DB	' RAKLION ][ Entrance Fail ] [%s][%s] State(%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
CONST	SEGMENT
??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@ DB '['
	DB	' RAKLION ][ Invalid User ] Invalid Raklion Boss Map User[%s]['
	DB	'%s]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@
CONST	SEGMENT
??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@ DB '['
	DB	' RAKLION ] [ BossEggDelete ] : BossEgg(%d ea)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@
CONST	SEGMENT
??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@ DB '['
	DB	' RAKLION ] [ BossEggRegen ] : BossEgg(%d ea)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
CONST	SEGMENT
??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@ DB '[RAKLIO'
	DB	'N] BossEggDieCount Error : (%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
CONST	SEGMENT
??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> END', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@
CONST	SEGMENT
??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@ DB '['
	DB	' RAKLION ] State(%d) -> ALL_USER_DIE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@
CONST	SEGMENT
??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@ DB '['
	DB	' RAKLION ] State(%d) -> CLOSE_DOOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@
CONST	SEGMENT
??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@ DB '['
	DB	' RAKLION ] State(%d) -> START_BATTLE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@
CONST	SEGMENT
??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> READY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
CONST	SEGMENT
??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@ DB '['
	DB	' RAKLION ] State(%d) -> STANDBY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
CONST	SEGMENT
??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@ DB '['
	DB	' RAKLION ] State(%d) -> NOTIFY_1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@
CONST	SEGMENT
??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@ DB '['
	DB	' RAKLION ] State(%d) -> IDLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@
CONST	SEGMENT
??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@ DB '['
	DB	'RAKLION][IsInRaklionEvent] %d/%d/%d %dth User : %s (%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@
CONST	SEGMENT
??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@ DB '[ R'
	DB	'AKLION ] - Loading Exception Error (%s) File. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
CONST	SEGMENT
??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@ DB '['
	DB	' RAKLION ] - %s file is Loaded', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@
CONST	SEGMENT
??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@ DB '[ RAK'
	DB	'LION ] - BossPatternCondition[%d] error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@
CONST	SEGMENT
??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@ DB '[ RA'
	DB	'KLION ] - BossSkillDelay count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@
CONST	SEGMENT
??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@ DB '[ R'
	DB	'AKLION ] - BossEggMax count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@
CONST	SEGMENT
??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@ DB '[ R'
	DB	'AKLION ] - BossEggHalf count error : (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
CONST	SEGMENT
??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@ DB '['
	DB	' RAKLION ] - Can''t Open %s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@
CONST	SEGMENT
??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@ DB '['
	DB	' RAKLION ] - File load error : File Name Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CRaklion@@6B@
CONST	SEGMENT
??_7CRaklion@@6B@ DD FLAT:??_R4CRaklion@@6B@		; CRaklion::`vftable'
	DD	FLAT:??_ECRaklion@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadData@CRaklion@@QAEHPAD@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?LoadData@CRaklion@@QAEHPAD@Z$0
__unwindtable$?LoadData@CRaklion@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CRaklion@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CRaklion@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CRaklion@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CRaklion@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CRaklion@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?RAKLION_TEST_LOG$initializer$@@3P6AXXZA DD FLAT:??__ERAKLION_TEST_LOG@@YAXXZ ; RAKLION_TEST_LOG$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FRAKLION_TEST_LOG@@YAXXZ
text$yd	SEGMENT
??__FRAKLION_TEST_LOG@@YAXXZ PROC			; `dynamic atexit destructor for 'RAKLION_TEST_LOG'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  00005	e9 00 00 00 00	 jmp	 ??1CLogToFile@@QAE@XZ	; CLogToFile::~CLogToFile
??__FRAKLION_TEST_LOG@@YAXXZ ENDP			; `dynamic atexit destructor for 'RAKLION_TEST_LOG''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ??__ERAKLION_TEST_LOG@@YAXXZ
text$di	SEGMENT
??__ERAKLION_TEST_LOG@@YAXXZ PROC			; `dynamic initializer for 'RAKLION_TEST_LOG'', COMDAT

; 758  : CLogToFile RAKLION_TEST_LOG("RAKLION_TEST_LOG", ".\\LOG\\EVENT", TRUE);//identical

  00000	6a 01		 push	 1
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KFNBCMHL@?4?2LOG?2EVENT?$AA@
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IHDOCLEO@RAKLION_TEST_LOG?$AA@
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?RAKLION_TEST_LOG@@3VCLogToFile@@A ; RAKLION_TEST_LOG
  00011	e8 00 00 00 00	 call	 ??0CLogToFile@@QAE@QAD0H@Z ; CLogToFile::CLogToFile
  00016	68 00 00 00 00	 push	 OFFSET ??__FRAKLION_TEST_LOG@@YAXXZ ; `dynamic atexit destructor for 'RAKLION_TEST_LOG''
  0001b	e8 00 00 00 00	 call	 _atexit
  00020	59		 pop	 ecx
  00021	c3		 ret	 0
??__ERAKLION_TEST_LOG@@YAXXZ ENDP			; `dynamic initializer for 'RAKLION_TEST_LOG''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_Raklion@@YAXXZ
text$yd	SEGMENT
??__Fg_Raklion@@YAXXZ PROC				; `dynamic atexit destructor for 'g_Raklion'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  00005	e9 00 00 00 00	 jmp	 ??1CRaklion@@UAE@XZ	; CRaklion::~CRaklion
??__Fg_Raklion@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_Raklion''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ??__Eg_Raklion@@YAXXZ
text$di	SEGMENT
??__Eg_Raklion@@YAXXZ PROC				; `dynamic initializer for 'g_Raklion'', COMDAT

; 19   : CRaklion g_Raklion;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  00005	e8 00 00 00 00	 call	 ??0CRaklion@@QAE@XZ	; CRaklion::CRaklion
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_Raklion@@YAXXZ ; `dynamic atexit destructor for 'g_Raklion''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_Raklion@@YAXXZ ENDP				; `dynamic initializer for 'g_Raklion''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\include\readscript.h
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	int ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?TokenString@@3PADA, 0
  00017	53		 push	 ebx
  00018	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8b d8		 mov	 ebx, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	83 fb ff	 cmp	 ebx, -1
  00033	74 5d		 je	 SHORT $LN43@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)
; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	83 fb 2f	 cmp	 ebx, 47			; 0000002fH
  00038	75 30		 jne	 SHORT $LN2@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00040	e8 00 00 00 00	 call	 _fgetc
  00045	8b d8		 mov	 ebx, eax
  00047	83 c4 04	 add	 esp, 4
  0004a	83 fb 2f	 cmp	 ebx, 47			; 0000002fH
  0004d	75 1b		 jne	 SHORT $LN2@GetToken
  0004f	90		 npad	 1
$LL5@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	83 fb ff	 cmp	 ebx, -1
  00053	74 3d		 je	 SHORT $LN43@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  0005b	e8 00 00 00 00	 call	 _fgetc
  00060	8b d8		 mov	 ebx, eax
  00062	83 c4 04	 add	 esp, 4
  00065	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  00068	75 e6		 jne	 SHORT $LL5@GetToken
$LN2@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006a	53		 push	 ebx
  0006b	e8 00 00 00 00	 call	 _isspace
  00070	83 c4 04	 add	 esp, 4
  00073	85 c0		 test	 eax, eax
  00075	75 a9		 jne	 SHORT $LL4@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  00077	8d 43 de	 lea	 eax, DWORD PTR [ebx-34]
  0007a	56		 push	 esi
  0007b	83 f8 5b	 cmp	 eax, 91			; 0000005bH
  0007e	0f 87 89 01 00
	00		 ja	 $LN29@GetToken
  00084	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN58@GetToken[eax]
  0008b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN64@GetToken[eax*4]
$LN43@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE

  00092	b8 02 00 00 00	 mov	 eax, 2
  00097	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00098	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009b	33 cd		 xor	 ecx, ebp
  0009d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
$LN20@GetToken:
  000a6	5e		 pop	 esi

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000a7	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 35 ; 00000023H
  000b1	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b6	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN21@GetToken:
  000c5	5e		 pop	 esi

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000c6	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 59 ; 0000003bH
  000d0	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000d5	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000d6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d9	33 cd		 xor	 ecx, ebp
  000db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
$LN22@GetToken:
  000e4	5e		 pop	 esi

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000e5	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 44 ; 0000002cH
  000ef	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000f4	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
$LN23@GetToken:
  00103	5e		 pop	 esi

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00104	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 123 ; 0000007bH
  0010e	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  00113	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00114	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00117	33 cd		 xor	 ecx, ebp
  00119	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
$LN24@GetToken:
  00122	5e		 pop	 esi

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00123	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 125 ; 0000007dH
  0012d	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  00132	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00133	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00136	33 cd		 xor	 ecx, ebp
  00138	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c3		 ret	 0
$LN25@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  00141	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00147	53		 push	 ebx
  00148	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  0014d	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00153	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  00156	e8 00 00 00 00	 call	 _getc
  0015b	8b d8		 mov	 ebx, eax
  0015d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00160	83 fb ff	 cmp	 ebx, -1
  00163	74 2f		 je	 SHORT $LN59@GetToken
$LL9@GetToken:
  00165	83 fb 2e	 cmp	 ebx, 46			; 0000002eH
  00168	74 12		 je	 SHORT $LN26@GetToken
  0016a	53		 push	 ebx
  0016b	e8 00 00 00 00	 call	 _isdigit
  00170	83 c4 04	 add	 esp, 4
  00173	85 c0		 test	 eax, eax
  00175	75 05		 jne	 SHORT $LN26@GetToken
  00177	83 fb 2d	 cmp	 ebx, 45			; 0000002dH
  0017a	75 18		 jne	 SHORT $LN59@GetToken
$LN26@GetToken:
  0017c	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00182	88 1e		 mov	 BYTE PTR [esi], bl

; 102  : 			p++;

  00184	46		 inc	 esi
  00185	e8 00 00 00 00	 call	 _getc
  0018a	8b d8		 mov	 ebx, eax
  0018c	83 c4 04	 add	 esp, 4
  0018f	83 fb ff	 cmp	 ebx, -1
  00192	75 d1		 jne	 SHORT $LL9@GetToken
$LN59@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = (float)atof( TempString);	// Select the first Byte as Main ID

  00194	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  00197	c6 06 00	 mov	 BYTE PTR [esi], 0
  0019a	50		 push	 eax
  0019b	e8 00 00 00 00	 call	 _atof
  001a0	83 c4 04	 add	 esp, 4

; 106  : 		return CurrentToken  = NUMBER ;

  001a3	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 1
  001ad	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?TokenNumber@@3MA
  001b3	b8 01 00 00 00	 mov	 eax, 1
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  001ba	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bd	33 cd		 xor	 ecx, ebp
  001bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c3		 ret	 0
$LN27@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  001c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  001ce	be 00 00 00 00	 mov	 esi, OFFSET ?TokenString@@3PADA
  001d3	e8 00 00 00 00	 call	 _getc
  001d8	83 c4 04	 add	 esp, 4
  001db	83 f8 ff	 cmp	 eax, -1
  001de	74 1f		 je	 SHORT $LN12@GetToken
$LL11@GetToken:
  001e0	83 f8 22	 cmp	 eax, 34			; 00000022H
  001e3	0f 84 95 00 00
	00		 je	 $LN28@GetToken
  001e9	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 113  : 		{
; 114  : 			*p = ch;

  001ef	88 06		 mov	 BYTE PTR [esi], al

; 115  : 			p++;

  001f1	46		 inc	 esi
  001f2	e8 00 00 00 00	 call	 _getc
  001f7	83 c4 04	 add	 esp, 4
  001fa	83 f8 ff	 cmp	 eax, -1
  001fd	75 e1		 jne	 SHORT $LL11@GetToken
$LN12@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001ff	83 f8 22	 cmp	 eax, 34			; 00000022H
  00202	74 7a		 je	 SHORT $LN28@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  00204	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  0020a	50		 push	 eax

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  0020b	eb 69		 jmp	 SHORT $LN62@GetToken
$LN29@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  0020d	53		 push	 ebx
  0020e	e8 00 00 00 00	 call	 _isalpha
  00213	83 c4 04	 add	 esp, 4
  00216	85 c0		 test	 eax, eax
  00218	0f 84 7f 00 00
	00		 je	 $LN30@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  0021e	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00224	88 1d 00 00 00
	00		 mov	 BYTE PTR ?TokenString@@3PADA, bl
  0022a	be 01 00 00 00	 mov	 esi, OFFSET ?TokenString@@3PADA+1
  0022f	e8 00 00 00 00	 call	 _getc
  00234	8b d8		 mov	 ebx, eax
  00236	83 c4 04	 add	 esp, 4
  00239	83 fb ff	 cmp	 ebx, -1
  0023c	74 31		 je	 SHORT $LN60@GetToken
  0023e	66 90		 npad	 2
$LL13@GetToken:
  00240	83 fb 2e	 cmp	 ebx, 46			; 0000002eH
  00243	74 12		 je	 SHORT $LN32@GetToken
  00245	83 fb 5f	 cmp	 ebx, 95			; 0000005fH
  00248	74 0d		 je	 SHORT $LN32@GetToken
  0024a	53		 push	 ebx
  0024b	e8 00 00 00 00	 call	 _isalnum
  00250	83 c4 04	 add	 esp, 4
  00253	85 c0		 test	 eax, eax
  00255	74 18		 je	 SHORT $LN60@GetToken
$LN32@GetToken:
  00257	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 133  : 			{
; 134  : 				*p=ch;

  0025d	88 1e		 mov	 BYTE PTR [esi], bl

; 135  : 				p++;

  0025f	46		 inc	 esi
  00260	e8 00 00 00 00	 call	 _getc
  00265	8b d8		 mov	 ebx, eax
  00267	83 c4 04	 add	 esp, 4
  0026a	83 fb ff	 cmp	 ebx, -1
  0026d	75 d1		 jne	 SHORT $LL13@GetToken
$LN60@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0026f	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00275	53		 push	 ebx
$LN62@GetToken:
  00276	e8 00 00 00 00	 call	 _ungetc
  0027b	83 c4 08	 add	 esp, 8
$LN28@GetToken:

; 140  : 			*p=0;

  0027e	c6 06 00	 mov	 BYTE PTR [esi], 0

; 141  : 			CurrentToken=NAME;
; 142  : 			return CurrentToken;

  00281	33 c0		 xor	 eax, eax
  00283	5e		 pop	 esi
  00284	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 0
  0028e	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0028f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00292	33 cd		 xor	 ecx, ebp
  00294	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00299	8b e5		 mov	 esp, ebp
  0029b	5d		 pop	 ebp
  0029c	c3		 ret	 0
$LN30@GetToken:
  0029d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a0	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  002a5	5e		 pop	 esi
  002a6	33 cd		 xor	 ecx, ebp
  002a8	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 60 ; 0000003cH
  002b2	5b		 pop	 ebx
  002b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b8	8b e5		 mov	 esp, ebp
  002ba	5d		 pop	 ebp
  002bb	c3		 ret	 0
$LN64@GetToken:
  002bc	00 00 00 00	 DD	 $LN27@GetToken
  002c0	00 00 00 00	 DD	 $LN20@GetToken
  002c4	00 00 00 00	 DD	 $LN22@GetToken
  002c8	00 00 00 00	 DD	 $LN25@GetToken
  002cc	00 00 00 00	 DD	 $LN21@GetToken
  002d0	00 00 00 00	 DD	 $LN23@GetToken
  002d4	00 00 00 00	 DD	 $LN24@GetToken
  002d8	00 00 00 00	 DD	 $LN29@GetToken
$LN58@GetToken:
  002dc	00		 DB	 0
  002dd	01		 DB	 1
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	07		 DB	 7
  002e2	07		 DB	 7
  002e3	07		 DB	 7
  002e4	07		 DB	 7
  002e5	07		 DB	 7
  002e6	02		 DB	 2
  002e7	03		 DB	 3
  002e8	03		 DB	 3
  002e9	07		 DB	 7
  002ea	03		 DB	 3
  002eb	03		 DB	 3
  002ec	03		 DB	 3
  002ed	03		 DB	 3
  002ee	03		 DB	 3
  002ef	03		 DB	 3
  002f0	03		 DB	 3
  002f1	03		 DB	 3
  002f2	03		 DB	 3
  002f3	03		 DB	 3
  002f4	07		 DB	 7
  002f5	04		 DB	 4
  002f6	07		 DB	 7
  002f7	07		 DB	 7
  002f8	07		 DB	 7
  002f9	07		 DB	 7
  002fa	07		 DB	 7
  002fb	07		 DB	 7
  002fc	07		 DB	 7
  002fd	07		 DB	 7
  002fe	07		 DB	 7
  002ff	07		 DB	 7
  00300	07		 DB	 7
  00301	07		 DB	 7
  00302	07		 DB	 7
  00303	07		 DB	 7
  00304	07		 DB	 7
  00305	07		 DB	 7
  00306	07		 DB	 7
  00307	07		 DB	 7
  00308	07		 DB	 7
  00309	07		 DB	 7
  0030a	07		 DB	 7
  0030b	07		 DB	 7
  0030c	07		 DB	 7
  0030d	07		 DB	 7
  0030e	07		 DB	 7
  0030f	07		 DB	 7
  00310	07		 DB	 7
  00311	07		 DB	 7
  00312	07		 DB	 7
  00313	07		 DB	 7
  00314	07		 DB	 7
  00315	07		 DB	 7
  00316	07		 DB	 7
  00317	07		 DB	 7
  00318	07		 DB	 7
  00319	07		 DB	 7
  0031a	07		 DB	 7
  0031b	07		 DB	 7
  0031c	07		 DB	 7
  0031d	07		 DB	 7
  0031e	07		 DB	 7
  0031f	07		 DB	 7
  00320	07		 DB	 7
  00321	07		 DB	 7
  00322	07		 DB	 7
  00323	07		 DB	 7
  00324	07		 DB	 7
  00325	07		 DB	 7
  00326	07		 DB	 7
  00327	07		 DB	 7
  00328	07		 DB	 7
  00329	07		 DB	 7
  0032a	07		 DB	 7
  0032b	07		 DB	 7
  0032c	07		 DB	 7
  0032d	07		 DB	 7
  0032e	07		 DB	 7
  0032f	07		 DB	 7
  00330	07		 DB	 7
  00331	07		 DB	 7
  00332	07		 DB	 7
  00333	07		 DB	 7
  00334	07		 DB	 7
  00335	05		 DB	 5
  00336	07		 DB	 7
  00337	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRaklion@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRaklion@@UAEPAXI@Z PROC				; CRaklion::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRaklion@@UAE@XZ	; CRaklion::~CRaklion
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 20 0e 00 00	 push	 3616			; 00000e20H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRaklion@@UAEPAXI@Z ENDP				; CRaklion::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?UserMonsterCountCheck@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?UserMonsterCountCheck@CRaklion@@QAEXXZ PROC		; CRaklion::UserMonsterCountCheck, COMDAT
; _this$ = ecx

; 762  : #if(DEBUG_RAKLION == 0)
; 763  : 	return;
; 764  : #endif
; 765  : 
; 766  : 	int iUserCount_Live = 0;
; 767  : 	int iUserCount_Die = 0;
; 768  : 
; 769  : 	for ( int iAllUserCount=OBJ_STARTUSERINDEX;iAllUserCount<OBJMAX;iAllUserCount++)
; 770  : 	{
; 771  : 		if ( gObj[iAllUserCount].MapNumber == MAP_INDEX_RAKLIONBOSS && gObj[iAllUserCount].Type == OBJ_USER && (gObj[iAllUserCount].Authority&2) != 2 )
; 772  : 		{
; 773  : 			if ( gObj[iAllUserCount].Live == TRUE )
; 774  : 			{
; 775  : 				iUserCount_Live++;
; 776  : 			}
; 777  : 			else
; 778  : 			{
; 779  : 				iUserCount_Die++;
; 780  : 			}
; 781  : 		}
; 782  : 	}
; 783  : 
; 784  : 	RAKLION_TEST_LOG.Output("[ RAKLION ][ Debug ] 2. All User Check:%d/(Die:%d)", iUserCount_Live, iUserCount_Die);
; 785  : 
; 786  : 	int iMonsterCount=0;
; 787  : 
; 788  : 	for ( int iAllMonsterCount=0;iAllMonsterCount<OBJ_STARTUSERINDEX;iAllMonsterCount++)
; 789  : 	{
; 790  : 		if ( gObj[iAllMonsterCount].MapNumber == MAP_INDEX_RAKLIONBOSS && gObj[iAllMonsterCount].Connected == PLAYER_PLAYING && gObj[iAllMonsterCount].Type == OBJ_MONSTER )
; 791  : 		{
; 792  : 			if ( gObj[iAllMonsterCount].Class != 459 )
; 793  : 			{
; 794  : 				iMonsterCount++;
; 795  : 
; 796  : 				RAKLION_TEST_LOG.Output("[ RAKLION ][ Debug ] 4. Monster Info %s(%d/ObjIndex:%d) [%d]%d-%d HP:%0.1f IsAlive:%d Connected:%d State:%d ActState:Attack(%d)/Move(%d) DieRegen:%d",
; 797  : 					gObj[iAllMonsterCount].Name, gObj[iAllMonsterCount].Class,
; 798  : 					gObj[iAllMonsterCount].m_Index, gObj[iAllMonsterCount].MapNumber,
; 799  : 					gObj[iAllMonsterCount].X, gObj[iAllMonsterCount].Y,
; 800  : 					gObj[iAllMonsterCount].Life, gObj[iAllMonsterCount].Live,
; 801  : 					gObj[iAllMonsterCount].Connected, gObj[iAllMonsterCount].m_State,
; 802  : 					gObj[iAllMonsterCount].m_ActState.Attack, gObj[iAllMonsterCount].m_ActState.Move,
; 803  : 					gObj[iAllMonsterCount].DieRegen);
; 804  : 			}
; 805  : 		}
; 806  : 	}
; 807  : }

  00000	c3		 ret	 0
?UserMonsterCountCheck@CRaklion@@QAEXXZ ENDP		; CRaklion::UserMonsterCountCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?OperateGmCommand@CRaklion@@QAEXHH@Z
_TEXT	SEGMENT
_iUserIndex$ = 8					; size = 4
_iCommand$ = 12						; size = 4
?OperateGmCommand@CRaklion@@QAEXHH@Z PROC		; CRaklion::OperateGmCommand, COMDAT
; _this$ = ecx

; 753  : 	return;
; 754  : 	//
; 755  : }

  00000	c2 08 00	 ret	 8
?OperateGmCommand@CRaklion@@QAEXHH@Z ENDP		; CRaklion::OperateGmCommand
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?CheckEnterRaklion@CRaklion@@QAEHH@Z
_TEXT	SEGMENT
_iUserIndex$ = 8					; size = 4
?CheckEnterRaklion@CRaklion@@QAEHH@Z PROC		; CRaklion::CheckEnterRaklion, COMDAT
; _this$ = ecx

; 728  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 729  : 	if ( !gObjIsConnected(iUserIndex) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iUserIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 09		 jne	 SHORT $LN2@CheckEnter

; 730  : 		return -1;

  00017	5f		 pop	 edi
  00018	83 c8 ff	 or	 eax, -1
  0001b	5e		 pop	 esi

; 749  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
$LN2@CheckEnter:

; 731  : 
; 732  : 	if( this->GetRaklionState() == RAKLION_STATE_CLOSE_DOOR )

  00020	8b cf		 mov	 ecx, edi
  00022	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState

; 733  : 	{
; 734  : 		LogAddTD("[ RAKLION ][ Entrance Fail ] [%s][%s] State(%d)",

  00027	69 f6 40 27 00
	00		 imul	 esi, esi, 10048
  0002d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00033	83 f8 07	 cmp	 eax, 7
  00036	75 29		 jne	 SHORT $LN3@CheckEnter
  00038	8b cf		 mov	 ecx, edi
  0003a	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  0003f	50		 push	 eax
  00040	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00043	50		 push	 eax
  00044	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  00047	50		 push	 eax
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@EGAAKPKD@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5?$FL?$CFs@
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00053	83 c4 10	 add	 esp, 16			; 00000010H

; 735  : 			gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,this->GetRaklionState());
; 736  : 		
; 737  : 		return 3;

  00056	b8 03 00 00 00	 mov	 eax, 3
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi

; 749  : }

  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
$LN3@CheckEnter:
  00061	53		 push	 ebx

; 738  : 	}
; 739  : 
; 740  : 	if ( gObj[iUserIndex].MapNumber != MAP_INDEX_RAKLIONBOSS ) 

  00062	8a 9e 23 01 00
	00		 mov	 bl, BYTE PTR [esi+291]
  00068	80 fb 3a	 cmp	 bl, 58			; 0000003aH
  0006b	74 2e		 je	 SHORT $LN4@CheckEnter

; 741  : 	{
; 742  : 		LogAddTD("[ RAKLION ][ Entrance Fail ] Invalid Map Number(%d) [%s][%s] State(%d)",

  0006d	8b cf		 mov	 ecx, edi
  0006f	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  00074	50		 push	 eax
  00075	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00078	50		 push	 eax
  00079	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0007c	50		 push	 eax
  0007d	0f b6 c3	 movzx	 eax, bl
  00080	50		 push	 eax
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@LPEAFAOG@?$FL?5RAKLION?5?$FN?$FL?5Entrance?5Fail?5?$FN?5Inv@
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0008c	83 c4 14	 add	 esp, 20			; 00000014H

; 743  : 			gObj[iUserIndex].MapNumber, gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,this->GetRaklionState());
; 744  : 
; 745  : 		return 4;

  0008f	b8 04 00 00 00	 mov	 eax, 4
  00094	5b		 pop	 ebx
  00095	5f		 pop	 edi
  00096	5e		 pop	 esi

; 749  : }

  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
$LN4@CheckEnter:
  0009b	5b		 pop	 ebx
  0009c	5f		 pop	 edi

; 746  : 	}
; 747  : 	
; 748  : 	return 0;

  0009d	33 c0		 xor	 eax, eax
  0009f	5e		 pop	 esi

; 749  : }

  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
?CheckEnterRaklion@CRaklion@@QAEHH@Z ENDP		; CRaklion::CheckEnterRaklion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ PROC	; CRaklion::CheckUserOnRaklionBossMap, COMDAT
; _this$ = ecx

; 700  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 701  : 	for ( int iCount=OBJ_STARTUSERINDEX;iCount<OBJMAX;iCount++)

  00002	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  00007	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
  0000c	0f 1f 40 00	 npad	 4
$LL4@CheckUserO:

; 702  : 	{
; 703  : 		if ( gObj[iCount].Connected == PLAYER_PLAYING &&
; 704  : 			 gObj[iCount].Type == OBJ_USER &&

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00015	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001a	75 77		 jne	 SHORT $LN2@CheckUserO
  0001c	80 7c 06 50 01	 cmp	 BYTE PTR [esi+eax+80], 1
  00021	75 70		 jne	 SHORT $LN2@CheckUserO
  00023	80 bc 06 23 01
	00 00 3a	 cmp	 BYTE PTR [esi+eax+291], 58 ; 0000003aH
  0002b	75 66		 jne	 SHORT $LN2@CheckUserO

; 705  : 			 gObj[iCount].MapNumber == MAP_INDEX_RAKLIONBOSS)
; 706  : 		{
; 707  : 			if ( (gObj[iCount].Authority&2) != 2 )

  0002d	f6 84 06 bc 01
	00 00 02	 test	 BYTE PTR [esi+eax+444], 2
  00035	75 5c		 jne	 SHORT $LN2@CheckUserO

; 708  : 			{
; 709  : 				if (g_RaklionBattleUserMng.IsBattleUser(iCount) != 0)

  00037	57		 push	 edi
  00038	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  0003d	e8 00 00 00 00	 call	 ?IsBattleUser@CRaklionBattleUserMng@@QAEHH@Z ; CRaklionBattleUserMng::IsBattleUser
  00042	85 c0		 test	 eax, eax
  00044	75 4d		 jne	 SHORT $LN2@CheckUserO

; 710  : 				{
; 711  : 					continue;
; 712  : 				}
; 713  : 
; 714  : 				if (gObj[iCount].RegenOk == 0 &&
; 715  : 					gObj[iCount].m_State == 2 &&

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004b	80 bc 06 8b 05
	00 00 00	 cmp	 BYTE PTR [esi+eax+1419], 0
  00053	75 3e		 jne	 SHORT $LN2@CheckUserO
  00055	83 bc 06 d0 01
	00 00 02	 cmp	 DWORD PTR [esi+eax+464], 2
  0005d	75 34		 jne	 SHORT $LN2@CheckUserO
  0005f	80 7c 06 51 01	 cmp	 BYTE PTR [esi+eax+81], 1
  00064	75 2d		 jne	 SHORT $LN2@CheckUserO

; 716  : 					gObj[iCount].Live == TRUE)
; 717  : 				{
; 718  : 					gObjMoveGate(iCount, 286);

  00066	68 1e 01 00 00	 push	 286			; 0000011eH
  0006b	57		 push	 edi
  0006c	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate

; 719  : 					LogAddC(2, "[ RAKLION ][ Invalid User ] Invalid Raklion Boss Map User[%s][%s]",

  00071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00077	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0007a	03 c6		 add	 eax, esi
  0007c	50		 push	 eax
  0007d	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00080	03 c6		 add	 eax, esi
  00082	50		 push	 eax
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@EFHAIMOM@?$FL?5RAKLION?5?$FN?$FL?5Invalid?5User?5?$FN?5Inva@
  00088	6a 02		 push	 2
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00090	83 c4 18	 add	 esp, 24			; 00000018H
$LN2@CheckUserO:

; 701  : 	for ( int iCount=OBJ_STARTUSERINDEX;iCount<OBJMAX;iCount++)

  00093	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00099	47		 inc	 edi
  0009a	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  000a0	0f 8c 6a ff ff
	ff		 jl	 $LL4@CheckUserO

; 720  : 						gObj[iCount].AccountID, gObj[iCount].Name);
; 721  : 				}
; 722  : 			}	
; 723  : 		}
; 724  : 	}
; 725  : }

  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	c3		 ret	 0
?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ ENDP	; CRaklion::CheckUserOnRaklionBossMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?BossEggDeleteAll@CRaklion@@QAEXXZ
_TEXT	SEGMENT
tv176 = -4						; size = 4
?BossEggDeleteAll@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggDeleteAll, COMDAT
; _this$ = ecx

; 680  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx

; 681  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  00007	c7 45 fc cc 01
	00 00		 mov	 DWORD PTR tv176[ebp], 460 ; 000001ccH
  0000e	56		 push	 esi
  0000f	b9 cd 01 00 00	 mov	 ecx, 461		; 000001cdH
  00014	57		 push	 edi
  00015	33 ff		 xor	 edi, edi
  00017	33 f6		 xor	 esi, esi
  00019	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0001c	0f 1f 40 00	 npad	 4
$LL4@BossEggDel:

; 682  : 	{
; 683  : 		if (gObj[i].Class == 460 || 
; 684  : 			gObj[i].Class == 461 || 

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00025	0f b7 84 06 90
	00 00 00	 movzx	 eax, WORD PTR [esi+eax+144]
  0002d	66 3b 45 fc	 cmp	 ax, WORD PTR tv176[ebp]
  00031	74 0a		 je	 SHORT $LN6@BossEggDel
  00033	66 3b c1	 cmp	 ax, cx
  00036	74 05		 je	 SHORT $LN6@BossEggDel
  00038	66 3b c2	 cmp	 ax, dx
  0003b	75 4c		 jne	 SHORT $LN2@BossEggDel
$LN6@BossEggDel:

; 685  : 			gObj[i].Class == 462 )
; 686  : 		{
; 687  : 			gObjDel(i);

  0003d	57		 push	 edi
  0003e	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel

; 688  : 			gObj[i].Live = 0;

  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00048	c6 44 06 51 00	 mov	 BYTE PTR [esi+eax+81], 0

; 689  : 			gObj[i].m_State = 0;

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00052	c7 84 06 d0 01
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+464], 0

; 690  : 			gObjViewportListProtocolDestroy(&gObj[i]);

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00062	03 c6		 add	 eax, esi
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?gObjViewportListProtocolDestroy@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportListProtocolDestroy

; 691  : 			gObjViewportClose(&gObj[i]);

  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006f	03 c6		 add	 eax, esi
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?gObjViewportClose@@YAXPAUOBJECTSTRUCT@@@Z ; gObjViewportClose
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH

; 692  : 			this->BossEggDie();

  0007a	8b cb		 mov	 ecx, ebx
  0007c	e8 00 00 00 00	 call	 ?BossEggDie@CRaklion@@QAEXXZ ; CRaklion::BossEggDie
  00081	b9 cd 01 00 00	 mov	 ecx, 461		; 000001cdH
  00086	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LN2@BossEggDel:

; 681  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  00089	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  0008f	47		 inc	 edi
  00090	81 fe 00 dd 49
	06		 cmp	 esi, 105504000		; 0649dd00H
  00096	7c 88		 jl	 SHORT $LL4@BossEggDel

; 693  : 		}
; 694  : 	}
; 695  : 
; 696  : 	LogAddC(5, "[ RAKLION ] [ BossEggDelete ] : BossEgg(%d ea)",this->GetBossEggCount());

  00098	8b cb		 mov	 ecx, ebx
  0009a	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  0009f	50		 push	 eax
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@ONAPBMEC@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggDelete?5?$FN?5?3?5@
  000a5	6a 05		 push	 5
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx

; 697  : }

  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c3		 ret	 0
?BossEggDeleteAll@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggDeleteAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?BossEggRegenAll@CRaklion@@QAEXXZ
_TEXT	SEGMENT
tv182 = -4						; size = 4
?BossEggRegenAll@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggRegenAll, COMDAT
; _this$ = ecx

; 658  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 659  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  00005	bb cd 01 00 00	 mov	 ebx, 461		; 000001cdH
  0000a	c7 45 fc cc 01
	00 00		 mov	 DWORD PTR tv182[ebp], 460 ; 000001ccH
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	8b f9		 mov	 edi, ecx
  00015	33 f6		 xor	 esi, esi
  00017	8d 53 01	 lea	 edx, DWORD PTR [ebx+1]
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@BossEggReg:

; 660  : 	{
; 661  : 		if (gObj[i].Class == 460 || 
; 662  : 			gObj[i].Class == 461 || 

  00020	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00026	0f b7 84 31 90
	00 00 00	 movzx	 eax, WORD PTR [ecx+esi+144]
  0002e	66 3b 45 fc	 cmp	 ax, WORD PTR tv182[ebp]
  00032	74 0a		 je	 SHORT $LN6@BossEggReg
  00034	66 3b c3	 cmp	 ax, bx
  00037	74 05		 je	 SHORT $LN6@BossEggReg
  00039	66 3b c2	 cmp	 ax, dx
  0003c	75 40		 jne	 SHORT $LN2@BossEggReg
$LN6@BossEggReg:

; 663  : 			gObj[i].Class == 462 )
; 664  : 		{
; 665  : 			gObjSetMonster(gObj[i].m_Index,gObj[i].Class);

  0003e	50		 push	 eax
  0003f	ff 34 31	 push	 DWORD PTR [ecx+esi]
  00042	e8 00 00 00 00	 call	 ?gObjSetMonster@@YAHHH@Z ; gObjSetMonster

; 666  : 
; 667  : 			if (gObjMonsterRegen(&gObj[i]))

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004c	03 c6		 add	 eax, esi
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?gObjMonsterRegen@@YAHPAUOBJECTSTRUCT@@@Z ; gObjMonsterRegen
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	85 c0		 test	 eax, eax
  00059	74 1e		 je	 SHORT $LN14@BossEggReg

; 668  : 			{
; 669  : 				gObj[i].Live = TRUE;

  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 670  : 				gObj[i].DieRegen = FALSE;
; 671  : 				this->BossEggRegen();

  00060	8b cf		 mov	 ecx, edi
  00062	c6 44 06 51 01	 mov	 BYTE PTR [esi+eax+81], 1
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006c	c6 84 06 8a 05
	00 00 00	 mov	 BYTE PTR [esi+eax+1418], 0
  00074	e8 00 00 00 00	 call	 ?BossEggRegen@CRaklion@@QAEXXZ ; CRaklion::BossEggRegen
$LN14@BossEggReg:
  00079	ba ce 01 00 00	 mov	 edx, 462		; 000001ceH
$LN2@BossEggReg:

; 659  : 	for ( int i=0;i<OBJ_MAXMONSTER;i++)

  0007e	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00084	81 fe 00 dd 49
	06		 cmp	 esi, 105504000		; 0649dd00H
  0008a	7c 94		 jl	 SHORT $LL4@BossEggReg

; 672  : 			}
; 673  : 		}
; 674  : 	}
; 675  : 
; 676  : 	LogAddC(5, "[ RAKLION ] [ BossEggRegen ] : BossEgg(%d ea)",this->GetBossEggCount());

  0008c	8b cf		 mov	 ecx, edi
  0008e	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  00093	50		 push	 eax
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@DIEAOLJA@?$FL?5RAKLION?5?$FN?5?$FL?5BossEggRegen?5?$FN?5?3?5B@
  00099	6a 05		 push	 5
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx

; 677  : }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
?BossEggRegenAll@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggRegenAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?GetBossEggCount@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?GetBossEggCount@CRaklion@@QAEHXZ PROC			; CRaklion::GetBossEggCount, COMDAT
; _this$ = ecx

; 654  :   return this->m_iBossEggCount;

  00000	8b 81 0c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3596]

; 655  : }

  00006	c3		 ret	 0
?GetBossEggCount@CRaklion@@QAEHXZ ENDP			; CRaklion::GetBossEggCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?BossEggDie@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?BossEggDie@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggDie, COMDAT
; _this$ = ecx

; 643  : 	if ( this->m_iBossEggCount <= 0 )

  00000	8b 81 0c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3596]
  00006	85 c0		 test	 eax, eax
  00008	7f 12		 jg	 SHORT $LN2@BossEggDie

; 644  : 	{
; 645  : 		LogAddC(2, "[RAKLION] BossEggDieCount Error : (%d)",this->m_iBossEggCount);

  0000a	50		 push	 eax
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
  00010	6a 02		 push	 2
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 650  : }

  0001b	c3		 ret	 0
$LN2@BossEggDie:

; 646  : 		return;
; 647  : 	}
; 648  : 
; 649  : 	this->m_iBossEggCount--;

  0001c	48		 dec	 eax
  0001d	89 81 0c 0e 00
	00		 mov	 DWORD PTR [ecx+3596], eax

; 650  : }

  00023	c3		 ret	 0
?BossEggDie@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggDie
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?BossEggRegen@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?BossEggRegen@CRaklion@@QAEXXZ PROC			; CRaklion::BossEggRegen, COMDAT
; _this$ = ecx

; 632  : 	if ( this->m_iBossEggCount >= this->m_iBossEggMax )

  00000	8b 81 0c 0e 00
	00		 mov	 eax, DWORD PTR [ecx+3596]
  00006	3b 41 34	 cmp	 eax, DWORD PTR [ecx+52]
  00009	7c 12		 jl	 SHORT $LN2@BossEggReg

; 633  : 	{
; 634  : 		LogAddC(2, "[RAKLION] BossEggDieCount Error : (%d)",this->m_iBossEggCount);

  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@JFOLIGOA@?$FLRAKLION?$FN?5BossEggDieCount?5Error?5@
  00011	6a 02		 push	 2
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 639  : }

  0001c	c3		 ret	 0
$LN2@BossEggReg:

; 635  : 		return;
; 636  : 	}
; 637  : 
; 638  : 	this->m_iBossEggCount++;

  0001d	40		 inc	 eax
  0001e	89 81 0c 0e 00
	00		 mov	 DWORD PTR [ecx+3596], eax

; 639  : }

  00024	c3		 ret	 0
?BossEggRegen@CRaklion@@QAEXXZ ENDP			; CRaklion::BossEggRegen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?GetRaklionDetailState@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?GetRaklionDetailState@CRaklion@@QAEHXZ PROC		; CRaklion::GetRaklionDetailState, COMDAT
; _this$ = ecx

; 627  : 	return this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState();

  00000	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]

; 628  : }

  00003	c3		 ret	 0
?GetRaklionDetailState@CRaklion@@QAEHXZ ENDP		; CRaklion::GetRaklionDetailState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetRaklionDetailState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iState$ = 8						; size = 4
?SetRaklionDetailState@CRaklion@@QAEXH@Z PROC		; CRaklion::SetRaklionDetailState, COMDAT
; _this$ = ecx

; 621  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h

; 95   : 	void SetBattleOfSelupanState	(int m_iBattleOfSelupanState)	{			this->m_iBattleOfSelupanState	= m_iBattleOfSelupanState;	}

  00003	8b 45 08	 mov	 eax, DWORD PTR _iState$[ebp]
  00006	89 41 40	 mov	 DWORD PTR [ecx+64], eax
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 623  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetRaklionDetailState@CRaklion@@QAEXH@Z ENDP		; CRaklion::SetRaklionDetailState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?GetRaklionState@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?GetRaklionState@CRaklion@@QAEHXZ PROC			; CRaklion::GetRaklionState, COMDAT
; _this$ = ecx

; 617  : 	return this->m_iRaklionState; 

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 618  : }

  00003	c3		 ret	 0
?GetRaklionState@CRaklion@@QAEHXZ ENDP			; CRaklion::GetRaklionState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetRaklionState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iRaklionState$ = 8					; size = 4
?SetRaklionState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetRaklionState, COMDAT
; _this$ = ecx

; 611  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 	this->m_iRaklionState = iRaklionState;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iRaklionState$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 613  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetRaklionState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetRaklionState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?IsRaklionEnable@CRaklion@@QAEHXZ
_TEXT	SEGMENT
?IsRaklionEnable@CRaklion@@QAEHXZ PROC			; CRaklion::IsRaklionEnable, COMDAT
; _this$ = ecx

; 602  : 	if(g_iUseRaklionEvent != 0 && this->m_IsRaklionEnable != 0)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_iUseRaklionEvent@@3HA, 0 ; g_iUseRaklionEvent
  00007	74 0c		 je	 SHORT $LN2@IsRaklionE
  00009	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0000d	74 06		 je	 SHORT $LN2@IsRaklionE

; 603  : 	{
; 604  : 		return TRUE;

  0000f	b8 01 00 00 00	 mov	 eax, 1

; 608  : }

  00014	c3		 ret	 0
$LN2@IsRaklionE:

; 605  : 	}
; 606  : 
; 607  : 	return FALSE;

  00015	33 c0		 xor	 eax, eax

; 608  : }

  00017	c3		 ret	 0
?IsRaklionEnable@CRaklion@@QAEHXZ ENDP			; CRaklion::IsRaklionEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetRaklionEnable@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 4
?SetRaklionEnable@CRaklion@@QAEXH@Z PROC		; CRaklion::SetRaklionEnable, COMDAT
; _this$ = ecx

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 597  : 	this->m_IsRaklionEnable = bEnable;

  00003	8b 45 08	 mov	 eax, DWORD PTR _bEnable$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 598  : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetRaklionEnable@CRaklion@@QAEXH@Z ENDP		; CRaklion::SetRaklionEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_END@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_END@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_END, COMDAT
; _this$ = ecx

; 592  : 	this->SetState(RAKLION_STATE_IDLE);

  00000	6a 00		 push	 0
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 593  : }

  00007	c3		 ret	 0
?ProcState_END@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_END
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_NOTIFY_4@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_4@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_4, COMDAT
; _this$ = ecx

; 583  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 584  : 	if ( 1000 * this->m_iBossZoneOpenDelay < GetTickCount() - this->m_iBossZoneOpenMSec )

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	69 56 2c e8 03
	00 00		 imul	 edx, DWORD PTR [esi+44], 1000
  00010	2b 46 1c	 sub	 eax, DWORD PTR [esi+28]
  00013	3b d0		 cmp	 edx, eax
  00015	73 09		 jae	 SHORT $LN2@ProcState_

; 585  : 	{
; 586  : 		this->SetState(RAKLION_STATE_END);

  00017	6a 0a		 push	 10			; 0000000aH
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN2@ProcState_:
  00020	5e		 pop	 esi

; 587  : 	}
; 588  : }

  00021	c3		 ret	 0
?ProcState_NOTIFY_4@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_ALL_USER_DIE, COMDAT
; _this$ = ecx

; 579  : 	this->SetState(RAKLION_STATE_NOTIFY_4);

  00000	6a 09		 push	 9
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 580  : }

  00007	c3		 ret	 0
?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_ALL_USER_DIE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_CLOSE_DOOR, COMDAT
; _this$ = ecx

; 556  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 557  : 	if ( g_RaklionBattleUserMng.CheckBattleUsers() == 1)

  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  00008	e8 00 00 00 00	 call	 ?CheckBattleUsers@CRaklionBattleUserMng@@QAEHXZ ; CRaklionBattleUserMng::CheckBattleUsers
  0000d	83 f8 01	 cmp	 eax, 1
  00010	75 12		 jne	 SHORT $LN2@ProcState_

; 558  : 	{
; 559  : 		this->m_RaklionBattleOfSelupan.SetSuccessValue(FALSE);
; 560  : 		this->SetState(RAKLION_STATE_ALL_USER_DIE);

  00012	6a 08		 push	 8

; 567  : 		this->SetState(RAKLION_STATE_NOTIFY_4);

  00014	8b ce		 mov	 ecx, esi
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h

; 97   : 	void SetSuccessValue			(BOOL bIsSuccess)				{			this->m_bIsSucccess				= bIsSuccess;				}

  00016	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 567  : 		this->SetState(RAKLION_STATE_NOTIFY_4);

  0001d	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  00022	5e		 pop	 esi

; 573  : 
; 574  : 
; 575  : }

  00023	c3		 ret	 0
$LN2@ProcState_:

; 561  : 		return;
; 562  : 	}		
; 563  : 
; 564  : 	if ( this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState() == 9 )

  00024	83 7e 40 09	 cmp	 DWORD PTR [esi+64], 9
  00028	75 12		 jne	 SHORT $LN3@ProcState_

; 567  : 		this->SetState(RAKLION_STATE_NOTIFY_4);

  0002a	6a 09		 push	 9
  0002c	8b ce		 mov	 ecx, esi
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h

; 97   : 	void SetSuccessValue			(BOOL bIsSuccess)				{			this->m_bIsSucccess				= bIsSuccess;				}

  0002e	c7 46 68 01 00
	00 00		 mov	 DWORD PTR [esi+104], 1
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 567  : 		this->SetState(RAKLION_STATE_NOTIFY_4);

  00035	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  0003a	5e		 pop	 esi

; 573  : 
; 574  : 
; 575  : }

  0003b	c3		 ret	 0
$LN3@ProcState_:

; 568  : 		return;
; 569  : 	}
; 570  : 	
; 571  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  0003c	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0003f	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 572  : 	this->m_RaklionBattleOfSelupan.Run();

  00044	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00047	5e		 pop	 esi
  00048	e9 00 00 00 00	 jmp	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run
?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_CLOSE_DOOR
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_NOTIFY_3@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_3@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_3, COMDAT
; _this$ = ecx

; 547  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 548  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  00004	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  00007	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 549  : 
; 550  : 	this->m_RaklionBattleOfSelupan.Run();

  0000c	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  0000f	e8 00 00 00 00	 call	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run

; 551  : 
; 552  : 	this->SetState(RAKLION_STATE_CLOSE_DOOR);

  00014	6a 07		 push	 7
  00016	8b cf		 mov	 ecx, edi
  00018	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi

; 553  : }

  0001f	c3		 ret	 0
?ProcState_NOTIFY_3@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_START_BATTLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_START_BATTLE@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_START_BATTLE, COMDAT
; _this$ = ecx

; 535  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 536  : 	if ( 1000 * this->m_iBossZoneCloseDelay < GetTickCount() - this->m_iBossZoneCloseMSec )

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	69 56 28 e8 03
	00 00		 imul	 edx, DWORD PTR [esi+40], 1000
  00010	2b 46 18	 sub	 eax, DWORD PTR [esi+24]
  00013	3b d0		 cmp	 edx, eax
  00015	73 09		 jae	 SHORT $LN2@ProcState_

; 537  : 	{
; 538  : 		this->SetState(RAKLION_STATE_NOTIFY_3);

  00017	6a 06		 push	 6
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN2@ProcState_:

; 539  : 	}
; 540  : 
; 541  : 	this->m_RaklionBattleOfSelupan.SelupanLifeCheck();

  00020	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00023	e8 00 00 00 00	 call	 ?SelupanLifeCheck@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::SelupanLifeCheck

; 542  : 
; 543  : 	this->m_RaklionBattleOfSelupan.Run();

  00028	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0002b	5e		 pop	 esi
  0002c	e9 00 00 00 00	 jmp	 ?Run@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::Run
?ProcState_START_BATTLE@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_START_BATTLE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_READY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_READY@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_READY, COMDAT
; _this$ = ecx

; 531  : 	this->SetState(RAKLION_STATE_START_BATTLE);

  00000	6a 05		 push	 5
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 532  : }

  00007	c3		 ret	 0
?ProcState_READY@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_READY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_NOTIFY_2@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_2@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_2, COMDAT
; _this$ = ecx

; 526  : 	this->SetState(RAKLION_STATE_READY);

  00000	6a 04		 push	 4
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 527  : }

  00007	c3		 ret	 0
?ProcState_NOTIFY_2@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_STANDBY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_STANDBY@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_STANDBY, COMDAT
; _this$ = ecx

; 517  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 518  : 	if ( 1000 * this->m_iAppearanceDelay <= GetTickCount() - this->m_iAppearanceMSec )

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	69 56 24 e8 03
	00 00		 imul	 edx, DWORD PTR [esi+36], 1000
  00010	2b 46 14	 sub	 eax, DWORD PTR [esi+20]
  00013	3b d0		 cmp	 edx, eax
  00015	77 09		 ja	 SHORT $LN2@ProcState_

; 519  : 	{
; 520  : 		this->SetState(RAKLION_STATE_NOTIFY_2);

  00017	6a 03		 push	 3
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
$LN2@ProcState_:
  00020	5e		 pop	 esi

; 521  : 	}
; 522  : }

  00021	c3		 ret	 0
?ProcState_STANDBY@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_STANDBY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_NOTIFY_1@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY_1@CRaklion@@QAEXXZ PROC		; CRaklion::ProcState_NOTIFY_1, COMDAT
; _this$ = ecx

; 513  : 	this->SetState(RAKLION_STATE_IDLE);

  00000	6a 00		 push	 0
  00002	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 514  : }

  00007	c3		 ret	 0
?ProcState_NOTIFY_1@CRaklion@@QAEXXZ ENDP		; CRaklion::ProcState_NOTIFY_1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ProcState_IDLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ProcState_IDLE@CRaklion@@QAEXXZ PROC			; CRaklion::ProcState_IDLE, COMDAT
; _this$ = ecx

; 493  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 494  : 	if ( this->GetBossEggCount() == 0 )

  00003	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  00008	85 c0		 test	 eax, eax
  0000a	75 0b		 jne	 SHORT $LN2@ProcState_

; 495  : 	{
; 496  : 		this->SetState(RAKLION_STATE_STANDBY);

  0000c	6a 02		 push	 2
  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
  00015	5e		 pop	 esi

; 507  : 		}
; 508  : 	}
; 509  : }

  00016	c3		 ret	 0
$LN2@ProcState_:

; 497  : 		return;
; 498  : 	}
; 499  : 
; 500  : 	if ( this->m_iBossEggHalfChecked == 0)

  00017	83 be 08 0e 00
	00 00		 cmp	 DWORD PTR [esi+3592], 0
  0001e	75 1f		 jne	 SHORT $LN4@ProcState_

; 501  : 	{
; 502  : 		if ( this->GetBossEggCount() == this->m_iBossEggHalf )

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?GetBossEggCount@CRaklion@@QAEHXZ ; CRaklion::GetBossEggCount
  00027	3b 46 30	 cmp	 eax, DWORD PTR [esi+48]
  0002a	75 13		 jne	 SHORT $LN4@ProcState_

; 503  : 		{
; 504  : 			this->SetState(RAKLION_STATE_NOTIFY_1);

  0002c	6a 01		 push	 1
  0002e	8b ce		 mov	 ecx, esi
  00030	e8 00 00 00 00	 call	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState

; 505  : 
; 506  : 			this->m_iBossEggHalfChecked = 1;

  00035	c7 86 08 0e 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+3592], 1
$LN4@ProcState_:
  0003f	5e		 pop	 esi

; 507  : 		}
; 508  : 	}
; 509  : }

  00040	c3		 ret	 0
?ProcState_IDLE@CRaklion@@QAEXXZ ENDP			; CRaklion::ProcState_IDLE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_END@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_END@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_END, COMDAT
; _this$ = ecx

; 475  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 476  : 	LogAddC(7, "[ RAKLION ] State(%d) -> END", this->m_iRaklionState);

  00004	ff 77 08	 push	 DWORD PTR [edi+8]
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HJFCIMIF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5END?$AA@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  : 
; 478  : 	this->m_RaklionBattleOfSelupan.DeleteSelupan();

  00017	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  0001a	e8 00 00 00 00	 call	 ?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSelupan

; 479  : 	this->m_RaklionBattleOfSelupan.DeleteSummonMonster();

  0001f	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  00022	e8 00 00 00 00	 call	 ?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSummonMonster

; 480  : 	this->m_RaklionBattleOfSelupan.ResetAllData();

  00027	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  0002a	e8 00 00 00 00	 call	 ?ResetAllData@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::ResetAllData

; 481  : 
; 482  : 	this->ClearData();

  0002f	8b cf		 mov	 ecx, edi
  00031	e8 00 00 00 00	 call	 ?ClearData@CRaklion@@QAEXXZ ; CRaklion::ClearData

; 483  : 
; 484  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3414));

  00036	68 56 0d 00 00	 push	 3414			; 00000d56H
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00040	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  0004b	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  00050	83 c4 08	 add	 esp, 8

; 485  : 
; 486  : 	this->SetRaklionState(RAKLION_STATE_END);

  00053	8b cf		 mov	 ecx, edi
  00055	6a 0a		 push	 10			; 0000000aH
  00057	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState

; 487  : 
; 488  : 	this->BossEggRegenAll();

  0005c	8b cf		 mov	 ecx, edi
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	e9 00 00 00 00	 jmp	 ?BossEggRegenAll@CRaklion@@QAEXXZ ; CRaklion::BossEggRegenAll
?SetState_END@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_END
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_NOTIFY_4@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_4@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_4, COMDAT
; _this$ = ecx

; 454  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 455  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_4", this->m_iRaklionState);

  00004	ff 77 08	 push	 DWORD PTR [edi+8]
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PDEGCAJC@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 456  : 
; 457  : 	this->m_iBossZoneOpenMSec = GetTickCount();

  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0001d	89 47 1c	 mov	 DWORD PTR [edi+28], eax

; 462  : 
; 463  : 	if(iGateOpen == 0)

  00020	b9 01 00 00 00	 mov	 ecx, 1
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h

; 98   : 	BOOL GetSuccessValue			(							)	{	return	this->m_bIsSucccess;										}

  00025	8b 77 68	 mov	 esi, DWORD PTR [edi+104]
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 461  : 	int iGateOpen = this->m_iBossZoneOpenDelay / 60;

  00028	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0002d	f7 6f 2c	 imul	 DWORD PTR [edi+44]
  00030	03 57 2c	 add	 edx, DWORD PTR [edi+44]
  00033	c1 fa 05	 sar	 edx, 5
  00036	8b c2		 mov	 eax, edx
  00038	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003b	03 c2		 add	 eax, edx

; 462  : 
; 463  : 	if(iGateOpen == 0)

  0003d	0f 44 c1	 cmove	 eax, ecx

; 464  : 	{
; 465  : 		iGateOpen = 1;
; 466  : 	}
; 467  : 
; 468  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3413),iGateOpen);

  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00045	50		 push	 eax
  00046	68 55 0d 00 00	 push	 3413			; 00000d55H
  0004b	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00056	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 469  : 	g_RaklionUtil.NotifyRaklionSuccessValue(iSuccesValue);

  0005e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 ?NotifyRaklionSuccessValue@CRaklionUtil@@QAEXH@Z ; CRaklionUtil::NotifyRaklionSuccessValue

; 470  : 
; 471  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_4);

  00069	6a 09		 push	 9
  0006b	8b cf		 mov	 ecx, edi
  0006d	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi

; 472  : }

  00074	c3		 ret	 0
?SetState_NOTIFY_4@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_ALL_USER_DIE, COMDAT
; _this$ = ecx

; 443  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 444  : 	LogAddC(7, "[ RAKLION ] State(%d) -> ALL_USER_DIE", this->m_iRaklionState);

  00004	ff 77 08	 push	 DWORD PTR [edi+8]
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@IGAGCAMK@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5ALL_USE@
  0000c	6a 07		 push	 7
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 445  : 	
; 446  : 	this->m_RaklionBattleOfSelupan.DeleteSelupan();

  00017	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  0001a	e8 00 00 00 00	 call	 ?DeleteSelupan@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSelupan

; 447  : 	
; 448  : 	this->m_RaklionBattleOfSelupan.DeleteSummonMonster();

  0001f	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  00022	e8 00 00 00 00	 call	 ?DeleteSummonMonster@CRaklionBattleOfSelupan@@QAEXXZ ; CRaklionBattleOfSelupan::DeleteSummonMonster

; 449  : 	
; 450  : 	this->SetRaklionState(RAKLION_STATE_ALL_USER_DIE);

  00027	6a 08		 push	 8
  00029	8b cf		 mov	 ecx, edi
  0002b	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi

; 451  : }

  00032	c3		 ret	 0
?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_ALL_USER_DIE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_CLOSE_DOOR, COMDAT
; _this$ = ecx

; 436  : {	

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 437  : 	LogAddC(7, "[ RAKLION ] State(%d) -> CLOSE_DOOR", this->m_iRaklionState);

  00003	ff 76 08	 push	 DWORD PTR [esi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@CEKALBPI@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5CLOSE_D@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 438  : 
; 439  : 	this->SetRaklionState(RAKLION_STATE_CLOSE_DOOR);

  00016	8b ce		 mov	 ecx, esi
  00018	6a 07		 push	 7
  0001a	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0001f	5e		 pop	 esi

; 440  : }

  00020	c3		 ret	 0
?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_CLOSE_DOOR
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_NOTIFY_3@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_3@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_3, COMDAT
; _this$ = ecx

; 426  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 427  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_3", this->m_iRaklionState);

  00003	ff 76 08	 push	 DWORD PTR [esi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@LMAHLGFF@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 428  : 	
; 429  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3411));

  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0001b	68 53 0d 00 00	 push	 3411			; 00000d53H
  00020	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00025	50		 push	 eax
  00026	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  0002b	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  00030	83 c4 08	 add	 esp, 8

; 430  : 	
; 431  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_3);

  00033	8b ce		 mov	 ecx, esi
  00035	6a 06		 push	 6
  00037	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0003c	5e		 pop	 esi

; 432  : 
; 433  : }

  0003d	c3		 ret	 0
?SetState_NOTIFY_3@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_START_BATTLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_START_BATTLE@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_START_BATTLE, COMDAT
; _this$ = ecx

; 417  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 418  : 	LogAddC(7, "[ RAKLION ] State(%d) -> START_BATTLE", this->m_iRaklionState);

  00003	ff 76 08	 push	 DWORD PTR [esi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHBAIFDM@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5START_B@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 419  : 	
; 420  : 	this->m_iBossZoneCloseMSec = GetTickCount();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 421  : 	
; 422  : 	this->SetRaklionState(RAKLION_STATE_START_BATTLE);

  0001c	6a 05		 push	 5
  0001e	8b ce		 mov	 ecx, esi
  00020	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00023	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00028	5e		 pop	 esi

; 423  : }

  00029	c3		 ret	 0
?SetState_START_BATTLE@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_START_BATTLE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_READY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_READY@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_READY, COMDAT
; _this$ = ecx

; 408  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 409  : 	LogAddC(7, "[ RAKLION ] State(%d) -> READY", this->m_iRaklionState);

  00003	ff 76 08	 push	 DWORD PTR [esi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@OAMNOKFG@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5READY?$AA@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 410  : 	
; 411  : 	this->m_RaklionBattleOfSelupan.SetState(1);

  00016	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?SetState@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetState

; 412  : 	
; 413  : 	this->SetRaklionState(RAKLION_STATE_READY);

  00020	6a 04		 push	 4
  00022	8b ce		 mov	 ecx, esi
  00024	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00029	5e		 pop	 esi

; 414  : }

  0002a	c3		 ret	 0
?SetState_READY@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_READY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_NOTIFY_2@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_2@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_2, COMDAT
; _this$ = ecx

; 392  : {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 393  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_2", this->m_iRaklionState);

  00003	ff 77 08	 push	 DWORD PTR [edi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@KFBMIHBE@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 394  : 
; 395  : 	int iGateClosedMsg = this->m_iBossZoneCloseDelay / 60;

  00013	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	f7 6f 28	 imul	 DWORD PTR [edi+40]

; 396  : 
; 397  : 	if(iGateClosedMsg == 0)

  0001e	b9 01 00 00 00	 mov	 ecx, 1
  00023	03 57 28	 add	 edx, DWORD PTR [edi+40]
  00026	c1 fa 05	 sar	 edx, 5
  00029	8b c2		 mov	 eax, edx
  0002b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002e	03 c2		 add	 eax, edx
  00030	0f 44 c1	 cmove	 eax, ecx

; 398  : 	{
; 399  : 		iGateClosedMsg = 1;
; 400  : 	}
; 401  : 
; 402  : 	g_RaklionUtil.SendMsgAllUser(lMsg.Get(3410),iGateClosedMsg);

  00033	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00038	50		 push	 eax
  00039	68 52 0d 00 00	 push	 3410			; 00000d52H
  0003e	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00049	e8 00 00 00 00	 call	 ?SendMsgAllUser@CRaklionUtil@@QAAXPADZZ ; CRaklionUtil::SendMsgAllUser
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 403  : 
; 404  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_2);

  00051	8b cf		 mov	 ecx, edi
  00053	6a 03		 push	 3
  00055	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0005a	5f		 pop	 edi

; 405  : }

  0005b	c3		 ret	 0
?SetState_NOTIFY_2@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_STANDBY@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_STANDBY@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_STANDBY, COMDAT
; _this$ = ecx

; 383  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 384  : 	LogAddC(7, "[ RAKLION ] State(%d) -> STANDBY", this->m_iRaklionState);

  00003	ff 76 08	 push	 DWORD PTR [esi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@FBJJKOMN@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5STANDBY@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 
; 386  : 	this->m_iAppearanceMSec = GetTickCount();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 387  : 
; 388  : 	this->SetRaklionState(RAKLION_STATE_STANDBY);

  0001c	6a 02		 push	 2
  0001e	8b ce		 mov	 ecx, esi
  00020	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00023	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  00028	5e		 pop	 esi

; 389  : }

  00029	c3		 ret	 0
?SetState_STANDBY@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_STANDBY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_NOTIFY_1@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY_1@CRaklion@@QAEXXZ PROC		; CRaklion::SetState_NOTIFY_1, COMDAT
; _this$ = ecx

; 376  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 377  : 	LogAddC(7, "[ RAKLION ] State(%d) -> NOTIFY_1", this->m_iRaklionState);

  00003	ff 76 08	 push	 DWORD PTR [esi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@IODBNENH@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5NOTIFY_@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 378  : 
; 379  : 	this->SetRaklionState(RAKLION_STATE_NOTIFY_1);

  00016	8b ce		 mov	 ecx, esi
  00018	6a 01		 push	 1
  0001a	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0001f	5e		 pop	 esi

; 380  : }

  00020	c3		 ret	 0
?SetState_NOTIFY_1@CRaklion@@QAEXXZ ENDP		; CRaklion::SetState_NOTIFY_1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState_IDLE@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?SetState_IDLE@CRaklion@@QAEXXZ PROC			; CRaklion::SetState_IDLE, COMDAT
; _this$ = ecx

; 369  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 370  : 	LogAddC(7, "[ RAKLION ] State(%d) -> IDLE", this->m_iRaklionState);

  00003	ff 76 08	 push	 DWORD PTR [esi+8]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@LEPLMCLO@?$FL?5RAKLION?5?$FN?5State?$CI?$CFd?$CJ?5?9?$DO?5IDLE?$AA@
  0000b	6a 07		 push	 7
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 371  : 
; 372  : 	this->SetRaklionState(RAKLION_STATE_IDLE);

  00016	8b ce		 mov	 ecx, esi
  00018	6a 00		 push	 0
  0001a	e8 00 00 00 00	 call	 ?SetRaklionState@CRaklion@@QAEXH@Z ; CRaklion::SetRaklionState
  0001f	5e		 pop	 esi

; 373  : }

  00020	c3		 ret	 0
?SetState_IDLE@CRaklion@@QAEXXZ ENDP			; CRaklion::SetState_IDLE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ChangeState@CRaklion@@QAEXHH@Z
_TEXT	SEGMENT
_iState$ = 8						; size = 4
_iDetailState$ = 12					; size = 4
?ChangeState@CRaklion@@QAEXHH@Z PROC			; CRaklion::ChangeState, COMDAT
; _this$ = ecx

; 365  : 	//some stuff
; 366  : }

  00000	c2 08 00	 ret	 8
?ChangeState@CRaklion@@QAEXHH@Z ENDP			; CRaklion::ChangeState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetNextState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iCurrentState$ = 8					; size = 4
?SetNextState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetNextState, COMDAT
; _this$ = ecx

; 352  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 353  : 	int iNextState = iCurrentState + 1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]

; 354  : 
; 355  : 	if( iNextState > 12 )

  00006	33 d2		 xor	 edx, edx
  00008	40		 inc	 eax
  00009	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  0000c	0f 4f c2	 cmovg	 eax, edx

; 356  : 	{
; 357  : 		iNextState = 0;
; 358  : 	}
; 359  : 
; 360  : 	this->SetState(iNextState);

  0000f	89 45 08	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 361  : }

  00012	5d		 pop	 ebp

; 356  : 	{
; 357  : 		iNextState = 0;
; 358  : 	}
; 359  : 
; 360  : 	this->SetState(iNextState);

  00013	e9 00 00 00 00	 jmp	 ?SetState@CRaklion@@QAEXH@Z ; CRaklion::SetState
?SetNextState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetNextState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?SetState@CRaklion@@QAEXH@Z
_TEXT	SEGMENT
_iRaklionState$ = 8					; size = 4
?SetState@CRaklion@@QAEXH@Z PROC			; CRaklion::SetState, COMDAT
; _this$ = ecx

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 332  : 	switch ( iRaklionState )

  00003	8b 45 08	 mov	 eax, DWORD PTR _iRaklionState$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0000c	77 52		 ja	 SHORT $LN2@SetState
  0000e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN19@SetState[eax*4]
$LN4@SetState:

; 333  : 	{
; 334  : 	case RAKLION_STATE_IDLE:			this->SetState_IDLE();			break;

  00015	e8 00 00 00 00	 call	 ?SetState_IDLE@CRaklion@@QAEXXZ ; CRaklion::SetState_IDLE
  0001a	eb 44		 jmp	 SHORT $LN2@SetState
$LN5@SetState:

; 335  : 	case RAKLION_STATE_NOTIFY_1:		this->SetState_NOTIFY_1();		break;

  0001c	e8 00 00 00 00	 call	 ?SetState_NOTIFY_1@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_1
  00021	eb 3d		 jmp	 SHORT $LN2@SetState
$LN6@SetState:

; 336  : 	case RAKLION_STATE_STANDBY:			this->SetState_STANDBY();		break;

  00023	e8 00 00 00 00	 call	 ?SetState_STANDBY@CRaklion@@QAEXXZ ; CRaklion::SetState_STANDBY
  00028	eb 36		 jmp	 SHORT $LN2@SetState
$LN7@SetState:

; 337  : 	case RAKLION_STATE_NOTIFY_2:		this->SetState_NOTIFY_2();		break;

  0002a	e8 00 00 00 00	 call	 ?SetState_NOTIFY_2@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_2
  0002f	eb 2f		 jmp	 SHORT $LN2@SetState
$LN8@SetState:

; 338  : 	case RAKLION_STATE_READY:			this->SetState_READY();			break;

  00031	e8 00 00 00 00	 call	 ?SetState_READY@CRaklion@@QAEXXZ ; CRaklion::SetState_READY
  00036	eb 28		 jmp	 SHORT $LN2@SetState
$LN9@SetState:

; 339  : 	case RAKLION_STATE_START_BATTLE:	this->SetState_START_BATTLE();	break;

  00038	e8 00 00 00 00	 call	 ?SetState_START_BATTLE@CRaklion@@QAEXXZ ; CRaklion::SetState_START_BATTLE
  0003d	eb 21		 jmp	 SHORT $LN2@SetState
$LN10@SetState:

; 340  : 	case RAKLION_STATE_NOTIFY_3:		this->SetState_NOTIFY_3();		break;

  0003f	e8 00 00 00 00	 call	 ?SetState_NOTIFY_3@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_3
  00044	eb 1a		 jmp	 SHORT $LN2@SetState
$LN11@SetState:

; 341  : 	case RAKLION_STATE_CLOSE_DOOR:		this->SetState_CLOSE_DOOR();	break;

  00046	e8 00 00 00 00	 call	 ?SetState_CLOSE_DOOR@CRaklion@@QAEXXZ ; CRaklion::SetState_CLOSE_DOOR
  0004b	eb 13		 jmp	 SHORT $LN2@SetState
$LN12@SetState:

; 342  : 	case RAKLION_STATE_ALL_USER_DIE:	this->SetState_ALL_USER_DIE();	break;

  0004d	e8 00 00 00 00	 call	 ?SetState_ALL_USER_DIE@CRaklion@@QAEXXZ ; CRaklion::SetState_ALL_USER_DIE
  00052	eb 0c		 jmp	 SHORT $LN2@SetState
$LN13@SetState:

; 343  : 	case RAKLION_STATE_NOTIFY_4:		this->SetState_NOTIFY_4();		break;

  00054	e8 00 00 00 00	 call	 ?SetState_NOTIFY_4@CRaklion@@QAEXXZ ; CRaklion::SetState_NOTIFY_4
  00059	eb 05		 jmp	 SHORT $LN2@SetState
$LN14@SetState:

; 344  : 	case RAKLION_STATE_END:				this->SetState_END();			break;

  0005b	e8 00 00 00 00	 call	 ?SetState_END@CRaklion@@QAEXXZ ; CRaklion::SetState_END
$LN2@SetState:

; 345  : 	}
; 346  : 
; 347  : 	g_RaklionUtil.NotifyRaklionChangeState(this->GetRaklionState(),this->m_RaklionBattleOfSelupan.GetBattleOfSelupanState());

  00060	ff 76 40	 push	 DWORD PTR [esi+64]
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?GetRaklionState@CRaklion@@QAEHXZ ; CRaklion::GetRaklionState
  0006a	50		 push	 eax
  0006b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionUtil@@3VCRaklionUtil@@A ; g_RaklionUtil
  00070	e8 00 00 00 00	 call	 ?NotifyRaklionChangeState@CRaklionUtil@@QAEXHH@Z ; CRaklionUtil::NotifyRaklionChangeState
  00075	5e		 pop	 esi

; 348  : 
; 349  : }

  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
  0007a	66 90		 npad	 2
$LN19@SetState:
  0007c	00 00 00 00	 DD	 $LN4@SetState
  00080	00 00 00 00	 DD	 $LN5@SetState
  00084	00 00 00 00	 DD	 $LN6@SetState
  00088	00 00 00 00	 DD	 $LN7@SetState
  0008c	00 00 00 00	 DD	 $LN8@SetState
  00090	00 00 00 00	 DD	 $LN9@SetState
  00094	00 00 00 00	 DD	 $LN10@SetState
  00098	00 00 00 00	 DD	 $LN11@SetState
  0009c	00 00 00 00	 DD	 $LN12@SetState
  000a0	00 00 00 00	 DD	 $LN13@SetState
  000a4	00 00 00 00	 DD	 $LN14@SetState
?SetState@CRaklion@@QAEXH@Z ENDP			; CRaklion::SetState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?Run@CRaklion@@QAEXXZ
_TEXT	SEGMENT
_Time$ = -12						; size = 8
_this$1$ = -4						; size = 4
?Run@CRaklion@@QAEXXZ PROC				; CRaklion::Run, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h

; 535  :             return _time64(_Time);

  00008	8d 45 f4	 lea	 eax, DWORD PTR _Time$[ebp]
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 270  : {

  0000b	8b f1		 mov	 esi, ecx
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h

; 535  :             return _time64(_Time);

  0000d	50		 push	 eax
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 270  : {

  0000e	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h

; 535  :             return _time64(_Time);

  00011	e8 00 00 00 00	 call	 __time64

; 511  :             return _localtime64(_Time);

  00016	8d 45 f4	 lea	 eax, DWORD PTR _Time$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 __localtime64
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 277  : 	today = localtime(&Time);

  0001f	8b d8		 mov	 ebx, eax
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h

; 511  :             return _localtime64(_Time);

  00021	83 c4 08	 add	 esp, 8
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 280  : 		this->iMon != today->tm_mon ||

  00024	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  00027	39 96 1c 0e 00
	00		 cmp	 DWORD PTR [esi+3612], edx
  0002d	75 16		 jne	 SHORT $LN8@Run
  0002f	8b 8e 18 0e 00
	00		 mov	 ecx, DWORD PTR [esi+3608]
  00035	3b 4b 10	 cmp	 ecx, DWORD PTR [ebx+16]
  00038	75 0b		 jne	 SHORT $LN8@Run
  0003a	8b 86 14 0e 00
	00		 mov	 eax, DWORD PTR [esi+3604]
  00040	3b 43 14	 cmp	 eax, DWORD PTR [ebx+20]
  00043	74 22		 je	 SHORT $LN7@Run
$LN8@Run:

; 281  : 		this->iYear != today->tm_year)
; 282  : 	{
; 283  : 		this->iDay = today->tm_mday;

  00045	89 96 1c 0e 00
	00		 mov	 DWORD PTR [esi+3612], edx

; 284  : 		this->iMon = today->tm_mon;

  0004b	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  0004e	89 86 18 0e 00
	00		 mov	 DWORD PTR [esi+3608], eax

; 285  : 		this->iYear = today->tm_year;

  00054	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00057	89 86 14 0e 00
	00		 mov	 DWORD PTR [esi+3604], eax

; 286  : 		this->isUsed = 0;

  0005d	c7 86 10 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+3600], 0
$LN7@Run:

; 287  : 	}
; 288  : 	
; 289  : 	if(this->isUsed == 0 && !today->tm_hour && !today->tm_min && !today->tm_sec)

  00067	83 be 10 0e 00
	00 00		 cmp	 DWORD PTR [esi+3600], 0
  0006e	0f 85 84 00 00
	00		 jne	 $LN9@Run
  00074	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  00078	0f 85 7a 00 00
	00		 jne	 $LN9@Run
  0007e	83 7b 04 00	 cmp	 DWORD PTR [ebx+4], 0
  00082	75 74		 jne	 SHORT $LN9@Run
  00084	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  00087	75 6f		 jne	 SHORT $LN9@Run

; 290  : 	{
; 291  : 		for ( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++)

  00089	57		 push	 edi
  0008a	bf 00 dd 49 06	 mov	 edi, 105504000		; 0649dd00H
  0008f	33 f6		 xor	 esi, esi
$LL4@Run:

; 292  : 		{
; 293  : 			if(gObj[i].MapNumber == MAP_INDEX_RAKLION || gObj[i].MapNumber == MAP_INDEX_RAKLIONBOSS)

  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00096	8d 0c 07	 lea	 ecx, DWORD PTR [edi+eax]
  00099	8a 81 23 01 00
	00		 mov	 al, BYTE PTR [ecx+291]
  0009f	3c 39		 cmp	 al, 57			; 00000039H
  000a1	74 04		 je	 SHORT $LN11@Run
  000a3	3c 3a		 cmp	 al, 58			; 0000003aH
  000a5	75 35		 jne	 SHORT $LN2@Run
$LN11@Run:

; 294  : 			{
; 295  : 				if(gObj[i].Connected == PLAYER_PLAYING && gObj[i].Type == OBJ_USER)

  000a7	83 79 04 03	 cmp	 DWORD PTR [ecx+4], 3
  000ab	75 2f		 jne	 SHORT $LN2@Run
  000ad	80 79 50 01	 cmp	 BYTE PTR [ecx+80], 1
  000b1	75 29		 jne	 SHORT $LN2@Run

; 296  : 				{
; 297  : 					loc2++;
; 298  : 					LogAdd("[RAKLION][IsInRaklionEvent] %d/%d/%d %dth User : %s (%s)",

  000b3	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  000b6	46		 inc	 esi
  000b7	50		 push	 eax
  000b8	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  000bb	50		 push	 eax
  000bc	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  000bf	56		 push	 esi
  000c0	ff 73 0c	 push	 DWORD PTR [ebx+12]
  000c3	40		 inc	 eax
  000c4	50		 push	 eax
  000c5	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  000c8	05 6c 07 00 00	 add	 eax, 1900		; 0000076cH
  000cd	50		 push	 eax
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@DCGHBBHP@?$FLRAKLION?$FN?$FLIsInRaklionEvent?$FN?5?$CFd?1?$CF@
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  000d9	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN2@Run:

; 290  : 	{
; 291  : 		for ( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++)

  000dc	81 c7 40 27 00
	00		 add	 edi, 10048		; 00002740H
  000e2	81 ff 00 2f e3
	06		 cmp	 edi, 115552000		; 06e32f00H
  000e8	7c a7		 jl	 SHORT $LL4@Run

; 299  : 						today->tm_year+1900,today->tm_mon+1,today->tm_mday,loc2,gObj[i].Name,gObj[i].AccountID);
; 300  : 				}
; 301  : 			}
; 302  : 		}
; 303  : 		this->isUsed = 1;

  000ea	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  000ed	5f		 pop	 edi
  000ee	c7 86 10 0e 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+3600], 1
$LN9@Run:

; 304  : 	}
; 305  : 
; 306  : 	if ( !this->IsRaklionEnable() )

  000f8	8b ce		 mov	 ecx, esi
  000fa	e8 00 00 00 00	 call	 ?IsRaklionEnable@CRaklion@@QAEHXZ ; CRaklion::IsRaklionEnable
  000ff	85 c0		 test	 eax, eax
  00101	0f 84 ad 00 00
	00		 je	 $LN5@Run

; 307  : 		return;
; 308  : 
; 309  : 	this->CheckUserOnRaklionBossMap();

  00107	8b ce		 mov	 ecx, esi
  00109	e8 00 00 00 00	 call	 ?CheckUserOnRaklionBossMap@CRaklion@@QAEXXZ ; CRaklion::CheckUserOnRaklionBossMap

; 310  : 
; 311  : 	g_RaklionBattleUserMng.CheckUserState();

  0010e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RaklionBattleUserMng@@3VCRaklionBattleUserMng@@A ; g_RaklionBattleUserMng
  00113	e8 00 00 00 00	 call	 ?CheckUserState@CRaklionBattleUserMng@@QAEXXZ ; CRaklionBattleUserMng::CheckUserState

; 312  : 
; 313  : 	switch ( this->m_iRaklionState )

  00118	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0011b	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0011e	0f 87 90 00 00
	00		 ja	 $LN5@Run
  00124	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@Run[eax*4]
$LN14@Run:

; 314  : 	{
; 315  : 	case RAKLION_STATE_IDLE:			this->ProcState_IDLE();			break;

  0012b	8b ce		 mov	 ecx, esi
  0012d	e8 00 00 00 00	 call	 ?ProcState_IDLE@CRaklion@@QAEXXZ ; CRaklion::ProcState_IDLE
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
$LN15@Run:

; 316  : 	case RAKLION_STATE_NOTIFY_1:		this->ProcState_NOTIFY_1();		break;

  00138	8b ce		 mov	 ecx, esi
  0013a	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_1@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_1
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c3		 ret	 0
$LN16@Run:

; 317  : 	case RAKLION_STATE_STANDBY:			this->ProcState_STANDBY();		break;

  00145	8b ce		 mov	 ecx, esi
  00147	e8 00 00 00 00	 call	 ?ProcState_STANDBY@CRaklion@@QAEXXZ ; CRaklion::ProcState_STANDBY
  0014c	5e		 pop	 esi
  0014d	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c3		 ret	 0
$LN17@Run:

; 318  : 	case RAKLION_STATE_NOTIFY_2:		this->ProcState_NOTIFY_2();		break;

  00152	8b ce		 mov	 ecx, esi
  00154	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_2@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_2
  00159	5e		 pop	 esi
  0015a	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c3		 ret	 0
$LN18@Run:

; 319  : 	case RAKLION_STATE_READY:			this->ProcState_READY();		break;

  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?ProcState_READY@CRaklion@@QAEXXZ ; CRaklion::ProcState_READY
  00166	5e		 pop	 esi
  00167	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c3		 ret	 0
$LN19@Run:

; 320  : 	case RAKLION_STATE_START_BATTLE:	this->ProcState_START_BATTLE();	break;

  0016c	8b ce		 mov	 ecx, esi
  0016e	e8 00 00 00 00	 call	 ?ProcState_START_BATTLE@CRaklion@@QAEXXZ ; CRaklion::ProcState_START_BATTLE
  00173	5e		 pop	 esi
  00174	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00175	8b e5		 mov	 esp, ebp
  00177	5d		 pop	 ebp
  00178	c3		 ret	 0
$LN20@Run:

; 321  : 	case RAKLION_STATE_NOTIFY_3:		this->ProcState_NOTIFY_3();		break;

  00179	8b ce		 mov	 ecx, esi
  0017b	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_3@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_3
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c3		 ret	 0
$LN21@Run:

; 322  : 	case RAKLION_STATE_CLOSE_DOOR:		this->ProcState_CLOSE_DOOR();	break;

  00186	8b ce		 mov	 ecx, esi
  00188	e8 00 00 00 00	 call	 ?ProcState_CLOSE_DOOR@CRaklion@@QAEXXZ ; CRaklion::ProcState_CLOSE_DOOR
  0018d	5e		 pop	 esi
  0018e	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  0018f	8b e5		 mov	 esp, ebp
  00191	5d		 pop	 ebp
  00192	c3		 ret	 0
$LN22@Run:

; 323  : 	case RAKLION_STATE_ALL_USER_DIE:	this->ProcState_ALL_USER_DIE();	break;

  00193	8b ce		 mov	 ecx, esi
  00195	e8 00 00 00 00	 call	 ?ProcState_ALL_USER_DIE@CRaklion@@QAEXXZ ; CRaklion::ProcState_ALL_USER_DIE
  0019a	5e		 pop	 esi
  0019b	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  0019c	8b e5		 mov	 esp, ebp
  0019e	5d		 pop	 ebp
  0019f	c3		 ret	 0
$LN23@Run:

; 324  : 	case RAKLION_STATE_NOTIFY_4:		this->ProcState_NOTIFY_4();		break;

  001a0	8b ce		 mov	 ecx, esi
  001a2	e8 00 00 00 00	 call	 ?ProcState_NOTIFY_4@CRaklion@@QAEXXZ ; CRaklion::ProcState_NOTIFY_4
  001a7	5e		 pop	 esi
  001a8	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  001a9	8b e5		 mov	 esp, ebp
  001ab	5d		 pop	 ebp
  001ac	c3		 ret	 0
$LN24@Run:

; 325  : 	case RAKLION_STATE_END:				this->ProcState_END();			break;

  001ad	8b ce		 mov	 ecx, esi
  001af	e8 00 00 00 00	 call	 ?ProcState_END@CRaklion@@QAEXXZ ; CRaklion::ProcState_END
$LN5@Run:
  001b4	5e		 pop	 esi
  001b5	5b		 pop	 ebx

; 326  : 	}
; 327  : 
; 328  : }

  001b6	8b e5		 mov	 esp, ebp
  001b8	5d		 pop	 ebp
  001b9	c3		 ret	 0
  001ba	66 90		 npad	 2
$LN35@Run:
  001bc	00 00 00 00	 DD	 $LN14@Run
  001c0	00 00 00 00	 DD	 $LN15@Run
  001c4	00 00 00 00	 DD	 $LN16@Run
  001c8	00 00 00 00	 DD	 $LN17@Run
  001cc	00 00 00 00	 DD	 $LN18@Run
  001d0	00 00 00 00	 DD	 $LN19@Run
  001d4	00 00 00 00	 DD	 $LN20@Run
  001d8	00 00 00 00	 DD	 $LN21@Run
  001dc	00 00 00 00	 DD	 $LN22@Run
  001e0	00 00 00 00	 DD	 $LN23@Run
  001e4	00 00 00 00	 DD	 $LN24@Run
?Run@CRaklion@@QAEXXZ ENDP				; CRaklion::Run
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?CheckData@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?CheckData@CRaklion@@QAEXXZ PROC			; CRaklion::CheckData, COMDAT
; _this$ = ecx

; 265  : 	return;
; 266  : 	//come code lacking due to return
; 267  : }

  00000	c3		 ret	 0
?CheckData@CRaklion@@QAEXXZ ENDP			; CRaklion::CheckData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?LoadData@CRaklion@@QAEHPAD@Z
_TEXT	SEGMENT
_this$GSCopy$ = -64					; size = 4
_szFileName$GSCopy$ = -60				; size = 4
_this$GSCopy$1$ = -56					; size = 4
_iType$1$ = -52						; size = 4
_szFileName$GSCopy$1$ = -48				; size = 4
_iPattern$2 = -44					; size = 24
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_szFileName$ = 8					; size = 4
?LoadData@CRaklion@@QAEHPAD@Z PROC			; CRaklion::LoadData, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadData@CRaklion@@QAEHPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	8b f9		 mov	 edi, ecx
  00030	89 7d c8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00033	8b 75 08	 mov	 esi, DWORD PTR _szFileName$[ebp]
  00036	89 7d c0	 mov	 DWORD PTR _this$GSCopy$[ebp], edi
  00039	89 75 d0	 mov	 DWORD PTR _szFileName$GSCopy$1$[ebp], esi
  0003c	89 75 c4	 mov	 DWORD PTR _szFileName$GSCopy$[ebp], esi

; 60   : 	this->m_iFileDataLoad = 0;

  0003f	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0

; 61   : 
; 62   : 	if(!szFileName || !strcmp(szFileName,""))

  00046	85 f6		 test	 esi, esi
  00048	0f 84 7a 03 00
	00		 je	 $LN10@LoadData
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00053	8b c6		 mov	 eax, esi
$LL55@LoadData:
  00055	8a 10		 mov	 dl, BYTE PTR [eax]
  00057	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00059	75 1a		 jne	 SHORT $LN56@LoadData
  0005b	84 d2		 test	 dl, dl
  0005d	74 12		 je	 SHORT $LN57@LoadData
  0005f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00062	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00065	75 0e		 jne	 SHORT $LN56@LoadData
  00067	83 c0 02	 add	 eax, 2
  0006a	83 c1 02	 add	 ecx, 2
  0006d	84 d2		 test	 dl, dl
  0006f	75 e4		 jne	 SHORT $LL55@LoadData
$LN57@LoadData:
  00071	33 c0		 xor	 eax, eax
  00073	eb 05		 jmp	 SHORT $LN58@LoadData
$LN56@LoadData:
  00075	1b c0		 sbb	 eax, eax
  00077	83 c8 01	 or	 eax, 1
$LN58@LoadData:
  0007a	85 c0		 test	 eax, eax
  0007c	0f 84 46 03 00
	00		 je	 $LN10@LoadData

; 66   : 	}
; 67   : 
; 68   : 	try
; 69   : 	{
; 70   : 
; 71   : 		SMDFile = fopen(szFileName,"r");

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00087	56		 push	 esi
  00088	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0008f	e8 00 00 00 00	 call	 _fopen
  00094	83 c4 08	 add	 esp, 8
  00097	a3 00 00 00 00	 mov	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A, eax

; 72   : 		
; 73   : 		if( SMDFile == NULL)

  0009c	85 c0		 test	 eax, eax
  0009e	75 24		 jne	 SHORT $LL2@LoadData

; 74   : 		{
; 75   : 			DWORD dwError = GetLastError();

  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 76   : 			MsgBox("[ RAKLION ] - Can't Open %s ",szFileName);

  000a6	56		 push	 esi
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@COPFHBAD@?$FL?5RAKLION?5?$FN?5?9?5Can?8t?5Open?5?$CFs?5?$AA@
  000ac	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000b1	83 c4 08	 add	 esp, 8

; 77   : 			return FALSE;

  000b4	e9 1c 03 00 00	 jmp	 $LN97@LoadData
$LN99@LoadData:

; 171  : 					{
; 172  : 						MsgBox("[ RAKLION ] - BossEggMax count error : (%d)",iBossEggMax);

  000b9	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000be	83 c4 08	 add	 esp, 8
$LN98@LoadData:

; 167  : 						break;

  000c1	8b 75 d0	 mov	 esi, DWORD PTR _szFileName$GSCopy$1$[ebp]
$LL2@LoadData:

; 78   : 		}
; 79   : 
; 80   : 		enum SMDToken Token;
; 81   : 		int iType = -1;
; 82   : 		int iAppearanceDelay;
; 83   : 		int iZoneCloseDelay;
; 84   : 		int iZoneOpenDelay;
; 85   : 		int iBossEggHalf;
; 86   : 		int iBossEggMax;
; 87   : 		int iBossSkillDelay;
; 88   : 
; 89   : 		while ( true )
; 90   : 		{
; 91   : 
; 92   : 			Token = GetToken();

  000c4	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 93   : 
; 94   : 			if ( Token == END)

  000c9	83 f8 02	 cmp	 eax, 2
  000cc	75 2b		 jne	 SHORT $LN13@LoadData

; 250  : 
; 251  : 		fclose(SMDFile);

  000ce	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  000d4	e8 00 00 00 00	 call	 _fclose

; 252  : 		LogAddC(2,"[ RAKLION ] - %s file is Loaded", szFileName);

  000d9	56		 push	 esi
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GBIHJPJJ@?$FL?5RAKLION?5?$FN?5?9?5?$CFs?5file?5is?5Loaded?$AA@
  000df	6a 02		 push	 2
  000e1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 253  : 		this->m_iFileDataLoad = 1;

  000e7	c7 47 20 01 00
	00 00		 mov	 DWORD PTR [edi+32], 1
  000ee	83 c4 10	 add	 esp, 16			; 00000010H

; 259  : 
; 260  : 	return this->m_iFileDataLoad;

  000f1	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  000f4	e9 de 02 00 00	 jmp	 $LN1@LoadData
$LN13@LoadData:

; 95   : 			{
; 96   : 				break;
; 97   : 			}
; 98   : 
; 99   : 			iType = TokenNumber;

  000f9	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  00101	89 45 cc	 mov	 DWORD PTR _iType$1$[ebp], eax
$LL4@LoadData:

; 100  : 
; 101  : 			while ( true )
; 102  : 			{
; 103  : 				if ( iType == 0 )

  00104	85 c0		 test	 eax, eax
  00106	75 70		 jne	 SHORT $LN14@LoadData

; 104  : 				{
; 105  : 					iAppearanceDelay = 0;
; 106  : 					iZoneCloseDelay = 0;
; 107  : 					iZoneOpenDelay = 0;
; 108  : 
; 109  : 					Token = GetToken();

  00108	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 110  : 
; 111  : 					if( strcmp("end", TokenString) == 0 )

  0010d	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  00112	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL59@LoadData:
  00117	8a 10		 mov	 dl, BYTE PTR [eax]
  00119	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0011b	75 1a		 jne	 SHORT $LN60@LoadData
  0011d	84 d2		 test	 dl, dl
  0011f	74 12		 je	 SHORT $LN61@LoadData
  00121	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00124	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00127	75 0e		 jne	 SHORT $LN60@LoadData
  00129	83 c0 02	 add	 eax, 2
  0012c	83 c1 02	 add	 ecx, 2
  0012f	84 d2		 test	 dl, dl
  00131	75 e4		 jne	 SHORT $LL59@LoadData
$LN61@LoadData:
  00133	33 c0		 xor	 eax, eax
  00135	eb 05		 jmp	 SHORT $LN62@LoadData
$LN60@LoadData:
  00137	1b c0		 sbb	 eax, eax
  00139	83 c8 01	 or	 eax, 1
$LN62@LoadData:
  0013c	8b 75 d0	 mov	 esi, DWORD PTR _szFileName$GSCopy$1$[ebp]
  0013f	85 c0		 test	 eax, eax
  00141	74 81		 je	 SHORT $LL2@LoadData

; 112  : 					{
; 113  : 						break;
; 114  : 					}
; 115  : 					
; 116  : 					iAppearanceDelay = TokenNumber;

  00143	f3 0f 2c 3d 00
	00 00 00	 cvttss2si edi, DWORD PTR ?TokenNumber@@3MA

; 117  : 
; 118  : 					Token = GetToken();

  0014b	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 119  : 					iZoneCloseDelay = TokenNumber;

  00150	f3 0f 2c 35 00
	00 00 00	 cvttss2si esi, DWORD PTR ?TokenNumber@@3MA

; 120  : 
; 121  : 					Token = GetToken();

  00158	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 122  : 					iZoneOpenDelay = TokenNumber;
; 123  : 
; 124  : 					/*if (iAppearanceDelay < 0 || iAppearanceDelay > MAX_RAKLION_APPEARANCE_DELAY )
; 125  : 					{
; 126  : 						MsgBox("[ RAKLION ] - Exceed AppearanceDelay : (%d)",iAppearanceDelay);
; 127  : 						break;
; 128  : 					}
; 129  : 					if (iZoneCloseDelay < 0 || iZoneCloseDelay >= MAX_RAKLION_BOSSZONECLOSE_DELAY )
; 130  : 					{
; 131  : 						MsgBox("[ RAKLION ] - Exceed BosszoneCloseDelay : (%d)",iZoneCloseDelay);
; 132  : 						break;
; 133  : 					}
; 134  : 					if (iZoneOpenDelay < 0 || iZoneOpenDelay >= MAX_RAKLION_BOSSZONEOPEN_DELAY )
; 135  : 					{
; 136  : 						MsgBox("[ RAKLION ] - Exceed BosszoneOpenDelay : (%d)",iZoneOpenDelay);
; 137  : 						break;
; 138  : 					}*/
; 139  : 
; 140  : 					this->m_iAppearanceDelay	= iAppearanceDelay;

  0015d	8b 45 c8	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00160	89 78 24	 mov	 DWORD PTR [eax+36], edi

; 141  : 					this->m_iBossZoneCloseDelay	= iZoneCloseDelay;

  00163	8b f8		 mov	 edi, eax
  00165	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  0016d	89 77 28	 mov	 DWORD PTR [edi+40], esi

; 142  : 					this->m_iBossZoneOpenDelay	= iZoneOpenDelay;

  00170	89 47 2c	 mov	 DWORD PTR [edi+44], eax
  00173	8b 45 cc	 mov	 eax, DWORD PTR _iType$1$[ebp]
  00176	eb 8c		 jmp	 SHORT $LL4@LoadData
$LN14@LoadData:

; 143  : 
; 144  : 				}
; 145  : 				
; 146  : 				else if ( iType == 1 )

  00178	83 f8 01	 cmp	 eax, 1
  0017b	0f 85 80 00 00
	00		 jne	 $LN17@LoadData

; 147  : 				{
; 148  : 					iBossEggHalf = 0;
; 149  : 					iBossEggMax = 0;
; 150  : 
; 151  : 					Token = GetToken();

  00181	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 152  : 
; 153  : 					if ( strcmp("end",TokenString) == 0)

  00186	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  0018b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL63@LoadData:
  00190	8a 10		 mov	 dl, BYTE PTR [eax]
  00192	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00194	75 1a		 jne	 SHORT $LN64@LoadData
  00196	84 d2		 test	 dl, dl
  00198	74 12		 je	 SHORT $LN65@LoadData
  0019a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0019d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001a0	75 0e		 jne	 SHORT $LN64@LoadData
  001a2	83 c0 02	 add	 eax, 2
  001a5	83 c1 02	 add	 ecx, 2
  001a8	84 d2		 test	 dl, dl
  001aa	75 e4		 jne	 SHORT $LL63@LoadData
$LN65@LoadData:
  001ac	33 c0		 xor	 eax, eax
  001ae	eb 05		 jmp	 SHORT $LN66@LoadData
$LN64@LoadData:
  001b0	1b c0		 sbb	 eax, eax
  001b2	83 c8 01	 or	 eax, 1
$LN66@LoadData:
  001b5	8b 75 d0	 mov	 esi, DWORD PTR _szFileName$GSCopy$1$[ebp]
  001b8	85 c0		 test	 eax, eax
  001ba	0f 84 04 ff ff
	ff		 je	 $LL2@LoadData

; 154  : 					{
; 155  : 						break;
; 156  : 					}
; 157  : 
; 158  : 					iBossEggHalf = TokenNumber;

  001c0	f3 0f 2c 35 00
	00 00 00	 cvttss2si esi, DWORD PTR ?TokenNumber@@3MA

; 159  : 
; 160  : 					Token = GetToken();

  001c8	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 161  : 					iBossEggMax = TokenNumber;

  001cd	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA

; 162  : 
; 163  : 
; 164  : 					if(iBossEggHalf < 0 )

  001d5	85 f6		 test	 esi, esi
  001d7	79 0b		 jns	 SHORT $LN20@LoadData

; 165  : 					{
; 166  : 						MsgBox("[ RAKLION ] - BossEggHalf count error : (%d)",iBossEggHalf);

  001d9	56		 push	 esi
  001da	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@DCKNIFKD@?$FL?5RAKLION?5?$FN?5?9?5BossEggHalf?5count?5@

; 167  : 						break;

  001df	e9 d5 fe ff ff	 jmp	 $LN99@LoadData
$LN20@LoadData:

; 168  : 					}
; 169  : 
; 170  : 					if(iBossEggMax < 0 )

  001e4	85 c0		 test	 eax, eax
  001e6	79 0b		 jns	 SHORT $LN21@LoadData

; 171  : 					{
; 172  : 						MsgBox("[ RAKLION ] - BossEggMax count error : (%d)",iBossEggMax);

  001e8	50		 push	 eax
  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@OFNGIEBA@?$FL?5RAKLION?5?$FN?5?9?5BossEggMax?5count?5e@

; 173  : 						break;

  001ee	e9 c6 fe ff ff	 jmp	 $LN99@LoadData
$LN21@LoadData:

; 174  : 					}
; 175  : 
; 176  : 					this->m_iBossEggHalf = iBossEggHalf;
; 177  : 					this->m_iBossEggMax = iBossEggMax;

  001f3	89 47 34	 mov	 DWORD PTR [edi+52], eax
  001f6	8b 45 cc	 mov	 eax, DWORD PTR _iType$1$[ebp]
  001f9	89 77 30	 mov	 DWORD PTR [edi+48], esi
  001fc	e9 03 ff ff ff	 jmp	 $LL4@LoadData
$LN17@LoadData:

; 178  : 				}
; 179  : 
; 180  : 				else if ( iType == 2 )

  00201	83 f8 02	 cmp	 eax, 2
  00204	75 6e		 jne	 SHORT $LN22@LoadData

; 181  : 				{
; 182  : 					iBossSkillDelay = 0;
; 183  : 
; 184  : 					Token = GetToken();

  00206	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 185  : 
; 186  : 					if ( strcmp("end",TokenString) == 0)

  0020b	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  00210	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL67@LoadData:
  00215	8a 10		 mov	 dl, BYTE PTR [eax]
  00217	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00219	75 1a		 jne	 SHORT $LN68@LoadData
  0021b	84 d2		 test	 dl, dl
  0021d	74 12		 je	 SHORT $LN69@LoadData
  0021f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00222	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00225	75 0e		 jne	 SHORT $LN68@LoadData
  00227	83 c0 02	 add	 eax, 2
  0022a	83 c1 02	 add	 ecx, 2
  0022d	84 d2		 test	 dl, dl
  0022f	75 e4		 jne	 SHORT $LL67@LoadData
$LN69@LoadData:
  00231	33 c0		 xor	 eax, eax
  00233	eb 05		 jmp	 SHORT $LN70@LoadData
$LN68@LoadData:
  00235	1b c0		 sbb	 eax, eax
  00237	83 c8 01	 or	 eax, 1
$LN70@LoadData:
  0023a	8b 75 d0	 mov	 esi, DWORD PTR _szFileName$GSCopy$1$[ebp]
  0023d	85 c0		 test	 eax, eax
  0023f	0f 84 7f fe ff
	ff		 je	 $LL2@LoadData

; 187  : 					{
; 188  : 						break;
; 189  : 					}
; 190  : 
; 191  : 					iBossSkillDelay = TokenNumber;

  00245	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA

; 192  : 
; 193  : 					if ( iBossSkillDelay < 0)
; 194  : 					{
; 195  : 						MsgBox("[ RAKLION ] - BossSkillDelay count error : (%d)",iBossSkillDelay);

  0024d	50		 push	 eax
  0024e	85 c0		 test	 eax, eax
  00250	79 12		 jns	 SHORT $LN25@LoadData
  00252	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@FOJLIBKC@?$FL?5RAKLION?5?$FN?5?9?5BossSkillDelay?5cou@
  00257	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0025c	83 c4 08	 add	 esp, 8

; 196  : 						break;

  0025f	e9 60 fe ff ff	 jmp	 $LL2@LoadData
$LN25@LoadData:

; 197  : 					}
; 198  : 
; 199  : 					this->m_RaklionBattleOfSelupan.SetSelupanSkillDelay(iBossSkillDelay);

  00264	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  00267	e8 00 00 00 00	 call	 ?SetSelupanSkillDelay@CRaklionBattleOfSelupan@@QAEXH@Z ; CRaklionBattleOfSelupan::SetSelupanSkillDelay
  0026c	8b 45 cc	 mov	 eax, DWORD PTR _iType$1$[ebp]
  0026f	e9 90 fe ff ff	 jmp	 $LL4@LoadData
$LN22@LoadData:

; 200  : 				}
; 201  : 
; 202  : 				else if ( iType == 3 )

  00274	83 f8 03	 cmp	 eax, 3
  00277	0f 85 07 01 00
	00		 jne	 $LN26@LoadData

; 203  : 				{
; 204  : 					int iPattern[6] = { 0 };

  0027d	0f 57 c0	 xorps	 xmm0, xmm0
  00280	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _iPattern$2[ebp], 0
  00287	0f 11 45 d8	 movups	 XMMWORD PTR _iPattern$2[ebp+4], xmm0
  0028b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _iPattern$2[ebp+20], 0

; 205  : 
; 206  : 
; 207  : 					Token = GetToken();

  00292	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 208  : 
; 209  : 					if ( strcmp("end",TokenString) == 0)

  00297	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  0029c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL71@LoadData:
  002a1	8a 10		 mov	 dl, BYTE PTR [eax]
  002a3	3a 11		 cmp	 dl, BYTE PTR [ecx]
  002a5	75 1a		 jne	 SHORT $LN72@LoadData
  002a7	84 d2		 test	 dl, dl
  002a9	74 12		 je	 SHORT $LN73@LoadData
  002ab	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  002ae	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  002b1	75 0e		 jne	 SHORT $LN72@LoadData
  002b3	83 c0 02	 add	 eax, 2
  002b6	83 c1 02	 add	 ecx, 2
  002b9	84 d2		 test	 dl, dl
  002bb	75 e4		 jne	 SHORT $LL71@LoadData
$LN73@LoadData:
  002bd	33 c0		 xor	 eax, eax
  002bf	eb 05		 jmp	 SHORT $LN74@LoadData
$LN72@LoadData:
  002c1	1b c0		 sbb	 eax, eax
  002c3	83 c8 01	 or	 eax, 1
$LN74@LoadData:
  002c6	8b 75 d0	 mov	 esi, DWORD PTR _szFileName$GSCopy$1$[ebp]
  002c9	85 c0		 test	 eax, eax
  002cb	0f 84 f3 fd ff
	ff		 je	 $LL2@LoadData

; 210  : 					{
; 211  : 						break;
; 212  : 					}
; 213  : 
; 214  : 					iPattern[0] = TokenNumber;

  002d1	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  002d9	89 45 d4	 mov	 DWORD PTR _iPattern$2[ebp], eax

; 215  : 
; 216  : 					Token = GetToken();

  002dc	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 217  : 					iPattern[1] = TokenNumber;

  002e1	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  002e9	89 45 d8	 mov	 DWORD PTR _iPattern$2[ebp+4], eax

; 218  : 
; 219  : 					Token = GetToken();

  002ec	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 220  : 					iPattern[2] = TokenNumber;

  002f1	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  002f9	89 45 dc	 mov	 DWORD PTR _iPattern$2[ebp+8], eax

; 221  : 
; 222  : 					Token = GetToken();

  002fc	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 223  : 					iPattern[3] = TokenNumber;

  00301	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  00309	89 45 e0	 mov	 DWORD PTR _iPattern$2[ebp+12], eax

; 224  : 
; 225  : 					Token = GetToken();

  0030c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 226  : 					iPattern[4] = TokenNumber;

  00311	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  00319	89 45 e4	 mov	 DWORD PTR _iPattern$2[ebp+16], eax

; 227  : 
; 228  : 					Token = GetToken();

  0031c	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 229  : 					iPattern[5] = TokenNumber;

  00321	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA

; 230  : 
; 231  : 					for ( int i = 0; i < 6; i++)

  00329	33 f6		 xor	 esi, esi
  0032b	89 45 e8	 mov	 DWORD PTR _iPattern$2[ebp+20], eax
  0032e	66 90		 npad	 2
$LL8@LoadData:
  00330	8b 45 cc	 mov	 eax, DWORD PTR _iType$1$[ebp]
  00333	83 fe 06	 cmp	 esi, 6
  00336	0f 8d c8 fd ff
	ff		 jge	 $LL4@LoadData

; 232  : 					{
; 233  : 						if(iPattern[i] < 0)

  0033c	8b 44 b5 d4	 mov	 eax, DWORD PTR _iPattern$2[ebp+esi*4]

; 234  : 						{
; 235  : 							MsgBox("[ RAKLION ] - BossPatternCondition[%d] error : (%d)", i, iPattern[i]);

  00340	50		 push	 eax
  00341	56		 push	 esi
  00342	85 c0		 test	 eax, eax
  00344	79 15		 jns	 SHORT $LN29@LoadData
  00346	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@GPHCLHNA@?$FL?5RAKLION?5?$FN?5?9?5BossPatternConditi@
  0034b	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 236  : 							break;

  00350	8b 45 cc	 mov	 eax, DWORD PTR _iType$1$[ebp]
  00353	83 c4 0c	 add	 esp, 12			; 0000000cH
  00356	e9 a9 fd ff ff	 jmp	 $LL4@LoadData
$LN29@LoadData:

; 237  : 						}
; 238  : 						this->m_RaklionBattleOfSelupan.SetPatternCondition(i,iPattern[i]);

  0035b	8d 4f 38	 lea	 ecx, DWORD PTR [edi+56]
  0035e	e8 00 00 00 00	 call	 ?SetPatternCondition@CRaklionBattleOfSelupan@@QAEXHH@Z ; CRaklionBattleOfSelupan::SetPatternCondition
  00363	46		 inc	 esi
  00364	eb ca		 jmp	 SHORT $LL8@LoadData
__catch$?LoadData@CRaklion@@QAEHPAD@Z$0:

; 254  : 	}
; 255  : 	catch(...)
; 256  : 	{
; 257  : 		MsgBox("[ RAKLION ] - Loading Exception Error (%s) File. ",szFileName);

  00366	ff 75 c4	 push	 DWORD PTR _szFileName$GSCopy$[ebp]
  00369	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@PCKIKBLB@?$FL?5RAKLION?5?$FN?5?9?5Loading?5Exception?5@
  0036e	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00373	83 c4 08	 add	 esp, 8

; 258  : 	}

  00376	b8 00 00 00 00	 mov	 eax, $LN87@LoadData
  0037b	c3		 ret	 0
$LN87@LoadData:
  0037c	8b 7d c0	 mov	 edi, DWORD PTR _this$GSCopy$[ebp]

; 259  : 
; 260  : 	return this->m_iFileDataLoad;

  0037f	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00382	eb 53		 jmp	 SHORT $LN1@LoadData
$LN26@LoadData:

; 239  : 					}
; 240  : 				}
; 241  : 				else
; 242  : 				{
; 243  : 					Token = (SMDToken)GetToken();

  00384	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 244  : 					
; 245  : 					if ( !strcmp("end", TokenString))

  00389	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  0038e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL75@LoadData:
  00393	8a 10		 mov	 dl, BYTE PTR [eax]
  00395	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00397	75 1a		 jne	 SHORT $LN76@LoadData
  00399	84 d2		 test	 dl, dl
  0039b	74 12		 je	 SHORT $LN77@LoadData
  0039d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  003a0	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  003a3	75 0e		 jne	 SHORT $LN76@LoadData
  003a5	83 c0 02	 add	 eax, 2
  003a8	83 c1 02	 add	 ecx, 2
  003ab	84 d2		 test	 dl, dl
  003ad	75 e4		 jne	 SHORT $LL75@LoadData
$LN77@LoadData:
  003af	33 c0		 xor	 eax, eax
  003b1	eb 05		 jmp	 SHORT $LN78@LoadData
$LN76@LoadData:
  003b3	1b c0		 sbb	 eax, eax
  003b5	83 c8 01	 or	 eax, 1
$LN78@LoadData:
  003b8	85 c0		 test	 eax, eax
  003ba	8b 45 cc	 mov	 eax, DWORD PTR _iType$1$[ebp]
  003bd	0f 85 41 fd ff
	ff		 jne	 $LL4@LoadData

; 246  : 						break;
; 247  : 				}
; 248  : 			}
; 249  : 		}

  003c3	e9 f9 fc ff ff	 jmp	 $LN98@LoadData
$LN10@LoadData:

; 63   : 	{
; 64   : 		MsgBox("[ RAKLION ] - File load error : File Name Error");

  003c8	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@PLIMEMEA@?$FL?5RAKLION?5?$FN?5?9?5File?5load?5error?5?3?5@
  003cd	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  003d2	83 c4 04	 add	 esp, 4
$LN97@LoadData:

; 65   : 		return FALSE;

  003d5	33 c0		 xor	 eax, eax
$LN1@LoadData:

; 261  : }

  003d7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  003da	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003e1	59		 pop	 ecx
  003e2	5f		 pop	 edi
  003e3	5e		 pop	 esi
  003e4	5b		 pop	 ebx
  003e5	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003e8	33 cd		 xor	 ecx, ebp
  003ea	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003ef	8b e5		 mov	 esp, ebp
  003f1	5d		 pop	 ebp
  003f2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?LoadData@CRaklion@@QAEHPAD@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CRaklion@@QAEHPAD@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CRaklion@@QAEHPAD@Z ENDP			; CRaklion::LoadData
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?ClearData@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?ClearData@CRaklion@@QAEXXZ PROC			; CRaklion::ClearData, COMDAT
; _this$ = ecx

; 49   : 	this->m_iUnk16 = 0;

  00000	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 50   : 	this->m_iFileDataLoad = 0;

  00007	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 51   : 	this->m_iAppearanceMSec = 0;

  0000e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 52   : 	this->m_iBossZoneCloseMSec = 0;

  00015	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 53   : 	this->m_iBossZoneOpenMSec = 0;

  0001c	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 54   : 	this->m_iBossEggHalfChecked = 0;

  00023	c7 81 08 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+3592], 0

; 55   : 	this->m_iBossEggCount =0;

  0002d	c7 81 0c 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+3596], 0

; 56   : }

  00037	c3		 ret	 0
?ClearData@CRaklion@@QAEXXZ ENDP			; CRaklion::ClearData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?Init@CRaklion@@QAEXXZ
_TEXT	SEGMENT
?Init@CRaklion@@QAEXXZ PROC				; CRaklion::Init, COMDAT
; _this$ = ecx

; 44   : 	//empty
; 45   : }

  00000	c3		 ret	 0
?Init@CRaklion@@QAEXXZ ENDP				; CRaklion::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ??1CRaklion@@UAE@XZ
_TEXT	SEGMENT
??1CRaklion@@UAE@XZ PROC				; CRaklion::~CRaklion, COMDAT
; _this$ = ecx

; 38   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRaklion@@6B@

; 39   : 
; 40   : }

  00006	83 c1 38	 add	 ecx, 56			; 00000038H
  00009	e9 00 00 00 00	 jmp	 ??1CRaklionBattleOfSelupan@@UAE@XZ ; CRaklionBattleOfSelupan::~CRaklionBattleOfSelupan
??1CRaklion@@UAE@XZ ENDP				; CRaklion::~CRaklion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ??0CRaklion@@QAE@XZ
_TEXT	SEGMENT
_ltime$ = -8						; size = 8
_this$ = -4						; size = 4
??0CRaklion@@QAE@XZ PROC				; CRaklion::CRaklion, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000c	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRaklion@@6B@
  00015	e8 00 00 00 00	 call	 ??0CRaklionBattleOfSelupan@@QAE@XZ ; CRaklionBattleOfSelupan::CRaklionBattleOfSelupan
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h

; 535  :             return _time64(_Time);

  0001a	8d 45 f8	 lea	 eax, DWORD PTR _ltime$[ebp]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 __time64

; 511  :             return _localtime64(_Time);

  00023	8d 45 f8	 lea	 eax, DWORD PTR _ltime$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 __localtime64
  0002c	83 c4 08	 add	 esp, 8
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp

; 29   : 	this->iYear = today->tm_year;

  0002f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00032	89 8e 14 0e 00
	00		 mov	 DWORD PTR [esi+3604], ecx

; 30   : 	this->iMon = today->tm_mon;

  00038	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003b	89 8e 18 0e 00
	00		 mov	 DWORD PTR [esi+3608], ecx

; 31   : 	this->iDay = today->tm_mday;
; 32   : 	this->isUsed = 0;
; 33   : 
; 34   : 	this->ClearData();

  00041	8b ce		 mov	 ecx, esi
  00043	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00046	89 86 1c 0e 00
	00		 mov	 DWORD PTR [esi+3612], eax
  0004c	c7 86 10 0e 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+3600], 0
  00056	e8 00 00 00 00	 call	 ?ClearData@CRaklion@@QAEXXZ ; CRaklion::ClearData

; 35   : }

  0005b	8b c6		 mov	 eax, esi
  0005d	5e		 pop	 esi
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
??0CRaklion@@QAE@XZ ENDP				; CRaklion::CRaklion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
;	COMDAT ?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ
_TEXT	SEGMENT
?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ PROC	; CRaklionBattleOfSelupan::GetSuccessValue, COMDAT
; _this$ = ecx

; 98   : 	BOOL GetSuccessValue			(							)	{	return	this->m_bIsSucccess;										}

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	c3		 ret	 0
?GetSuccessValue@CRaklionBattleOfSelupan@@QAEHXZ ENDP	; CRaklionBattleOfSelupan::GetSuccessValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
;	COMDAT ?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z
_TEXT	SEGMENT
_bIsSuccess$ = 8					; size = 4
?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z PROC	; CRaklionBattleOfSelupan::SetSuccessValue, COMDAT
; _this$ = ecx

; 97   : 	void SetSuccessValue			(BOOL bIsSuccess)				{			this->m_bIsSucccess				= bIsSuccess;				}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _bIsSuccess$[ebp]
  00006	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSuccessValue@CRaklionBattleOfSelupan@@QAEXH@Z ENDP	; CRaklionBattleOfSelupan::SetSuccessValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
;	COMDAT ?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ
_TEXT	SEGMENT
?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ PROC ; CRaklionBattleOfSelupan::GetBattleOfSelupanState, COMDAT
; _this$ = ecx

; 96   : 	int GetBattleOfSelupanState		(							)	{	return	this->m_iBattleOfSelupanState;								}

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?GetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEHXZ ENDP ; CRaklionBattleOfSelupan::GetBattleOfSelupanState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklionbattleofselupan.h
;	COMDAT ?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z
_TEXT	SEGMENT
_m_iBattleOfSelupanState$ = 8				; size = 4
?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z PROC ; CRaklionBattleOfSelupan::SetBattleOfSelupanState, COMDAT
; _this$ = ecx

; 95   : 	void SetBattleOfSelupanState	(int m_iBattleOfSelupanState)	{			this->m_iBattleOfSelupanState	= m_iBattleOfSelupanState;	}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _m_iBattleOfSelupanState$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetBattleOfSelupanState@CRaklionBattleOfSelupan@@QAEXH@Z ENDP ; CRaklionBattleOfSelupan::SetBattleOfSelupanState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 534  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 536  :         }

  00003	5d		 pop	 ebp

; 535  :             return _time64(_Time);

  00004	e9 00 00 00 00	 jmp	 __time64
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\time.h
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT

; 508  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 512  :             #pragma warning(pop)
; 513  :         }

  00003	5d		 pop	 ebp

; 509  :             #pragma warning(push)
; 510  :             #pragma warning(disable: 4996)
; 511  :             return _localtime64(_Time);

  00004	e9 00 00 00 00	 jmp	 __localtime64
_localtime ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\raklion.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
