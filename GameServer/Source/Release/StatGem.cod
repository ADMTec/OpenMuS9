; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\StatGem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??0StatGem@@QAE@XZ				; StatGem::StatGem
PUBLIC	??1StatGem@@UAE@XZ				; StatGem::~StatGem
PUBLIC	?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z	; StatGem::GetGemCount
PUBLIC	?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z	; StatGem::WithGem
PUBLIC	?SimpleEffectAdd@StatGem@@QAEXPAUOBJECTSTRUCT@@@Z ; StatGem::SimpleEffectAdd
PUBLIC	??_GStatGem@@UAEPAXI@Z				; StatGem::`scalar deleting destructor'
PUBLIC	??_7StatGem@@6B@				; StatGem::`vftable'
PUBLIC	?g_StatGem@@3VStatGem@@A			; g_StatGem
PUBLIC	??_R4StatGem@@6B@				; StatGem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStatGem@@@8				; StatGem `RTTI Type Descriptor'
PUBLIC	??_R3StatGem@@8					; StatGem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StatGem@@8					; StatGem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StatGem@@8			; StatGem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f800000
PUBLIC	__real@42c80000
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?GCReFillSend@@YAXHGEEG@Z:PROC			; GCReFillSend
EXTRN	??_EStatGem@@UAEPAXI@Z:PROC			; StatGem::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?g_StatGem@@3VStatGem@@A DB 028H DUP (?)		; g_StatGem
_BSS	ENDS
CRT$XCU	SEGMENT
?g_StatGem$initializer$@@3P6AXXZA DD FLAT:??__Eg_StatGem@@YAXXZ ; g_StatGem$initializer$
CRT$XCU	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@StatGem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StatGem@@8 DD FLAT:??_R0?AVStatGem@@@8	; StatGem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StatGem@@8
rdata$r	ENDS
;	COMDAT ??_R2StatGem@@8
rdata$r	SEGMENT
??_R2StatGem@@8 DD FLAT:??_R1A@?0A@EA@StatGem@@8	; StatGem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3StatGem@@8
rdata$r	SEGMENT
??_R3StatGem@@8 DD 00H					; StatGem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2StatGem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStatGem@@@8
data$r	SEGMENT
??_R0?AVStatGem@@@8 DD FLAT:??_7type_info@@6B@		; StatGem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStatGem@@', 00H
data$r	ENDS
;	COMDAT ??_R4StatGem@@6B@
rdata$r	SEGMENT
??_R4StatGem@@6B@ DD 00H				; StatGem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStatGem@@@8
	DD	FLAT:??_R3StatGem@@8
rdata$r	ENDS
;	COMDAT ??_7StatGem@@6B@
CONST	SEGMENT
??_7StatGem@@6B@ DD FLAT:??_R4StatGem@@6B@		; StatGem::`vftable'
	DD	FLAT:??_EStatGem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_StatGem@@YAXXZ
text$yd	SEGMENT
??__Fg_StatGem@@YAXXZ PROC				; `dynamic atexit destructor for 'g_StatGem'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_StatGem@@3VStatGem@@A ; g_StatGem
  00005	e9 00 00 00 00	 jmp	 ??1StatGem@@UAE@XZ	; StatGem::~StatGem
??__Fg_StatGem@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_StatGem''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ??__Eg_StatGem@@YAXXZ
text$di	SEGMENT
??__Eg_StatGem@@YAXXZ PROC				; `dynamic initializer for 'g_StatGem'', COMDAT

; 12   : StatGem g_StatGem;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_StatGem@@3VStatGem@@A ; g_StatGem
  00005	e8 00 00 00 00	 call	 ??0StatGem@@QAE@XZ	; StatGem::StatGem
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_StatGem@@YAXXZ ; `dynamic atexit destructor for 'g_StatGem''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_StatGem@@YAXXZ ENDP				; `dynamic initializer for 'g_StatGem''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GStatGem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GStatGem@@UAEPAXI@Z PROC				; StatGem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1StatGem@@UAE@XZ	; StatGem::~StatGem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 28		 push	 40			; 00000028H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GStatGem@@UAEPAXI@Z ENDP				; StatGem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ?SimpleEffectAdd@StatGem@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_lpUser$ = 8						; size = 4
?SimpleEffectAdd@StatGem@@QAEXPAUOBJECTSTRUCT@@@Z PROC	; StatGem::SimpleEffectAdd, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 95   : 	WORD EffectValue = 0;
; 96   : 	int EffectCount = 0;
; 97   : 	// ----
; 98   : 	if( this->WithGem(lpUser, StatGemType::DoubleDamageRate) )

  00005	8b 75 08	 mov	 esi, DWORD PTR _lpUser$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	8b f9		 mov	 edi, ecx
  0000d	56		 push	 esi
  0000e	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  00011	e8 00 00 00 00	 call	 ?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z ; StatGem::WithGem
  00016	84 c0		 test	 al, al
  00018	74 1a		 je	 SHORT $LN2@SimpleEffe

; 99   : 	{
; 100  : 		EffectCount = this->GetGemCount(lpUser, StatGemType::DoubleDamageRate);

  0001a	6a 00		 push	 0
  0001c	56		 push	 esi
  0001d	8b cf		 mov	 ecx, edi
  0001f	e8 00 00 00 00	 call	 ?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z ; StatGem::GetGemCount

; 101  : 		EffectValue = this->m_GemInfo[StatGemType::DoubleDamageRate].EffectValue;
; 102  : 		lpUser->SetOpDoubleDamage += EffectValue * EffectCount;

  00024	0f b6 4f 08	 movzx	 ecx, BYTE PTR [edi+8]
  00028	0f b6 c0	 movzx	 eax, al
  0002b	0f af c8	 imul	 ecx, eax
  0002e	00 8e cd 14 00
	00		 add	 BYTE PTR [esi+5325], cl
$LN2@SimpleEffe:

; 103  : 	}
; 104  : 	// ----
; 105  : 	if( this->WithGem(lpUser, StatGemType::ExcellentDamageRate) )

  00034	6a 01		 push	 1
  00036	56		 push	 esi
  00037	8b cf		 mov	 ecx, edi
  00039	e8 00 00 00 00	 call	 ?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z ; StatGem::WithGem
  0003e	84 c0		 test	 al, al
  00040	74 17		 je	 SHORT $LN3@SimpleEffe

; 106  : 	{
; 107  : 		EffectCount = this->GetGemCount(lpUser, StatGemType::ExcellentDamageRate);

  00042	6a 01		 push	 1
  00044	56		 push	 esi
  00045	8b cf		 mov	 ecx, edi
  00047	e8 00 00 00 00	 call	 ?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z ; StatGem::GetGemCount

; 108  : 		EffectValue = this->m_GemInfo[StatGemType::ExcellentDamageRate].EffectValue;
; 109  : 		lpUser->m_ExcelentDamage += EffectValue * EffectCount;

  0004c	0f b7 4f 0e	 movzx	 ecx, WORD PTR [edi+14]
  00050	0f af c8	 imul	 ecx, eax
  00053	01 8e a0 06 00
	00		 add	 DWORD PTR [esi+1696], ecx
$LN3@SimpleEffe:

; 110  : 	}
; 111  : 	// ----
; 112  : 	if( this->WithGem(lpUser, StatGemType::DamageDecrease) )

  00059	6a 02		 push	 2
  0005b	56		 push	 esi
  0005c	8b cf		 mov	 ecx, edi
  0005e	e8 00 00 00 00	 call	 ?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z ; StatGem::WithGem
  00063	84 c0		 test	 al, al
  00065	74 1a		 je	 SHORT $LN4@SimpleEffe

; 113  : 	{
; 114  : 		EffectCount = this->GetGemCount(lpUser, StatGemType::DamageDecrease);

  00067	6a 02		 push	 2
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z ; StatGem::GetGemCount

; 115  : 		EffectValue = this->m_GemInfo[StatGemType::DamageDecrease].EffectValue;
; 116  : 		lpUser->DamageMinus += EffectValue * EffectCount;

  00071	0f b6 4f 14	 movzx	 ecx, BYTE PTR [edi+20]
  00075	0f b6 c0	 movzx	 eax, al
  00078	0f af c8	 imul	 ecx, eax
  0007b	00 8e 48 01 00
	00		 add	 BYTE PTR [esi+328], cl
$LN4@SimpleEffe:

; 117  : 	}
; 118  : 	// ----
; 119  : 	if( this->WithGem(lpUser, StatGemType::DefenseIncrease) )

  00081	6a 03		 push	 3
  00083	56		 push	 esi
  00084	8b cf		 mov	 ecx, edi
  00086	e8 00 00 00 00	 call	 ?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z ; StatGem::WithGem
  0008b	84 c0		 test	 al, al
  0008d	74 62		 je	 SHORT $LN5@SimpleEffe

; 120  : 	{
; 121  : 		EffectCount = this->GetGemCount(lpUser, StatGemType::DefenseIncrease);

  0008f	53		 push	 ebx
  00090	6a 03		 push	 3
  00092	56		 push	 esi
  00093	8b cf		 mov	 ecx, edi
  00095	e8 00 00 00 00	 call	 ?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z ; StatGem::GetGemCount

; 122  : 		EffectValue = this->m_GemInfo[StatGemType::DefenseIncrease].EffectValue;
; 123  : 		lpUser->m_Defense		+= (lpUser->m_Defense / 100 * EffectValue) * EffectCount;

  0009a	8b b6 74 06 00
	00		 mov	 esi, DWORD PTR [esi+1652]
  000a0	8b d8		 mov	 ebx, eax
  000a2	0f b7 7f 1a	 movzx	 edi, WORD PTR [edi+26]
  000a6	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000ab	f7 ee		 imul	 esi

; 124  : 		lpUser->m_MagicDefense	+= (lpUser->m_MagicDefense / 100 * EffectValue) * EffectCount;

  000ad	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000b2	c1 fa 05	 sar	 edx, 5
  000b5	8b ca		 mov	 ecx, edx
  000b7	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000ba	03 ca		 add	 ecx, edx
  000bc	0f af cf	 imul	 ecx, edi
  000bf	0f af cb	 imul	 ecx, ebx
  000c2	03 ce		 add	 ecx, esi
  000c4	8b 75 08	 mov	 esi, DWORD PTR _lpUser$[ebp]
  000c7	89 8e 74 06 00
	00		 mov	 DWORD PTR [esi+1652], ecx
  000cd	8b 8e 78 06 00
	00		 mov	 ecx, DWORD PTR [esi+1656]
  000d3	f7 e9		 imul	 ecx
  000d5	c1 fa 05	 sar	 edx, 5
  000d8	8b c2		 mov	 eax, edx
  000da	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000dd	03 c2		 add	 eax, edx
  000df	0f af c7	 imul	 eax, edi
  000e2	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  000e5	0f af c3	 imul	 eax, ebx
  000e8	5b		 pop	 ebx
  000e9	03 c1		 add	 eax, ecx
  000eb	89 86 78 06 00
	00		 mov	 DWORD PTR [esi+1656], eax
$LN5@SimpleEffe:

; 125  : 	}
; 126  : 	// ----
; 127  : 	if( this->WithGem(lpUser, StatGemType::ZenHuntIncrease) )

  000f1	6a 04		 push	 4
  000f3	56		 push	 esi
  000f4	8b cf		 mov	 ecx, edi
  000f6	e8 00 00 00 00	 call	 ?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z ; StatGem::WithGem
  000fb	84 c0		 test	 al, al
  000fd	74 19		 je	 SHORT $LN6@SimpleEffe

; 128  : 	{
; 129  : 		EffectCount = this->GetGemCount(lpUser, StatGemType::ZenHuntIncrease);

  000ff	6a 04		 push	 4
  00101	56		 push	 esi
  00102	8b cf		 mov	 ecx, edi
  00104	e8 00 00 00 00	 call	 ?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z ; StatGem::GetGemCount

; 130  : 		EffectValue = this->m_GemInfo[StatGemType::ZenHuntIncrease].EffectValue;
; 131  : 		lpUser->MonsterDieGetMoney += EffectValue * EffectCount;

  00109	0f bf 4f 20	 movsx	 ecx, WORD PTR [edi+32]
  0010d	98		 cwde
  0010e	0f af c8	 imul	 ecx, eax
  00111	66 01 8e 4a 01
	00 00		 add	 WORD PTR [esi+330], cx
$LN6@SimpleEffe:

; 132  : 	}
; 133  : 	// ----
; 134  : 	if( this->WithGem(lpUser, StatGemType::MaxLifeIncrease) )

  00118	6a 05		 push	 5
  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z ; StatGem::WithGem
  00122	84 c0		 test	 al, al
  00124	0f 84 a2 00 00
	00		 je	 $LN7@SimpleEffe

; 135  : 	{
; 136  : 		EffectCount = this->GetGemCount(lpUser, StatGemType::MaxLifeIncrease);

  0012a	6a 05		 push	 5
  0012c	56		 push	 esi
  0012d	8b cf		 mov	 ecx, edi
  0012f	e8 00 00 00 00	 call	 ?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z ; StatGem::GetGemCount

; 137  : 		EffectValue = this->m_GemInfo[StatGemType::MaxLifeIncrease].EffectValue;
; 138  : 		lpUser->AddLife += (lpUser->MaxLife / 100 * EffectValue) * EffectCount;

  00134	f3 0f 10 96 dc
	00 00 00	 movss	 xmm2, DWORD PTR [esi+220]
  0013c	0f b7 4f 26	 movzx	 ecx, WORD PTR [edi+38]
  00140	0f 28 c2	 movaps	 xmm0, xmm2
  00143	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42c80000
  0014b	66 0f 6e c9	 movd	 xmm1, ecx
  0014f	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00152	f3 0f 59 c8	 mulss	 xmm1, xmm0
  00156	66 0f 6e c0	 movd	 xmm0, eax
  0015a	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 139  : 		GCReFillSend(lpUser->m_Index,(int)(lpUser->AddLife + lpUser->MaxLife),0xFEu,0,lpUser->iAddShield + lpUser->iMaxShield);

  0015d	66 8b 86 34 01
	00 00		 mov	 ax, WORD PTR [esi+308]
  00164	66 03 86 30 01
	00 00		 add	 ax, WORD PTR [esi+304]
  0016b	0f b7 c0	 movzx	 eax, ax
  0016e	50		 push	 eax
  0016f	6a 00		 push	 0
  00171	f3 0f 59 c8	 mulss	 xmm1, xmm0
  00175	68 fe 00 00 00	 push	 254			; 000000feH
  0017a	66 0f 6e 86 24
	01 00 00	 movd	 xmm0, DWORD PTR [esi+292]
  00182	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00185	f3 0f 58 c8	 addss	 xmm1, xmm0
  00189	f3 0f 2c c9	 cvttss2si ecx, xmm1
  0018d	89 8e 24 01 00
	00		 mov	 DWORD PTR [esi+292], ecx
  00193	66 0f 6e c1	 movd	 xmm0, ecx
  00197	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0019a	f3 0f 58 c2	 addss	 xmm0, xmm2
  0019e	f3 0f 2c c0	 cvttss2si eax, xmm0
  001a2	50		 push	 eax
  001a3	ff 36		 push	 DWORD PTR [esi]
  001a5	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend

; 140  :         GCReFillSend(lpUser->m_Index, (int)lpUser->Life, 0xFFu, 0, lpUser->iShield);

  001aa	0f b7 86 2c 01
	00 00		 movzx	 eax, WORD PTR [esi+300]
  001b1	50		 push	 eax
  001b2	f3 0f 2c 86 d8
	00 00 00	 cvttss2si eax, DWORD PTR [esi+216]
  001ba	6a 00		 push	 0
  001bc	68 ff 00 00 00	 push	 255			; 000000ffH
  001c1	50		 push	 eax
  001c2	ff 36		 push	 DWORD PTR [esi]
  001c4	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend
  001c9	83 c4 28	 add	 esp, 40			; 00000028H
$LN7@SimpleEffe:
  001cc	5f		 pop	 edi
  001cd	5e		 pop	 esi

; 141  : 	}
; 142  : }

  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 04 00	 ret	 4
?SimpleEffectAdd@StatGem@@QAEXPAUOBJECTSTRUCT@@@Z ENDP	; StatGem::SimpleEffectAdd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z
_TEXT	SEGMENT
_lpUser$ = 8						; size = 4
_Type$ = 12						; size = 1
?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z PROC	; StatGem::WithGem, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b 7d 08	 mov	 edi, DWORD PTR _lpUser$[ebp]
  00009	8b d9		 mov	 ebx, ecx

; 43   : 	for( int n = INVENTORY_BAG_START; n < MAIN_INVENTORY_SIZE; n++ )	

  0000b	be f0 09 00 00	 mov	 esi, 2544		; 000009f0H
$LL4@WithGem:

; 44   : 	{
; 45   : 		if( !lpUser->pInventory[n].IsItem() )

  00010	8b 8f c0 11 00
	00		 mov	 ecx, DWORD PTR [edi+4544]
  00016	03 ce		 add	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0001d	85 c0		 test	 eax, eax
  0001f	74 2a		 je	 SHORT $LN2@WithGem

; 46   : 		{
; 47   : 			continue;
; 48   : 		}
; 49   : 		// ----
; 50   : 		if( lpUser->pInventory[n].m_Type != this->m_GemInfo[Type].ItemID )

  00021	0f b6 45 0c	 movzx	 eax, BYTE PTR _Type$[ebp]
  00025	8b 97 c0 11 00
	00		 mov	 edx, DWORD PTR [edi+4544]
  0002b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002e	0f b7 4c 43 04	 movzx	 ecx, WORD PTR [ebx+eax*2+4]
  00033	0f bf 44 32 06	 movsx	 eax, WORD PTR [edx+esi+6]
  00038	3b c1		 cmp	 eax, ecx
  0003a	75 0f		 jne	 SHORT $LN2@WithGem

; 51   : 		{
; 52   : 			continue;
; 53   : 		}
; 54   : 		// ----
; 55   : 		if( lpUser->pInventory[n].m_Durability < 1.0f )

  0003c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00044	0f 2f 44 32 24	 comiss	 xmm0, DWORD PTR [edx+esi+36]
  00049	76 17		 jbe	 SHORT $LN7@WithGem
$LN2@WithGem:

; 43   : 	for( int n = INVENTORY_BAG_START; n < MAIN_INVENTORY_SIZE; n++ )	

  0004b	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  00051	81 fe f0 a8 00
	00		 cmp	 esi, 43248		; 0000a8f0H
  00057	7c b7		 jl	 SHORT $LL4@WithGem

; 61   : 	}
; 62   : 	// ----
; 63   : 	return false;

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	32 c0		 xor	 al, al
  0005d	5b		 pop	 ebx

; 64   : }

  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN7@WithGem:
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi

; 56   : 		{
; 57   : 			continue;
; 58   : 		}
; 59   : 		// ----
; 60   : 		return true;

  00064	b0 01		 mov	 al, 1
  00066	5b		 pop	 ebx

; 64   : }

  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?WithGem@StatGem@@QAE_NPAUOBJECTSTRUCT@@E@Z ENDP	; StatGem::WithGem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_lpUser$ = 8						; size = 4
_Type$ = 12						; size = 1
?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z PROC	; StatGem::GetGemCount, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _lpUser$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx

; 68   : 	int GemCount = 0;

  0000d	33 ff		 xor	 edi, edi
  0000f	be f0 09 00 00	 mov	 esi, 2544		; 000009f0H
  00014	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL4@GetGemCoun:

; 71   : 	{
; 72   : 		if( !lpUser->pInventory[n].IsItem() )

  00020	8b 8b c0 11 00
	00		 mov	 ecx, DWORD PTR [ebx+4544]
  00026	03 ce		 add	 ecx, esi
  00028	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0002d	85 c0		 test	 eax, eax
  0002f	74 2e		 je	 SHORT $LN2@GetGemCoun

; 73   : 		{
; 74   : 			continue;
; 75   : 		}
; 76   : 		// ----
; 77   : 		if( lpUser->pInventory[n].m_Type != this->m_GemInfo[Type].ItemID )

  00031	0f b6 45 0c	 movzx	 eax, BYTE PTR _Type$[ebp]
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00038	8b 93 c0 11 00
	00		 mov	 edx, DWORD PTR [ebx+4544]
  0003e	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00041	0f b7 4c 41 04	 movzx	 ecx, WORD PTR [ecx+eax*2+4]
  00046	0f bf 44 32 06	 movsx	 eax, WORD PTR [edx+esi+6]
  0004b	3b c1		 cmp	 eax, ecx
  0004d	75 10		 jne	 SHORT $LN2@GetGemCoun

; 78   : 		{
; 79   : 			continue;
; 80   : 		}
; 81   : 		// ----
; 82   : 		if( lpUser->pInventory[n].m_Durability < 1.0f )

  0004f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00057	0f 2f 44 32 24	 comiss	 xmm0, DWORD PTR [edx+esi+36]
  0005c	77 01		 ja	 SHORT $LN2@GetGemCoun

; 83   : 		{
; 84   : 			continue;
; 85   : 		}
; 86   : 		// ----
; 87   : 		GemCount++;

  0005e	47		 inc	 edi
$LN2@GetGemCoun:

; 69   : 	// ----
; 70   : 	for( int n = INVENTORY_BAG_START; n < MAIN_INVENTORY_SIZE; n++ )	

  0005f	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  00065	81 fe f0 a8 00
	00		 cmp	 esi, 43248		; 0000a8f0H
  0006b	7c b3		 jl	 SHORT $LL4@GetGemCoun

; 88   : 	}
; 89   : 	// ----
; 90   : 	return GemCount;

  0006d	8b c7		 mov	 eax, edi
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx

; 91   : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?GetGemCount@StatGem@@QAEHPAUOBJECTSTRUCT@@E@Z ENDP	; StatGem::GetGemCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ??1StatGem@@UAE@XZ
_TEXT	SEGMENT
??1StatGem@@UAE@XZ PROC					; StatGem::~StatGem, COMDAT
; _this$ = ecx

; 37   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7StatGem@@6B@

; 38   : 
; 39   : }

  00006	c3		 ret	 0
??1StatGem@@UAE@XZ ENDP					; StatGem::~StatGem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ??0StatGem@@QAE@XZ
_TEXT	SEGMENT
??0StatGem@@QAE@XZ PROC					; StatGem::StatGem, COMDAT
; _this$ = ecx

; 15   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7StatGem@@6B@

; 16   : 	this->m_GemInfo[0].ItemID		= ITEMGET(14, 308);

  00006	b8 34 1d 00 00	 mov	 eax, 7476		; 00001d34H

; 17   : 	this->m_GemInfo[0].EffectType	= StatGemType::DoubleDamageRate;
; 18   : 	this->m_GemInfo[0].EffectValue	= 100;

  0000b	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00010	66 89 41 04	 mov	 WORD PTR [ecx+4], ax
  00014	c6 41 06 00	 mov	 BYTE PTR [ecx+6], 0

; 19   : 	this->m_GemInfo[1].ItemID		= ITEMGET(14, 309);
; 20   : 	this->m_GemInfo[1].EffectType	= StatGemType::ExcellentDamageRate;
; 21   : 	this->m_GemInfo[1].EffectValue	= 100;
; 22   : 	this->m_GemInfo[2].ItemID		= ITEMGET(14, 310);
; 23   : 	this->m_GemInfo[2].EffectType	= StatGemType::DamageDecrease;
; 24   : 	this->m_GemInfo[2].EffectValue	= 100;
; 25   : 	this->m_GemInfo[3].ItemID		= ITEMGET(14, 311);
; 26   : 	this->m_GemInfo[3].EffectType	= StatGemType::DefenseIncrease;
; 27   : 	this->m_GemInfo[3].EffectValue	= 100;
; 28   : 	this->m_GemInfo[4].ItemID		= ITEMGET(14, 312);
; 29   : 	this->m_GemInfo[4].EffectType	= StatGemType::ZenHuntIncrease;
; 30   : 	this->m_GemInfo[4].EffectValue	= 100;
; 31   : 	this->m_GemInfo[5].ItemID		= ITEMGET(14, 313);
; 32   : 	this->m_GemInfo[5].EffectType	= StatGemType::MaxLifeIncrease;
; 33   : 	this->m_GemInfo[5].EffectValue	= 100;
; 34   : }

  00018	8b c1		 mov	 eax, ecx
  0001a	c7 41 08 64 00
	35 1d		 mov	 DWORD PTR [ecx+8], 490012772 ; 1d350064H
  00021	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  00025	c7 41 0e 64 00
	36 1d		 mov	 DWORD PTR [ecx+14], 490078308 ; 1d360064H
  0002c	c6 41 12 02	 mov	 BYTE PTR [ecx+18], 2
  00030	c7 41 14 64 00
	37 1d		 mov	 DWORD PTR [ecx+20], 490143844 ; 1d370064H
  00037	c6 41 18 03	 mov	 BYTE PTR [ecx+24], 3
  0003b	c7 41 1a 64 00
	38 1d		 mov	 DWORD PTR [ecx+26], 490209380 ; 1d380064H
  00042	c6 41 1e 04	 mov	 BYTE PTR [ecx+30], 4
  00046	c7 41 20 64 00
	39 1d		 mov	 DWORD PTR [ecx+32], 490274916 ; 1d390064H
  0004d	c6 41 24 05	 mov	 BYTE PTR [ecx+36], 5
  00051	66 89 51 26	 mov	 WORD PTR [ecx+38], dx
  00055	c3		 ret	 0
??0StatGem@@QAE@XZ ENDP					; StatGem::StatGem
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statgem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 143  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
