; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\TMonsterSkillElementInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?Reset@TMonsterSkillElementInfo@@QAEXXZ		; TMonsterSkillElementInfo::Reset
PUBLIC	?ResetDefense@TMonsterSkillElementInfo@@QAEXXZ	; TMonsterSkillElementInfo::ResetDefense
PUBLIC	?ResetAttack@TMonsterSkillElementInfo@@QAEXXZ	; TMonsterSkillElementInfo::ResetAttack
PUBLIC	?ResetAutoHP@TMonsterSkillElementInfo@@QAEXXZ	; TMonsterSkillElementInfo::ResetAutoHP
PUBLIC	?ResetAutoMP@TMonsterSkillElementInfo@@QAEXXZ	; TMonsterSkillElementInfo::ResetAutoMP
PUBLIC	?ResetAutoAG@TMonsterSkillElementInfo@@QAEXXZ	; TMonsterSkillElementInfo::ResetAutoAG
PUBLIC	?ResetImmune@TMonsterSkillElementInfo@@QAEXXZ	; TMonsterSkillElementInfo::ResetImmune
PUBLIC	?ResetResist@TMonsterSkillElementInfo@@QAEXXZ	; TMonsterSkillElementInfo::ResetResist
PUBLIC	?ResetModifyStat@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetModifyStat
PUBLIC	?ResetSpecialImmune@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetSpecialImmune
PUBLIC	?CheckDefenseTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckDefenseTime
PUBLIC	?CheckAttackTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAttackTime
PUBLIC	?CheckAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAutoHPTime
PUBLIC	?CheckAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAutoMPTime
PUBLIC	?CheckAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAutoAGTime
PUBLIC	?CheckImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckImmuneTime
PUBLIC	?CheckResistTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckResistTime
PUBLIC	?CheckModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckModifyStatTime
PUBLIC	?CheckSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckSpecialImmuneTime
PUBLIC	?DecDefenseTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecDefenseTime
PUBLIC	?DecAttackTime@TMonsterSkillElementInfo@@QAEHXZ	; TMonsterSkillElementInfo::DecAttackTime
PUBLIC	?DecAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ	; TMonsterSkillElementInfo::DecAutoHPTime
PUBLIC	?DecAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ	; TMonsterSkillElementInfo::DecAutoMPTime
PUBLIC	?DecAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ	; TMonsterSkillElementInfo::DecAutoAGTime
PUBLIC	?DecImmuneTime@TMonsterSkillElementInfo@@QAEHXZ	; TMonsterSkillElementInfo::DecImmuneTime
PUBLIC	?DecResistTime@TMonsterSkillElementInfo@@QAEHXZ	; TMonsterSkillElementInfo::DecResistTime
PUBLIC	?DecModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecModifyStatTime
PUBLIC	?DecSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecSpecialImmuneTime
PUBLIC	?CheckSkillElementInfoProc@TMonsterSkillElementInfo@@SAXPAUOBJECTSTRUCT@@@Z ; TMonsterSkillElementInfo::CheckSkillElementInfoProc
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	__real@42c80000
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?GCReFillSend@@YAXHGEEG@Z:PROC			; GCReFillSend
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckSkillElementInfoProc@TMonsterSkillElementInfo@@SAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?CheckSkillElementInfoProc@TMonsterSkillElementInfo@@SAXPAUOBJECTSTRUCT@@@Z PROC ; TMonsterSkillElementInfo::CheckSkillElementInfoProc, COMDAT

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 18   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckAttackTime() )

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00008	8d b7 78 20 00
	00		 lea	 esi, DWORD PTR [edi+8312]
  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ?CheckAttackTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAttackTime
  00015	85 c0		 test	 eax, eax
  00017	74 12		 je	 SHORT $LN3@CheckSkill

; 19   : 	{
; 20   : 		if ( lpObj->m_MonsterSkillElementInfo.DecAttackTime() )

  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?DecAttackTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecAttackTime
  00020	85 c0		 test	 eax, eax
  00022	74 07		 je	 SHORT $LN3@CheckSkill

; 21   : 		{
; 22   : 			lpObj->m_MonsterSkillElementInfo.ResetAttack();

  00024	8b ce		 mov	 ecx, esi
  00026	e8 00 00 00 00	 call	 ?ResetAttack@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAttack
$LN3@CheckSkill:

; 23   : 		}
; 24   : 	}
; 25   : 
; 26   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckDefenseTime() )

  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?CheckDefenseTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckDefenseTime
  00032	85 c0		 test	 eax, eax
  00034	74 12		 je	 SHORT $LN5@CheckSkill

; 27   : 	{
; 28   : 		if ( lpObj->m_MonsterSkillElementInfo.DecDefenseTime() )

  00036	8b ce		 mov	 ecx, esi
  00038	e8 00 00 00 00	 call	 ?DecDefenseTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecDefenseTime
  0003d	85 c0		 test	 eax, eax
  0003f	74 07		 je	 SHORT $LN5@CheckSkill

; 29   : 		{
; 30   : 			lpObj->m_MonsterSkillElementInfo.ResetDefense();

  00041	8b ce		 mov	 ecx, esi
  00043	e8 00 00 00 00	 call	 ?ResetDefense@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetDefense
$LN5@CheckSkill:

; 31   : 		}
; 32   : 	}
; 33   : 	
; 34   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckAutoAGTime() )

  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?CheckAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAutoAGTime
  0004f	85 c0		 test	 eax, eax
  00051	74 12		 je	 SHORT $LN7@CheckSkill

; 35   : 	{
; 36   : 		if ( lpObj->m_MonsterSkillElementInfo.DecAutoAGTime() )

  00053	8b ce		 mov	 ecx, esi
  00055	e8 00 00 00 00	 call	 ?DecAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecAutoAGTime
  0005a	85 c0		 test	 eax, eax
  0005c	74 07		 je	 SHORT $LN7@CheckSkill

; 37   : 		{
; 38   : 			lpObj->m_MonsterSkillElementInfo.ResetAutoAG();

  0005e	8b ce		 mov	 ecx, esi
  00060	e8 00 00 00 00	 call	 ?ResetAutoAG@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAutoAG
$LN7@CheckSkill:

; 39   : 		}
; 40   : 	}
; 41   : 
; 42   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckAutoHPTime() )

  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?CheckAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAutoHPTime
  0006c	85 c0		 test	 eax, eax
  0006e	0f 84 b5 00 00
	00		 je	 $LN16@CheckSkill

; 43   : 	{
; 44   : 		if ( lpObj->m_MonsterSkillElementInfo.DecAutoHPTime() )

  00074	8b ce		 mov	 ecx, esi
  00076	e8 00 00 00 00	 call	 ?DecAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecAutoHPTime
  0007b	85 c0		 test	 eax, eax
  0007d	74 0c		 je	 SHORT $LN9@CheckSkill

; 45   : 		{
; 46   : 			lpObj->m_MonsterSkillElementInfo.ResetAutoHP();

  0007f	8b ce		 mov	 ecx, esi
  00081	e8 00 00 00 00	 call	 ?ResetAutoHP@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAutoHP

; 47   : 		}
; 48   : 		else 

  00086	e9 9e 00 00 00	 jmp	 $LN16@CheckSkill
$LN9@CheckSkill:

; 49   : 		{
; 50   : 			if ( lpObj->m_MonsterSkillElementInfo.m_iSkillElementAutoHPCycle == 110 )

  0008b	83 bf 8c 20 00
	00 6e		 cmp	 DWORD PTR [edi+8332], 110 ; 0000006eH
  00092	66 0f 6e 87 88
	20 00 00	 movd	 xmm0, DWORD PTR [edi+8328]

; 51   : 				lpObj->Life += lpObj->m_MonsterSkillElementInfo.m_iSkillElementAutoHP;

  0009a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009d	75 0a		 jne	 SHORT $LN11@CheckSkill
  0009f	f3 0f 58 87 d8
	00 00 00	 addss	 xmm0, DWORD PTR [edi+216]

; 52   : 			else

  000a7	eb 18		 jmp	 SHORT $LN32@CheckSkill
$LN11@CheckSkill:

; 53   : 	
; 54   : 			lpObj->Life += lpObj->Life * lpObj->m_MonsterSkillElementInfo.m_iSkillElementAutoHP / 100.0f;

  000a9	f3 0f 10 8f d8
	00 00 00	 movss	 xmm1, DWORD PTR [edi+216]
  000b1	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000b5	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42c80000
  000bd	f3 0f 58 c1	 addss	 xmm0, xmm1
$LN32@CheckSkill:

; 55   : 
; 56   : 			if ( lpObj->Life <0 )
; 57   : 			{
; 58   : 				lpObj->Life = 0;
; 59   : 				GCReFillSend(lpObj->m_Index,(WORD)lpObj->Life, 0xFF, 0, lpObj->iShield);

  000c1	0f b7 87 2c 01
	00 00		 movzx	 eax, WORD PTR [edi+300]
  000c8	0f 28 c8	 movaps	 xmm1, xmm0
  000cb	50		 push	 eax
  000cc	f3 0f 11 87 d8
	00 00 00	 movss	 DWORD PTR [edi+216], xmm0
  000d4	0f 57 c0	 xorps	 xmm0, xmm0
  000d7	0f 2f c1	 comiss	 xmm0, xmm1
  000da	6a 00		 push	 0
  000dc	68 ff 00 00 00	 push	 255			; 000000ffH
  000e1	76 0e		 jbe	 SHORT $LN13@CheckSkill
  000e3	c7 87 d8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+216], 0
  000ed	6a 00		 push	 0
  000ef	eb 2e		 jmp	 SHORT $LN33@CheckSkill
$LN13@CheckSkill:
  000f1	66 0f 6e 87 24
	01 00 00	 movd	 xmm0, DWORD PTR [edi+292]

; 60   : 			}
; 61   : 			else if ( (lpObj->MaxLife + lpObj->AddLife) < lpObj->Life )

  000f9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000fc	f3 0f 58 87 dc
	00 00 00	 addss	 xmm0, DWORD PTR [edi+220]
  00104	0f 2f c8	 comiss	 xmm1, xmm0
  00107	76 0e		 jbe	 SHORT $LN15@CheckSkill

; 62   : 			{
; 63   : 				lpObj->Life = lpObj->MaxLife + lpObj->AddLife;

  00109	f3 0f 11 87 d8
	00 00 00	 movss	 DWORD PTR [edi+216], xmm0

; 64   : 				GCReFillSend(lpObj->m_Index,(WORD)lpObj->Life, 0xFF, 0, lpObj->iShield);

  00111	f3 0f 2c c0	 cvttss2si eax, xmm0

; 65   : 			}
; 66   : 			else

  00115	eb 04		 jmp	 SHORT $LN34@CheckSkill
$LN15@CheckSkill:

; 67   : 			{
; 68   : 				GCReFillSend(lpObj->m_Index,(WORD)lpObj->Life, 0xFF, 0, lpObj->iShield);

  00117	f3 0f 2c c1	 cvttss2si eax, xmm1
$LN34@CheckSkill:
  0011b	0f b7 c0	 movzx	 eax, ax
  0011e	50		 push	 eax
$LN33@CheckSkill:
  0011f	ff 37		 push	 DWORD PTR [edi]
  00121	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend
  00126	83 c4 14	 add	 esp, 20			; 00000014H
$LN16@CheckSkill:

; 69   : 			}
; 70   : 		}
; 71   : 	}
; 72   : 
; 73   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckAutoMPTime() )

  00129	8b ce		 mov	 ecx, esi
  0012b	e8 00 00 00 00	 call	 ?CheckAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAutoMPTime
  00130	85 c0		 test	 eax, eax
  00132	74 12		 je	 SHORT $LN18@CheckSkill

; 74   : 	{
; 75   : 		if ( lpObj->m_MonsterSkillElementInfo.DecAutoMPTime() )

  00134	8b ce		 mov	 ecx, esi
  00136	e8 00 00 00 00	 call	 ?DecAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecAutoMPTime
  0013b	85 c0		 test	 eax, eax
  0013d	74 07		 je	 SHORT $LN18@CheckSkill

; 76   : 		{
; 77   : 			lpObj->m_MonsterSkillElementInfo.ResetAutoMP();

  0013f	8b ce		 mov	 ecx, esi
  00141	e8 00 00 00 00	 call	 ?ResetAutoMP@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAutoMP
$LN18@CheckSkill:

; 78   : 		}
; 79   : 	}
; 80   : 
; 81   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckAttackTime() )

  00146	8b ce		 mov	 ecx, esi
  00148	e8 00 00 00 00	 call	 ?CheckAttackTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckAttackTime
  0014d	85 c0		 test	 eax, eax
  0014f	74 12		 je	 SHORT $LN20@CheckSkill

; 82   : 	{
; 83   : 		if ( lpObj->m_MonsterSkillElementInfo.DecAttackTime() )

  00151	8b ce		 mov	 ecx, esi
  00153	e8 00 00 00 00	 call	 ?DecAttackTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecAttackTime
  00158	85 c0		 test	 eax, eax
  0015a	74 07		 je	 SHORT $LN20@CheckSkill

; 84   : 		{
; 85   : 			lpObj->m_MonsterSkillElementInfo.ResetAttack();

  0015c	8b ce		 mov	 ecx, esi
  0015e	e8 00 00 00 00	 call	 ?ResetAttack@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAttack
$LN20@CheckSkill:

; 86   : 		}
; 87   : 	}
; 88   : 
; 89   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckImmuneTime() )

  00163	8b ce		 mov	 ecx, esi
  00165	e8 00 00 00 00	 call	 ?CheckImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckImmuneTime
  0016a	85 c0		 test	 eax, eax
  0016c	74 12		 je	 SHORT $LN22@CheckSkill

; 90   : 	{
; 91   : 		if ( lpObj->m_MonsterSkillElementInfo.DecImmuneTime() )

  0016e	8b ce		 mov	 ecx, esi
  00170	e8 00 00 00 00	 call	 ?DecImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecImmuneTime
  00175	85 c0		 test	 eax, eax
  00177	74 07		 je	 SHORT $LN22@CheckSkill

; 92   : 		{
; 93   : 			lpObj->m_MonsterSkillElementInfo.ResetImmune();

  00179	8b ce		 mov	 ecx, esi
  0017b	e8 00 00 00 00	 call	 ?ResetImmune@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetImmune
$LN22@CheckSkill:

; 94   : 		}
; 95   : 	}
; 96   : 
; 97   : 	if ( lpObj->m_MonsterSkillElementInfo.CheckResistTime() )

  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?CheckResistTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckResistTime
  00187	85 c0		 test	 eax, eax
  00189	74 12		 je	 SHORT $LN24@CheckSkill

; 98   : 	{
; 99   : 		if ( lpObj->m_MonsterSkillElementInfo.DecResistTime() )

  0018b	8b ce		 mov	 ecx, esi
  0018d	e8 00 00 00 00	 call	 ?DecResistTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecResistTime
  00192	85 c0		 test	 eax, eax
  00194	74 07		 je	 SHORT $LN24@CheckSkill

; 100  : 		{
; 101  : 			lpObj->m_MonsterSkillElementInfo.ResetResist();

  00196	8b ce		 mov	 ecx, esi
  00198	e8 00 00 00 00	 call	 ?ResetResist@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetResist
$LN24@CheckSkill:

; 102  : 		}
; 103  : 	}
; 104  : 
; 105  : 	if ( lpObj->m_MonsterSkillElementInfo.CheckModifyStatTime() )

  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?CheckModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckModifyStatTime
  001a4	85 c0		 test	 eax, eax
  001a6	74 12		 je	 SHORT $LN26@CheckSkill

; 106  : 	{
; 107  : 		if ( lpObj->m_MonsterSkillElementInfo.DecModifyStatTime() )

  001a8	8b ce		 mov	 ecx, esi
  001aa	e8 00 00 00 00	 call	 ?DecModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecModifyStatTime
  001af	85 c0		 test	 eax, eax
  001b1	74 07		 je	 SHORT $LN26@CheckSkill

; 108  : 		{
; 109  : 			lpObj->m_MonsterSkillElementInfo.ResetModifyStat();

  001b3	8b ce		 mov	 ecx, esi
  001b5	e8 00 00 00 00	 call	 ?ResetModifyStat@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetModifyStat
$LN26@CheckSkill:

; 110  : 		}
; 111  : 	}
; 112  : 
; 113  : 	if ( lpObj->m_MonsterSkillElementInfo.CheckSpecialImmuneTime() )

  001ba	8b ce		 mov	 ecx, esi
  001bc	e8 00 00 00 00	 call	 ?CheckSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::CheckSpecialImmuneTime
  001c1	85 c0		 test	 eax, eax
  001c3	74 15		 je	 SHORT $LN28@CheckSkill

; 114  : 	{
; 115  : 		if ( lpObj->m_MonsterSkillElementInfo.DecSpecialImmuneTime() )

  001c5	8b ce		 mov	 ecx, esi
  001c7	e8 00 00 00 00	 call	 ?DecSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ; TMonsterSkillElementInfo::DecSpecialImmuneTime
  001cc	85 c0		 test	 eax, eax
  001ce	74 0a		 je	 SHORT $LN28@CheckSkill

; 116  : 		{
; 117  : 			lpObj->m_MonsterSkillElementInfo.ResetSpecialImmune();

  001d0	5f		 pop	 edi
  001d1	8b ce		 mov	 ecx, esi
  001d3	5e		 pop	 esi

; 118  : 		}
; 119  : 	}
; 120  : }

  001d4	5d		 pop	 ebp

; 116  : 		{
; 117  : 			lpObj->m_MonsterSkillElementInfo.ResetSpecialImmune();

  001d5	e9 00 00 00 00	 jmp	 ?ResetSpecialImmune@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetSpecialImmune
$LN28@CheckSkill:
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi

; 118  : 		}
; 119  : 	}
; 120  : }

  001dc	5d		 pop	 ebp
  001dd	c3		 ret	 0
?CheckSkillElementInfoProc@TMonsterSkillElementInfo@@SAXPAUOBJECTSTRUCT@@@Z ENDP ; TMonsterSkillElementInfo::CheckSkillElementInfoProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ PROC ; TMonsterSkillElementInfo::DecSpecialImmuneTime, COMDAT
; _this$ = ecx

; 315  : 	this->m_iSkillElementSpecialImmuneTime--;

  00000	ff 49 50	 dec	 DWORD PTR [ecx+80]

; 316  : 	return (this->m_iSkillElementSpecialImmuneTime > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 50	 cmp	 DWORD PTR [ecx+80], eax
  00008	0f 9e c0	 setle	 al

; 317  : }

  0000b	c3		 ret	 0
?DecSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ENDP ; TMonsterSkillElementInfo::DecSpecialImmuneTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ PROC ; TMonsterSkillElementInfo::DecModifyStatTime, COMDAT
; _this$ = ecx

; 309  : 	this->m_iSkillElementModifyStatTime--;

  00000	ff 49 4c	 dec	 DWORD PTR [ecx+76]

; 310  : 	return (this->m_iSkillElementModifyStatTime > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 4c	 cmp	 DWORD PTR [ecx+76], eax
  00008	0f 9e c0	 setle	 al

; 311  : }

  0000b	c3		 ret	 0
?DecModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ ENDP ; TMonsterSkillElementInfo::DecModifyStatTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecResistTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecResistTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::DecResistTime, COMDAT
; _this$ = ecx

; 302  : 	this->m_iSkillElementResistTime--;

  00000	ff 49 40	 dec	 DWORD PTR [ecx+64]

; 303  : 	return (this->m_iSkillElementResistTime > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 40	 cmp	 DWORD PTR [ecx+64], eax
  00008	0f 9e c0	 setle	 al

; 304  : }

  0000b	c3		 ret	 0
?DecResistTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::DecResistTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecImmuneTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecImmuneTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::DecImmuneTime, COMDAT
; _this$ = ecx

; 295  : 	this->m_iSkillElementImmuneTime--;

  00000	ff 49 38	 dec	 DWORD PTR [ecx+56]

; 296  : 	return (this->m_iSkillElementImmuneTime > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00008	0f 9e c0	 setle	 al

; 297  : }

  0000b	c3		 ret	 0
?DecImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::DecImmuneTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::DecAutoAGTime, COMDAT
; _this$ = ecx

; 288  : 	this->m_iSkillElementAutoAGTime--;

  00000	ff 49 30	 dec	 DWORD PTR [ecx+48]

; 289  : 	return (this->m_iSkillElementAutoAGTime > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 30	 cmp	 DWORD PTR [ecx+48], eax
  00008	0f 9e c0	 setle	 al

; 290  : }

  0000b	c3		 ret	 0
?DecAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::DecAutoAGTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::DecAutoMPTime, COMDAT
; _this$ = ecx

; 281  : 	this->m_iSkillElementAutoMPTime--;

  00000	ff 49 24	 dec	 DWORD PTR [ecx+36]

; 282  : 	return (this->m_iSkillElementAutoMPTime > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 24	 cmp	 DWORD PTR [ecx+36], eax
  00008	0f 9e c0	 setle	 al

; 283  : }

  0000b	c3		 ret	 0
?DecAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::DecAutoMPTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::DecAutoHPTime, COMDAT
; _this$ = ecx

; 274  : 	this->m_iSkillElementAutoHPTime--;

  00000	ff 49 18	 dec	 DWORD PTR [ecx+24]

; 275  : 	return (this->m_iSkillElementAutoHPTime > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  00008	0f 9e c0	 setle	 al

; 276  : }

  0000b	c3		 ret	 0
?DecAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::DecAutoHPTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecAttackTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecAttackTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::DecAttackTime, COMDAT
; _this$ = ecx

; 267  : 	this->m_iSkillElementAttackTime--;

  00000	ff 49 0c	 dec	 DWORD PTR [ecx+12]

; 268  : 	return (this->m_iSkillElementAttack > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 41 08	 cmp	 DWORD PTR [ecx+8], eax
  00008	0f 9e c0	 setle	 al

; 269  : }

  0000b	c3		 ret	 0
?DecAttackTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::DecAttackTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?DecDefenseTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?DecDefenseTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::DecDefenseTime, COMDAT
; _this$ = ecx

; 260  : 	this->m_iSkillElementDefenseTime--;

  00000	ff 49 04	 dec	 DWORD PTR [ecx+4]

; 261  : 	return (this->m_iSkillElementDefense > 0)?FALSE:TRUE;

  00003	33 c0		 xor	 eax, eax
  00005	39 01		 cmp	 DWORD PTR [ecx], eax
  00007	0f 9e c0	 setle	 al

; 262  : }

  0000a	c3		 ret	 0
?DecDefenseTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::DecDefenseTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ PROC ; TMonsterSkillElementInfo::CheckSpecialImmuneTime, COMDAT
; _this$ = ecx

; 253  : 	return (this->m_iSkillElementSpecialImmuneTime <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 50	 cmp	 DWORD PTR [ecx+80], eax
  00005	0f 9f c0	 setg	 al

; 254  : }

  00008	c3		 ret	 0
?CheckSpecialImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ENDP ; TMonsterSkillElementInfo::CheckSpecialImmuneTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ PROC ; TMonsterSkillElementInfo::CheckModifyStatTime, COMDAT
; _this$ = ecx

; 248  : 	return (this->m_iSkillElementModifyStatTime <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 4c	 cmp	 DWORD PTR [ecx+76], eax
  00005	0f 9f c0	 setg	 al

; 249  : }

  00008	c3		 ret	 0
?CheckModifyStatTime@TMonsterSkillElementInfo@@QAEHXZ ENDP ; TMonsterSkillElementInfo::CheckModifyStatTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckResistTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckResistTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::CheckResistTime, COMDAT
; _this$ = ecx

; 242  : 	return (this->m_iSkillElementResistTime <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 40	 cmp	 DWORD PTR [ecx+64], eax
  00005	0f 9f c0	 setg	 al

; 243  : }

  00008	c3		 ret	 0
?CheckResistTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::CheckResistTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckImmuneTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckImmuneTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::CheckImmuneTime, COMDAT
; _this$ = ecx

; 236  : 	return (this->m_iSkillElementImmuneTime <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00005	0f 9f c0	 setg	 al

; 237  : }

  00008	c3		 ret	 0
?CheckImmuneTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::CheckImmuneTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::CheckAutoAGTime, COMDAT
; _this$ = ecx

; 230  : 	return (this->m_iSkillElementAutoAGTime <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 30	 cmp	 DWORD PTR [ecx+48], eax
  00005	0f 9f c0	 setg	 al

; 231  : }

  00008	c3		 ret	 0
?CheckAutoAGTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::CheckAutoAGTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::CheckAutoMPTime, COMDAT
; _this$ = ecx

; 224  : 	return (this->m_iSkillElementAutoMPTime <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 24	 cmp	 DWORD PTR [ecx+36], eax
  00005	0f 9f c0	 setg	 al

; 225  : }

  00008	c3		 ret	 0
?CheckAutoMPTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::CheckAutoMPTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::CheckAutoHPTime, COMDAT
; _this$ = ecx

; 218  : 	return (this->m_iSkillElementAutoHPTime <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  00005	0f 9f c0	 setg	 al

; 219  : }

  00008	c3		 ret	 0
?CheckAutoHPTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::CheckAutoHPTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckAttackTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckAttackTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::CheckAttackTime, COMDAT
; _this$ = ecx

; 212  : 	return (this->m_iSkillElementAttack <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 08	 cmp	 DWORD PTR [ecx+8], eax
  00005	0f 9f c0	 setg	 al

; 213  : }

  00008	c3		 ret	 0
?CheckAttackTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::CheckAttackTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?CheckDefenseTime@TMonsterSkillElementInfo@@QAEHXZ
_TEXT	SEGMENT
?CheckDefenseTime@TMonsterSkillElementInfo@@QAEHXZ PROC	; TMonsterSkillElementInfo::CheckDefenseTime, COMDAT
; _this$ = ecx

; 206  : 	return (this->m_iSkillElementDefense <= 0)?FALSE:TRUE;

  00000	33 c0		 xor	 eax, eax
  00002	39 01		 cmp	 DWORD PTR [ecx], eax
  00004	0f 9f c0	 setg	 al

; 207  : }

  00007	c3		 ret	 0
?CheckDefenseTime@TMonsterSkillElementInfo@@QAEHXZ ENDP	; TMonsterSkillElementInfo::CheckDefenseTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetSpecialImmune@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetSpecialImmune@TMonsterSkillElementInfo@@QAEXXZ PROC ; TMonsterSkillElementInfo::ResetSpecialImmune, COMDAT
; _this$ = ecx

; 199  : 	this->m_iSkillElementSpecialImmuneTime = 0;

  00000	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0

; 200  : }

  00007	c3		 ret	 0
?ResetSpecialImmune@TMonsterSkillElementInfo@@QAEXXZ ENDP ; TMonsterSkillElementInfo::ResetSpecialImmune
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetModifyStat@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetModifyStat@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetModifyStat, COMDAT
; _this$ = ecx

; 192  : 	this->m_iSkillElementModifyStat = 0;

  00000	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0

; 193  : 	this->m_iSkillElementModifyStatType = 0;

  00007	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], 0

; 194  : 	this->m_iSkillElementModifyStatTime = 0;

  0000e	c7 41 4c 00 00
	00 00		 mov	 DWORD PTR [ecx+76], 0

; 195  : }

  00015	c3		 ret	 0
?ResetModifyStat@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetModifyStat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetResist@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetResist@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetResist, COMDAT
; _this$ = ecx

; 184  : 	this->m_iSkillElementResistNumber = 0;

  00000	c7 41 3c 00 00
	00 00		 mov	 DWORD PTR [ecx+60], 0

; 185  : 	this->m_iSkillElementResistTime = 0;

  00007	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0

; 186  : }

  0000e	c3		 ret	 0
?ResetResist@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetResist
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetImmune@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetImmune@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetImmune, COMDAT
; _this$ = ecx

; 177  : 	this->m_iSkillElementImmuneNumber = 0;

  00000	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0

; 178  : 	this->m_iSkillElementImmuneTime = 0;

  00007	c7 41 38 00 00
	00 00		 mov	 DWORD PTR [ecx+56], 0

; 179  : }

  0000e	c3		 ret	 0
?ResetImmune@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetImmune
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetAutoAG@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetAutoAG@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetAutoAG, COMDAT
; _this$ = ecx

; 169  : 	this->m_iSkillElementAutoAG = 0;

  00000	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 170  : 	this->m_iSkillElementAutoAGCycle = 0;

  00007	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 171  : 	this->m_iSkillElementAutoAGTime = 0;

  0000e	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 172  : }

  00015	c3		 ret	 0
?ResetAutoAG@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetAutoAG
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetAutoMP@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetAutoMP@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetAutoMP, COMDAT
; _this$ = ecx

; 161  : 	this->m_iSkillElementAutoMP = 0;

  00000	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 162  : 	this->m_iSkillElementAutoMPCycle = 0;

  00007	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 163  : 	this->m_iSkillElementAutoMPTime = 0;

  0000e	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 164  : }

  00015	c3		 ret	 0
?ResetAutoMP@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetAutoMP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetAutoHP@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetAutoHP@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetAutoHP, COMDAT
; _this$ = ecx

; 153  : 	this->m_iSkillElementAutoHP = 0;

  00000	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 154  : 	this->m_iSkillElementAutoHPCycle = 0;

  00007	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 155  : 	this->m_iSkillElementAutoHPTime = 0;

  0000e	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 156  : }

  00015	c3		 ret	 0
?ResetAutoHP@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetAutoHP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetAttack@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetAttack@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetAttack, COMDAT
; _this$ = ecx

; 146  : 	this->m_iSkillElementAttack = 0;

  00000	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 147  : 	this->m_iSkillElementAttackTime = 0;

  00007	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 148  : }

  0000e	c3		 ret	 0
?ResetAttack@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?ResetDefense@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetDefense@TMonsterSkillElementInfo@@QAEXXZ PROC	; TMonsterSkillElementInfo::ResetDefense, COMDAT
; _this$ = ecx

; 139  : 	this->m_iSkillElementDefense = 0;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 140  : 	this->m_iSkillElementDefenseTime = 0;

  00006	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 141  : }

  0000d	c3		 ret	 0
?ResetDefense@TMonsterSkillElementInfo@@QAEXXZ ENDP	; TMonsterSkillElementInfo::ResetDefense
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?Reset@TMonsterSkillElementInfo@@QAEXXZ
_TEXT	SEGMENT
?Reset@TMonsterSkillElementInfo@@QAEXXZ PROC		; TMonsterSkillElementInfo::Reset, COMDAT
; _this$ = ecx

; 124  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 125  : 	this->ResetDefense();

  00003	e8 00 00 00 00	 call	 ?ResetDefense@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetDefense

; 126  : 	this->ResetAttack();

  00008	8b ce		 mov	 ecx, esi
  0000a	e8 00 00 00 00	 call	 ?ResetAttack@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAttack

; 127  : 	this->ResetAutoHP();

  0000f	8b ce		 mov	 ecx, esi
  00011	e8 00 00 00 00	 call	 ?ResetAutoHP@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAutoHP

; 128  : 	this->ResetAutoMP();

  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?ResetAutoMP@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAutoMP

; 129  : 	this->ResetAutoAG();

  0001d	8b ce		 mov	 ecx, esi
  0001f	e8 00 00 00 00	 call	 ?ResetAutoAG@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetAutoAG

; 130  : 	this->ResetImmune();

  00024	8b ce		 mov	 ecx, esi
  00026	e8 00 00 00 00	 call	 ?ResetImmune@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetImmune

; 131  : 	this->ResetResist();

  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?ResetResist@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetResist

; 132  : 	this->ResetModifyStat();

  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?ResetModifyStat@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetModifyStat

; 133  : 	this->ResetSpecialImmune();

  00039	8b ce		 mov	 ecx, esi
  0003b	5e		 pop	 esi
  0003c	e9 00 00 00 00	 jmp	 ?ResetSpecialImmune@TMonsterSkillElementInfo@@QAEXXZ ; TMonsterSkillElementInfo::ResetSpecialImmune
?Reset@TMonsterSkillElementInfo@@QAEXXZ ENDP		; TMonsterSkillElementInfo::Reset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsterskillelementinfo.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
