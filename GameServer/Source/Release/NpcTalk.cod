; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\NpcTalk.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_bUseLotterySystem@@3HA			; g_bUseLotterySystem
_DATA	SEGMENT
?g_bUseLotterySystem@@3HA DD 01H			; g_bUseLotterySystem
_DATA	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	?NpcTalk@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcTalk
PUBLIC	?NpcBattleAnnouncer@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcBattleAnnouncer
PUBLIC	?NpcFasi@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcFasi
PUBLIC	?NpcGuildMasterTalk@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcGuildMasterTalk
PUBLIC	?NpcRolensiaGuard@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcRolensiaGuard
PUBLIC	?NpcChaosGoblelin@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcChaosGoblelin
PUBLIC	?NpcRusipher@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcRusipher
PUBLIC	?NpcPosionGirl@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcPosionGirl
PUBLIC	?NpcDeviasWizard@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDeviasWizard
PUBLIC	?NpcDeviasGuard@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDeviasGuard
PUBLIC	?NpcDeviasWareHousemen@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDeviasWareHousemen
PUBLIC	?NpcWarehouse@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcWarehouse
PUBLIC	?NpcNoriaRara@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcNoriaRara
PUBLIC	?NpcDeviasMadam@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDeviasMadam
PUBLIC	?NpcEventChipNPC@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcEventChipNPC
PUBLIC	?NpcRorensiaSmith@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcRorensiaSmith
PUBLIC	?NpcNoriJangIn@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcNoriJangIn
PUBLIC	?NpcQuestCheck@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcQuestCheck
PUBLIC	?NpcServerDivision@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcServerDivision
PUBLIC	?NpcRoadMerchant@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcRoadMerchant
PUBLIC	?NpcAngelKing@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcAngelKing
PUBLIC	?NpcAngelMessanger@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcAngelMessanger
PUBLIC	?NpcRolensiaMadam@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcRolensiaMadam
PUBLIC	?NpcDeviasWeapon@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDeviasWeapon
PUBLIC	?NpcDarkSpiritTrainer@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDarkSpiritTrainer
PUBLIC	?NpcJewelMixDealer@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcJewelMixDealer
PUBLIC	?NpcSiegeMachine_Attack@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSiegeMachine_Attack
PUBLIC	?NpcSiegeMachine_Defense@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSiegeMachine_Defense
PUBLIC	?NpcElderCircle@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcElderCircle
PUBLIC	?NpcCastleGuard@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCastleGuard
PUBLIC	?NpcCastleGateLever@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCastleGateLever
PUBLIC	?NpcCastleCrown@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCastleCrown
PUBLIC	?NpcCastleSwitch@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCastleSwitch
PUBLIC	?NpcShadowPhantom@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcShadowPhantom
PUBLIC	?NpcMainatenceMachine@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcMainatenceMachine
PUBLIC	?NpcReira@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcReira
PUBLIC	?NpcChaosCardMaster@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcChaosCardMaster
PUBLIC	?NpcCastleHuntZoneGuard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCastleHuntZoneGuard
PUBLIC	?NpcCrywolfAltar@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCrywolfAltar
PUBLIC	?NpcDrinkSellerLindsay@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDrinkSellerLindsay
PUBLIC	?NpcDrinkSellerHillary@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDrinkSellerHillary
PUBLIC	?NpcFireWorkGirl@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcFireWorkGirl
PUBLIC	?NpcIllusionMaster@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcIllusionMaster
PUBLIC	?NpcIllusionHolyStatue@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcIllusionHolyStatue
PUBLIC	?NpcIllusionTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcIllusionTeamForge
PUBLIC	?NpcAlliedTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcAlliedTeamForge
PUBLIC	?NpcSilvia@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcSilvia
PUBLIC	?NpcMarseille@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcMarseille
PUBLIC	?NpcLeah@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcLeah
PUBLIC	?NpcCherryBlossom@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCherryBlossom
PUBLIC	?NpcSeedMaster@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcSeedMaster
PUBLIC	?NpcSeedResearch@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcSeedResearch
PUBLIC	?NpcSanta@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcSanta
PUBLIC	?NpcSnowman@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcSnowman
PUBLIC	?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z	; NpcLitleSanta
PUBLIC	?NpcDelgado@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcDelgado
PUBLIC	?NpcTitus@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcTitus
PUBLIC	?NpcImperialFort@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcImperialFort
PUBLIC	?NpcLugard@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcLugard
PUBLIC	?NpcCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCompensationBox
PUBLIC	?NpcGoldCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcGoldCompensationBox
PUBLIC	?NpcDuprianSteward@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcDuprianSteward
PUBLIC	?NpcVanertSteward@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcVanertSteward
PUBLIC	?NpcJulia@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcJulia
PUBLIC	?NpcDavid@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcDavid
PUBLIC	?NpcCaptainSlaugh@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcCaptainSlaugh
PUBLIC	?NpcAdniel@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcAdniel
PUBLIC	?NpcSirLesnar@@YAHPAUOBJECTSTRUCT@@0@Z		; NpcSirLesnar
PUBLIC	?NpcPrivateStoreBoard@@YAHPAUOBJECTSTRUCT@@0@Z	; NpcPrivateStoreBoard
PUBLIC	?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ		; CQeustNpcTeleport::TalkRefAdd
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0CH@BEEAJNGB@You?5are?5not?5a?5member?5of?5any?5gens@ ; `string'
PUBLIC	??_C@_0BM@GIIHNFEG@Guild?5creation?5is?5disabled?$CB?$AA@ ; `string'
PUBLIC	??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@ ; `string'
PUBLIC	??_C@_0CL@KMBDNKMH@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Jewel?5Mix?5De@ ; `string'
PUBLIC	??_C@_0DA@BCJAGFAG@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Tal@ ; `string'
PUBLIC	??_C@_0FG@CNLFICGI@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@ ; `string'
PUBLIC	??_C@_0FH@ONKNIFFP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@ ; `string'
PUBLIC	??_C@_0EM@MPNDNNH@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@ ; `string'
PUBLIC	??_C@_0EF@JFCICCDP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@ ; `string'
PUBLIC	??_C@_0FO@BJDLMIAN@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@ ; `string'
PUBLIC	??_C@_0EC@IJDIINJB@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@ ; `string'
PUBLIC	??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@ ; `string'
PUBLIC	??_C@_0EC@IEDCECMD@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@ ; `string'
PUBLIC	??_C@_0FH@PCDLBKGJ@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@ ; `string'
PUBLIC	??_C@_0EB@GAPHDLGF@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@ ; `string'
PUBLIC	??_C@_0FD@GEIJDAJG@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@ ; `string'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	_rand:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?NpcJewelOfHarmony@CJewelOfHarmonySystem@@QAEHPAUOBJECTSTRUCT@@0@Z:PROC ; CJewelOfHarmonySystem::NpcJewelOfHarmony
EXTRN	?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z:PROC ; ChatTargetSend
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?GCGuildMasterQuestionSend@@YAXH@Z:PROC		; GCGuildMasterQuestionSend
EXTRN	?GCReFillSend@@YAXHGEEG@Z:PROC			; GCReFillSend
EXTRN	?GCManaSend@@YAXHFEEG@Z:PROC			; GCManaSend
EXTRN	?GCServerCmd@@YAXHEEE@Z:PROC			; GCServerCmd
EXTRN	?GCAnsCsGateState@@YAXHHH@Z:PROC		; GCAnsCsGateState
EXTRN	?GCAnsCsAccessSwitchState@@YAXHHHE@Z:PROC	; GCAnsCsAccessSwitchState
EXTRN	?GCAnsCsAccessCrownState@@YAXHE@Z:PROC		; GCAnsCsAccessCrownState
EXTRN	?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z:PROC		; GCAnsCsMapSvrTaxInfo
EXTRN	?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjItemTextSave
EXTRN	?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z:PROC ; gObjWarehouseTextSave
EXTRN	?gObjIsConnectedGP@@YAHH@Z:PROC			; gObjIsConnectedGP
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObjGuildMasterCapacityTest@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjGuildMasterCapacityTest
EXTRN	?gObjInventoryTrans@@YAHH@Z:PROC		; gObjInventoryTrans
EXTRN	?gObjGetPkTime@@YAHPAUOBJECTSTRUCT@@AAH1@Z:PROC	; gObjGetPkTime
EXTRN	?gUserFindDevilSquareInvitation@@YAHH@Z:PROC	; gUserFindDevilSquareInvitation
EXTRN	?gUserFindDevilSquareKeyEyes@@YAHH@Z:PROC	; gUserFindDevilSquareKeyEyes
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?ClickToStatus@CIllusionTempleEvent@@QAEXEPAUOBJECTSTRUCT@@0@Z:PROC ; CIllusionTempleEvent::ClickToStatus
EXTRN	?ClickAlliedNpc@CIllusionTempleEvent@@QAEXEPAUOBJECTSTRUCT@@0@Z:PROC ; CIllusionTempleEvent::ClickAlliedNpc
EXTRN	?ClickIllusionNpc@CIllusionTempleEvent@@QAEXEPAUOBJECTSTRUCT@@0@Z:PROC ; CIllusionTempleEvent::ClickIllusionNpc
EXTRN	?ClickEnterNpc@CIllusionTempleEvent@@QAEXPAUOBJECTSTRUCT@@0@Z:PROC ; CIllusionTempleEvent::ClickEnterNpc
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
EXTRN	?SearchUserDeleteQuestItem@CBloodCastle@@QAEXH@Z:PROC ; CBloodCastle::SearchUserDeleteQuestItem
EXTRN	?SetUserState@CBloodCastle@@QAEXHH@Z:PROC	; CBloodCastle::SetUserState
EXTRN	?CheckUserBridgeMember@CBloodCastle@@QAE_NHH@Z:PROC ; CBloodCastle::CheckUserBridgeMember
EXTRN	?GetCurrentState@CBloodCastle@@QAEHH@Z:PROC	; CBloodCastle::GetCurrentState
EXTRN	?CheckEnterLevel@CBloodCastle@@QAEHHH@Z:PROC	; CBloodCastle::CheckEnterLevel
EXTRN	?CheckEnterFreeTicket@CBloodCastle@@QAE_NH@Z:PROC ; CBloodCastle::CheckEnterFreeTicket
EXTRN	?CheckEnterItem@CBloodCastle@@QAEHH@Z:PROC	; CBloodCastle::CheckEnterItem
EXTRN	?CheckQuestItem@CBloodCastle@@QAEHH@Z:PROC	; CBloodCastle::CheckQuestItem
EXTRN	?CheckCanEnter@CBloodCastle@@QAE_NH@Z:PROC	; CBloodCastle::CheckCanEnter
EXTRN	?CheckPlayStart@CBloodCastle@@QAE_NH@Z:PROC	; CBloodCastle::CheckPlayStart
EXTRN	?CheckUserWinnerParty@CBloodCastle@@QAE_NHH@Z:PROC ; CBloodCastle::CheckUserWinnerParty
EXTRN	?CheckPartyExist@CBloodCastle@@QAE_NH@Z:PROC	; CBloodCastle::CheckPartyExist
EXTRN	?SetBridgeWinner@CBloodCastle@@QAE_NHH@Z:PROC	; CBloodCastle::SetBridgeWinner
EXTRN	?NpcTalk@CQuestInfo@@QAEHPAUOBJECTSTRUCT@@0@Z:PROC ; CQuestInfo::NpcTalk
EXTRN	?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z:PROC	; CCastleSiegeSync::GetTaxRateChaos
EXTRN	?GetTaxHuntZone@CCastleSiegeSync@@QAEHHH@Z:PROC	; CCastleSiegeSync::GetTaxHuntZone
EXTRN	?NotifyEntranceInfo@CKanturuEntranceNPC@@QAEXH@Z:PROC ; CKanturuEntranceNPC::NotifyEntranceInfo
EXTRN	?GetCastleState@CCastleSiege@@QAEHXZ:PROC	; CCastleSiege::GetCastleState
EXTRN	?CheckLeverAlive@CCastleSiege@@QAEHH@Z:PROC	; CCastleSiege::CheckLeverAlive
EXTRN	?CheckCsGateAlive@CCastleSiege@@QAEHH@Z:PROC	; CCastleSiege::CheckCsGateAlive
EXTRN	?GetRegCrownAvailable@CCastleSiege@@QAEHXZ:PROC	; CCastleSiege::GetRegCrownAvailable
EXTRN	?CheckGuildOwnCastle@CCastleSiege@@QAEHPAD@Z:PROC ; CCastleSiege::CheckGuildOwnCastle
EXTRN	?GetHuntZoneEnter@CCastleSiege@@QAEHXZ:PROC	; CCastleSiege::GetHuntZoneEnter
EXTRN	?CheckCastleOwnerMember@CCastleSiege@@QAEHH@Z:PROC ; CCastleSiege::CheckCastleOwnerMember
EXTRN	?CheckCastleOwnerUnionMember@CCastleSiege@@QAEHH@Z:PROC ; CCastleSiege::CheckCastleOwnerUnionMember
EXTRN	?CheckGuardianStatueExist@CCastleSiege@@QAEHXZ:PROC ; CCastleSiege::CheckGuardianStatueExist
EXTRN	?CheckUnionGuildMaster@CCastleSiege@@QAEHH@Z:PROC ; CCastleSiege::CheckUnionGuildMaster
EXTRN	?SetCrownUserIndex@CCastleSiege@@QAEXH@Z:PROC	; CCastleSiege::SetCrownUserIndex
EXTRN	?GetCrownUserIndex@CCastleSiege@@QAEHXZ:PROC	; CCastleSiege::GetCrownUserIndex
EXTRN	?SetCrownAccessUserX@CCastleSiege@@QAEXE@Z:PROC	; CCastleSiege::SetCrownAccessUserX
EXTRN	?SetCrownAccessUserY@CCastleSiege@@QAEXE@Z:PROC	; CCastleSiege::SetCrownAccessUserY
EXTRN	?SetCrownSwitchUserIndex@CCastleSiege@@QAEXHH@Z:PROC ; CCastleSiege::SetCrownSwitchUserIndex
EXTRN	?GetCrownSwitchUserIndex@CCastleSiege@@QAEHH@Z:PROC ; CCastleSiege::GetCrownSwitchUserIndex
EXTRN	?SetCrownAccessTickCount@CCastleSiege@@QAEXXZ:PROC ; CCastleSiege::SetCrownAccessTickCount
EXTRN	?NotifyAllUserCsProgState@CCastleSiege@@QAEXEPAD@Z:PROC ; CCastleSiege::NotifyAllUserCsProgState
EXTRN	?gObjAddBuffEffect@@YA_NPAUOBJECTSTRUCT@@HEHEHH@Z:PROC ; gObjAddBuffEffect
EXTRN	?CompensationBox@CDoubleGoerEvent@@QAEXPAUOBJECTSTRUCT@@0@Z:PROC ; CDoubleGoerEvent::CompensationBox
EXTRN	?GoldCompensationBox@CDoubleGoerEvent@@QAEXPAUOBJECTSTRUCT@@0@Z:PROC ; CDoubleGoerEvent::GoldCompensationBox
EXTRN	?GetOpenTime@CDoubleGoerEvent@@QAEEXZ:PROC	; CDoubleGoerEvent::GetOpenTime
EXTRN	?CGReqItemSearch@ShopBoard@@QAEXHPAUSHOPBOARD_CGREQ_ITEM@@@Z:PROC ; ShopBoard::CGReqItemSearch
EXTRN	?ProcDialog@ResetSystem@@QAE_NPAUOBJECTSTRUCT@@0@Z:PROC ; ResetSystem::ProcDialog
EXTRN	?SendChannelList@CNewPVP@@QAEHAAUOBJECTSTRUCT@@0@Z:PROC ; CNewPVP::SendChannelList
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?g_kJewelOfHarmonySystem@@3VCJewelOfHarmonySystem@@A:BYTE ; g_kJewelOfHarmonySystem
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?g_IllusionTemple@@3VCIllusionTempleEvent@@A:BYTE ; g_IllusionTemple
EXTRN	?gQeustNpcTeleport@@3VCQeustNpcTeleport@@A:BYTE	; gQeustNpcTeleport
EXTRN	?gEnableEventNPCTalk@@3HA:DWORD			; gEnableEventNPCTalk
EXTRN	?gEnableServerDivision@@3HA:DWORD		; gEnableServerDivision
EXTRN	?gPkLimitFree@@3HA:DWORD			; gPkLimitFree
EXTRN	?gDevilSquareEvent@@3HA:DWORD			; gDevilSquareEvent
EXTRN	?bCanChaosBox@@3HA:DWORD			; bCanChaosBox
EXTRN	?gGuildCreate@@3HA:DWORD			; gGuildCreate
EXTRN	?gDQChaosSuccessRateLevel1@@3HA:DWORD		; gDQChaosSuccessRateLevel1
EXTRN	?gDQChaosSuccessRateLevel2@@3HA:DWORD		; gDQChaosSuccessRateLevel2
EXTRN	?gDQChaosSuccessRateLevel3@@3HA:DWORD		; gDQChaosSuccessRateLevel3
EXTRN	?gDQChaosSuccessRateLevel4@@3HA:DWORD		; gDQChaosSuccessRateLevel4
EXTRN	?gDQChaosSuccessRateLevel5@@3HA:DWORD		; gDQChaosSuccessRateLevel5
EXTRN	?gDQChaosSuccessRateLevel6@@3HA:DWORD		; gDQChaosSuccessRateLevel6
EXTRN	?g_RenaCount@@3HA:DWORD				; g_RenaCount
EXTRN	?g_StoneCount@@3HA:DWORD			; g_StoneCount
EXTRN	?g_BloodCastle@@3VCBloodCastle@@A:BYTE		; g_BloodCastle
EXTRN	?g_DevilSquare@@3VCDevilSquare@@A:BYTE		; g_DevilSquare
EXTRN	?g_QuestInfo@@3VCQuestInfo@@A:BYTE		; g_QuestInfo
EXTRN	?g_CastleSiegeSync@@3VCCastleSiegeSync@@A:BYTE	; g_CastleSiegeSync
EXTRN	?g_KanturuEntranceNPC@@3VCKanturuEntranceNPC@@A:DWORD ; g_KanturuEntranceNPC
EXTRN	?g_CastleSiege@@3VCCastleSiege@@A:BYTE		; g_CastleSiege
EXTRN	?gDoubleGoer@@3VCDoubleGoerEvent@@A:BYTE	; gDoubleGoer
EXTRN	?g_ShopBoard@@3VShopBoard@@A:DWORD		; g_ShopBoard
EXTRN	?g_ResetSystem@@3VResetSystem@@A:BYTE		; g_ResetSystem
EXTRN	?g_NewPVP@@3VCNewPVP@@A:BYTE			; g_NewPVP
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0FD@GEIJDAJG@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@
CONST	SEGMENT
??_C@_0FD@GEIJDAJG@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@ DB '['
	DB	'CastleSiege] [%s][%s] Start to Push Castle Crown Switch (GUIL'
	DB	'D:%s) - CS X:%d/Y:%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@GAPHDLGF@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@
CONST	SEGMENT
??_C@_0EB@GAPHDLGF@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@ DB '['
	DB	'CastleSiege] [%s][%s] Start to Register Castle Crown (GUILD:%'
	DB	's)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@PCDLBKGJ@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@
CONST	SEGMENT
??_C@_0FH@PCDLBKGJ@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@ DB '['
	DB	'CastleSiege] [%s][%s] Failed to Register Castle Crown (GUILD:'
	DB	'%s) (S1:%s/%s)(S2:%s/%s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@IEDCECMD@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@
CONST	SEGMENT
??_C@_0EC@IEDCECMD@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@ DB '['
	DB	'CastleSiege] [%s][%s] Failed to Register Castle Crown (GUILD:'
	DB	'%s)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@
CONST	SEGMENT
??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@ DB '['
	DB	'%s][%s] Open Chaos Box', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@IJDIINJB@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@
CONST	SEGMENT
??_C@_0EC@IJDIINJB@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@ DB '['
	DB	'Blood Castle] (%d) (Account:%s, Name:%s) Winner Already Exist'
	DB	' !!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FO@BJDLMIAN@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@
CONST	SEGMENT
??_C@_0FO@BJDLMIAN@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@ DB '['
	DB	'Blood Castle] (%d) (Account:%s, Name:%s) Succeed Blood Castle'
	DB	' Quest - More Party to register', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JFCICCDP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@
CONST	SEGMENT
??_C@_0EF@JFCICCDP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@ DB '['
	DB	'Blood Castle] (%d) (Account:%s, Name:%s) Succeed Blood Castle'
	DB	' Quest', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@MPNDNNH@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@
CONST	SEGMENT
??_C@_0EM@MPNDNNH@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@ DB '['
	DB	'Blood Castle] (%d) Blood Castle Quest Succeed Result -> Win Q'
	DB	'uest [%s][%s]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@ONKNIFFP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@
CONST	SEGMENT
??_C@_0FH@ONKNIFFP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@ DB '['
	DB	'Blood Castle] (%d) Blood Castle Quest Succeed Result -> Destr'
	DB	'oy Saint Status [%s][%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@CNLFICGI@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@
CONST	SEGMENT
??_C@_0FG@CNLFICGI@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@ DB '['
	DB	'Blood Castle] (%d) Blood Castle Quest Succeed Result -> Destr'
	DB	'oy Castle Door [%s][%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BCJAGFAG@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Tal@
CONST	SEGMENT
??_C@_0DA@BCJAGFAG@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Tal@ DB '['
	DB	'Blood Castle] (%d) [%s][%s] Talk to Angel King', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@KMBDNKMH@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Jewel?5Mix?5De@
CONST	SEGMENT
??_C@_0CL@KMBDNKMH@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Jewel?5Mix?5De@ DB '['
	DB	'JewelMix] [%s][%s] Jewel Mix Dealer Start', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
CONST	SEGMENT
??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@ DB '['
	DB	'%s][%s] is Already Opening PShop, ChaosBox Failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GIIHNFEG@Guild?5creation?5is?5disabled?$CB?$AA@
CONST	SEGMENT
??_C@_0BM@GIIHNFEG@Guild?5creation?5is?5disabled?$CB?$AA@ DB 'Guild creat'
	DB	'ion is disabled!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BEEAJNGB@You?5are?5not?5a?5member?5of?5any?5gens@
CONST	SEGMENT
??_C@_0CH@BEEAJNGB@You?5are?5not?5a?5member?5of?5any?5gens@ DB 'You are n'
	DB	'ot a member of any gens clan!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@ DB 'QeustNpc'
	DB	' RefCount Inc = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\devilsquare.h
;	COMDAT ?GetState@CDevilSquare@@QAE?AW4eDevilSquareState@@XZ
_TEXT	SEGMENT
?GetState@CDevilSquare@@QAE?AW4eDevilSquareState@@XZ PROC ; CDevilSquare::GetState, COMDAT
; _this$ = ecx

; 46   : 	enum eDevilSquareState GetState(){return this->m_eState;};	// line : 93

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetState@CDevilSquare@@QAE?AW4eDevilSquareState@@XZ ENDP ; CDevilSquare::GetState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gobjmonster.h
;	COMDAT ?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ
_TEXT	SEGMENT
?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ PROC		; CQeustNpcTeleport::TalkRefAdd, COMDAT
; _this$ = ecx

; 65   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 66   : 		EnterCriticalSection(&this->CsRef);

  00004	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00007	57		 push	 edi
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 67   : 		this->RefCount++;

  0000e	ff 06		 inc	 DWORD PTR [esi]

; 68   : 		LogAdd("QeustNpc RefCount Inc = %d", this->RefCount);

  00010	ff 36		 push	 DWORD PTR [esi]
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0001d	83 c4 08	 add	 esp, 8

; 69   : 		LeaveCriticalSection(&this->CsRef);

  00020	57		 push	 edi
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi

; 70   : 		
; 71   : 	};	// line : 123

  00029	c3		 ret	 0
?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ ENDP		; CQeustNpcTeleport::TalkRefAdd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcPrivateStoreBoard@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpInfo$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcPrivateStoreBoard@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcPrivateStoreBoard, COMDAT

; 2228 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]

; 2229 : 	SHOPBOARD_CGREQ_ITEM lpInfo;
; 2230 : 	lpInfo.ItemID = (WORD)-1;

  00013	b9 ff ff 00 00	 mov	 ecx, 65535		; 0000ffffH
  00018	66 89 4d f8	 mov	 WORD PTR _lpInfo$[ebp+8], cx

; 2231 : 	g_ShopBoard.CGReqItemSearch(lpObj->m_Index, &lpInfo);

  0001c	8d 4d f0	 lea	 ecx, DWORD PTR _lpInfo$[ebp]
  0001f	51		 push	 ecx
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ShopBoard@@3VShopBoard@@A ; g_ShopBoard
  00025	ff 30		 push	 DWORD PTR [eax]
  00027	e8 00 00 00 00	 call	 ?CGReqItemSearch@ShopBoard@@QAEXHPAUSHOPBOARD_CGREQ_ITEM@@@Z ; ShopBoard::CGReqItemSearch

; 2232 : 	return true;
; 2233 : }

  0002c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0002f	b8 01 00 00 00	 mov	 eax, 1
  00034	33 cd		 xor	 ecx, ebp
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?NpcPrivateStoreBoard@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcPrivateStoreBoard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSirLesnar@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSirLesnar@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcSirLesnar, COMDAT

; 2188 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2189 : 	if ( bCanChaosBox == TRUE )

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	0f 85 b1 00 00
	00		 jne	 $LN2@NpcSirLesn

; 2190 : 	{
; 2191 : 		PMSG_TALKRESULT pMsg;
; 2192 : 
; 2193 : 		pMsg.h.c = 0xC3;
; 2194 : 		pMsg.h.headcode = 0x30;
; 2195 : 		pMsg.h.size = sizeof(pMsg);
; 2196 : 		
; 2197 : 		if ( lpObj->m_bPShopOpen == true )

  00021	80 be 5c 12 00
	00 01		 cmp	 BYTE PTR [esi+4700], 1
  00028	66 c7 45 f0 c3
	0b		 mov	 WORD PTR _pMsg$1[ebp], 3011 ; 00000bc3H
  0002e	c6 45 f2 30	 mov	 BYTE PTR _pMsg$1[ebp+2], 48 ; 00000030H
  00032	75 31		 jne	 SHORT $LN3@NpcSirLesn

; 2198 : 		{
; 2199 : 			LogAdd("[%s][%s] is Already Opening PShop, ChaosBox Failed",

  00034	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00037	50		 push	 eax
  00038	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2200 : 				lpObj->AccountID, lpObj->Name);
; 2201 : 			GCServerMsgStringSend(lMsg.Get(MSGGET(4, 194)), lpObj->m_Index, 1);

  0004a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004f	6a 01		 push	 1
  00051	ff 36		 push	 DWORD PTR [esi]
  00053	68 c2 04 00 00	 push	 1218			; 000004c2H
  00058	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 2202 : 			return TRUE;

  00063	eb 6a		 jmp	 SHORT $LN5@NpcSirLesn
$LN3@NpcSirLesn:

; 2203 : 		}
; 2204 : 
; 2205 : 		lpObj->m_IfState.type = 21;
; 2206 : 		lpObj->m_IfState.state = 0;
; 2207 : 		lpObj->m_IfState.use = 1;

  00065	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  0006b	25 41 05 ff ff	 and	 eax, -64191		; ffff0541H

; 2208 : 		
; 2209 : 		// 39 - entering acheron
; 2210 : 		// 40 - arca war npc
; 2211 : 		// 41 - mix npc
; 2212 : 
; 2213 : 		pMsg.result = 40;
; 2214 : 		lpObj->bIsChaosMixCompleted = false;

  00070	c6 86 09 16 00
	00 00		 mov	 BYTE PTR [esi+5641], 0
  00077	0d 41 05 00 00	 or	 eax, 1345		; 00000541H
  0007c	c6 45 f3 28	 mov	 BYTE PTR _pMsg$1[ebp+3], 40 ; 00000028H
  00080	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 2215 : 		pMsg.level1 = gDQChaosSuccessRateLevel1;

  00086	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel1@@3HA
  0008d	88 45 f4	 mov	 BYTE PTR _pMsg$1[ebp+4], al

; 2216 : 		pMsg.level2 = gDQChaosSuccessRateLevel2;

  00090	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel2@@3HA
  00097	88 45 f5	 mov	 BYTE PTR _pMsg$1[ebp+5], al

; 2217 : 		pMsg.level3 = gDQChaosSuccessRateLevel3;

  0009a	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel3@@3HA
  000a1	88 45 f6	 mov	 BYTE PTR _pMsg$1[ebp+6], al

; 2218 : 		pMsg.level4 = gDQChaosSuccessRateLevel4;

  000a4	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel4@@3HA
  000ab	88 45 f7	 mov	 BYTE PTR _pMsg$1[ebp+7], al

; 2219 : 		pMsg.level5 = gDQChaosSuccessRateLevel5;

  000ae	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel5@@3HA
  000b5	88 45 f8	 mov	 BYTE PTR _pMsg$1[ebp+8], al

; 2220 : 		pMsg.level6 = gDQChaosSuccessRateLevel6;

  000b8	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel6@@3HA
  000bf	88 45 f9	 mov	 BYTE PTR _pMsg$1[ebp+9], al

; 2221 : 
; 2222 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000c2	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  000c5	6a 0b		 push	 11			; 0000000bH
  000c7	50		 push	 eax
  000c8	ff 36		 push	 DWORD PTR [esi]
  000ca	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
$LN5@NpcSirLesn:
  000cf	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@NpcSirLesn:

; 2223 : 	}
; 2224 : 	return true;
; 2225 : }

  000d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d5	b8 01 00 00 00	 mov	 eax, 1
  000da	33 cd		 xor	 ecx, ebp
  000dc	5e		 pop	 esi
  000dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
?NpcSirLesnar@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcSirLesnar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcAdniel@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcAdniel@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcAdniel, COMDAT

; 2140 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2141 : 	if ( bCanChaosBox == TRUE )

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	0f 85 05 01 00
	00		 jne	 $LN2@NpcAdniel

; 2142 : 	{
; 2143 : 		PMSG_TALKRESULT pMsg;
; 2144 : 
; 2145 : 		pMsg.h.c = 0xC3;
; 2146 : 		pMsg.h.headcode = 0x30;
; 2147 : 		pMsg.h.size = sizeof(pMsg);
; 2148 : 		
; 2149 : 		if ( lpObj->m_bPShopOpen == true )

  00021	80 be 5c 12 00
	00 01		 cmp	 BYTE PTR [esi+4700], 1
  00028	66 c7 45 f0 c3
	0b		 mov	 WORD PTR _pMsg$1[ebp], 3011 ; 00000bc3H
  0002e	c6 45 f2 30	 mov	 BYTE PTR _pMsg$1[ebp+2], 48 ; 00000030H
  00032	75 46		 jne	 SHORT $LN3@NpcAdniel

; 2150 : 		{
; 2151 : 			LogAdd("[%s][%s] is Already Opening PShop, ChaosBox Failed",

  00034	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00037	50		 push	 eax
  00038	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2152 : 				lpObj->AccountID, lpObj->Name);
; 2153 : 			GCServerMsgStringSend(lMsg.Get(MSGGET(4, 194)), lpObj->m_Index, 1);

  0004a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004f	6a 01		 push	 1
  00051	ff 36		 push	 DWORD PTR [esi]
  00053	68 c2 04 00 00	 push	 1218			; 000004c2H
  00058	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2183 : 	}
; 2184 : 	return true;

  00066	b8 01 00 00 00	 mov	 eax, 1
  0006b	5e		 pop	 esi

; 2185 : }

  0006c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006f	33 cd		 xor	 ecx, ebp
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
$LN3@NpcAdniel:

; 2154 : 			return TRUE;
; 2155 : 		}
; 2156 : 
; 2157 : 		lpObj->m_IfState.type = 7;
; 2158 : 		lpObj->m_IfState.state = 0;
; 2159 : 		lpObj->m_IfState.use = 1;

  0007a	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00080	25 c1 01 ff ff	 and	 eax, -65087		; ffff01c1H

; 2160 : 		
; 2161 : 
; 2162 : 		// 39 - entering acheron
; 2163 : 		// 40 - arca war npc
; 2164 : 		// 41 - mix npc
; 2165 : 
; 2166 : 		pMsg.result = 41;
; 2167 : 		lpObj->bIsChaosMixCompleted = false;

  00085	c6 86 09 16 00
	00 00		 mov	 BYTE PTR [esi+5641], 0
  0008c	0d c1 01 00 00	 or	 eax, 449		; 000001c1H
  00091	c6 45 f3 29	 mov	 BYTE PTR _pMsg$1[ebp+3], 41 ; 00000029H
  00095	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 2168 : 		pMsg.level1 = gDQChaosSuccessRateLevel1;

  0009b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel1@@3HA
  000a2	88 45 f4	 mov	 BYTE PTR _pMsg$1[ebp+4], al

; 2169 : 		pMsg.level2 = gDQChaosSuccessRateLevel2;

  000a5	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel2@@3HA
  000ac	88 45 f5	 mov	 BYTE PTR _pMsg$1[ebp+5], al

; 2170 : 		pMsg.level3 = gDQChaosSuccessRateLevel3;

  000af	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel3@@3HA
  000b6	88 45 f6	 mov	 BYTE PTR _pMsg$1[ebp+6], al

; 2171 : 		pMsg.level4 = gDQChaosSuccessRateLevel4;

  000b9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel4@@3HA
  000c0	88 45 f7	 mov	 BYTE PTR _pMsg$1[ebp+7], al

; 2172 : 		pMsg.level5 = gDQChaosSuccessRateLevel5;

  000c3	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel5@@3HA
  000ca	88 45 f8	 mov	 BYTE PTR _pMsg$1[ebp+8], al

; 2173 : 		pMsg.level6 = gDQChaosSuccessRateLevel6;

  000cd	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel6@@3HA
  000d4	88 45 f9	 mov	 BYTE PTR _pMsg$1[ebp+9], al

; 2174 : 
; 2175 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000d7	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  000da	6a 0b		 push	 11			; 0000000bH
  000dc	50		 push	 eax
  000dd	ff 36		 push	 DWORD PTR [esi]
  000df	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2176 : 
; 2177 : 		GCAnsCsMapSvrTaxInfo(lpObj->m_Index, 1, g_CastleSiegeSync.GetTaxRateChaos(lpObj->m_Index));

  000e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  000ec	ff 36		 push	 DWORD PTR [esi]
  000ee	e8 00 00 00 00	 call	 ?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::GetTaxRateChaos
  000f3	50		 push	 eax
  000f4	6a 01		 push	 1
  000f6	ff 36		 push	 DWORD PTR [esi]
  000f8	e8 00 00 00 00	 call	 ?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z ; GCAnsCsMapSvrTaxInfo

; 2178 : 		gObjInventoryTrans(lpObj->m_Index);

  000fd	ff 36		 push	 DWORD PTR [esi]
  000ff	e8 00 00 00 00	 call	 ?gObjInventoryTrans@@YAHH@Z ; gObjInventoryTrans

; 2179 : 
; 2180 : 		LogAddTD("[%s][%s] Open Chaos Box", lpObj->AccountID, lpObj->Name);

  00104	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00107	50		 push	 eax
  00108	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0010b	50		 push	 eax
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2181 : 		gObjItemTextSave(lpObj);

  00117	56		 push	 esi
  00118	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 2182 : 		gObjWarehouseTextSave(lpObj);

  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  00123	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@NpcAdniel:

; 2185 : }

  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	b8 01 00 00 00	 mov	 eax, 1
  0012e	33 cd		 xor	 ecx, ebp
  00130	5e		 pop	 esi
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?NpcAdniel@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcAdniel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCaptainSlaugh@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCaptainSlaugh@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcCaptainSlaugh, COMDAT

; 2121 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 2122 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00014	ff 36		 push	 DWORD PTR [esi]
  00016	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001b	83 c4 04	 add	 esp, 4
  0001e	85 c0		 test	 eax, eax
  00020	74 2d		 je	 SHORT $LN4@NpcCaptain

; 2123 : 		return true;
; 2124 : 
; 2125 : 	PMSG_TALKRESULT pMsg;
; 2126 : 
; 2127 : 	pMsg.h.c = 0xC3;
; 2128 : 	pMsg.h.headcode = 0x30;
; 2129 : 	pMsg.h.size = sizeof(pMsg);
; 2130 : 	pMsg.result = 39;
; 2131 : 
; 2132 : 	lpObj->m_IfState.use = 1;
; 2133 : 	lpObj->m_IfState.type = 21;

  00022	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00028	25 7d 05 ff ff	 and	 eax, -64131		; ffff057dH
  0002d	c7 45 f0 c3 0b
	30 27		 mov	 DWORD PTR _pMsg$[ebp], 657460163 ; 27300bc3H
  00034	0d 41 05 00 00	 or	 eax, 1345		; 00000541H
  00039	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 2134 : 
; 2135 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  0003f	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00042	6a 0b		 push	 11			; 0000000bH
  00044	50		 push	 eax
  00045	ff 36		 push	 DWORD PTR [esi]
  00047	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@NpcCaptain:

; 2136 : 	return true;
; 2137 : }

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	33 cd		 xor	 ecx, ebp
  00059	5e		 pop	 esi
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?NpcCaptainSlaugh@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcCaptainSlaugh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDavid@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDavid@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcDavid, COMDAT

; 2077 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2078 : 	if ( bCanChaosBox == TRUE )

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	0f 85 05 01 00
	00		 jne	 $LN2@NpcDavid

; 2079 : 	{
; 2080 : 		PMSG_TALKRESULT pMsg;
; 2081 : 
; 2082 : 		pMsg.h.c = 0xC3;
; 2083 : 		pMsg.h.headcode = 0x30;
; 2084 : 		pMsg.h.size = sizeof(pMsg);
; 2085 : 		
; 2086 : 		if ( lpObj->m_bPShopOpen == true )

  00021	80 be 5c 12 00
	00 01		 cmp	 BYTE PTR [esi+4700], 1
  00028	66 c7 45 f0 c3
	0b		 mov	 WORD PTR _pMsg$1[ebp], 3011 ; 00000bc3H
  0002e	c6 45 f2 30	 mov	 BYTE PTR _pMsg$1[ebp+2], 48 ; 00000030H
  00032	75 46		 jne	 SHORT $LN3@NpcDavid

; 2087 : 		{
; 2088 : 			LogAdd("[%s][%s] is Already Opening PShop, ChaosBox Failed",

  00034	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00037	50		 push	 eax
  00038	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2089 : 				lpObj->AccountID, lpObj->Name);
; 2090 : 			GCServerMsgStringSend(lMsg.Get(MSGGET(4, 194)), lpObj->m_Index, 1);

  0004a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004f	6a 01		 push	 1
  00051	ff 36		 push	 DWORD PTR [esi]
  00053	68 c2 04 00 00	 push	 1218			; 000004c2H
  00058	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2115 : 	}
; 2116 : 
; 2117 : 	return TRUE;

  00066	b8 01 00 00 00	 mov	 eax, 1
  0006b	5e		 pop	 esi

; 2118 : }

  0006c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006f	33 cd		 xor	 ecx, ebp
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
$LN3@NpcDavid:

; 2091 : 			return TRUE;
; 2092 : 		}
; 2093 : 
; 2094 : 		lpObj->m_IfState.type = 7;
; 2095 : 		lpObj->m_IfState.state = 0;
; 2096 : 		lpObj->m_IfState.use = 1;

  0007a	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00080	25 c1 01 ff ff	 and	 eax, -65087		; ffff01c1H

; 2097 : 		
; 2098 : 		pMsg.result = 38;
; 2099 : 		lpObj->bIsChaosMixCompleted = false;

  00085	c6 86 09 16 00
	00 00		 mov	 BYTE PTR [esi+5641], 0
  0008c	0d c1 01 00 00	 or	 eax, 449		; 000001c1H
  00091	c6 45 f3 26	 mov	 BYTE PTR _pMsg$1[ebp+3], 38 ; 00000026H
  00095	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 2100 : 		pMsg.level1 = gDQChaosSuccessRateLevel1;

  0009b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel1@@3HA
  000a2	88 45 f4	 mov	 BYTE PTR _pMsg$1[ebp+4], al

; 2101 : 		pMsg.level2 = gDQChaosSuccessRateLevel2;

  000a5	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel2@@3HA
  000ac	88 45 f5	 mov	 BYTE PTR _pMsg$1[ebp+5], al

; 2102 : 		pMsg.level3 = gDQChaosSuccessRateLevel3;

  000af	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel3@@3HA
  000b6	88 45 f6	 mov	 BYTE PTR _pMsg$1[ebp+6], al

; 2103 : 		pMsg.level4 = gDQChaosSuccessRateLevel4;

  000b9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel4@@3HA
  000c0	88 45 f7	 mov	 BYTE PTR _pMsg$1[ebp+7], al

; 2104 : 		pMsg.level5 = gDQChaosSuccessRateLevel5;

  000c3	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel5@@3HA
  000ca	88 45 f8	 mov	 BYTE PTR _pMsg$1[ebp+8], al

; 2105 : 		pMsg.level6 = gDQChaosSuccessRateLevel6;

  000cd	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel6@@3HA
  000d4	88 45 f9	 mov	 BYTE PTR _pMsg$1[ebp+9], al

; 2106 : 
; 2107 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000d7	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  000da	6a 0b		 push	 11			; 0000000bH
  000dc	50		 push	 eax
  000dd	ff 36		 push	 DWORD PTR [esi]
  000df	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2108 : 
; 2109 : 		GCAnsCsMapSvrTaxInfo(lpObj->m_Index, 1, g_CastleSiegeSync.GetTaxRateChaos(lpObj->m_Index));

  000e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  000ec	ff 36		 push	 DWORD PTR [esi]
  000ee	e8 00 00 00 00	 call	 ?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::GetTaxRateChaos
  000f3	50		 push	 eax
  000f4	6a 01		 push	 1
  000f6	ff 36		 push	 DWORD PTR [esi]
  000f8	e8 00 00 00 00	 call	 ?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z ; GCAnsCsMapSvrTaxInfo

; 2110 : 		gObjInventoryTrans(lpObj->m_Index);

  000fd	ff 36		 push	 DWORD PTR [esi]
  000ff	e8 00 00 00 00	 call	 ?gObjInventoryTrans@@YAHH@Z ; gObjInventoryTrans

; 2111 : 
; 2112 : 		LogAddTD("[%s][%s] Open Chaos Box", lpObj->AccountID, lpObj->Name);

  00104	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00107	50		 push	 eax
  00108	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0010b	50		 push	 eax
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 2113 : 		gObjItemTextSave(lpObj);

  00117	56		 push	 esi
  00118	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 2114 : 		gObjWarehouseTextSave(lpObj);

  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  00123	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@NpcDavid:

; 2118 : }

  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	b8 01 00 00 00	 mov	 eax, 1
  0012e	33 cd		 xor	 ecx, ebp
  00130	5e		 pop	 esi
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?NpcDavid@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcDavid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcJulia@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcJulia@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcJulia, COMDAT

; 2058 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 2059 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00014	ff 36		 push	 DWORD PTR [esi]
  00016	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001b	83 c4 04	 add	 esp, 4
  0001e	85 c0		 test	 eax, eax
  00020	74 2d		 je	 SHORT $LN4@NpcJulia

; 2060 : 		return true;
; 2061 : 
; 2062 : 	PMSG_TALKRESULT pMsg;
; 2063 : 
; 2064 : 	pMsg.h.c = 0xC3;
; 2065 : 	pMsg.h.headcode = 0x30;
; 2066 : 	pMsg.h.size = sizeof(pMsg);
; 2067 : 	pMsg.result = 37;
; 2068 : 
; 2069 : 	lpObj->m_IfState.use = 1;
; 2070 : 	lpObj->m_IfState.type = 21;

  00022	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00028	25 7d 05 ff ff	 and	 eax, -64131		; ffff057dH
  0002d	c7 45 f0 c3 0b
	30 25		 mov	 DWORD PTR _pMsg$[ebp], 623905731 ; 25300bc3H
  00034	0d 41 05 00 00	 or	 eax, 1345		; 00000541H
  00039	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 2071 : 
; 2072 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  0003f	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00042	6a 0b		 push	 11			; 0000000bH
  00044	50		 push	 eax
  00045	ff 36		 push	 DWORD PTR [esi]
  00047	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@NpcJulia:

; 2073 : 	return true;
; 2074 : }

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	33 cd		 xor	 ecx, ebp
  00059	5e		 pop	 esi
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?NpcJulia@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcJulia
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcVanertSteward@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcVanertSteward@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcVanertSteward, COMDAT

; 2032 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]

; 2033 : #if (__GENS_SYSTEM__ == 1)
; 2034 : 	if ( gObjIsConnected(lpObj->m_Index) == FALSE )

  00018	ff 36		 push	 DWORD PTR [esi]
  0001a	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001f	83 c4 04	 add	 esp, 4
  00022	85 c0		 test	 eax, eax
  00024	74 49		 je	 SHORT $LN4@NpcVanertS

; 2035 : 	{
; 2036 : 		return TRUE;
; 2037 : 	}
; 2038 : 
; 2039 : 	PMSG_TALKRESULT_EX pMsg = {0};
; 2040 : 	pMsg.h.c = 0xC3;
; 2041 : 	pMsg.h.headcode = 0xF9;
; 2042 : 	pMsg.h.size = sizeof(pMsg);
; 2043 : 
; 2044 : 	pMsg.btResult = TRUE;
; 2045 : 	pMsg.wNpcId = lpNpc->Class;

  00026	66 8b 87 90 00
	00 00		 mov	 ax, WORD PTR [edi+144]
  0002d	0f 57 c0	 xorps	 xmm0, xmm0
  00030	66 0f d6 45 f1	 movq	 QWORD PTR _pMsg$[ebp+1], xmm0
  00035	66 89 45 f4	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 2046 : 
; 2047 : 	pMsg.Info = lpObj->m_GensInfo.iContribution;

  00039	8b 86 b4 26 00
	00		 mov	 eax, DWORD PTR [esi+9908]
  0003f	66 c7 45 f9 00
	00		 mov	 WORD PTR _pMsg$[ebp+9], 0
  00045	c6 45 fb 00	 mov	 BYTE PTR _pMsg$[ebp+11], 0
  00049	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+8], eax

; 2048 : 
; 2049 : 
; 2050 : 	lpObj->TargetShopNumber = 544;

  0004c	b8 20 02 00 00	 mov	 eax, 544		; 00000220H
  00051	66 89 86 3a 06
	00 00		 mov	 WORD PTR [esi+1594], ax

; 2051 : 
; 2052 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  00058	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0005b	6a 0c		 push	 12			; 0000000cH
  0005d	50		 push	 eax
  0005e	ff 36		 push	 DWORD PTR [esi]
  00060	c7 45 f0 c3 0c
	f9 01		 mov	 DWORD PTR _pMsg$[ebp], 33098947 ; 01f90cc3H
  00067	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@NpcVanertS:

; 2053 : #endif
; 2054 : 	return TRUE;
; 2055 : }

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00072	b8 01 00 00 00	 mov	 eax, 1
  00077	5f		 pop	 edi
  00078	33 cd		 xor	 ecx, ebp
  0007a	5e		 pop	 esi
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?NpcVanertSteward@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcVanertSteward
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDuprianSteward@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDuprianSteward@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcDuprianSteward, COMDAT

; 2008 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]

; 2009 : #if (__GENS_SYSTEM__ == 1)
; 2010 : 	if ( gObjIsConnected(lpObj->m_Index) == FALSE )

  00018	ff 36		 push	 DWORD PTR [esi]
  0001a	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001f	83 c4 04	 add	 esp, 4
  00022	85 c0		 test	 eax, eax
  00024	74 49		 je	 SHORT $LN4@NpcDuprian

; 2011 : 	{
; 2012 : 		return TRUE;
; 2013 : 	}
; 2014 : 
; 2015 : 	PMSG_TALKRESULT_EX pMsg = {0};
; 2016 : 	pMsg.h.c = 0xC3;
; 2017 : 	pMsg.h.headcode = 0xF9;
; 2018 : 	pMsg.h.size = sizeof(pMsg);
; 2019 : 
; 2020 : 	pMsg.btResult = TRUE;
; 2021 : 	pMsg.wNpcId = lpNpc->Class;

  00026	66 8b 87 90 00
	00 00		 mov	 ax, WORD PTR [edi+144]
  0002d	0f 57 c0	 xorps	 xmm0, xmm0
  00030	66 0f d6 45 f1	 movq	 QWORD PTR _pMsg$[ebp+1], xmm0
  00035	66 89 45 f4	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 2022 : 
; 2023 : 	pMsg.Info = lpObj->m_GensInfo.iContribution;

  00039	8b 86 b4 26 00
	00		 mov	 eax, DWORD PTR [esi+9908]
  0003f	66 c7 45 f9 00
	00		 mov	 WORD PTR _pMsg$[ebp+9], 0
  00045	c6 45 fb 00	 mov	 BYTE PTR _pMsg$[ebp+11], 0
  00049	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+8], eax

; 2024 : 
; 2025 : 	lpObj->TargetShopNumber = 543;

  0004c	b8 1f 02 00 00	 mov	 eax, 543		; 0000021fH
  00051	66 89 86 3a 06
	00 00		 mov	 WORD PTR [esi+1594], ax

; 2026 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  00058	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0005b	6a 0c		 push	 12			; 0000000cH
  0005d	50		 push	 eax
  0005e	ff 36		 push	 DWORD PTR [esi]
  00060	c7 45 f0 c3 0c
	f9 01		 mov	 DWORD PTR _pMsg$[ebp], 33098947 ; 01f90cc3H
  00067	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@NpcDuprian:

; 2027 : #endif
; 2028 : 	return TRUE;
; 2029 : }

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00072	b8 01 00 00 00	 mov	 eax, 1
  00077	5f		 pop	 edi
  00078	33 cd		 xor	 ecx, ebp
  0007a	5e		 pop	 esi
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?NpcDuprianSteward@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcDuprianSteward
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcGoldCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcGoldCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcGoldCompensationBox, COMDAT

; 1998 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1999 : 
; 2000 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	74 0e		 je	 SHORT $LN4@NpcGoldCom

; 2001 : 		return true;
; 2002 : 
; 2003 : 	gDoubleGoer.GoldCompensationBox(lpNpc,lpObj);

  00015	56		 push	 esi
  00016	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDoubleGoer@@3VCDoubleGoerEvent@@A ; gDoubleGoer
  0001e	e8 00 00 00 00	 call	 ?GoldCompensationBox@CDoubleGoerEvent@@QAEXPAUOBJECTSTRUCT@@0@Z ; CDoubleGoerEvent::GoldCompensationBox
$LN4@NpcGoldCom:

; 2004 : return true;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	5e		 pop	 esi

; 2005 : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?NpcGoldCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcGoldCompensationBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcCompensationBox, COMDAT

; 1988 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1989 : 
; 1990 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	74 0e		 je	 SHORT $LN4@NpcCompens

; 1991 : 		return true;
; 1992 : 
; 1993 : 	gDoubleGoer.CompensationBox(lpNpc,lpObj);

  00015	56		 push	 esi
  00016	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDoubleGoer@@3VCDoubleGoerEvent@@A ; gDoubleGoer
  0001e	e8 00 00 00 00	 call	 ?CompensationBox@CDoubleGoerEvent@@QAEXPAUOBJECTSTRUCT@@0@Z ; CDoubleGoerEvent::CompensationBox
$LN4@NpcCompens:

; 1994 : return true;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	5e		 pop	 esi

; 1995 : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?NpcCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcCompensationBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcLugard@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcLugard@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcLugard, COMDAT

; 1967 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR _lpObj$[ebp]

; 1968 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00014	ff 37		 push	 DWORD PTR [edi]
  00016	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001b	83 c4 04	 add	 esp, 4
  0001e	85 c0		 test	 eax, eax
  00020	74 6d		 je	 SHORT $LN4@NpcLugard

; 1969 : 		return true;
; 1970 : 
; 1971 : 	PMSG_TALKRESULT pMsg;
; 1972 : 
; 1973 : 	pMsg.h.c = 0xC3;
; 1974 : 	pMsg.h.headcode = 0x30;
; 1975 : 	pMsg.h.size = sizeof(pMsg);
; 1976 : 	pMsg.result = 35;
; 1977 : 	pMsg.level1 = gDoubleGoer.GetOpenTime()/60;

  00022	56		 push	 esi
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDoubleGoer@@3VCDoubleGoerEvent@@A ; gDoubleGoer
  00028	c7 45 f0 c3 0b
	30 23		 mov	 DWORD PTR _pMsg$[ebp], 590351299 ; 23300bc3H
  0002f	e8 00 00 00 00	 call	 ?GetOpenTime@CDoubleGoerEvent@@QAEEXZ ; CDoubleGoerEvent::GetOpenTime
  00034	0f b6 f0	 movzx	 esi, al

; 1978 : 	pMsg.level2 = gDoubleGoer.GetOpenTime()%60;

  00037	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDoubleGoer@@3VCDoubleGoerEvent@@A ; gDoubleGoer
  0003c	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00041	f7 ee		 imul	 esi
  00043	03 d6		 add	 edx, esi
  00045	c1 fa 05	 sar	 edx, 5
  00048	8b c2		 mov	 eax, edx
  0004a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004d	03 c2		 add	 eax, edx
  0004f	88 45 f4	 mov	 BYTE PTR _pMsg$[ebp+4], al
  00052	e8 00 00 00 00	 call	 ?GetOpenTime@CDoubleGoerEvent@@QAEEXZ ; CDoubleGoerEvent::GetOpenTime
  00057	0f b6 c0	 movzx	 eax, al
  0005a	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0005f	99		 cdq
  00060	f7 f9		 idiv	 ecx

; 1979 : 
; 1980 : 	lpObj->m_IfState.use = 1;
; 1981 : 	lpObj->m_IfState.type = 21;

  00062	8b 87 b8 11 00
	00		 mov	 eax, DWORD PTR [edi+4536]
  00068	25 7d 05 ff ff	 and	 eax, -64131		; ffff057dH
  0006d	88 55 f5	 mov	 BYTE PTR _pMsg$[ebp+5], dl
  00070	0d 41 05 00 00	 or	 eax, 1345		; 00000541H
  00075	89 87 b8 11 00
	00		 mov	 DWORD PTR [edi+4536], eax

; 1982 : 
; 1983 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  0007b	0f b6 45 f1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0007f	50		 push	 eax
  00080	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00083	50		 push	 eax
  00084	ff 37		 push	 DWORD PTR [edi]
  00086	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008e	5e		 pop	 esi
$LN4@NpcLugard:

; 1984 : 	return true;
; 1985 : }

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	b8 01 00 00 00	 mov	 eax, 1
  00097	33 cd		 xor	 ecx, ebp
  00099	5f		 pop	 edi
  0009a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
?NpcLugard@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcLugard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcImperialFort@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcImperialFort@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcImperialFort, COMDAT

; 1951 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1952 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00014	ff 36		 push	 DWORD PTR [esi]
  00016	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001b	83 c4 04	 add	 esp, 4
  0001e	85 c0		 test	 eax, eax
  00020	74 17		 je	 SHORT $LN4@NpcImperia

; 1953 : 		return true;
; 1954 : 
; 1955 : 	PMSG_TALKRESULT pMsg;
; 1956 : 
; 1957 : 	pMsg.h.c = 0xC3;
; 1958 : 	pMsg.h.headcode = 0x30;
; 1959 : 	pMsg.h.size = sizeof(pMsg);
; 1960 : 	pMsg.result = 36;
; 1961 : 
; 1962 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  00022	6a 0b		 push	 11			; 0000000bH
  00024	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00027	c7 45 f0 c3 0b
	30 24		 mov	 DWORD PTR _pMsg$[ebp], 607128515 ; 24300bc3H
  0002e	50		 push	 eax
  0002f	ff 36		 push	 DWORD PTR [esi]
  00031	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@NpcImperia:

; 1963 : 	return true;
; 1964 : }

  00039	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	33 cd		 xor	 ecx, ebp
  00043	5e		 pop	 esi
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?NpcImperialFort@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcImperialFort
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcTitus@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pResult$1 = -16					; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcTitus@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcTitus, COMDAT

; 1924 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00013	56		 push	 esi
  00014	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1925 : #if (ENABLETEST_NEWPVP == 1)
; 1926 : 	if (lpObj->m_IfState.use > 0) {

  00017	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  0001e	77 39		 ja	 SHORT $LN5@NpcTitus

; 1927 : 		// ... wait return
; 1928 : 	} else {
; 1929 : 		g_NewPVP.SendChannelList(*lpNpc, *lpObj);

  00020	56		 push	 esi
  00021	50		 push	 eax
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_NewPVP@@3VCNewPVP@@A ; g_NewPVP
  00027	e8 00 00 00 00	 call	 ?SendChannelList@CNewPVP@@QAEHAAUOBJECTSTRUCT@@0@Z ; CNewPVP::SendChannelList

; 1930 : 		PMSG_TALKRESULT pResult;
; 1931 : 		pResult.h.c = 0xC3;
; 1932 : 		pResult.h.headcode = 0x30;
; 1933 : 		pResult.h.size = sizeof(pResult);
; 1934 : 		pResult.result = 33;
; 1935 : 		DataSend(lpObj->m_Index, (LPBYTE)&pResult, pResult.h.size);

  0002c	6a 0b		 push	 11			; 0000000bH
  0002e	8d 45 f0	 lea	 eax, DWORD PTR _pResult$1[ebp]
  00031	c7 45 f0 c3 0b
	30 21		 mov	 DWORD PTR _pResult$1[ebp], 556796867 ; 21300bc3H
  00038	50		 push	 eax
  00039	ff 36		 push	 DWORD PTR [esi]
  0003b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1936 : 		lpObj->m_IfState.type	= 20;
; 1937 : 		lpObj->m_IfState.use	= 1;

  00040	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH
  00049	25 3d 05 ff ff	 and	 eax, -64195		; ffff053dH
  0004e	0d 01 05 00 00	 or	 eax, 1281		; 00000501H
  00053	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax
$LN5@NpcTitus:

; 1938 : 	}
; 1939 : 	return TRUE;
; 1940 : #else
; 1941 : 	if( //g_DuelManager.SendDuelStatus(lpObj) == TRUE)
; 1942 : 	{
; 1943 : 		return TRUE;
; 1944 : 	}
; 1945 : 	return FALSE;
; 1946 : #endif
; 1947 : }

  00059	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005c	b8 01 00 00 00	 mov	 eax, 1
  00061	33 cd		 xor	 ecx, ebp
  00063	5e		 pop	 esi
  00064	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?NpcTitus@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcTitus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDelgado@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDelgado@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcDelgado, COMDAT

; 1908 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1909 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00014	ff 36		 push	 DWORD PTR [esi]
  00016	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001b	83 c4 04	 add	 esp, 4
  0001e	85 c0		 test	 eax, eax
  00020	74 17		 je	 SHORT $LN4@NpcDelgado

; 1910 : 		return true;
; 1911 : 
; 1912 : 	PMSG_TALKRESULT pMsg;
; 1913 : 
; 1914 : 	pMsg.h.c = 0xC3;
; 1915 : 	pMsg.h.headcode = 0x30;
; 1916 : 	pMsg.h.size = sizeof(pMsg);
; 1917 : 	pMsg.result = 32;
; 1918 : 
; 1919 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  00022	6a 0b		 push	 11			; 0000000bH
  00024	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00027	c7 45 f0 c3 0b
	30 20		 mov	 DWORD PTR _pMsg$[ebp], 540019651 ; 20300bc3H
  0002e	50		 push	 eax
  0002f	ff 36		 push	 DWORD PTR [esi]
  00031	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@NpcDelgado:

; 1920 : 	return true;
; 1921 : }

  00039	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	33 cd		 xor	 ecx, ebp
  00043	5e		 pop	 esi
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?NpcDelgado@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcDelgado
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
_Buff$ = 16						; size = 4
?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z PROC		; NpcLitleSanta, COMDAT

; 1868 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1869 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	0f 84 59 01 00
	00		 je	 $LN2@NpcLitleSa

; 1870 : 	{
; 1871 : 		return true;
; 1872 : 	}
; 1873 : 
; 1874 : 	switch( Buff )

  00019	8b 45 10	 mov	 eax, DWORD PTR _Buff$[ebp]
  0001c	83 f8 61	 cmp	 eax, 97			; 00000061H
  0001f	0f 87 4d 01 00
	00		 ja	 $LN2@NpcLitleSa
  00025	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN14@NpcLitleSa[eax]
  0002c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@NpcLitleSa[eax*4]
$LN5@NpcLitleSa:
  00033	66 0f 6e 86 24
	01 00 00	 movd	 xmm0, DWORD PTR [esi+292]

; 1875 : 	{
; 1876 : 	case 0:
; 1877 : 		lpObj->Life = lpObj->MaxLife + lpObj->AddLife;
; 1878 : 		GCReFillSend(lpObj->m_Index,(WORD)lpObj->Life,0xFF,0,lpObj->iShield);

  0003b	0f b7 86 2c 01
	00 00		 movzx	 eax, WORD PTR [esi+300]
  00042	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00045	50		 push	 eax
  00046	6a 00		 push	 0
  00048	68 ff 00 00 00	 push	 255			; 000000ffH
  0004d	f3 0f 58 86 dc
	00 00 00	 addss	 xmm0, DWORD PTR [esi+220]
  00055	f3 0f 2c c0	 cvttss2si eax, xmm0
  00059	f3 0f 11 86 d8
	00 00 00	 movss	 DWORD PTR [esi+216], xmm0
  00061	0f b7 c0	 movzx	 eax, ax
  00064	50		 push	 eax
  00065	ff 36		 push	 DWORD PTR [esi]
  00067	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend
  0006c	83 c4 14	 add	 esp, 20			; 00000014H

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  0006f	b8 01 00 00 00	 mov	 eax, 1
  00074	5e		 pop	 esi

; 1905 : }

  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
$LN6@NpcLitleSa:

; 1879 : 		break;
; 1880 : 	case 1:
; 1881 : 		lpObj->Mana = lpObj->MaxMana + lpObj->MaxMana;

  00077	f3 0f 10 86 f0
	00 00 00	 movss	 xmm0, DWORD PTR [esi+240]

; 1882 : 		GCManaSend(lpObj->m_Index,(WORD)lpObj->Mana,0xFF,0,lpObj->BP);

  0007f	0f b7 86 04 01
	00 00		 movzx	 eax, WORD PTR [esi+260]
  00086	f3 0f 58 c0	 addss	 xmm0, xmm0
  0008a	50		 push	 eax
  0008b	6a 00		 push	 0
  0008d	68 ff 00 00 00	 push	 255			; 000000ffH
  00092	f3 0f 2c c0	 cvttss2si eax, xmm0
  00096	f3 0f 11 86 ec
	00 00 00	 movss	 DWORD PTR [esi+236], xmm0
  0009e	0f b7 c0	 movzx	 eax, ax
  000a1	50		 push	 eax
  000a2	ff 36		 push	 DWORD PTR [esi]
  000a4	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHFEEG@Z	; GCManaSend
  000a9	83 c4 14	 add	 esp, 20			; 00000014H

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  000ac	b8 01 00 00 00	 mov	 eax, 1
  000b1	5e		 pop	 esi

; 1905 : }

  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
$LN7@NpcLitleSa:

; 1883 : 		break;
; 1884 : 	case 0x5E:
; 1885 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_STRENGHTHENER,ADD_OPTION_SANTABUFF,30,0,0,1800);

  000b4	68 08 07 00 00	 push	 1800			; 00000708H
  000b9	6a 00		 push	 0
  000bb	6a 00		 push	 0
  000bd	6a 1e		 push	 30			; 0000001eH
  000bf	6a 39		 push	 57			; 00000039H
  000c1	6a 5e		 push	 94			; 0000005eH

; 1898 : 		break;
; 1899 : 	case 0x61:
; 1900 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_FORTUNE,ADD_OPTION_SANTABPRECOVERY,10,0,0,1800);

  000c3	56		 push	 esi
  000c4	e8 00 00 00 00	 call	 ?gObjAddBuffEffect@@YA_NPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjAddBuffEffect
  000c9	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  000cc	b8 01 00 00 00	 mov	 eax, 1
  000d1	5e		 pop	 esi

; 1905 : }

  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
$LN8@NpcLitleSa:

; 1886 : 		break;
; 1887 : 	case 0x5F:
; 1888 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_DEFENSE,ADD_OPTION_SANTADEFENSE,100,0,0,1800);

  000d4	68 08 07 00 00	 push	 1800			; 00000708H
  000d9	6a 00		 push	 0
  000db	6a 00		 push	 0
  000dd	6a 64		 push	 100			; 00000064H
  000df	6a 3a		 push	 58			; 0000003aH
  000e1	6a 5f		 push	 95			; 0000005fH

; 1898 : 		break;
; 1899 : 	case 0x61:
; 1900 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_FORTUNE,ADD_OPTION_SANTABPRECOVERY,10,0,0,1800);

  000e3	56		 push	 esi
  000e4	e8 00 00 00 00	 call	 ?gObjAddBuffEffect@@YA_NPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjAddBuffEffect
  000e9	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  000ec	b8 01 00 00 00	 mov	 eax, 1
  000f1	5e		 pop	 esi

; 1905 : }

  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
$LN9@NpcLitleSa:

; 1889 : 		break;
; 1890 : 	case 0x5C:
; 1891 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_HEALING,ADD_OPTION_LIFE,500,0,0,1800);

  000f4	68 08 07 00 00	 push	 1800			; 00000708H
  000f9	6a 00		 push	 0
  000fb	6a 00		 push	 0
  000fd	68 f4 01 00 00	 push	 500			; 000001f4H
  00102	6a 04		 push	 4
  00104	6a 5c		 push	 92			; 0000005cH

; 1898 : 		break;
; 1899 : 	case 0x61:
; 1900 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_FORTUNE,ADD_OPTION_SANTABPRECOVERY,10,0,0,1800);

  00106	56		 push	 esi
  00107	e8 00 00 00 00	 call	 ?gObjAddBuffEffect@@YA_NPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjAddBuffEffect
  0010c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  0010f	b8 01 00 00 00	 mov	 eax, 1
  00114	5e		 pop	 esi

; 1905 : }

  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
$LN10@NpcLitleSa:

; 1892 : 		break;
; 1893 : 	case 0x5D:
; 1894 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_PROTECTION,ADD_OPTION_MANA,500,0,0,1800);

  00117	68 08 07 00 00	 push	 1800			; 00000708H
  0011c	6a 00		 push	 0
  0011e	6a 00		 push	 0
  00120	68 f4 01 00 00	 push	 500			; 000001f4H
  00125	6a 05		 push	 5
  00127	6a 5d		 push	 93			; 0000005dH

; 1898 : 		break;
; 1899 : 	case 0x61:
; 1900 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_FORTUNE,ADD_OPTION_SANTABPRECOVERY,10,0,0,1800);

  00129	56		 push	 esi
  0012a	e8 00 00 00 00	 call	 ?gObjAddBuffEffect@@YA_NPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjAddBuffEffect
  0012f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  00132	b8 01 00 00 00	 mov	 eax, 1
  00137	5e		 pop	 esi

; 1905 : }

  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
$LN11@NpcLitleSa:

; 1895 : 		break;
; 1896 : 	case 0x60:
; 1897 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_QUICKNESS,ADD_OPTION_ATTACK_SPEED,15,0,0,1800);

  0013a	68 08 07 00 00	 push	 1800			; 00000708H
  0013f	6a 00		 push	 0
  00141	6a 00		 push	 0
  00143	6a 0f		 push	 15			; 0000000fH
  00145	6a 01		 push	 1
  00147	6a 60		 push	 96			; 00000060H

; 1898 : 		break;
; 1899 : 	case 0x61:
; 1900 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_FORTUNE,ADD_OPTION_SANTABPRECOVERY,10,0,0,1800);

  00149	56		 push	 esi
  0014a	e8 00 00 00 00	 call	 ?gObjAddBuffEffect@@YA_NPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjAddBuffEffect
  0014f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  00152	b8 01 00 00 00	 mov	 eax, 1
  00157	5e		 pop	 esi

; 1905 : }

  00158	5d		 pop	 ebp
  00159	c3		 ret	 0
$LN12@NpcLitleSa:

; 1898 : 		break;
; 1899 : 	case 0x61:
; 1900 : 		gObjAddBuffEffect(lpObj,BUFF_SANTA_FORTUNE,ADD_OPTION_SANTABPRECOVERY,10,0,0,1800);

  0015a	68 08 07 00 00	 push	 1800			; 00000708H
  0015f	6a 00		 push	 0
  00161	6a 00		 push	 0
  00163	6a 0a		 push	 10			; 0000000aH
  00165	6a 3b		 push	 59			; 0000003bH
  00167	6a 61		 push	 97			; 00000061H
  00169	56		 push	 esi
  0016a	e8 00 00 00 00	 call	 ?gObjAddBuffEffect@@YA_NPAUOBJECTSTRUCT@@HEHEHH@Z ; gObjAddBuffEffect
  0016f	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN2@NpcLitleSa:

; 1901 : 		break;
; 1902 : 	}
; 1903 : 
; 1904 : return true;

  00172	b8 01 00 00 00	 mov	 eax, 1
  00177	5e		 pop	 esi

; 1905 : }

  00178	5d		 pop	 ebp
  00179	c3		 ret	 0
  0017a	66 90		 npad	 2
$LN17@NpcLitleSa:
  0017c	00 00 00 00	 DD	 $LN5@NpcLitleSa
  00180	00 00 00 00	 DD	 $LN6@NpcLitleSa
  00184	00 00 00 00	 DD	 $LN9@NpcLitleSa
  00188	00 00 00 00	 DD	 $LN10@NpcLitleSa
  0018c	00 00 00 00	 DD	 $LN7@NpcLitleSa
  00190	00 00 00 00	 DD	 $LN8@NpcLitleSa
  00194	00 00 00 00	 DD	 $LN11@NpcLitleSa
  00198	00 00 00 00	 DD	 $LN12@NpcLitleSa
  0019c	00 00 00 00	 DD	 $LN2@NpcLitleSa
$LN14@NpcLitleSa:
  001a0	00		 DB	 0
  001a1	01		 DB	 1
  001a2	08		 DB	 8
  001a3	08		 DB	 8
  001a4	08		 DB	 8
  001a5	08		 DB	 8
  001a6	08		 DB	 8
  001a7	08		 DB	 8
  001a8	08		 DB	 8
  001a9	08		 DB	 8
  001aa	08		 DB	 8
  001ab	08		 DB	 8
  001ac	08		 DB	 8
  001ad	08		 DB	 8
  001ae	08		 DB	 8
  001af	08		 DB	 8
  001b0	08		 DB	 8
  001b1	08		 DB	 8
  001b2	08		 DB	 8
  001b3	08		 DB	 8
  001b4	08		 DB	 8
  001b5	08		 DB	 8
  001b6	08		 DB	 8
  001b7	08		 DB	 8
  001b8	08		 DB	 8
  001b9	08		 DB	 8
  001ba	08		 DB	 8
  001bb	08		 DB	 8
  001bc	08		 DB	 8
  001bd	08		 DB	 8
  001be	08		 DB	 8
  001bf	08		 DB	 8
  001c0	08		 DB	 8
  001c1	08		 DB	 8
  001c2	08		 DB	 8
  001c3	08		 DB	 8
  001c4	08		 DB	 8
  001c5	08		 DB	 8
  001c6	08		 DB	 8
  001c7	08		 DB	 8
  001c8	08		 DB	 8
  001c9	08		 DB	 8
  001ca	08		 DB	 8
  001cb	08		 DB	 8
  001cc	08		 DB	 8
  001cd	08		 DB	 8
  001ce	08		 DB	 8
  001cf	08		 DB	 8
  001d0	08		 DB	 8
  001d1	08		 DB	 8
  001d2	08		 DB	 8
  001d3	08		 DB	 8
  001d4	08		 DB	 8
  001d5	08		 DB	 8
  001d6	08		 DB	 8
  001d7	08		 DB	 8
  001d8	08		 DB	 8
  001d9	08		 DB	 8
  001da	08		 DB	 8
  001db	08		 DB	 8
  001dc	08		 DB	 8
  001dd	08		 DB	 8
  001de	08		 DB	 8
  001df	08		 DB	 8
  001e0	08		 DB	 8
  001e1	08		 DB	 8
  001e2	08		 DB	 8
  001e3	08		 DB	 8
  001e4	08		 DB	 8
  001e5	08		 DB	 8
  001e6	08		 DB	 8
  001e7	08		 DB	 8
  001e8	08		 DB	 8
  001e9	08		 DB	 8
  001ea	08		 DB	 8
  001eb	08		 DB	 8
  001ec	08		 DB	 8
  001ed	08		 DB	 8
  001ee	08		 DB	 8
  001ef	08		 DB	 8
  001f0	08		 DB	 8
  001f1	08		 DB	 8
  001f2	08		 DB	 8
  001f3	08		 DB	 8
  001f4	08		 DB	 8
  001f5	08		 DB	 8
  001f6	08		 DB	 8
  001f7	08		 DB	 8
  001f8	08		 DB	 8
  001f9	08		 DB	 8
  001fa	08		 DB	 8
  001fb	08		 DB	 8
  001fc	02		 DB	 2
  001fd	03		 DB	 3
  001fe	04		 DB	 4
  001ff	05		 DB	 5
  00200	06		 DB	 6
  00201	07		 DB	 7
?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ENDP		; NpcLitleSanta
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSnowman@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSnowman@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcSnowman, COMDAT

; 1857 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1858 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	74 10		 je	 SHORT $LN4@NpcSnowman

; 1859 : 	{
; 1860 : 		return true;
; 1861 : 	}
; 1862 : 
; 1863 : 	GCServerCmd(lpObj->m_Index,0x11,1,0);

  00015	6a 00		 push	 0
  00017	6a 01		 push	 1
  00019	6a 11		 push	 17			; 00000011H
  0001b	ff 36		 push	 DWORD PTR [esi]
  0001d	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  00022	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@NpcSnowman:

; 1864 : 	return true;

  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	5e		 pop	 esi

; 1865 : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?NpcSnowman@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcSnowman
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSanta@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSanta@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcSanta, COMDAT

; 1848 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1849 : 	if( !gObjIsConnected(lpObj->m_Index) )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	b8 01 00 00 00	 mov	 eax, 1

; 1850 : 	{
; 1851 : 		return true;
; 1852 : 	}
; 1853 : return true;
; 1854 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcSanta@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcSanta
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSeedResearch@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSeedResearch@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcSeedResearch, COMDAT

; 1804 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1805 : 	if ( bCanChaosBox == TRUE )

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	0f 85 05 01 00
	00		 jne	 $LN2@NpcSeedRes

; 1806 : 	{
; 1807 : 		PMSG_TALKRESULT pMsg;
; 1808 : 
; 1809 : 		pMsg.h.c = 0xC3;
; 1810 : 		pMsg.h.headcode = 0x30;
; 1811 : 		pMsg.h.size = sizeof(pMsg);
; 1812 : 		
; 1813 : 		if ( lpObj->m_bPShopOpen == true )

  00021	80 be 5c 12 00
	00 01		 cmp	 BYTE PTR [esi+4700], 1
  00028	66 c7 45 f0 c3
	0b		 mov	 WORD PTR _pMsg$1[ebp], 3011 ; 00000bc3H
  0002e	c6 45 f2 30	 mov	 BYTE PTR _pMsg$1[ebp+2], 48 ; 00000030H
  00032	75 46		 jne	 SHORT $LN3@NpcSeedRes

; 1814 : 		{
; 1815 : 			LogAdd("[%s][%s] is Already Opening PShop, ChaosBox Failed",

  00034	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00037	50		 push	 eax
  00038	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1816 : 				lpObj->AccountID, lpObj->Name);
; 1817 : 			GCServerMsgStringSend(lMsg.Get(MSGGET(4, 194)), lpObj->m_Index, 1);

  0004a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004f	6a 01		 push	 1
  00051	ff 36		 push	 DWORD PTR [esi]
  00053	68 c2 04 00 00	 push	 1218			; 000004c2H
  00058	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1842 : 	}
; 1843 : 
; 1844 : 	return TRUE;

  00066	b8 01 00 00 00	 mov	 eax, 1
  0006b	5e		 pop	 esi

; 1845 : }

  0006c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006f	33 cd		 xor	 ecx, ebp
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
$LN3@NpcSeedRes:

; 1818 : 			return TRUE;
; 1819 : 		}
; 1820 : 
; 1821 : 		lpObj->m_IfState.type = 7;
; 1822 : 		lpObj->m_IfState.state = 0;
; 1823 : 		lpObj->m_IfState.use = 1;

  0007a	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00080	25 c1 01 ff ff	 and	 eax, -65087		; ffff01c1H

; 1824 : 		
; 1825 : 		pMsg.result = 24;
; 1826 : 		lpObj->bIsChaosMixCompleted = false;

  00085	c6 86 09 16 00
	00 00		 mov	 BYTE PTR [esi+5641], 0
  0008c	0d c1 01 00 00	 or	 eax, 449		; 000001c1H
  00091	c6 45 f3 18	 mov	 BYTE PTR _pMsg$1[ebp+3], 24 ; 00000018H
  00095	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 1827 : 		pMsg.level1 = gDQChaosSuccessRateLevel1;

  0009b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel1@@3HA
  000a2	88 45 f4	 mov	 BYTE PTR _pMsg$1[ebp+4], al

; 1828 : 		pMsg.level2 = gDQChaosSuccessRateLevel2;

  000a5	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel2@@3HA
  000ac	88 45 f5	 mov	 BYTE PTR _pMsg$1[ebp+5], al

; 1829 : 		pMsg.level3 = gDQChaosSuccessRateLevel3;

  000af	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel3@@3HA
  000b6	88 45 f6	 mov	 BYTE PTR _pMsg$1[ebp+6], al

; 1830 : 		pMsg.level4 = gDQChaosSuccessRateLevel4;

  000b9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel4@@3HA
  000c0	88 45 f7	 mov	 BYTE PTR _pMsg$1[ebp+7], al

; 1831 : 		pMsg.level5 = gDQChaosSuccessRateLevel5;

  000c3	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel5@@3HA
  000ca	88 45 f8	 mov	 BYTE PTR _pMsg$1[ebp+8], al

; 1832 : 		pMsg.level6 = gDQChaosSuccessRateLevel6;

  000cd	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel6@@3HA
  000d4	88 45 f9	 mov	 BYTE PTR _pMsg$1[ebp+9], al

; 1833 : 
; 1834 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000d7	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  000da	6a 0b		 push	 11			; 0000000bH
  000dc	50		 push	 eax
  000dd	ff 36		 push	 DWORD PTR [esi]
  000df	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1835 : 
; 1836 : 		GCAnsCsMapSvrTaxInfo(lpObj->m_Index, 1, g_CastleSiegeSync.GetTaxRateChaos(lpObj->m_Index));

  000e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  000ec	ff 36		 push	 DWORD PTR [esi]
  000ee	e8 00 00 00 00	 call	 ?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::GetTaxRateChaos
  000f3	50		 push	 eax
  000f4	6a 01		 push	 1
  000f6	ff 36		 push	 DWORD PTR [esi]
  000f8	e8 00 00 00 00	 call	 ?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z ; GCAnsCsMapSvrTaxInfo

; 1837 : 		gObjInventoryTrans(lpObj->m_Index);

  000fd	ff 36		 push	 DWORD PTR [esi]
  000ff	e8 00 00 00 00	 call	 ?gObjInventoryTrans@@YAHH@Z ; gObjInventoryTrans

; 1838 : 
; 1839 : 		LogAddTD("[%s][%s] Open Chaos Box", lpObj->AccountID, lpObj->Name);

  00104	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00107	50		 push	 eax
  00108	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0010b	50		 push	 eax
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1840 : 		gObjItemTextSave(lpObj);

  00117	56		 push	 esi
  00118	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 1841 : 		gObjWarehouseTextSave(lpObj);

  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  00123	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@NpcSeedRes:

; 1845 : }

  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	b8 01 00 00 00	 mov	 eax, 1
  0012e	33 cd		 xor	 ecx, ebp
  00130	5e		 pop	 esi
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?NpcSeedResearch@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcSeedResearch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSeedMaster@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSeedMaster@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcSeedMaster, COMDAT

; 1760 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1761 : 	if ( bCanChaosBox == TRUE )

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	0f 85 05 01 00
	00		 jne	 $LN2@NpcSeedMas

; 1762 : 	{
; 1763 : 		PMSG_TALKRESULT pMsg;
; 1764 : 
; 1765 : 		pMsg.h.c = 0xC3;
; 1766 : 		pMsg.h.headcode = 0x30;
; 1767 : 		pMsg.h.size = sizeof(pMsg);
; 1768 : 		
; 1769 : 		if ( lpObj->m_bPShopOpen == true )

  00021	80 be 5c 12 00
	00 01		 cmp	 BYTE PTR [esi+4700], 1
  00028	66 c7 45 f0 c3
	0b		 mov	 WORD PTR _pMsg$1[ebp], 3011 ; 00000bc3H
  0002e	c6 45 f2 30	 mov	 BYTE PTR _pMsg$1[ebp+2], 48 ; 00000030H
  00032	75 46		 jne	 SHORT $LN3@NpcSeedMas

; 1770 : 		{
; 1771 : 			LogAdd("[%s][%s] is Already Opening PShop, ChaosBox Failed",

  00034	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00037	50		 push	 eax
  00038	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1772 : 				lpObj->AccountID, lpObj->Name);
; 1773 : 			GCServerMsgStringSend(lMsg.Get(MSGGET(4, 194)), lpObj->m_Index, 1);

  0004a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004f	6a 01		 push	 1
  00051	ff 36		 push	 DWORD PTR [esi]
  00053	68 c2 04 00 00	 push	 1218			; 000004c2H
  00058	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1798 : 	}
; 1799 : 
; 1800 : 	return TRUE;

  00066	b8 01 00 00 00	 mov	 eax, 1
  0006b	5e		 pop	 esi

; 1801 : }

  0006c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006f	33 cd		 xor	 ecx, ebp
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
$LN3@NpcSeedMas:

; 1774 : 			return TRUE;
; 1775 : 		}
; 1776 : 
; 1777 : 		lpObj->m_IfState.type = 7;
; 1778 : 		lpObj->m_IfState.state = 0;
; 1779 : 		lpObj->m_IfState.use = 1;

  0007a	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00080	25 c1 01 ff ff	 and	 eax, -65087		; ffff01c1H

; 1780 : 		
; 1781 : 		pMsg.result = 23;
; 1782 : 		lpObj->bIsChaosMixCompleted = false;

  00085	c6 86 09 16 00
	00 00		 mov	 BYTE PTR [esi+5641], 0
  0008c	0d c1 01 00 00	 or	 eax, 449		; 000001c1H
  00091	c6 45 f3 17	 mov	 BYTE PTR _pMsg$1[ebp+3], 23 ; 00000017H
  00095	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 1783 : 		pMsg.level1 = gDQChaosSuccessRateLevel1;

  0009b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel1@@3HA
  000a2	88 45 f4	 mov	 BYTE PTR _pMsg$1[ebp+4], al

; 1784 : 		pMsg.level2 = gDQChaosSuccessRateLevel2;

  000a5	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel2@@3HA
  000ac	88 45 f5	 mov	 BYTE PTR _pMsg$1[ebp+5], al

; 1785 : 		pMsg.level3 = gDQChaosSuccessRateLevel3;

  000af	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel3@@3HA
  000b6	88 45 f6	 mov	 BYTE PTR _pMsg$1[ebp+6], al

; 1786 : 		pMsg.level4 = gDQChaosSuccessRateLevel4;

  000b9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel4@@3HA
  000c0	88 45 f7	 mov	 BYTE PTR _pMsg$1[ebp+7], al

; 1787 : 		pMsg.level5 = gDQChaosSuccessRateLevel5;

  000c3	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel5@@3HA
  000ca	88 45 f8	 mov	 BYTE PTR _pMsg$1[ebp+8], al

; 1788 : 		pMsg.level6 = gDQChaosSuccessRateLevel6;

  000cd	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel6@@3HA
  000d4	88 45 f9	 mov	 BYTE PTR _pMsg$1[ebp+9], al

; 1789 : 
; 1790 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000d7	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  000da	6a 0b		 push	 11			; 0000000bH
  000dc	50		 push	 eax
  000dd	ff 36		 push	 DWORD PTR [esi]
  000df	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1791 : 
; 1792 : 		GCAnsCsMapSvrTaxInfo(lpObj->m_Index, 1, g_CastleSiegeSync.GetTaxRateChaos(lpObj->m_Index));

  000e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  000ec	ff 36		 push	 DWORD PTR [esi]
  000ee	e8 00 00 00 00	 call	 ?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::GetTaxRateChaos
  000f3	50		 push	 eax
  000f4	6a 01		 push	 1
  000f6	ff 36		 push	 DWORD PTR [esi]
  000f8	e8 00 00 00 00	 call	 ?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z ; GCAnsCsMapSvrTaxInfo

; 1793 : 		gObjInventoryTrans(lpObj->m_Index);

  000fd	ff 36		 push	 DWORD PTR [esi]
  000ff	e8 00 00 00 00	 call	 ?gObjInventoryTrans@@YAHH@Z ; gObjInventoryTrans

; 1794 : 
; 1795 : 		LogAddTD("[%s][%s] Open Chaos Box", lpObj->AccountID, lpObj->Name);

  00104	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00107	50		 push	 eax
  00108	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0010b	50		 push	 eax
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1796 : 		gObjItemTextSave(lpObj);

  00117	56		 push	 esi
  00118	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 1797 : 		gObjWarehouseTextSave(lpObj);

  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  00123	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@NpcSeedMas:

; 1801 : }

  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	b8 01 00 00 00	 mov	 eax, 1
  0012e	33 cd		 xor	 ecx, ebp
  00130	5e		 pop	 esi
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?NpcSeedMaster@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcSeedMaster
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCherryBlossom@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCherryBlossom@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcCherryBlossom, COMDAT

; 1751 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1752 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 1753 : 	{
; 1754 : 		return TRUE;
; 1755 : 	}
; 1756 : return FALSE;
; 1757 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcCherryBlossom@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcCherryBlossom
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcLeah@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcLeah@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcLeah, COMDAT

; 1733 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1734 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 1735 : 	{
; 1736 : 		return TRUE;
; 1737 : 	}
; 1738 : return FALSE;
; 1739 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcLeah@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcLeah
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcMarseille@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcMarseille@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcMarseille, COMDAT

; 1742 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1743 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 1744 : 	{
; 1745 : 		return TRUE;
; 1746 : 	}
; 1747 : return FALSE;
; 1748 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcMarseille@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcMarseille
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSilvia@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSilvia@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcSilvia, COMDAT

; 1724 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1725 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 1726 : 	{
; 1727 : 		return TRUE;
; 1728 : 	}
; 1729 : return FALSE;
; 1730 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcSilvia@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcSilvia
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcAlliedTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcAlliedTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcAlliedTeamForge, COMDAT

; 1700 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1701 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $LN4@NpcAlliedT

; 1702 : 	{
; 1703 : 		return TRUE;
; 1704 : 	}
; 1705 : 
; 1706 : 	g_IllusionTemple.ClickAlliedNpc(lpObj->MapNumber,lpNpc,lpObj);

  00015	0f b6 86 23 01
	00 00		 movzx	 eax, BYTE PTR [esi+291]
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTemple@@3VCIllusionTempleEvent@@A ; g_IllusionTemple
  00021	56		 push	 esi
  00022	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?ClickAlliedNpc@CIllusionTempleEvent@@QAEXEPAUOBJECTSTRUCT@@0@Z ; CIllusionTempleEvent::ClickAlliedNpc
$LN4@NpcAlliedT:

; 1707 : 
; 1708 : return TRUE;

  0002b	b8 01 00 00 00	 mov	 eax, 1
  00030	5e		 pop	 esi

; 1709 : }

  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?NpcAlliedTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcAlliedTeamForge
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcIllusionTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcIllusionTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcIllusionTeamForge, COMDAT

; 1712 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1713 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $LN4@NpcIllusio

; 1714 : 	{
; 1715 : 		return TRUE;
; 1716 : 	}
; 1717 : 
; 1718 : 	g_IllusionTemple.ClickIllusionNpc(lpObj->MapNumber,lpNpc,lpObj);

  00015	0f b6 86 23 01
	00 00		 movzx	 eax, BYTE PTR [esi+291]
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTemple@@3VCIllusionTempleEvent@@A ; g_IllusionTemple
  00021	56		 push	 esi
  00022	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?ClickIllusionNpc@CIllusionTempleEvent@@QAEXEPAUOBJECTSTRUCT@@0@Z ; CIllusionTempleEvent::ClickIllusionNpc
$LN4@NpcIllusio:

; 1719 : 
; 1720 : return TRUE;

  0002b	b8 01 00 00 00	 mov	 eax, 1
  00030	5e		 pop	 esi

; 1721 : }

  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?NpcIllusionTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcIllusionTeamForge
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcIllusionHolyStatue@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcIllusionHolyStatue@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcIllusionHolyStatue, COMDAT

; 1687 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1688 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $LN4@NpcIllusio

; 1689 : 	{
; 1690 : 		return TRUE;
; 1691 : 	}
; 1692 : 
; 1693 : 	g_IllusionTemple.ClickToStatus(lpObj->MapNumber,lpNpc,lpObj);

  00015	0f b6 86 23 01
	00 00		 movzx	 eax, BYTE PTR [esi+291]
  0001c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTemple@@3VCIllusionTempleEvent@@A ; g_IllusionTemple
  00021	56		 push	 esi
  00022	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?ClickToStatus@CIllusionTempleEvent@@QAEXEPAUOBJECTSTRUCT@@0@Z ; CIllusionTempleEvent::ClickToStatus
$LN4@NpcIllusio:

; 1694 : 
; 1695 : return TRUE;

  0002b	b8 01 00 00 00	 mov	 eax, 1
  00030	5e		 pop	 esi

; 1696 : }

  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?NpcIllusionHolyStatue@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcIllusionHolyStatue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcIllusionMaster@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcIllusionMaster@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcIllusionMaster, COMDAT

; 1668 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1669 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	74 0e		 je	 SHORT $LN4@NpcIllusio

; 1670 : 	{
; 1671 : 		return TRUE;
; 1672 : 	}
; 1673 : 
; 1674 : #ifdef BEREZNUK
; 1675 : 	if ( lpObj->m_PK_Level >= 4 && !g_AllowPKEventIT )
; 1676 : 	{
; 1677 : 		GCServerMsgStringSend(lMsg.Get(MSGGET(13,72)),lpObj->m_Index,1);
; 1678 : 		return TRUE;
; 1679 : 	}
; 1680 : #endif
; 1681 : 
; 1682 : 	g_IllusionTemple.ClickEnterNpc(lpNpc,lpObj);

  00015	56		 push	 esi
  00016	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTemple@@3VCIllusionTempleEvent@@A ; g_IllusionTemple
  0001e	e8 00 00 00 00	 call	 ?ClickEnterNpc@CIllusionTempleEvent@@QAEXPAUOBJECTSTRUCT@@0@Z ; CIllusionTempleEvent::ClickEnterNpc
$LN4@NpcIllusio:

; 1683 : 	return TRUE;

  00023	b8 01 00 00 00	 mov	 eax, 1
  00028	5e		 pop	 esi

; 1684 : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?NpcIllusionMaster@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcIllusionMaster
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcFireWorkGirl@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcFireWorkGirl@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcFireWorkGirl, COMDAT

; 1659 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1660 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 1661 : 	{
; 1662 : 		return TRUE;
; 1663 : 	}
; 1664 : return FALSE;
; 1665 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcFireWorkGirl@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcFireWorkGirl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDrinkSellerHillary@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDrinkSellerHillary@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcDrinkSellerHillary, COMDAT

; 1641 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1642 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 1643 : 	{
; 1644 : 		return TRUE;
; 1645 : 	}
; 1646 : return FALSE;
; 1647 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcDrinkSellerHillary@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcDrinkSellerHillary
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDrinkSellerLindsay@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDrinkSellerLindsay@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcDrinkSellerLindsay, COMDAT

; 1650 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1651 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	f7 d8		 neg	 eax
  00012	1b c0		 sbb	 eax, eax
  00014	40		 inc	 eax

; 1652 : 	{
; 1653 : 		return TRUE;
; 1654 : 	}
; 1655 : return FALSE;
; 1656 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcDrinkSellerLindsay@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcDrinkSellerLindsay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCrywolfAltar@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCrywolfAltar@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcCrywolfAltar, COMDAT

; 1630 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1631 : 	if(gObjIsConnected(lpObj->m_Index))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	b8 01 00 00 00	 mov	 eax, 1

; 1632 : 	{
; 1633 : 		return TRUE;
; 1634 : 	}
; 1635 : return TRUE;
; 1636 : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?NpcCrywolfAltar@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcCrywolfAltar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCastleHuntZoneGuard@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pResult$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCastleHuntZoneGuard@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcCastleHuntZoneGuard, COMDAT

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1586 : 	if(gObjIsConnected(lpObj->m_Index) == FALSE)

  00014	ff 36		 push	 DWORD PTR [esi]
  00016	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001b	83 c4 04	 add	 esp, 4
  0001e	85 c0		 test	 eax, eax
  00020	75 14		 jne	 SHORT $LN2@NpcCastleH
$LN11@NpcCastleH:

; 1587 : 		return TRUE;

  00022	b8 01 00 00 00	 mov	 eax, 1
  00027	5e		 pop	 esi

; 1626 : return TRUE;
; 1627 : }

  00028	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0002b	33 cd		 xor	 ecx, ebp
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN2@NpcCastleH:

; 1588 : 
; 1589 : 	if((lpObj->m_IfState.use) > 0)

  00036	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  0003d	77 e3		 ja	 SHORT $LN11@NpcCastleH

; 1590 : 		return TRUE;
; 1591 : 
; 1592 : 	PMSG_ANS_GUARD_IN_CASTLE_HUNTZONE pResult = {0};
; 1593 : 
; 1594 : 	PHeadSubSetB((PBYTE)&pResult,0xB9,0x03,sizeof(pResult));

  0003f	53		 push	 ebx
  00040	6a 14		 push	 20			; 00000014H
  00042	6a 03		 push	 3
  00044	8d 45 e8	 lea	 eax, DWORD PTR _pResult$[ebp]
  00047	c6 45 e8 00	 mov	 BYTE PTR _pResult$[ebp], 0
  0004b	0f 57 c0	 xorps	 xmm0, xmm0
  0004e	66 c7 45 f9 00
	00		 mov	 WORD PTR _pResult$[ebp+17], 0
  00054	68 b9 00 00 00	 push	 185			; 000000b9H
  00059	50		 push	 eax
  0005a	0f 11 45 e9	 movups	 XMMWORD PTR _pResult$[ebp+1], xmm0
  0005e	c6 45 fb 00	 mov	 BYTE PTR _pResult$[ebp+19], 0
  00062	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  00067	83 c4 10	 add	 esp, 16			; 00000010H

; 1595 : 	pResult.btResult = 1;

  0006a	66 c7 45 ec 01
	00		 mov	 WORD PTR _pResult$[ebp+4], 1

; 1596 : 	pResult.iMaxPrice = 300000;
; 1597 : 	pResult.iUnitOfPrice = 10000;
; 1598 : 	pResult.btUsable = FALSE;
; 1599 : 	pResult.iCurrentPrice = 0;
; 1600 : 
; 1601 : 	pResult.iCurrentPrice = g_CastleSiegeSync.GetTaxHuntZone(lpObj->m_Index,FALSE);

  00070	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  00075	c7 45 f4 e0 93
	04 00		 mov	 DWORD PTR _pResult$[ebp+12], 300000 ; 000493e0H
  0007c	c7 45 f8 10 27
	00 00		 mov	 DWORD PTR _pResult$[ebp+16], 10000 ; 00002710H
  00083	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pResult$[ebp+8], 0
  0008a	6a 00		 push	 0
  0008c	ff 36		 push	 DWORD PTR [esi]
  0008e	e8 00 00 00 00	 call	 ?GetTaxHuntZone@CCastleSiegeSync@@QAEHHH@Z ; CCastleSiegeSync::GetTaxHuntZone

; 1602 : 
; 1603 : 	if(g_CastleSiege.GetHuntZoneEnter() != FALSE)

  00093	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00098	89 45 f0	 mov	 DWORD PTR _pResult$[ebp+8], eax
  0009b	e8 00 00 00 00	 call	 ?GetHuntZoneEnter@CCastleSiege@@QAEHXZ ; CCastleSiege::GetHuntZoneEnter
  000a0	0f b6 4d ed	 movzx	 ecx, BYTE PTR _pResult$[ebp+5]
  000a4	85 c0		 test	 eax, eax
  000a6	bb 01 00 00 00	 mov	 ebx, 1
  000ab	0f 45 cb	 cmovne	 ecx, ebx

; 1604 : 	{
; 1605 : 		pResult.btUsable = TRUE;
; 1606 : 	}
; 1607 : 
; 1608 : 	if(lpObj->lpGuild != FALSE)

  000ae	83 be 18 06 00
	00 00		 cmp	 DWORD PTR [esi+1560], 0
  000b5	88 4d ed	 mov	 BYTE PTR _pResult$[ebp+5], cl

; 1609 : 	{
; 1610 : 		if(g_CastleSiege.CheckCastleOwnerUnionMember(lpObj->m_Index) != FALSE)

  000b8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  000bd	74 3c		 je	 SHORT $LN5@NpcCastleH
  000bf	57		 push	 edi
  000c0	ff 36		 push	 DWORD PTR [esi]
  000c2	e8 00 00 00 00	 call	 ?CheckCastleOwnerUnionMember@CCastleSiege@@QAEHH@Z ; CCastleSiege::CheckCastleOwnerUnionMember
  000c7	0f b6 55 ec	 movzx	 edx, BYTE PTR _pResult$[ebp+4]
  000cb	85 c0		 test	 eax, eax

; 1611 : 		{
; 1612 : 			pResult.btResult = 2;
; 1613 : 		}
; 1614 : 
; 1615 : 		if(g_CastleSiege.CheckCastleOwnerMember(lpObj->m_Index) != FALSE && lpObj->GuildStatus == G_MASTER)

  000cd	ff 36		 push	 DWORD PTR [esi]
  000cf	bf 02 00 00 00	 mov	 edi, 2
  000d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  000d9	0f 45 d7	 cmovne	 edx, edi
  000dc	88 55 ec	 mov	 BYTE PTR _pResult$[ebp+4], dl
  000df	e8 00 00 00 00	 call	 ?CheckCastleOwnerMember@CCastleSiege@@QAEHH@Z ; CCastleSiege::CheckCastleOwnerMember
  000e4	5f		 pop	 edi
  000e5	85 c0		 test	 eax, eax
  000e7	74 23		 je	 SHORT $LN9@NpcCastleH
  000e9	81 be 28 06 00
	00 80 00 00 00	 cmp	 DWORD PTR [esi+1576], 128 ; 00000080H
  000f3	75 17		 jne	 SHORT $LN9@NpcCastleH

; 1616 : 		{
; 1617 : 			pResult.btResult = 3;

  000f5	c6 45 ec 03	 mov	 BYTE PTR _pResult$[ebp+4], 3

; 1618 : 		}
; 1619 : 	}

  000f9	eb 11		 jmp	 SHORT $LN9@NpcCastleH
$LN5@NpcCastleH:

; 1620 : 	else if(g_CastleSiege.GetHuntZoneEnter())

  000fb	e8 00 00 00 00	 call	 ?GetHuntZoneEnter@CCastleSiege@@QAEHXZ ; CCastleSiege::GetHuntZoneEnter
  00100	0f b6 4d ec	 movzx	 ecx, BYTE PTR _pResult$[ebp+4]
  00104	85 c0		 test	 eax, eax
  00106	0f 45 cb	 cmovne	 ecx, ebx
  00109	88 4d ec	 mov	 BYTE PTR _pResult$[ebp+4], cl
$LN9@NpcCastleH:

; 1621 : 	{
; 1622 : 		pResult.btResult = 1;
; 1623 : 	}
; 1624 : 
; 1625 : 	DataSend(lpObj->m_Index,(PBYTE)&pResult,pResult.h.size);

  0010c	0f b6 4d e9	 movzx	 ecx, BYTE PTR _pResult$[ebp+1]
  00110	51		 push	 ecx
  00111	8d 4d e8	 lea	 ecx, DWORD PTR _pResult$[ebp]
  00114	51		 push	 ecx
  00115	ff 36		 push	 DWORD PTR [esi]
  00117	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1626 : return TRUE;
; 1627 : }

  0011c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00122	8b c3		 mov	 eax, ebx
  00124	33 cd		 xor	 ecx, ebp
  00126	5b		 pop	 ebx
  00127	5e		 pop	 esi
  00128	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c3		 ret	 0
?NpcCastleHuntZoneGuard@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcCastleHuntZoneGuard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcChaosCardMaster@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcChaosCardMaster@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcChaosCardMaster, COMDAT

; 492  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 493  : 	if ( g_bUseLotterySystem == FALSE )

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_bUseLotterySystem@@3HA, 0 ; g_bUseLotterySystem
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	75 11		 jne	 SHORT $LN2@NpcChaosCa
$LN7@NpcChaosCa:

; 494  : 		return FALSE;

  0001d	33 c0		 xor	 eax, eax
  0001f	5e		 pop	 esi

; 532  : }

  00020	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00023	33 cd		 xor	 ecx, ebp
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN2@NpcChaosCa:

; 495  : 
; 496  : 	if ( bCanChaosBox == TRUE )

  0002e	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00035	0f 85 ab 00 00
	00		 jne	 $LN3@NpcChaosCa

; 497  : 	{
; 498  : 		if ( lpObj->m_IfState.use > 0 )

  0003b	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  00042	77 d9		 ja	 SHORT $LN7@NpcChaosCa

; 499  : 			return FALSE;
; 500  : 
; 501  : 		if ( lpObj->m_bPShopOpen == true )

  00044	80 be 5c 12 00
	00 01		 cmp	 BYTE PTR [esi+4700], 1
  0004b	75 46		 jne	 SHORT $LN5@NpcChaosCa

; 502  : 		{
; 503  : 			LogAdd("[%s][%s] is Already Opening PShop, ChaosBox Failed",

  0004d	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00050	50		 push	 eax
  00051	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  00054	50		 push	 eax
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 504  : 				lpObj->AccountID, lpObj->Name);
; 505  : 
; 506  : 			GCServerMsgStringSend(lMsg.Get(MSGGET(4,194)), lpObj->m_Index, 1);

  00063	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00068	6a 01		 push	 1
  0006a	ff 36		 push	 DWORD PTR [esi]
  0006c	68 c2 04 00 00	 push	 1218			; 000004c2H
  00071	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 529  : 	}
; 530  : 
; 531  : 	return TRUE;

  0007f	b8 01 00 00 00	 mov	 eax, 1
  00084	5e		 pop	 esi

; 532  : }

  00085	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00088	33 cd		 xor	 ecx, ebp
  0008a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN5@NpcChaosCa:

; 507  : 			return TRUE;
; 508  : 		}
; 509  : 
; 510  : 		PMSG_TALKRESULT pMsg;
; 511  : 
; 512  : 		pMsg.h.c = 0xC3;
; 513  : 		pMsg.h.headcode = 0x30;
; 514  : 		pMsg.h.size = sizeof(pMsg);
; 515  : 		pMsg.result = 0x15;
; 516  : 
; 517  : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  00093	6a 0b		 push	 11			; 0000000bH
  00095	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  00098	c7 45 f0 c3 0b
	30 15		 mov	 DWORD PTR _pMsg$1[ebp], 355470275 ; 15300bc3H
  0009f	50		 push	 eax
  000a0	ff 36		 push	 DWORD PTR [esi]
  000a2	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 518  : 
; 519  : 		lpObj->m_IfState.use = 1;
; 520  : 		lpObj->m_IfState.type = 7;

  000a7	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]

; 521  : 
; 522  : 		gObjInventoryTrans(lpObj->m_Index);

  000ad	ff 36		 push	 DWORD PTR [esi]
  000af	25 fd 01 ff ff	 and	 eax, -65027		; ffff01fdH
  000b4	0d c1 01 00 00	 or	 eax, 449		; 000001c1H
  000b9	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax
  000bf	e8 00 00 00 00	 call	 ?gObjInventoryTrans@@YAHH@Z ; gObjInventoryTrans

; 523  : 
; 524  : 		LogAddTD("[JewelMix] [%s][%s] Jewel Mix Dealer Start",

  000c4	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  000c7	50		 push	 eax
  000c8	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  000cb	50		 push	 eax
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KMBDNKMH@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Jewel?5Mix?5De@
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 525  : 			lpObj->AccountID, lpObj->Name);
; 526  : 
; 527  : 		gObjItemTextSave(lpObj);

  000d7	56		 push	 esi
  000d8	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 528  : 		gObjWarehouseTextSave(lpObj);

  000dd	56		 push	 esi
  000de	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  000e3	83 c4 24	 add	 esp, 36			; 00000024H
$LN3@NpcChaosCa:

; 532  : }

  000e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e9	b8 01 00 00 00	 mov	 eax, 1
  000ee	33 cd		 xor	 ecx, ebp
  000f0	5e		 pop	 esi
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
?NpcChaosCardMaster@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcChaosCardMaster
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcReira@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcReira@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcReira, COMDAT

; 334  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 335  : }

  00002	c3		 ret	 0
?NpcReira@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcReira
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcMainatenceMachine@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcMainatenceMachine@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcMainatenceMachine, COMDAT

; 326  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 327  : 	g_KanturuEntranceNPC.NotifyEntranceInfo(lpObj->m_Index);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuEntranceNPC@@3VCKanturuEntranceNPC@@A ; g_KanturuEntranceNPC
  0000b	ff 30		 push	 DWORD PTR [eax]
  0000d	e8 00 00 00 00	 call	 ?NotifyEntranceInfo@CKanturuEntranceNPC@@QAEXH@Z ; CKanturuEntranceNPC::NotifyEntranceInfo

; 328  : 	return TRUE;

  00012	b8 01 00 00 00	 mov	 eax, 1

; 329  : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?NpcMainatenceMachine@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcMainatenceMachine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcShadowPhantom@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcShadowPhantom@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcShadowPhantom, COMDAT

; 1526 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 1527 : 	if ( gObjIsConnected(lpObj->m_Index) == FALSE )

  00014	ff 36		 push	 DWORD PTR [esi]
  00016	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001b	83 c4 04	 add	 esp, 4
  0001e	85 c0		 test	 eax, eax
  00020	74 29		 je	 SHORT $LN4@NpcShadowP

; 1528 : 	{
; 1529 : 		return TRUE;
; 1530 : 	}
; 1531 : 
; 1532 : #if (__QUEST_SYSTEM__ == 1)
; 1533 : 
; 1534 : 	PMSG_TALKRESULT_EX pMsg;
; 1535 : 	pMsg.h.c = 0xC3;
; 1536 : 	pMsg.h.headcode = 0xF9;
; 1537 : 	pMsg.h.size = sizeof(pMsg);
; 1538 : 
; 1539 : 	pMsg.btResult = TRUE;
; 1540 : 	pMsg.wNpcId = 257;

  00022	b8 01 01 00 00	 mov	 eax, 257		; 00000101H
  00027	66 c7 45 f0 c3
	0c		 mov	 WORD PTR _pMsg$[ebp], 3267 ; 00000cc3H

; 1541 : 
; 1542 : 	lpObj->TargetShopNumber = 257;

  0002d	66 89 86 3a 06
	00 00		 mov	 WORD PTR [esi+1594], ax

; 1543 : 	DataSend(lpObj->m_Index,(LPBYTE)&pMsg,pMsg.h.size);

  00034	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00037	6a 0c		 push	 12			; 0000000cH
  00039	50		 push	 eax
  0003a	ff 36		 push	 DWORD PTR [esi]
  0003c	c7 45 f2 f9 01
	01 01		 mov	 DWORD PTR _pMsg$[ebp+2], 16843257 ; 010101f9H
  00043	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@NpcShadowP:

; 1544 : 
; 1545 : #else
; 1546 : 
; 1547 : 	if ( lpObj->Level > g_NPCBuffLevel || lpObj->ChangeUP2 != FALSE )
; 1548 : 	{
; 1549 : 		GCServerCmd(lpObj->m_Index, 0x0D, 0, 0);
; 1550 : 		return TRUE;
; 1551 : 	}
; 1552 : 
; 1553 : #if (__CUSTOM__ == 1)
; 1554 : 	int Defense = lpObj->Level / g_ElfBuffDefenseDiv + g_ElfBuffDefenseStart;
; 1555 : 	int Attack = lpObj->Level / g_ElfBuffAttackDiv + g_ElfBuffAttackStart;
; 1556 : 
; 1557 : 	gObjAddBuffEffect(lpObj,BUFF_NPC_PHANTOM,ADD_OPTION_ATTACK_DAMAGE,Attack,ADD_OPTION_DEFENSE,Defense,0,0,g_ElfBuffTime);
; 1558 : #else
; 1559 : 	int Defense = lpObj->Level / 5 + 50;
; 1560 : 	int Attack = lpObj->Level / 3 + 45;
; 1561 : 
; 1562 : 	gObjAddBuffEffect(lpObj,BUFF_NPC_PHANTOM,ADD_OPTION_ATTACK_DAMAGE,Attack,ADD_OPTION_DEFENSE,Defense,0,0,1800000);
; 1563 : 	
; 1564 : #endif
; 1565 : 
; 1566 : #endif
; 1567 : 
; 1568 : 	return TRUE;
; 1569 : 
; 1570 : }

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004e	b8 01 00 00 00	 mov	 eax, 1
  00053	33 cd		 xor	 ecx, ebp
  00055	5e		 pop	 esi
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?NpcShadowPhantom@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcShadowPhantom
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCastleSwitch@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCastleSwitch@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcCastleSwitch, COMDAT

; 1476 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1477 : #if (GS_CASTLE == 1)
; 1478 : 
; 1479 : 	if(gObjIsConnected(lpObj->m_Index) == FALSE)

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	ff 36		 push	 DWORD PTR [esi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	0f 84 25 01 00
	00		 je	 $LN13@NpcCastleS

; 1480 : 		return TRUE;
; 1481 : 
; 1482 : 	if(g_CastleSiege.GetCastleState() != CASTLESIEGE_STATE_STARTSIEGE)

  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0001e	e8 00 00 00 00	 call	 ?GetCastleState@CCastleSiege@@QAEHXZ ; CCastleSiege::GetCastleState
  00023	83 f8 07	 cmp	 eax, 7
  00026	0f 85 12 01 00
	00		 jne	 $LN13@NpcCastleS

; 1483 : 		return TRUE;
; 1484 : 
; 1485 : 	if(lpObj->m_btCsJoinSide < 2)

  0002c	80 be 5a 20 00
	00 02		 cmp	 BYTE PTR [esi+8282], 2
  00033	0f 82 05 01 00
	00		 jb	 $LN13@NpcCastleS

; 1486 : 		return TRUE;
; 1487 : 
; 1488 : 	if( abs( lpObj->Y - lpNpc->Y) > 3 || abs(lpObj->X - lpNpc->X) > 3)

  00039	0f b6 86 21 01
	00 00		 movzx	 eax, BYTE PTR [esi+289]
  00040	57		 push	 edi
  00041	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]
  00044	0f b6 8f 21 01
	00 00		 movzx	 ecx, BYTE PTR [edi+289]
  0004b	2b c1		 sub	 eax, ecx
  0004d	99		 cdq
  0004e	33 c2		 xor	 eax, edx
  00050	2b c2		 sub	 eax, edx
  00052	83 f8 03	 cmp	 eax, 3
  00055	0f 8f e2 00 00
	00		 jg	 $LN6@NpcCastleS
  0005b	0f b6 86 20 01
	00 00		 movzx	 eax, BYTE PTR [esi+288]
  00062	0f b6 8f 20 01
	00 00		 movzx	 ecx, BYTE PTR [edi+288]
  00069	2b c1		 sub	 eax, ecx
  0006b	99		 cdq
  0006c	33 c2		 xor	 eax, edx
  0006e	2b c2		 sub	 eax, edx
  00070	83 f8 03	 cmp	 eax, 3
  00073	0f 8f c4 00 00
	00		 jg	 $LN6@NpcCastleS

; 1490 : 
; 1491 : 	if(g_CastleSiege.CheckGuardianStatueExist() == TRUE)

  00079	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0007e	e8 00 00 00 00	 call	 ?CheckGuardianStatueExist@CCastleSiege@@QAEHXZ ; CCastleSiege::CheckGuardianStatueExist
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 23		 jne	 SHORT $LN7@NpcCastleS

; 1492 : 	{
; 1493 : 		MsgOutput(lpObj->m_Index,lMsg.Get(MSGGET(6,200)));

  00088	68 c8 06 00 00	 push	 1736			; 000006c8H
  0008d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00092	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00097	50		 push	 eax
  00098	ff 36		 push	 DWORD PTR [esi]
  0009a	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0009f	83 c4 08	 add	 esp, 8
  000a2	b8 01 00 00 00	 mov	 eax, 1
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi

; 1509 : 	}
; 1510 : 
; 1511 : 
; 1512 : 
; 1513 : #endif
; 1514 : 	return TRUE;
; 1515 : }

  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
$LN7@NpcCastleS:

; 1494 : 		return TRUE;
; 1495 : 	}
; 1496 : 
; 1497 : 	int SwitchIndex = g_CastleSiege.GetCrownSwitchUserIndex(lpNpc->Class);

  000ab	0f b7 87 90 00
	00 00		 movzx	 eax, WORD PTR [edi+144]
  000b2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  000b7	53		 push	 ebx
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?GetCrownSwitchUserIndex@CCastleSiege@@QAEHH@Z ; CCastleSiege::GetCrownSwitchUserIndex
  000be	8b d8		 mov	 ebx, eax

; 1498 : 
; 1499 : 	if( gObjIsConnected(SwitchIndex) == FALSE)

  000c0	53		 push	 ebx
  000c1	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  000c6	83 c4 04	 add	 esp, 4
  000c9	85 c0		 test	 eax, eax
  000cb	75 5b		 jne	 SHORT $LN8@NpcCastleS

; 1500 : 	{
; 1501 : 		GCAnsCsAccessSwitchState(lpObj->m_Index,lpNpc->m_Index,-1,1);

  000cd	6a 01		 push	 1
  000cf	6a ff		 push	 -1
  000d1	ff 37		 push	 DWORD PTR [edi]
  000d3	ff 36		 push	 DWORD PTR [esi]
  000d5	e8 00 00 00 00	 call	 ?GCAnsCsAccessSwitchState@@YAXHHHE@Z ; GCAnsCsAccessSwitchState

; 1502 : 		g_CastleSiege.SetCrownSwitchUserIndex(lpNpc->Class,lpObj->m_Index);

  000da	0f b7 87 90 00
	00 00		 movzx	 eax, WORD PTR [edi+144]
  000e1	83 c4 10	 add	 esp, 16			; 00000010H
  000e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  000e9	ff 36		 push	 DWORD PTR [esi]
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ?SetCrownSwitchUserIndex@CCastleSiege@@QAEXHH@Z ; CCastleSiege::SetCrownSwitchUserIndex

; 1503 : 		LogAddTD("[CastleSiege] [%s][%s] Start to Push Castle Crown Switch (GUILD:%s) - CS X:%d/Y:%d",

  000f1	0f b6 87 21 01
	00 00		 movzx	 eax, BYTE PTR [edi+289]
  000f8	50		 push	 eax
  000f9	0f b6 87 20 01
	00 00		 movzx	 eax, BYTE PTR [edi+288]
  00100	50		 push	 eax
  00101	8d 86 1c 06 00
	00		 lea	 eax, DWORD PTR [esi+1564]
  00107	50		 push	 eax
  00108	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  0010b	50		 push	 eax
  0010c	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0010f	50		 push	 eax
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@GEIJDAJG@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0011b	83 c4 18	 add	 esp, 24			; 00000018H
  0011e	b8 01 00 00 00	 mov	 eax, 1
  00123	5b		 pop	 ebx
  00124	5f		 pop	 edi
  00125	5e		 pop	 esi

; 1509 : 	}
; 1510 : 
; 1511 : 
; 1512 : 
; 1513 : #endif
; 1514 : 	return TRUE;
; 1515 : }

  00126	5d		 pop	 ebp
  00127	c3		 ret	 0
$LN8@NpcCastleS:

; 1504 : 			lpObj->AccountID,lpObj->Name,lpObj->GuildName,lpNpc->X,lpNpc->Y);
; 1505 : 	}
; 1506 : 	else if(lpObj->m_Index != SwitchIndex)

  00128	8b 06		 mov	 eax, DWORD PTR [esi]
  0012a	3b c3		 cmp	 eax, ebx
  0012c	74 0e		 je	 SHORT $LN10@NpcCastleS

; 1507 : 	{
; 1508 : 		GCAnsCsAccessSwitchState(lpObj->m_Index,lpNpc->m_Index,SwitchIndex,2);

  0012e	6a 02		 push	 2
  00130	53		 push	 ebx
  00131	ff 37		 push	 DWORD PTR [edi]
  00133	50		 push	 eax
  00134	e8 00 00 00 00	 call	 ?GCAnsCsAccessSwitchState@@YAXHHHE@Z ; GCAnsCsAccessSwitchState
  00139	83 c4 10	 add	 esp, 16			; 00000010H
$LN10@NpcCastleS:
  0013c	5b		 pop	 ebx
$LN6@NpcCastleS:
  0013d	5f		 pop	 edi
$LN13@NpcCastleS:

; 1489 : 		return TRUE;

  0013e	b8 01 00 00 00	 mov	 eax, 1
  00143	5e		 pop	 esi

; 1509 : 	}
; 1510 : 
; 1511 : 
; 1512 : 
; 1513 : #endif
; 1514 : 	return TRUE;
; 1515 : }

  00144	5d		 pop	 ebp
  00145	c3		 ret	 0
?NpcCastleSwitch@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcCastleSwitch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCastleCrown@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCastleCrown@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcCastleCrown, COMDAT

; 1408 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 1409 : #if (GS_CASTLE == 1)
; 1410 : 
; 1411 : 	if( gObjIsConnected(lpObj->m_Index) == FALSE )

  00004	8b 7d 0c	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00007	ff 37		 push	 DWORD PTR [edi]
  00009	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000e	83 c4 04	 add	 esp, 4
  00011	85 c0		 test	 eax, eax
  00013	0f 84 34 02 00
	00		 je	 $LN20@NpcCastleC

; 1412 : 		return TRUE;
; 1413 : 
; 1414 : 	if( g_CastleSiege.GetCastleState() != CASTLESIEGE_STATE_STARTSIEGE )

  00019	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0001e	e8 00 00 00 00	 call	 ?GetCastleState@CCastleSiege@@QAEHXZ ; CCastleSiege::GetCastleState
  00023	83 f8 07	 cmp	 eax, 7
  00026	0f 85 21 02 00
	00		 jne	 $LN20@NpcCastleC

; 1415 : 		return TRUE;
; 1416 : 
; 1417 : 	if( lpObj->m_btCsJoinSide < 2 || lpObj->m_bCsGuildInvolved == FALSE )

  0002c	80 bf 5a 20 00
	00 02		 cmp	 BYTE PTR [edi+8282], 2
  00033	0f 82 14 02 00
	00		 jb	 $LN20@NpcCastleC
  00039	80 bf 5b 20 00
	00 00		 cmp	 BYTE PTR [edi+8283], 0
  00040	0f 84 07 02 00
	00		 je	 $LN20@NpcCastleC

; 1418 : 		return TRUE;
; 1419 : 
; 1420 : 	if( g_CastleSiege.CheckUnionGuildMaster(lpObj->m_Index) == FALSE )

  00046	ff 37		 push	 DWORD PTR [edi]
  00048	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0004d	e8 00 00 00 00	 call	 ?CheckUnionGuildMaster@CCastleSiege@@QAEHH@Z ; CCastleSiege::CheckUnionGuildMaster
  00052	85 c0		 test	 eax, eax
  00054	0f 84 f3 01 00
	00		 je	 $LN20@NpcCastleC

; 1421 : 		return TRUE;
; 1422 : 
; 1423 : 	if( abs( lpObj->Y - lpNpc->Y) > 3 || abs(lpObj->X - lpNpc->X) > 3)

  0005a	0f b6 87 21 01
	00 00		 movzx	 eax, BYTE PTR [edi+289]
  00061	56		 push	 esi
  00062	8b 75 08	 mov	 esi, DWORD PTR _lpNpc$[ebp]
  00065	0f b6 8e 21 01
	00 00		 movzx	 ecx, BYTE PTR [esi+289]
  0006c	2b c1		 sub	 eax, ecx
  0006e	99		 cdq
  0006f	33 c2		 xor	 eax, edx
  00071	2b c2		 sub	 eax, edx
  00073	83 f8 03	 cmp	 eax, 3
  00076	0f 8f d0 01 00
	00		 jg	 $LN8@NpcCastleC
  0007c	0f b6 8e 20 01
	00 00		 movzx	 ecx, BYTE PTR [esi+288]
  00083	0f b6 87 20 01
	00 00		 movzx	 eax, BYTE PTR [edi+288]
  0008a	2b c1		 sub	 eax, ecx
  0008c	99		 cdq
  0008d	33 c2		 xor	 eax, edx
  0008f	2b c2		 sub	 eax, edx
  00091	83 f8 03	 cmp	 eax, 3
  00094	0f 8f b2 01 00
	00		 jg	 $LN8@NpcCastleC

; 1424 : 		return TRUE;
; 1425 : 	
; 1426 : 	if( g_CastleSiege.GetRegCrownAvailable() == FALSE )

  0009a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0009f	e8 00 00 00 00	 call	 ?GetRegCrownAvailable@CCastleSiege@@QAEHXZ ; CCastleSiege::GetRegCrownAvailable
  000a4	85 c0		 test	 eax, eax
  000a6	0f 84 a0 01 00
	00		 je	 $LN8@NpcCastleC

; 1427 : 		return TRUE;
; 1428 : 
; 1429 : 	int iCrownUser = g_CastleSiege.GetCrownUserIndex();

  000ac	53		 push	 ebx
  000ad	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  000b2	e8 00 00 00 00	 call	 ?GetCrownUserIndex@CCastleSiege@@QAEHXZ ; CCastleSiege::GetCrownUserIndex
  000b7	8b f0		 mov	 esi, eax

; 1430 : 
; 1431 : 	if( gObjIsConnected( iCrownUser ) == FALSE )

  000b9	56		 push	 esi
  000ba	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  000bf	83 c4 04	 add	 esp, 4
  000c2	85 c0		 test	 eax, eax
  000c4	0f 85 70 01 00
	00		 jne	 $LN10@NpcCastleC

; 1432 : 	{
; 1433 : 		int iSwitchUser1 = g_CastleSiege.GetCrownSwitchUserIndex(217);

  000ca	68 d9 00 00 00	 push	 217			; 000000d9H
  000cf	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  000d4	e8 00 00 00 00	 call	 ?GetCrownSwitchUserIndex@CCastleSiege@@QAEHH@Z ; CCastleSiege::GetCrownSwitchUserIndex

; 1434 : 		int iSwitchUser2 = g_CastleSiege.GetCrownSwitchUserIndex(218);

  000d9	68 da 00 00 00	 push	 218			; 000000daH
  000de	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  000e3	8b d8		 mov	 ebx, eax
  000e5	e8 00 00 00 00	 call	 ?GetCrownSwitchUserIndex@CCastleSiege@@QAEHH@Z ; CCastleSiege::GetCrownSwitchUserIndex

; 1435 : 
; 1436 : 		if( gObjIsConnected(iSwitchUser1) == FALSE || gObjIsConnected(iSwitchUser2) == FALSE )

  000ea	53		 push	 ebx
  000eb	8b f0		 mov	 esi, eax
  000ed	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  000f2	83 c4 04	 add	 esp, 4
  000f5	85 c0		 test	 eax, eax
  000f7	0f 84 0d 01 00
	00		 je	 $LN13@NpcCastleC
  000fd	56		 push	 esi
  000fe	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00103	83 c4 04	 add	 esp, 4
  00106	85 c0		 test	 eax, eax
  00108	0f 84 fc 00 00
	00		 je	 $LN13@NpcCastleC

; 1442 : 		}
; 1443 : 
; 1444 : 		if( lpObj->m_btCsJoinSide != gObj[iSwitchUser1].m_btCsJoinSide
; 1445 : 			|| lpObj->m_btCsJoinSide != gObj[iSwitchUser2].m_btCsJoinSide )

  0010e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00114	8a 8f 5a 20 00
	00		 mov	 cl, BYTE PTR [edi+8282]
  0011a	69 db 40 27 00
	00		 imul	 ebx, ebx, 10048
  00120	3a 8c 13 5a 20
	00 00		 cmp	 cl, BYTE PTR [ebx+edx+8282]
  00127	0f 85 89 00 00
	00		 jne	 $LN15@NpcCastleC
  0012d	69 c6 40 27 00
	00		 imul	 eax, esi, 10048
  00133	3a 8c 10 5a 20
	00 00		 cmp	 cl, BYTE PTR [eax+edx+8282]
  0013a	75 7a		 jne	 SHORT $LN15@NpcCastleC

; 1449 : 				lpObj->AccountID,lpObj->Name,lpObj->GuildName,gObj[iSwitchUser1].AccountID,gObj[iSwitchUser1].Name,gObj[iSwitchUser2].AccountID,gObj[iSwitchUser2].Name);
; 1450 : 			return TRUE;
; 1451 : 		}
; 1452 : 
; 1453 : 		GCAnsCsAccessCrownState(lpObj->m_Index,0);

  0013c	6a 00		 push	 0
  0013e	ff 37		 push	 DWORD PTR [edi]
  00140	e8 00 00 00 00	 call	 ?GCAnsCsAccessCrownState@@YAXHE@Z ; GCAnsCsAccessCrownState
  00145	83 c4 08	 add	 esp, 8

; 1454 : 		g_CastleSiege.SetCrownUserIndex(lpObj->m_Index);

  00148	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0014d	ff 37		 push	 DWORD PTR [edi]
  0014f	e8 00 00 00 00	 call	 ?SetCrownUserIndex@CCastleSiege@@QAEXH@Z ; CCastleSiege::SetCrownUserIndex

; 1455 : 		g_CastleSiege.SetCrownAccessUserX(lpObj->X);

  00154	0f b6 87 20 01
	00 00		 movzx	 eax, BYTE PTR [edi+288]
  0015b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ?SetCrownAccessUserX@CCastleSiege@@QAEXE@Z ; CCastleSiege::SetCrownAccessUserX

; 1456 : 		g_CastleSiege.SetCrownAccessUserY(lpObj->Y);

  00166	0f b6 87 21 01
	00 00		 movzx	 eax, BYTE PTR [edi+289]
  0016d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00172	50		 push	 eax
  00173	e8 00 00 00 00	 call	 ?SetCrownAccessUserY@CCastleSiege@@QAEXE@Z ; CCastleSiege::SetCrownAccessUserY

; 1457 : 		g_CastleSiege.SetCrownAccessTickCount();

  00178	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0017d	e8 00 00 00 00	 call	 ?SetCrownAccessTickCount@CCastleSiege@@QAEXXZ ; CCastleSiege::SetCrownAccessTickCount

; 1458 : 
; 1459 : 		g_CastleSiege.NotifyAllUserCsProgState(0,lpObj->GuildName);

  00182	8d b7 1c 06 00
	00		 lea	 esi, DWORD PTR [edi+1564]
  00188	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0018d	56		 push	 esi
  0018e	6a 00		 push	 0
  00190	e8 00 00 00 00	 call	 ?NotifyAllUserCsProgState@CCastleSiege@@QAEXEPAD@Z ; CCastleSiege::NotifyAllUserCsProgState

; 1460 : 		LogAddTD("[CastleSiege] [%s][%s] Start to Register Castle Crown (GUILD:%s)",

  00195	56		 push	 esi
  00196	8d 47 5d	 lea	 eax, DWORD PTR [edi+93]
  00199	50		 push	 eax
  0019a	8d 47 52	 lea	 eax, DWORD PTR [edi+82]
  0019d	50		 push	 eax
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@GAPHDLGF@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Start?5to?5@
  001a3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001a9	83 c4 10	 add	 esp, 16			; 00000010H
  001ac	b8 01 00 00 00	 mov	 eax, 1
  001b1	5b		 pop	 ebx
  001b2	5e		 pop	 esi
  001b3	5f		 pop	 edi

; 1466 : 	}
; 1467 : 
; 1468 : #endif
; 1469 : 	return TRUE;
; 1470 : }

  001b4	5d		 pop	 ebp
  001b5	c3		 ret	 0
$LN15@NpcCastleC:

; 1446 : 		{
; 1447 : 			GCAnsCsAccessCrownState(lpObj->m_Index,4);

  001b6	6a 04		 push	 4
  001b8	ff 37		 push	 DWORD PTR [edi]
  001ba	e8 00 00 00 00	 call	 ?GCAnsCsAccessCrownState@@YAXHE@Z ; GCAnsCsAccessCrownState

; 1448 : 			LogAddTD("[CastleSiege] [%s][%s] Failed to Register Castle Crown (GUILD:%s) (S1:%s/%s)(S2:%s/%s)",

  001bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001c5	69 d6 40 27 00
	00		 imul	 edx, esi, 10048
  001cb	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  001ce	03 c2		 add	 eax, edx
  001d0	50		 push	 eax
  001d1	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  001d4	03 c2		 add	 eax, edx
  001d6	50		 push	 eax
  001d7	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  001da	03 c3		 add	 eax, ebx
  001dc	50		 push	 eax
  001dd	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  001e0	03 c3		 add	 eax, ebx
  001e2	50		 push	 eax
  001e3	8d 87 1c 06 00
	00		 lea	 eax, DWORD PTR [edi+1564]
  001e9	50		 push	 eax
  001ea	8d 47 5d	 lea	 eax, DWORD PTR [edi+93]
  001ed	50		 push	 eax
  001ee	8d 47 52	 lea	 eax, DWORD PTR [edi+82]
  001f1	50		 push	 eax
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@PCDLBKGJ@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@
  001f7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001fd	83 c4 28	 add	 esp, 40			; 00000028H
  00200	b8 01 00 00 00	 mov	 eax, 1
  00205	5b		 pop	 ebx
  00206	5e		 pop	 esi
  00207	5f		 pop	 edi

; 1466 : 	}
; 1467 : 
; 1468 : #endif
; 1469 : 	return TRUE;
; 1470 : }

  00208	5d		 pop	 ebp
  00209	c3		 ret	 0
$LN13@NpcCastleC:

; 1437 : 		{
; 1438 : 			GCAnsCsAccessCrownState(lpObj->m_Index,4);

  0020a	6a 04		 push	 4
  0020c	ff 37		 push	 DWORD PTR [edi]
  0020e	e8 00 00 00 00	 call	 ?GCAnsCsAccessCrownState@@YAXHE@Z ; GCAnsCsAccessCrownState

; 1439 : 			LogAddTD("[CastleSiege] [%s][%s] Failed to Register Castle Crown (GUILD:%s)",

  00213	8d 87 1c 06 00
	00		 lea	 eax, DWORD PTR [edi+1564]
  00219	50		 push	 eax
  0021a	8d 47 5d	 lea	 eax, DWORD PTR [edi+93]
  0021d	50		 push	 eax
  0021e	8d 47 52	 lea	 eax, DWORD PTR [edi+82]
  00221	50		 push	 eax
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@IEDCECMD@?$FLCastleSiege?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Failed?5to@
  00227	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0022d	83 c4 18	 add	 esp, 24			; 00000018H

; 1440 : 				lpObj->AccountID,lpObj->Name,lpObj->GuildName);
; 1441 : 			return TRUE;

  00230	b8 01 00 00 00	 mov	 eax, 1
  00235	5b		 pop	 ebx
  00236	5e		 pop	 esi
  00237	5f		 pop	 edi

; 1466 : 	}
; 1467 : 
; 1468 : #endif
; 1469 : 	return TRUE;
; 1470 : }

  00238	5d		 pop	 ebp
  00239	c3		 ret	 0
$LN10@NpcCastleC:

; 1461 : 			lpObj->AccountID,lpObj->Name,lpObj->GuildName);
; 1462 : 	}
; 1463 : 	else if(lpObj->m_Index != iCrownUser)

  0023a	8b 07		 mov	 eax, DWORD PTR [edi]
  0023c	3b c6		 cmp	 eax, esi
  0023e	74 0b		 je	 SHORT $LN16@NpcCastleC

; 1464 : 	{
; 1465 : 		GCAnsCsAccessCrownState(lpObj->m_Index,3);

  00240	6a 03		 push	 3
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?GCAnsCsAccessCrownState@@YAXHE@Z ; GCAnsCsAccessCrownState
  00248	83 c4 08	 add	 esp, 8
$LN16@NpcCastleC:
  0024b	5b		 pop	 ebx
$LN8@NpcCastleC:
  0024c	5e		 pop	 esi
$LN20@NpcCastleC:

; 1440 : 				lpObj->AccountID,lpObj->Name,lpObj->GuildName);
; 1441 : 			return TRUE;

  0024d	b8 01 00 00 00	 mov	 eax, 1
  00252	5f		 pop	 edi

; 1466 : 	}
; 1467 : 
; 1468 : #endif
; 1469 : 	return TRUE;
; 1470 : }

  00253	5d		 pop	 ebp
  00254	c3		 ret	 0
?NpcCastleCrown@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcCastleCrown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCastleGateLever@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCastleGateLever@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcCastleGateLever, COMDAT

; 1329 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1330 : 	if ( (lpObj->m_IfState.use) > 0 )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  0000e	0f 87 b0 00 00
	00		 ja	 $LN19@NpcCastleG

; 1331 : 	{
; 1332 : 		return TRUE;
; 1333 : 	}
; 1334 : 
; 1335 : #if (GS_CASTLE == 1)
; 1336 : 
; 1337 : 	int bControlEnable = FALSE;
; 1338 : 	BYTE btResult = NULL;
; 1339 : 	int iGateIndex = -1;
; 1340 : 
; 1341 : 	if( g_CastleSiege.GetCastleState() == CASTLESIEGE_STATE_STARTSIEGE )

  00014	53		 push	 ebx
  00015	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0001a	e8 00 00 00 00	 call	 ?GetCastleState@CCastleSiege@@QAEHXZ ; CCastleSiege::GetCastleState
  0001f	83 f8 07	 cmp	 eax, 7
  00022	75 10		 jne	 SHORT $LN3@NpcCastleG

; 1342 : 	{
; 1343 : 		if(lpObj->m_btCsJoinSide != 1)

  00024	80 be 5a 20 00
	00 01		 cmp	 BYTE PTR [esi+8282], 1
  0002b	74 2e		 je	 SHORT $LN7@NpcCastleG

; 1344 : 		{
; 1345 : 			btResult = 4;

  0002d	b3 04		 mov	 bl, 4

; 1346 : 			bControlEnable = FALSE;
; 1347 : 		}
; 1348 : 		else

  0002f	83 c8 ff	 or	 eax, -1
  00032	eb 65		 jmp	 SHORT $LN11@NpcCastleG
$LN3@NpcCastleG:

; 1349 : 		{
; 1350 : 			bControlEnable = TRUE;
; 1351 : 		}
; 1352 : 	}
; 1353 : 	else
; 1354 : 	{
; 1355 : 		if(g_CastleSiege.CheckCastleOwnerMember(lpObj->m_Index) == FALSE
; 1356 : 			&& g_CastleSiege.CheckCastleOwnerUnionMember(lpObj->m_Index) == FALSE)

  00034	ff 36		 push	 DWORD PTR [esi]
  00036	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0003b	e8 00 00 00 00	 call	 ?CheckCastleOwnerMember@CCastleSiege@@QAEHH@Z ; CCastleSiege::CheckCastleOwnerMember
  00040	85 c0		 test	 eax, eax
  00042	75 17		 jne	 SHORT $LN7@NpcCastleG
  00044	ff 36		 push	 DWORD PTR [esi]
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0004b	e8 00 00 00 00	 call	 ?CheckCastleOwnerUnionMember@CCastleSiege@@QAEHH@Z ; CCastleSiege::CheckCastleOwnerUnionMember
  00050	85 c0		 test	 eax, eax
  00052	75 07		 jne	 SHORT $LN7@NpcCastleG

; 1357 : 		{
; 1358 : 			btResult = 4;

  00054	b3 04		 mov	 bl, 4

; 1359 : 			bControlEnable = FALSE;
; 1360 : 		}
; 1361 : 		else

  00056	83 c8 ff	 or	 eax, -1
  00059	eb 3e		 jmp	 SHORT $LN11@NpcCastleG
$LN7@NpcCastleG:
  0005b	57		 push	 edi

; 1362 : 		{
; 1363 : 			bControlEnable = TRUE;
; 1364 : 		}
; 1365 : 	}
; 1366 : 
; 1367 : 	if(bControlEnable != FALSE)
; 1368 : 	{
; 1369 : 		if(g_CastleSiege.CheckLeverAlive(lpNpc->m_Index) == TRUE)

  0005c	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]
  0005f	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00064	ff 37		 push	 DWORD PTR [edi]
  00066	e8 00 00 00 00	 call	 ?CheckLeverAlive@CCastleSiege@@QAEHH@Z ; CCastleSiege::CheckLeverAlive
  0006b	83 f8 01	 cmp	 eax, 1
  0006e	75 23		 jne	 SHORT $LN10@NpcCastleG

; 1370 : 		{
; 1371 : 			if(g_CastleSiege.CheckCsGateAlive(lpNpc->m_iCsGateLeverLinkIndex) == TRUE)

  00070	ff b7 54 20 00
	00		 push	 DWORD PTR [edi+8276]
  00076	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0007b	e8 00 00 00 00	 call	 ?CheckCsGateAlive@CCastleSiege@@QAEHH@Z ; CCastleSiege::CheckCsGateAlive
  00080	83 f8 01	 cmp	 eax, 1
  00083	75 0a		 jne	 SHORT $LN12@NpcCastleG

; 1372 : 			{
; 1373 : 				btResult = 1;

  00085	8a d8		 mov	 bl, al

; 1374 : 				iGateIndex = lpNpc->m_iCsGateLeverLinkIndex;

  00087	8b 87 54 20 00
	00		 mov	 eax, DWORD PTR [edi+8276]

; 1375 : 			}
; 1376 : 			else

  0008d	eb 09		 jmp	 SHORT $LN18@NpcCastleG
$LN12@NpcCastleG:

; 1377 : 			{
; 1378 : 				btResult = 2;

  0008f	b3 02		 mov	 bl, 2

; 1379 : 			}
; 1380 : 		}
; 1381 : 		else

  00091	eb 02		 jmp	 SHORT $LN20@NpcCastleG
$LN10@NpcCastleG:

; 1382 : 		{
; 1383 : 			btResult = 3;

  00093	b3 03		 mov	 bl, 3
$LN20@NpcCastleG:
  00095	83 c8 ff	 or	 eax, -1
$LN18@NpcCastleG:
  00098	5f		 pop	 edi
$LN11@NpcCastleG:

; 1384 : 		}
; 1385 : 	}
; 1386 : 
; 1387 : 	GCAnsCsGateState(lpObj->m_Index,btResult,iGateIndex);

  00099	50		 push	 eax
  0009a	0f b6 c3	 movzx	 eax, bl
  0009d	50		 push	 eax
  0009e	ff 36		 push	 DWORD PTR [esi]
  000a0	e8 00 00 00 00	 call	 ?GCAnsCsGateState@@YAXHHH@Z ; GCAnsCsGateState
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1388 : 
; 1389 : 	if(btResult != 1)

  000a8	80 fb 01	 cmp	 bl, 1
  000ab	5b		 pop	 ebx
  000ac	75 16		 jne	 SHORT $LN19@NpcCastleG

; 1390 : 	{
; 1391 : 		return TRUE;
; 1392 : 	}
; 1393 : 	else
; 1394 : 	{
; 1395 : 		lpObj->m_IfState.use = 1;
; 1396 : 		lpObj->m_IfState.type = 12;

  000ae	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  000b4	25 3d 03 ff ff	 and	 eax, -64707		; ffff033dH
  000b9	0d 01 03 00 00	 or	 eax, 769		; 00000301H
  000be	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax
$LN19@NpcCastleG:

; 1397 : 	}
; 1398 : #endif
; 1399 : 
; 1400 : 	return TRUE;

  000c4	b8 01 00 00 00	 mov	 eax, 1
  000c9	5e		 pop	 esi

; 1401 : }

  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
?NpcCastleGateLever@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcCastleGateLever
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcCastleGuard@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcCastleGuard@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcCastleGuard, COMDAT

; 1293 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]

; 1294 : 	if ( (lpObj->m_IfState.use ) > 0 )

  00018	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  0001f	77 59		 ja	 SHORT $LN5@NpcCastleG

; 1295 : 	{
; 1296 : 		return TRUE;
; 1297 : 	}
; 1298 : 
; 1299 : #if (GS_CASTLE == 1)
; 1300 : 
; 1301 : 	if( g_CastleSiege.GetCastleState() == CASTLESIEGE_STATE_STARTSIEGE)

  00021	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00026	e8 00 00 00 00	 call	 ?GetCastleState@CCastleSiege@@QAEHXZ ; CCastleSiege::GetCastleState
  0002b	83 f8 07	 cmp	 eax, 7
  0002e	75 1d		 jne	 SHORT $LN3@NpcCastleG

; 1302 : 	{
; 1303 : 		ChatTargetSend(lpNpc,lMsg.Get(MSGGET(6,87)),lpObj->m_Index);

  00030	ff 36		 push	 DWORD PTR [esi]
  00032	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00037	68 57 06 00 00	 push	 1623			; 00000657H
  0003c	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00041	50		 push	 eax
  00042	57		 push	 edi
  00043	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1304 : 		return TRUE;

  0004b	eb 2d		 jmp	 SHORT $LN5@NpcCastleG
$LN3@NpcCastleG:

; 1305 : 	}
; 1306 : 
; 1307 : #endif
; 1308 : 
; 1309 : 	PMSG_TALKRESULT pMsg;
; 1310 : 
; 1311 : 	pMsg.h.c = 0xC3;
; 1312 : 	pMsg.h.headcode = 0x30;
; 1313 : 	pMsg.h.size = sizeof(pMsg);
; 1314 : 	pMsg.result = 0x0D;
; 1315 : 
; 1316 : 	DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  0004d	6a 0b		 push	 11			; 0000000bH
  0004f	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00052	c7 45 f0 c3 0b
	30 0d		 mov	 DWORD PTR _pMsg$[ebp], 221252547 ; 0d300bc3H
  00059	50		 push	 eax
  0005a	ff 36		 push	 DWORD PTR [esi]
  0005c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1317 : 
; 1318 : 	lpObj->m_IfState.use = 1;
; 1319 : 	lpObj->m_IfState.type = 12;

  00061	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	25 3d 03 ff ff	 and	 eax, -64707		; ffff033dH
  0006f	0d 01 03 00 00	 or	 eax, 769		; 00000301H
  00074	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax
$LN5@NpcCastleG:

; 1320 : 
; 1321 : 
; 1322 : 	return TRUE;
; 1323 : }

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	b8 01 00 00 00	 mov	 eax, 1
  00082	5f		 pop	 edi
  00083	33 cd		 xor	 ecx, ebp
  00085	5e		 pop	 esi
  00086	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
?NpcCastleGuard@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcCastleGuard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcElderCircle@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcElderCircle@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcElderCircle, COMDAT

; 1222 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]

; 1223 : #if (GS_CASTLE == 1)
; 1224 : 	if ( (lpObj->m_IfState.use ) > 0 )

  00018	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  0001f	0f 87 52 01 00
	00		 ja	 $LN15@NpcElderCi

; 1225 : 	{
; 1226 : 		return TRUE;
; 1227 : 	}
; 1228 : 
; 1229 : 	if( g_CastleSiege.GetCastleState() == CASTLESIEGE_STATE_STARTSIEGE)

  00025	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0002a	e8 00 00 00 00	 call	 ?GetCastleState@CCastleSiege@@QAEHXZ ; CCastleSiege::GetCastleState
  0002f	83 f8 07	 cmp	 eax, 7
  00032	75 20		 jne	 SHORT $LN3@NpcElderCi

; 1230 : 	{
; 1231 : 		ChatTargetSend(lpNpc,lMsg.Get(MSGGET(6,85)),lpObj->m_Index);

  00034	ff 36		 push	 DWORD PTR [esi]
  00036	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0003b	68 55 06 00 00	 push	 1621			; 00000655H
  00040	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00045	50		 push	 eax
  00046	57		 push	 edi
  00047	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 : 		return TRUE;

  0004f	e9 23 01 00 00	 jmp	 $LN15@NpcElderCi
$LN3@NpcElderCi:
  00054	53		 push	 ebx

; 1233 : 	}
; 1234 : 
; 1235 : 	if( strcmp(lpObj->GuildName,"") == NULL)

  00055	8d 9e 1c 06 00
	00		 lea	 ebx, DWORD PTR [esi+1564]
  0005b	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00060	8b c3		 mov	 eax, ebx
$LL9@NpcElderCi:
  00062	8a 10		 mov	 dl, BYTE PTR [eax]
  00064	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00066	75 1a		 jne	 SHORT $LN10@NpcElderCi
  00068	84 d2		 test	 dl, dl
  0006a	74 12		 je	 SHORT $LN11@NpcElderCi
  0006c	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0006f	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00072	75 0e		 jne	 SHORT $LN10@NpcElderCi
  00074	83 c0 02	 add	 eax, 2
  00077	83 c1 02	 add	 ecx, 2
  0007a	84 d2		 test	 dl, dl
  0007c	75 e4		 jne	 SHORT $LL9@NpcElderCi
$LN11@NpcElderCi:
  0007e	33 c0		 xor	 eax, eax
  00080	eb 05		 jmp	 SHORT $LN12@NpcElderCi
$LN10@NpcElderCi:
  00082	1b c0		 sbb	 eax, eax
  00084	83 c8 01	 or	 eax, 1
$LN12@NpcElderCi:
  00087	85 c0		 test	 eax, eax
  00089	0f 84 cc 00 00
	00		 je	 $LN6@NpcElderCi

; 1236 : 	{
; 1237 : 		ChatTargetSend(lpNpc,lMsg.Get(MSGGET(6,86)),lpObj->m_Index);
; 1238 : 		return TRUE;
; 1239 : 	}
; 1240 : 
; 1241 : 	if( g_CastleSiege.CheckGuildOwnCastle(lpObj->GuildName) == FALSE
; 1242 : 		|| (lpObj->GuildStatus != G_MASTER && lpObj->GuildStatus != G_SUB_MASTER))

  0008f	53		 push	 ebx
  00090	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00095	e8 00 00 00 00	 call	 ?CheckGuildOwnCastle@CCastleSiege@@QAEHPAD@Z ; CCastleSiege::CheckGuildOwnCastle
  0009a	85 c0		 test	 eax, eax
  0009c	0f 84 b9 00 00
	00		 je	 $LN6@NpcElderCi
  000a2	8b 86 28 06 00
	00		 mov	 eax, DWORD PTR [esi+1576]
  000a8	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  000ad	74 09		 je	 SHORT $LN5@NpcElderCi
  000af	83 f8 40	 cmp	 eax, 64			; 00000040H
  000b2	0f 85 a3 00 00
	00		 jne	 $LN6@NpcElderCi
$LN5@NpcElderCi:

; 1245 : 		return TRUE;
; 1246 : 	}
; 1247 : 
; 1248 : 	PMSG_TALKRESULT pMsg;
; 1249 : 
; 1250 : 	pMsg.h.c = 0xC3;
; 1251 : 	pMsg.h.headcode = 0x30;
; 1252 : 	pMsg.h.size = sizeof(pMsg);
; 1253 : 	pMsg.result = 0x0C;
; 1254 : 
; 1255 : 	lpObj->m_IfState.use = 1;
; 1256 : 	lpObj->m_IfState.type = 12;

  000b8	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  000be	b1 0b		 mov	 cl, 11			; 0000000bH
  000c0	25 3d 03 ff ff	 and	 eax, -64707		; ffff033dH
  000c5	c7 45 f0 c3 0b
	30 0c		 mov	 DWORD PTR _pMsg$[ebp], 204475331 ; 0c300bc3H
  000cc	0d 01 03 00 00	 or	 eax, 769		; 00000301H

; 1257 : 
; 1258 : 	pMsg.level1 = 0;

  000d1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pMsg$[ebp+4], 0
  000d8	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 1259 : 	pMsg.level2 = 0;
; 1260 : 	pMsg.level3 = 0;
; 1261 : 	pMsg.level4 = 0;
; 1262 : 	pMsg.level5 = 0;
; 1263 : 	pMsg.level6 = 0;
; 1264 : 
; 1265 : 	if( bCanChaosBox == TRUE )

  000de	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  000e5	66 c7 45 f8 00
	00		 mov	 WORD PTR _pMsg$[ebp+8], 0
  000eb	75 5d		 jne	 SHORT $LN7@NpcElderCi

; 1266 : 	{
; 1267 : 		lpObj->m_IfState.type = 7;
; 1268 : 		lpObj->bIsChaosMixCompleted = FALSE;
; 1269 : 		pMsg.level1 = 1;
; 1270 : 
; 1271 : 		GCAnsCsMapSvrTaxInfo(lpObj->m_Index,1,g_CastleSiegeSync.GetTaxRateChaos(lpObj->m_Index));

  000ed	ff 36		 push	 DWORD PTR [esi]
  000ef	25 ff 01 ff ff	 and	 eax, -65025		; ffff01ffH
  000f4	c6 86 09 16 00
	00 00		 mov	 BYTE PTR [esi+5641], 0
  000fb	0d c0 01 00 00	 or	 eax, 448		; 000001c0H
  00100	c6 45 f4 01	 mov	 BYTE PTR _pMsg$[ebp+4], 1
  00104	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  00109	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax
  0010f	e8 00 00 00 00	 call	 ?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::GetTaxRateChaos
  00114	50		 push	 eax
  00115	6a 01		 push	 1
  00117	ff 36		 push	 DWORD PTR [esi]
  00119	e8 00 00 00 00	 call	 ?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z ; GCAnsCsMapSvrTaxInfo

; 1272 : 		gObjInventoryTrans(lpObj->m_Index);

  0011e	ff 36		 push	 DWORD PTR [esi]
  00120	e8 00 00 00 00	 call	 ?gObjInventoryTrans@@YAHH@Z ; gObjInventoryTrans

; 1273 : 		LogAddTD("[%s][%s] Open Chaos Box",

  00125	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00128	50		 push	 eax
  00129	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0012c	50		 push	 eax
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1274 : 			lpObj->AccountID,lpObj->Name);
; 1275 : 
; 1276 : 		gObjItemTextSave(lpObj);

  00138	56		 push	 esi
  00139	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 1277 : 		gObjWarehouseTextSave(lpObj);

  0013e	56		 push	 esi
  0013f	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  00144	8a 4d f1	 mov	 cl, BYTE PTR _pMsg$[ebp+1]
  00147	83 c4 24	 add	 esp, 36			; 00000024H
$LN7@NpcElderCi:

; 1278 : 	}
; 1279 : 
; 1280 : 	DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  0014a	0f b6 c1	 movzx	 eax, cl
  0014d	50		 push	 eax
  0014e	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00151	50		 push	 eax
  00152	ff 36		 push	 DWORD PTR [esi]
  00154	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1281 : #endif
; 1282 : 
; 1283 : 
; 1284 : 
; 1285 : 	return TRUE;

  00159	eb 18		 jmp	 SHORT $LN14@NpcElderCi
$LN6@NpcElderCi:

; 1243 : 	{
; 1244 : 		ChatTargetSend(lpNpc,lMsg.Get(MSGGET(6,86)),lpObj->m_Index);

  0015b	ff 36		 push	 DWORD PTR [esi]
  0015d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00162	68 56 06 00 00	 push	 1622			; 00000656H
  00167	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0016c	50		 push	 eax
  0016d	57		 push	 edi
  0016e	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
$LN14@NpcElderCi:
  00173	83 c4 0c	 add	 esp, 12			; 0000000cH
  00176	5b		 pop	 ebx
$LN15@NpcElderCi:

; 1286 : }

  00177	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017a	b8 01 00 00 00	 mov	 eax, 1
  0017f	5f		 pop	 edi
  00180	33 cd		 xor	 ecx, ebp
  00182	5e		 pop	 esi
  00183	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c3		 ret	 0
?NpcElderCircle@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcElderCircle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSiegeMachine_Defense@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pResult$ = -8						; size = 8
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSiegeMachine_Defense@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcSiegeMachine_Defense, COMDAT

; 1175 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi

; 1176 : 	if ( (lpObj->m_IfState.use ) > 0 )

  00007	8b 7d 0c	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000a	f6 87 b8 11 00
	00 03		 test	 BYTE PTR [edi+4536], 3
  00011	0f 87 94 00 00
	00		 ja	 $LN7@NpcSiegeMa

; 1177 : 	{
; 1178 : 		return TRUE;
; 1179 : 	}
; 1180 : 
; 1181 : 	PMSG_ANS_USE_WEAPON_INTERFACE pResult = {0};

  00017	56		 push	 esi
  00018	33 c0		 xor	 eax, eax
  0001a	c6 45 f8 00	 mov	 BYTE PTR _pResult$[ebp], 0

; 1182 : 
; 1183 : 	PHeadSubSetB((LPBYTE)&pResult, 0xB7, 0x00, sizeof(pResult));

  0001e	6a 08		 push	 8
  00020	50		 push	 eax
  00021	89 45 f9	 mov	 DWORD PTR _pResult$[ebp+1], eax
  00024	66 89 45 fd	 mov	 WORD PTR _pResult$[ebp+5], ax
  00028	88 45 ff	 mov	 BYTE PTR _pResult$[ebp+7], al
  0002b	8d 45 f8	 lea	 eax, DWORD PTR _pResult$[ebp]
  0002e	68 b7 00 00 00	 push	 183			; 000000b7H
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 1184 : 
; 1185 : 	pResult.btResult = 0;
; 1186 : 	pResult.btWeaponType = 2;
; 1187 : 	pResult.btObjIndexH = SET_NUMBERH(lpNpc->m_Index);

  00039	8b 75 08	 mov	 esi, DWORD PTR _lpNpc$[ebp]
  0003c	66 c7 45 fc 00
	02		 mov	 WORD PTR _pResult$[ebp+4], 512 ; 00000200H
  00042	8b 06		 mov	 eax, DWORD PTR [esi]

; 1188 : 	pResult.btObjIndexL = SET_NUMBERL(lpNpc->m_Index);
; 1189 : 
; 1190 : 	if ( gObjIsConnectedGP(lpNpc->m_iWeaponUser) == FALSE )

  00044	ff b6 60 20 00
	00		 push	 DWORD PTR [esi+8288]
  0004a	c1 e8 08	 shr	 eax, 8
  0004d	88 45 fe	 mov	 BYTE PTR _pResult$[ebp+6], al
  00050	8a 06		 mov	 al, BYTE PTR [esi]
  00052	88 45 ff	 mov	 BYTE PTR _pResult$[ebp+7], al
  00055	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0005a	83 c4 14	 add	 esp, 20			; 00000014H
  0005d	85 c0		 test	 eax, eax
  0005f	75 0d		 jne	 SHORT $LN3@NpcSiegeMa

; 1191 : 	{
; 1192 : 		lpNpc->m_iWeaponUser = 0;

  00061	89 86 60 20 00
	00		 mov	 DWORD PTR [esi+8288], eax

; 1193 : 		lpNpc->m_btWeaponState = 1;

  00067	c6 86 5d 20 00
	00 01		 mov	 BYTE PTR [esi+8285], 1
$LN3@NpcSiegeMa:

; 1194 : 	}
; 1195 : 
; 1196 : 	lpNpc->m_btWeaponState = 1;
; 1197 : 
; 1198 : 
; 1199 : 	if ( lpNpc->m_btWeaponState == 1 )
; 1200 : 	{
; 1201 : 		pResult.btResult = 1;
; 1202 : 		lpNpc->m_btWeaponState = 2;

  0006e	c6 86 5d 20 00
	00 02		 mov	 BYTE PTR [esi+8285], 2

; 1203 : 		lpNpc->m_iWeaponUser = lpObj->m_Index;

  00075	8b 07		 mov	 eax, DWORD PTR [edi]
  00077	89 86 60 20 00
	00		 mov	 DWORD PTR [esi+8288], eax

; 1204 : 
; 1205 : 		DataSend(lpObj->m_Index, (LPBYTE)&pResult, pResult.h.size);

  0007d	0f b6 45 f9	 movzx	 eax, BYTE PTR _pResult$[ebp+1]
  00081	50		 push	 eax
  00082	8d 45 f8	 lea	 eax, DWORD PTR _pResult$[ebp]
  00085	c6 45 fc 01	 mov	 BYTE PTR _pResult$[ebp+4], 1
  00089	50		 push	 eax
  0008a	ff 37		 push	 DWORD PTR [edi]
  0008c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1206 : 
; 1207 : 		lpObj->m_IfState.use = 1;
; 1208 : 		lpObj->m_IfState.type = 16;

  00091	8b 87 b8 11 00
	00		 mov	 eax, DWORD PTR [edi+4536]
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	25 3d 04 ff ff	 and	 eax, -64451		; ffff043dH
  0009f	0d 01 04 00 00	 or	 eax, 1025		; 00000401H
  000a4	89 87 b8 11 00
	00		 mov	 DWORD PTR [edi+4536], eax
  000aa	5e		 pop	 esi
$LN7@NpcSiegeMa:

; 1209 : 	}
; 1210 : 	else
; 1211 : 	{
; 1212 : 		DataSend(lpObj->m_Index, (LPBYTE)&pResult, pResult.h.size);
; 1213 : 	}
; 1214 : 
; 1215 : 	return TRUE;

  000ab	b8 01 00 00 00	 mov	 eax, 1
  000b0	5f		 pop	 edi

; 1216 : }

  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
?NpcSiegeMachine_Defense@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcSiegeMachine_Defense
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcSiegeMachine_Attack@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pResult$ = -8						; size = 8
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcSiegeMachine_Attack@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcSiegeMachine_Attack, COMDAT

; 1129 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi

; 1130 : 	if ( (lpObj->m_IfState.use) > 0 )

  00007	8b 7d 0c	 mov	 edi, DWORD PTR _lpObj$[ebp]
  0000a	f6 87 b8 11 00
	00 03		 test	 BYTE PTR [edi+4536], 3
  00011	0f 87 94 00 00
	00		 ja	 $LN7@NpcSiegeMa

; 1131 : 	{
; 1132 : 		return TRUE;
; 1133 : 	}
; 1134 : 
; 1135 : 	PMSG_ANS_USE_WEAPON_INTERFACE pResult = {0};

  00017	56		 push	 esi
  00018	33 c0		 xor	 eax, eax
  0001a	c6 45 f8 00	 mov	 BYTE PTR _pResult$[ebp], 0

; 1136 : 
; 1137 : 	PHeadSubSetB((LPBYTE)&pResult, 0xB7, 0x00, sizeof(pResult));

  0001e	6a 08		 push	 8
  00020	50		 push	 eax
  00021	89 45 f9	 mov	 DWORD PTR _pResult$[ebp+1], eax
  00024	66 89 45 fd	 mov	 WORD PTR _pResult$[ebp+5], ax
  00028	88 45 ff	 mov	 BYTE PTR _pResult$[ebp+7], al
  0002b	8d 45 f8	 lea	 eax, DWORD PTR _pResult$[ebp]
  0002e	68 b7 00 00 00	 push	 183			; 000000b7H
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 1138 : 
; 1139 : 	pResult.btResult = 0;
; 1140 : 	pResult.btWeaponType = 1;
; 1141 : 	pResult.btObjIndexH = SET_NUMBERH(lpNpc->m_Index);

  00039	8b 75 08	 mov	 esi, DWORD PTR _lpNpc$[ebp]
  0003c	66 c7 45 fc 00
	01		 mov	 WORD PTR _pResult$[ebp+4], 256 ; 00000100H
  00042	8b 06		 mov	 eax, DWORD PTR [esi]

; 1142 : 	pResult.btObjIndexL = SET_NUMBERL(lpNpc->m_Index);
; 1143 : 
; 1144 : 	if ( gObjIsConnectedGP(lpNpc->m_iWeaponUser) == FALSE )

  00044	ff b6 60 20 00
	00		 push	 DWORD PTR [esi+8288]
  0004a	c1 e8 08	 shr	 eax, 8
  0004d	88 45 fe	 mov	 BYTE PTR _pResult$[ebp+6], al
  00050	8a 06		 mov	 al, BYTE PTR [esi]
  00052	88 45 ff	 mov	 BYTE PTR _pResult$[ebp+7], al
  00055	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0005a	83 c4 14	 add	 esp, 20			; 00000014H
  0005d	85 c0		 test	 eax, eax
  0005f	75 0d		 jne	 SHORT $LN3@NpcSiegeMa

; 1145 : 	{
; 1146 : 		lpNpc->m_iWeaponUser = 0;

  00061	89 86 60 20 00
	00		 mov	 DWORD PTR [esi+8288], eax

; 1147 : 		lpNpc->m_btWeaponState = 1;

  00067	c6 86 5d 20 00
	00 01		 mov	 BYTE PTR [esi+8285], 1
$LN3@NpcSiegeMa:

; 1148 : 	}
; 1149 : 
; 1150 : 	lpNpc->m_btWeaponState = 1;
; 1151 : 
; 1152 : 
; 1153 : 	if ( lpNpc->m_btWeaponState == 1 )
; 1154 : 	{
; 1155 : 		pResult.btResult = 1;
; 1156 : 		lpNpc->m_btWeaponState = 2;

  0006e	c6 86 5d 20 00
	00 02		 mov	 BYTE PTR [esi+8285], 2

; 1157 : 		lpNpc->m_iWeaponUser = lpObj->m_Index;

  00075	8b 07		 mov	 eax, DWORD PTR [edi]
  00077	89 86 60 20 00
	00		 mov	 DWORD PTR [esi+8288], eax

; 1158 : 
; 1159 : 		DataSend(lpObj->m_Index, (LPBYTE)&pResult, pResult.h.size);

  0007d	0f b6 45 f9	 movzx	 eax, BYTE PTR _pResult$[ebp+1]
  00081	50		 push	 eax
  00082	8d 45 f8	 lea	 eax, DWORD PTR _pResult$[ebp]
  00085	c6 45 fc 01	 mov	 BYTE PTR _pResult$[ebp+4], 1
  00089	50		 push	 eax
  0008a	ff 37		 push	 DWORD PTR [edi]
  0008c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1160 : 
; 1161 : 		lpObj->m_IfState.use = 1;
; 1162 : 		lpObj->m_IfState.type = 15;

  00091	8b 87 b8 11 00
	00		 mov	 eax, DWORD PTR [edi+4536]
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	25 fd 03 ff ff	 and	 eax, -64515		; ffff03fdH
  0009f	0d c1 03 00 00	 or	 eax, 961		; 000003c1H
  000a4	89 87 b8 11 00
	00		 mov	 DWORD PTR [edi+4536], eax
  000aa	5e		 pop	 esi
$LN7@NpcSiegeMa:

; 1163 : 	}
; 1164 : 	else
; 1165 : 	{
; 1166 : 		DataSend(lpObj->m_Index, (LPBYTE)&pResult, pResult.h.size);
; 1167 : 	}
; 1168 : 
; 1169 : 	return TRUE;

  000ab	b8 01 00 00 00	 mov	 eax, 1
  000b0	5f		 pop	 edi

; 1170 : }

  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
?NpcSiegeMachine_Attack@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcSiegeMachine_Attack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcJewelMixDealer@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcJewelMixDealer@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcJewelMixDealer, COMDAT

; 1086 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1087 : 	if ( bCanChaosBox == TRUE )

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	75 55		 jne	 SHORT $LN2@NpcJewelMi

; 1088 : 	{
; 1089 : 		if ( (lpObj->m_IfState.use) > 0 )

  0001d	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  00024	77 4c		 ja	 SHORT $LN2@NpcJewelMi

; 1090 : 		{
; 1091 : 			return TRUE;
; 1092 : 		}
; 1093 : 
; 1094 : 		PMSG_TALKRESULT pMsg;
; 1095 : 
; 1096 : 		pMsg.h.c = 0xC3;
; 1097 : 		pMsg.h.headcode = 0x30;
; 1098 : 		pMsg.h.size = sizeof(pMsg);
; 1099 : 		pMsg.result = 0x09;
; 1100 : 
; 1101 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  00026	6a 0b		 push	 11			; 0000000bH
  00028	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  0002b	c7 45 f0 c3 0b
	30 09		 mov	 DWORD PTR _pMsg$1[ebp], 154143683 ; 09300bc3H
  00032	50		 push	 eax
  00033	ff 36		 push	 DWORD PTR [esi]
  00035	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 1102 : 
; 1103 : 		lpObj->m_IfState.use = 1;
; 1104 : 		lpObj->m_IfState.type = 12;

  0003a	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00040	25 3d 03 ff ff	 and	 eax, -64707		; ffff033dH
  00045	0d 01 03 00 00	 or	 eax, 769		; 00000301H
  0004a	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 1105 : 
; 1106 : 		LogAddTD("[JewelMix] [%s][%s] Jewel Mix Dealer Start", lpObj->AccountID, lpObj->Name);

  00050	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00053	50		 push	 eax
  00054	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  00057	50		 push	 eax
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@KMBDNKMH@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Jewel?5Mix?5De@
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1107 : 
; 1108 : 		gObjItemTextSave(lpObj);

  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 1109 : 		gObjWarehouseTextSave(lpObj);

  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  0006f	83 c4 20	 add	 esp, 32			; 00000020H
$LN2@NpcJewelMi:

; 1110 : 
; 1111 : 	}
; 1112 : 
; 1113 : 	return TRUE;
; 1114 : }

  00072	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00075	b8 01 00 00 00	 mov	 eax, 1
  0007a	33 cd		 xor	 ecx, ebp
  0007c	5e		 pop	 esi
  0007d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?NpcJewelMixDealer@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcJewelMixDealer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDarkSpiritTrainer@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDarkSpiritTrainer@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcDarkSpiritTrainer, COMDAT

; 1037 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1038 : 	if ( bCanChaosBox == TRUE )

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bCanChaosBox@@3HA, 1 ; bCanChaosBox
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	0f 85 05 01 00
	00		 jne	 $LN2@NpcDarkSpi

; 1039 : 	{
; 1040 : 		PMSG_TALKRESULT pMsg;
; 1041 : 
; 1042 : 		pMsg.h.c = 0xC3;
; 1043 : 		pMsg.h.headcode = 0x30;
; 1044 : 		pMsg.h.size = sizeof(pMsg);
; 1045 : 		
; 1046 : 		if ( lpObj->m_bPShopOpen == true )

  00021	80 be 5c 12 00
	00 01		 cmp	 BYTE PTR [esi+4700], 1
  00028	66 c7 45 f0 c3
	0b		 mov	 WORD PTR _pMsg$1[ebp], 3011 ; 00000bc3H
  0002e	c6 45 f2 30	 mov	 BYTE PTR _pMsg$1[ebp+2], 48 ; 00000030H
  00032	75 46		 jne	 SHORT $LN3@NpcDarkSpi

; 1047 : 		{
; 1048 : 			LogAdd("[%s][%s] is Already Opening PShop, ChaosBox Failed",

  00034	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00037	50		 push	 eax
  00038	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KJEEOOOJ@?$FL?$CFs?$FN?$FL?$CFs?$FN?5is?5Already?5Opening?5PSho@
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1049 : 				lpObj->AccountID, lpObj->Name);
; 1050 : 			GCServerMsgStringSend(lMsg.Get(MSGGET(4, 194)), lpObj->m_Index, 1);

  0004a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004f	6a 01		 push	 1
  00051	ff 36		 push	 DWORD PTR [esi]
  00053	68 c2 04 00 00	 push	 1218			; 000004c2H
  00058	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1076 : 	}
; 1077 : 
; 1078 : 	return TRUE;

  00066	b8 01 00 00 00	 mov	 eax, 1
  0006b	5e		 pop	 esi

; 1079 : }

  0006c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006f	33 cd		 xor	 ecx, ebp
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
$LN3@NpcDarkSpi:

; 1051 : 
; 1052 : 			return TRUE;
; 1053 : 		}
; 1054 : 
; 1055 : 		lpObj->m_IfState.type = 13;
; 1056 : 		lpObj->m_IfState.state = 0;
; 1057 : 		lpObj->m_IfState.use = 1;

  0007a	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  00080	25 41 03 ff ff	 and	 eax, -64703		; ffff0341H

; 1058 : 		
; 1059 : 		pMsg.result = 0x07;
; 1060 : 		lpObj->bIsChaosMixCompleted = false;

  00085	c6 86 09 16 00
	00 00		 mov	 BYTE PTR [esi+5641], 0
  0008c	0d 41 03 00 00	 or	 eax, 833		; 00000341H
  00091	c6 45 f3 07	 mov	 BYTE PTR _pMsg$1[ebp+3], 7
  00095	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 1061 : 		pMsg.level1 = gDQChaosSuccessRateLevel1;

  0009b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel1@@3HA
  000a2	88 45 f4	 mov	 BYTE PTR _pMsg$1[ebp+4], al

; 1062 : 		pMsg.level2 = gDQChaosSuccessRateLevel2;

  000a5	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel2@@3HA
  000ac	88 45 f5	 mov	 BYTE PTR _pMsg$1[ebp+5], al

; 1063 : 		pMsg.level3 = gDQChaosSuccessRateLevel3;

  000af	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel3@@3HA
  000b6	88 45 f6	 mov	 BYTE PTR _pMsg$1[ebp+6], al

; 1064 : 		pMsg.level4 = gDQChaosSuccessRateLevel4;

  000b9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel4@@3HA
  000c0	88 45 f7	 mov	 BYTE PTR _pMsg$1[ebp+7], al

; 1065 : 		pMsg.level5 = gDQChaosSuccessRateLevel5;

  000c3	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel5@@3HA
  000ca	88 45 f8	 mov	 BYTE PTR _pMsg$1[ebp+8], al

; 1066 : 		pMsg.level6 = gDQChaosSuccessRateLevel6;

  000cd	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?gDQChaosSuccessRateLevel6@@3HA
  000d4	88 45 f9	 mov	 BYTE PTR _pMsg$1[ebp+9], al

; 1067 : 
; 1068 : 		DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000d7	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  000da	6a 0b		 push	 11			; 0000000bH
  000dc	50		 push	 eax
  000dd	ff 36		 push	 DWORD PTR [esi]
  000df	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1069 : 
; 1070 : 		GCAnsCsMapSvrTaxInfo(lpObj->m_Index, 1, g_CastleSiegeSync.GetTaxRateChaos(lpObj->m_Index));

  000e7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  000ec	ff 36		 push	 DWORD PTR [esi]
  000ee	e8 00 00 00 00	 call	 ?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::GetTaxRateChaos
  000f3	50		 push	 eax
  000f4	6a 01		 push	 1
  000f6	ff 36		 push	 DWORD PTR [esi]
  000f8	e8 00 00 00 00	 call	 ?GCAnsCsMapSvrTaxInfo@@YAXHEE@Z ; GCAnsCsMapSvrTaxInfo

; 1071 : 		gObjInventoryTrans(lpObj->m_Index);

  000fd	ff 36		 push	 DWORD PTR [esi]
  000ff	e8 00 00 00 00	 call	 ?gObjInventoryTrans@@YAHH@Z ; gObjInventoryTrans

; 1072 : 
; 1073 : 		LogAddTD("[%s][%s] Open Chaos Box", lpObj->AccountID, lpObj->Name);

  00104	8d 46 5d	 lea	 eax, DWORD PTR [esi+93]
  00107	50		 push	 eax
  00108	8d 46 52	 lea	 eax, DWORD PTR [esi+82]
  0010b	50		 push	 eax
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EKFBANFN@?$FL?$CFs?$FN?$FL?$CFs?$FN?5Open?5Chaos?5Box?$AA@
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 1074 : 		gObjItemTextSave(lpObj);

  00117	56		 push	 esi
  00118	e8 00 00 00 00	 call	 ?gObjItemTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjItemTextSave

; 1075 : 		gObjWarehouseTextSave(lpObj);

  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 ?gObjWarehouseTextSave@@YAXPAUOBJECTSTRUCT@@@Z ; gObjWarehouseTextSave
  00123	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@NpcDarkSpi:

; 1079 : }

  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	b8 01 00 00 00	 mov	 eax, 1
  0012e	33 cd		 xor	 ecx, ebp
  00130	5e		 pop	 esi
  00131	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?NpcDarkSpiritTrainer@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcDarkSpiritTrainer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDeviasWeapon@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDeviasWeapon@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcDeviasWeapon, COMDAT

; 1030 : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 1031 : }

  00002	c3		 ret	 0
?NpcDeviasWeapon@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcDeviasWeapon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcRolensiaMadam@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcRolensiaMadam@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcRolensiaMadam, COMDAT

; 1021 : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 1022 : }

  00002	c3		 ret	 0
?NpcRolensiaMadam@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcRolensiaMadam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcAngelMessanger@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcAngelMessanger@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcAngelMessanger, COMDAT

; 938  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR _lpObj$[ebp]

; 939  : 	if ( (lpObj->m_IfState.use ) > 0 )

  00014	f6 87 b8 11 00
	00 03		 test	 BYTE PTR [edi+4536], 3
  0001b	77 26		 ja	 SHORT $LN22@NpcAngelMe

; 940  : 	{
; 941  : 		return TRUE;
; 942  : 	}
; 943  : 
; 944  : 	int iIndex = lpObj->m_Index;

  0001d	8b 17		 mov	 edx, DWORD PTR [edi]

; 945  : 
; 946  : #ifdef BEREZNUK
; 947  : 	if ( gObj[iIndex].m_PK_Level >= 4 && !g_AllowPKEventBC )
; 948  : 	{
; 949  : 		GCServerCmd(iIndex, 0x39, 0, 0);
; 950  : 		return TRUE;
; 951  : 	}
; 952  : #else
; 953  : 
; 954  : #if(ENABLE_FIX_NPCTALKPK == 1)
; 955  : 	if( gObj[iIndex].m_PK_Level >= 4 )

  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00024	69 ca 40 27 00
	00		 imul	 ecx, edx, 10048
  0002a	80 bc 01 19 01
	00 00 04	 cmp	 BYTE PTR [ecx+eax+281], 4
  00032	7c 23		 jl	 SHORT $LN6@NpcAngelMe

; 956  : 	{
; 957  : 		GCServerCmd(iIndex, 0x39, 0, 0);

  00034	6a 00		 push	 0
  00036	6a 00		 push	 0
  00038	6a 39		 push	 57			; 00000039H
  0003a	52		 push	 edx
  0003b	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  00040	83 c4 10	 add	 esp, 16			; 00000010H
$LN22@NpcAngelMe:

; 958  : 		return TRUE;

  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	5f		 pop	 edi

; 1014 : }

  00049	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004c	33 cd		 xor	 ecx, ebp
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN6@NpcAngelMe:
  00057	56		 push	 esi

; 959  : 	}
; 960  : #endif
; 961  : 
; 962  : #endif
; 963  : 
; 964  : 	int iITEM_LEVEL = 0;
; 965  : 
; 966  : 	iITEM_LEVEL = g_BloodCastle.CheckEnterItem(lpObj->m_Index);

  00058	52		 push	 edx
  00059	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  0005e	e8 00 00 00 00	 call	 ?CheckEnterItem@CBloodCastle@@QAEHH@Z ; CBloodCastle::CheckEnterItem
  00063	8b f0		 mov	 esi, eax

; 967  : 
; 968  : 	if ( iITEM_LEVEL != 0 )

  00065	85 f6		 test	 esi, esi
  00067	0f 84 b1 00 00
	00		 je	 $LN7@NpcAngelMe

; 969  : 	{
; 970  : 		if ( iITEM_LEVEL != 10 && g_BloodCastle.CheckEnterLevel(lpObj->m_Index, iITEM_LEVEL-1) )

  0006d	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00070	74 29		 je	 SHORT $LN20@NpcAngelMe
  00072	8d 4e ff	 lea	 ecx, DWORD PTR [esi-1]
  00075	51		 push	 ecx
  00076	ff 37		 push	 DWORD PTR [edi]
  00078	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  0007d	e8 00 00 00 00	 call	 ?CheckEnterLevel@CBloodCastle@@QAEHHH@Z ; CBloodCastle::CheckEnterLevel
  00082	85 c0		 test	 eax, eax
  00084	74 33		 je	 SHORT $LN3@NpcAngelMe

; 971  : 		{
; 972  : 			if ( g_BloodCastle.CheckEnterFreeTicket(lpObj->m_Index) == true )

  00086	ff 37		 push	 DWORD PTR [edi]
  00088	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  0008d	e8 00 00 00 00	 call	 ?CheckEnterFreeTicket@CBloodCastle@@QAE_NH@Z ; CBloodCastle::CheckEnterFreeTicket
  00092	3c 01		 cmp	 al, 1
  00094	75 23		 jne	 SHORT $LN3@NpcAngelMe

; 973  : 			{
; 974  : 				iITEM_LEVEL = 10;

  00096	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
$LN20@NpcAngelMe:
  0009b	53		 push	 ebx

; 975  : 			}
; 976  : 		}
; 977  : 
; 978  : 		if ( iITEM_LEVEL == 10 )
; 979  : 		{
; 980  : 			for (int i=0;i<MAX_CLOACK_LEVEL;i++)

  0009c	33 db		 xor	 ebx, ebx
  0009e	66 90		 npad	 2
$LL4@NpcAngelMe:

; 981  : 			{
; 982  : 				if ( g_BloodCastle.CheckEnterLevel(lpObj->m_Index, i) == FALSE )

  000a0	53		 push	 ebx
  000a1	ff 37		 push	 DWORD PTR [edi]
  000a3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  000a8	e8 00 00 00 00	 call	 ?CheckEnterLevel@CBloodCastle@@QAEHHH@Z ; CBloodCastle::CheckEnterLevel
  000ad	85 c0		 test	 eax, eax
  000af	0f 44 f3	 cmove	 esi, ebx
  000b2	43		 inc	 ebx
  000b3	83 fb 09	 cmp	 ebx, 9
  000b6	7c e8		 jl	 SHORT $LL4@NpcAngelMe
  000b8	5b		 pop	 ebx
$LN3@NpcAngelMe:

; 983  : 				{
; 984  : 					iITEM_LEVEL = i;
; 985  : 				}
; 986  : 			}
; 987  : 		}
; 988  : 
; 989  : 		if ( g_BloodCastle.GetCurrentState(iITEM_LEVEL-1) == BC_STATE_CLOSED && g_BloodCastle.CheckCanEnter(iITEM_LEVEL-1) != false )

  000b9	4e		 dec	 esi
  000ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  000bf	56		 push	 esi
  000c0	e8 00 00 00 00	 call	 ?GetCurrentState@CBloodCastle@@QAEHH@Z ; CBloodCastle::GetCurrentState
  000c5	83 f8 01	 cmp	 eax, 1
  000c8	75 4e		 jne	 SHORT $LN13@NpcAngelMe
  000ca	56		 push	 esi
  000cb	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  000d0	e8 00 00 00 00	 call	 ?CheckCanEnter@CBloodCastle@@QAE_NH@Z ; CBloodCastle::CheckCanEnter
  000d5	84 c0		 test	 al, al
  000d7	74 3f		 je	 SHORT $LN13@NpcAngelMe

; 990  : 		{
; 991  : 			PMSG_TALKRESULT pMsg;
; 992  : 
; 993  : 			pMsg.h.c = 0xC3;
; 994  : 			pMsg.h.headcode = 0x30;
; 995  : 			pMsg.h.size = sizeof(pMsg);
; 996  : 			pMsg.result = 0x06;
; 997  : 
; 998  : 			DataSend(lpObj->m_Index, (LPBYTE)&pMsg, pMsg.h.size);

  000d9	6a 0b		 push	 11			; 0000000bH
  000db	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  000de	c7 45 f0 c3 0b
	30 06		 mov	 DWORD PTR _pMsg$1[ebp], 103812035 ; 06300bc3H
  000e5	50		 push	 eax
  000e6	ff 37		 push	 DWORD PTR [edi]
  000e8	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 999  : 
; 1000 : 			lpObj->m_IfState.use = 1;
; 1001 : 			lpObj->m_IfState.type = 12;

  000ed	8b 87 b8 11 00
	00		 mov	 eax, DWORD PTR [edi+4536]
  000f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f6	25 3d 03 ff ff	 and	 eax, -64707		; ffff033dH
  000fb	0d 01 03 00 00	 or	 eax, 769		; 00000301H
  00100	89 87 b8 11 00
	00		 mov	 DWORD PTR [edi+4536], eax

; 1011 : 	}
; 1012 : 
; 1013 : 	return FALSE;

  00106	33 c0		 xor	 eax, eax
  00108	5e		 pop	 esi
  00109	5f		 pop	 edi

; 1014 : }

  0010a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010d	33 cd		 xor	 ecx, ebp
  0010f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
$LN13@NpcAngelMe:

; 1002 : 		}
; 1003 : 		else
; 1004 : 		{
; 1005 : 			GCServerCmd(lpObj->m_Index, 1, 0x14, 0);

  00118	6a 00		 push	 0
  0011a	6a 14		 push	 20			; 00000014H

; 1006 : 		}
; 1007 : 	}
; 1008 : 	else

  0011c	eb 04		 jmp	 SHORT $LN21@NpcAngelMe
$LN7@NpcAngelMe:

; 1009 : 	{
; 1010 : 		GCServerCmd(lpObj->m_Index, 1, 0x15, 0);

  0011e	6a 00		 push	 0
  00120	6a 15		 push	 21			; 00000015H
$LN21@NpcAngelMe:
  00122	6a 01		 push	 1
  00124	ff 37		 push	 DWORD PTR [edi]
  00126	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd

; 1014 : }

  0012b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012e	83 c4 10	 add	 esp, 16			; 00000010H
  00131	33 cd		 xor	 ecx, ebp
  00133	33 c0		 xor	 eax, eax
  00135	5e		 pop	 esi
  00136	5f		 pop	 edi
  00137	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013c	8b e5		 mov	 esp, ebp
  0013e	5d		 pop	 ebp
  0013f	c3		 ret	 0
?NpcAngelMessanger@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcAngelMessanger
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcAngelKing@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcAngelKing@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcAngelKing, COMDAT

; 816  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 817  : 	int iITEM_LEVEL = 0;
; 818  : 
; 819  : 	if ( (  (lpObj->m_cBloodCastleIndex < 0)?FALSE:(lpObj->m_cBloodCastleIndex > MAX_BLOOD_CASTLE_LEVEL-1)?FALSE:TRUE ) == FALSE )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	8a 8e 36 12 00
	00		 mov	 cl, BYTE PTR [esi+4662]
  0000d	84 c9		 test	 cl, cl
  0000f	0f 88 67 03 00
	00		 js	 $LN23@NpcAngelKi
  00015	33 c0		 xor	 eax, eax
  00017	80 f9 07	 cmp	 cl, 7
  0001a	0f 9e c0	 setle	 al
  0001d	85 c0		 test	 eax, eax
  0001f	0f 84 57 03 00
	00		 je	 $LN23@NpcAngelKi

; 822  : 		return FALSE;
; 823  : 	}
; 824  : 
; 825  : 	LogAddTD("[Blood Castle] (%d) [%s][%s] Talk to Angel King",

  00025	53		 push	 ebx
  00026	57		 push	 edi
  00027	8d 7e 5d	 lea	 edi, DWORD PTR [esi+93]
  0002a	0f be c1	 movsx	 eax, cl
  0002d	57		 push	 edi
  0002e	8d 5e 52	 lea	 ebx, DWORD PTR [esi+82]
  00031	40		 inc	 eax
  00032	53		 push	 ebx
  00033	50		 push	 eax
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@BCJAGFAG@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Tal@
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 826  : 		lpObj->m_cBloodCastleIndex+1, lpObj->AccountID, lpObj->Name);
; 827  : 
; 828  : 	if ( g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_bBC_REWARDED != false )

  0003f	0f be 8e 36 12
	00 00		 movsx	 ecx, BYTE PTR [esi+4662]
  00046	83 c4 10	 add	 esp, 16			; 00000010H
  00049	69 c1 0c 02 00
	00		 imul	 eax, ecx, 524
  0004f	80 b8 66 01 00
	00 00		 cmp	 BYTE PTR ?g_BloodCastle@@3VCBloodCastle@@A[eax+358], 0
  00056	75 37		 jne	 SHORT $LN28@NpcAngelKi

; 829  : 	{
; 830  : 		GCServerCmd(lpObj->m_Index, 1, 0x2E, 0);
; 831  : 		return FALSE;
; 832  : 	}
; 833  : 
; 834  : 	if ( g_BloodCastle.GetCurrentState(lpObj->m_cBloodCastleIndex) != 2 || g_BloodCastle.CheckPlayStart(lpObj->m_cBloodCastleIndex) == false)

  00058	51		 push	 ecx
  00059	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  0005e	e8 00 00 00 00	 call	 ?GetCurrentState@CBloodCastle@@QAEHH@Z ; CBloodCastle::GetCurrentState
  00063	83 f8 02	 cmp	 eax, 2
  00066	0f 85 f9 02 00
	00		 jne	 $LN5@NpcAngelKi
  0006c	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  00073	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?CheckPlayStart@CBloodCastle@@QAE_NH@Z ; CBloodCastle::CheckPlayStart
  0007e	84 c0		 test	 al, al
  00080	0f 84 df 02 00
	00		 je	 $LN5@NpcAngelKi

; 837  : 		return FALSE;
; 838  : 	}
; 839  : 
; 840  : 	if ( lpObj->m_bBloodCastleComplete == true)

  00086	80 be 3c 12 00
	00 01		 cmp	 BYTE PTR [esi+4668], 1
  0008d	75 17		 jne	 SHORT $LN6@NpcAngelKi
$LN28@NpcAngelKi:

; 841  : 	{
; 842  : 		GCServerCmd(lpObj->m_Index, 1, 0x2E, 0);

  0008f	6a 00		 push	 0
  00091	6a 2e		 push	 46			; 0000002eH
  00093	6a 01		 push	 1
  00095	ff 36		 push	 DWORD PTR [esi]
  00097	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  0009c	83 c4 10	 add	 esp, 16			; 00000010H

; 923  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 924  : 			}
; 925  : 
; 926  : 			return FALSE;

  0009f	33 c0		 xor	 eax, eax
  000a1	5f		 pop	 edi
  000a2	5b		 pop	 ebx
  000a3	5e		 pop	 esi

; 927  : 		}
; 928  : 
; 929  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 930  : 	}
; 931  : 	
; 932  : 	return FALSE;
; 933  : }

  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
$LN6@NpcAngelKi:

; 843  : 		return FALSE;
; 844  : 	}
; 845  : 
; 846  : 	if ( iITEM_LEVEL = iITEM_LEVEL = CHECK_LIMIT( g_BloodCastle.CheckQuestItem(lpObj->m_Index), 3)  )

  000a6	ff 36		 push	 DWORD PTR [esi]
  000a8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  000ad	e8 00 00 00 00	 call	 ?CheckQuestItem@CBloodCastle@@QAEHH@Z ; CBloodCastle::CheckQuestItem
  000b2	85 c0		 test	 eax, eax
  000b4	0f 88 21 02 00
	00		 js	 $LN7@NpcAngelKi
  000ba	ff 36		 push	 DWORD PTR [esi]
  000bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  000c1	e8 00 00 00 00	 call	 ?CheckQuestItem@CBloodCastle@@QAEHH@Z ; CBloodCastle::CheckQuestItem
  000c6	33 c9		 xor	 ecx, ecx
  000c8	83 f8 02	 cmp	 eax, 2
  000cb	0f 9e c1	 setle	 cl
  000ce	85 c9		 test	 ecx, ecx
  000d0	0f 84 05 02 00
	00		 je	 $LN7@NpcAngelKi

; 847  : 	{
; 848  : 		if ( lpNpc->m_cBloodCastleIndex != lpObj->m_cBloodCastleIndex )

  000d6	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  000d9	8a 8e 36 12 00
	00		 mov	 cl, BYTE PTR [esi+4662]
  000df	38 88 36 12 00
	00		 cmp	 BYTE PTR [eax+4662], cl
  000e5	0f 85 7a 02 00
	00		 jne	 $LN5@NpcAngelKi

; 849  : 		{
; 850  : 			GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 851  : 			return FALSE;
; 852  : 		}
; 853  : 
; 854  : 		if ( g_BloodCastle.CheckUserBridgeMember(lpObj->m_cBloodCastleIndex, lpObj->m_Index) == false )

  000eb	ff 36		 push	 DWORD PTR [esi]
  000ed	0f be c1	 movsx	 eax, cl
  000f0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?CheckUserBridgeMember@CBloodCastle@@QAE_NHH@Z ; CBloodCastle::CheckUserBridgeMember
  000fb	84 c0		 test	 al, al
  000fd	0f 84 62 02 00
	00		 je	 $LN5@NpcAngelKi

; 855  : 		{
; 856  : 			GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 857  : 			return FALSE;
; 858  : 		}
; 859  : 
; 860  : 		g_BloodCastle.SetUserState(lpObj->m_Index, 2);

  00103	6a 02		 push	 2
  00105	ff 36		 push	 DWORD PTR [esi]
  00107	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  0010c	e8 00 00 00 00	 call	 ?SetUserState@CBloodCastle@@QAEXHH@Z ; CBloodCastle::SetUserState

; 861  : 		g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_iExtraEXP_Win_Quest_Party = lpObj->PartyNumber;

  00111	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  00118	69 c8 0c 02 00
	00		 imul	 ecx, eax, 524
  0011e	8b 86 0c 06 00
	00		 mov	 eax, DWORD PTR [esi+1548]
  00124	89 81 e0 01 00
	00		 mov	 DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+480], eax

; 862  : 		g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_iExtraEXP_Win_Quest_Index = lpObj->m_Index;

  0012a	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  00131	69 c8 0c 02 00
	00		 imul	 ecx, eax, 524
  00137	8b 06		 mov	 eax, DWORD PTR [esi]
  00139	89 81 e4 01 00
	00		 mov	 DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+484], eax

; 863  : 		memcpy(g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szWin_Quest_CharName, lpObj->Name, 10);

  0013f	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  00146	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  0014a	69 c8 0c 02 00
	00		 imul	 ecx, eax, 524
  00150	81 c1 e8 01 00
	00		 add	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A+488
  00156	66 0f d6 01	 movq	 QWORD PTR [ecx], xmm0
  0015a	0f b7 47 08	 movzx	 eax, WORD PTR [edi+8]
  0015e	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 864  : 		memcpy(g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szWin_Quest_AccountID, lpObj->AccountID, 10);

  00162	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  00169	f3 0f 7e 03	 movq	 xmm0, QWORD PTR [ebx]
  0016d	69 c8 0c 02 00
	00		 imul	 ecx, eax, 524
  00173	81 c1 f3 01 00
	00		 add	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A+499
  00179	66 0f d6 01	 movq	 QWORD PTR [ecx], xmm0
  0017d	0f b7 43 08	 movzx	 eax, WORD PTR [ebx+8]
  00181	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 865  : 		g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szWin_Quest_CharName[10] = 0;	// Zero String terminated

  00185	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  0018c	69 c0 0c 02 00
	00		 imul	 eax, eax, 524
  00192	c6 80 f2 01 00
	00 00		 mov	 BYTE PTR ?g_BloodCastle@@3VCBloodCastle@@A[eax+498], 0

; 866  : 		g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szWin_Quest_AccountID[10] = 0;	// Zero String Terminated

  00199	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  001a0	69 c0 0c 02 00
	00		 imul	 eax, eax, 524
  001a6	c6 80 fd 01 00
	00 00		 mov	 BYTE PTR ?g_BloodCastle@@3VCBloodCastle@@A[eax+509], 0

; 867  : 		
; 868  : 		LogAddTD("[Blood Castle] (%d) Blood Castle Quest Succeed Result -> Destroy Castle Door [%s][%s]",

  001ad	0f be 96 36 12
	00 00		 movsx	 edx, BYTE PTR [esi+4662]
  001b4	69 ca 0c 02 00
	00		 imul	 ecx, edx, 524
  001ba	8d 81 b3 01 00
	00		 lea	 eax, DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+435]
  001c0	50		 push	 eax
  001c1	8d 81 a8 01 00
	00		 lea	 eax, DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+424]
  001c7	50		 push	 eax
  001c8	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  001cb	50		 push	 eax
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@CNLFICGI@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@
  001d1	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 869  : 			lpObj->m_cBloodCastleIndex+1, g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szKill_Door_AccountID,
; 870  : 			g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szKill_Door_CharName);
; 871  : 		LogAddTD("[Blood Castle] (%d) Blood Castle Quest Succeed Result -> Destroy Saint Status [%s][%s]",

  001d7	0f be 96 36 12
	00 00		 movsx	 edx, BYTE PTR [esi+4662]
  001de	69 ca 0c 02 00
	00		 imul	 ecx, edx, 524
  001e4	8d 81 c8 01 00
	00		 lea	 eax, DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+456]
  001ea	50		 push	 eax
  001eb	8d 81 a8 01 00
	00		 lea	 eax, DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+424]
  001f1	50		 push	 eax
  001f2	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  001f5	50		 push	 eax
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@ONKNIFFP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@
  001fb	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 872  : 			lpObj->m_cBloodCastleIndex+1, g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szKill_Door_AccountID,	// #error Correct this
; 873  : 			g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szKill_Status_CharName);
; 874  : 		LogAddTD("[Blood Castle] (%d) Blood Castle Quest Succeed Result -> Win Quest [%s][%s]",

  00201	0f be 96 36 12
	00 00		 movsx	 edx, BYTE PTR [esi+4662]
  00208	69 ca 0c 02 00
	00		 imul	 ecx, edx, 524
  0020e	8d 81 e8 01 00
	00		 lea	 eax, DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+488]
  00214	50		 push	 eax
  00215	8d 81 f3 01 00
	00		 lea	 eax, DWORD PTR ?g_BloodCastle@@3VCBloodCastle@@A[ecx+499]
  0021b	50		 push	 eax
  0021c	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  0021f	50		 push	 eax
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@MPNDNNH@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5Blood?5Castle@
  00225	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 875  : 			lpObj->m_cBloodCastleIndex+1, g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szWin_Quest_AccountID,
; 876  : 			g_BloodCastle.m_BridgeData[lpObj->m_cBloodCastleIndex].m_szWin_Quest_CharName);
; 877  : 
; 878  : 		if ( g_BloodCastle.SetBridgeWinner(lpObj->m_cBloodCastleIndex, lpObj->m_Index) == TRUE )

  0022b	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  00232	83 c4 30	 add	 esp, 48			; 00000030H
  00235	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  0023a	ff 36		 push	 DWORD PTR [esi]
  0023c	50		 push	 eax
  0023d	e8 00 00 00 00	 call	 ?SetBridgeWinner@CBloodCastle@@QAE_NHH@Z ; CBloodCastle::SetBridgeWinner
  00242	3c 01		 cmp	 al, 1
  00244	75 70		 jne	 SHORT $LN11@NpcAngelKi

; 879  : 		{
; 880  : 			lpObj->m_bBloodCastleComplete = true;
; 881  : 
; 882  : 			if ( g_BloodCastle.CheckPartyExist(lpObj->m_Index) == FALSE )

  00246	ff 36		 push	 DWORD PTR [esi]
  00248	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  0024d	88 86 3c 12 00
	00		 mov	 BYTE PTR [esi+4668], al
  00253	e8 00 00 00 00	 call	 ?CheckPartyExist@CBloodCastle@@QAE_NH@Z ; CBloodCastle::CheckPartyExist

; 883  : 			{
; 884  : 				GCServerCmd(lpObj->m_Index, 1, 0x17, 0);

  00258	6a 00		 push	 0
  0025a	6a 17		 push	 23			; 00000017H
  0025c	6a 01		 push	 1
  0025e	ff 36		 push	 DWORD PTR [esi]
  00260	84 c0		 test	 al, al
  00262	75 1c		 jne	 SHORT $LN13@NpcAngelKi
  00264	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd

; 885  : 
; 886  : 				LogAddTD("[Blood Castle] (%d) (Account:%s, Name:%s) Succeed Blood Castle Quest",

  00269	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  0026c	57		 push	 edi
  0026d	53		 push	 ebx
  0026e	0f b6 80 23 01
	00 00		 movzx	 eax, BYTE PTR [eax+291]
  00275	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00278	50		 push	 eax
  00279	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JFCICCDP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@

; 887  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 888  : 			}
; 889  : 			else

  0027e	eb 1a		 jmp	 SHORT $LN26@NpcAngelKi
$LN13@NpcAngelKi:

; 890  : 			{
; 891  : 				GCServerCmd(lpObj->m_Index, 1, 0x17, 0);

  00280	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd

; 892  : 				LogAddTD("[Blood Castle] (%d) (Account:%s, Name:%s) Succeed Blood Castle Quest - More Party to register",

  00285	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00288	57		 push	 edi
  00289	53		 push	 ebx
  0028a	0f b6 80 23 01
	00 00		 movzx	 eax, BYTE PTR [eax+291]
  00291	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00294	50		 push	 eax
  00295	68 00 00 00 00	 push	 OFFSET ??_C@_0FO@BJDLMIAN@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@
$LN26@NpcAngelKi:
  0029a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  002a0	83 c4 20	 add	 esp, 32			; 00000020H

; 899  : 				lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 900  : 
; 901  : 			return FALSE;
; 902  : 		}
; 903  : 
; 904  : 		g_BloodCastle.SearchUserDeleteQuestItem(lpObj->m_Index);

  002a3	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  002a8	ff 36		 push	 DWORD PTR [esi]
  002aa	e8 00 00 00 00	 call	 ?SearchUserDeleteQuestItem@CBloodCastle@@QAEXH@Z ; CBloodCastle::SearchUserDeleteQuestItem
  002af	5f		 pop	 edi
  002b0	5b		 pop	 ebx

; 923  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 924  : 			}
; 925  : 
; 926  : 			return FALSE;

  002b1	33 c0		 xor	 eax, eax
  002b3	5e		 pop	 esi

; 927  : 		}
; 928  : 
; 929  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 930  : 	}
; 931  : 	
; 932  : 	return FALSE;
; 933  : }

  002b4	5d		 pop	 ebp
  002b5	c3		 ret	 0
$LN11@NpcAngelKi:

; 893  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 894  : 			}
; 895  : 		}
; 896  : 		else
; 897  : 		{
; 898  : 			LogAddTD("[Blood Castle] (%d) (Account:%s, Name:%s) Winner Already Exist !!",

  002b6	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  002b9	57		 push	 edi
  002ba	53		 push	 ebx
  002bb	0f b6 80 23 01
	00 00		 movzx	 eax, BYTE PTR [eax+291]
  002c2	83 e8 0a	 sub	 eax, 10			; 0000000aH
  002c5	50		 push	 eax
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@IJDIINJB@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@
  002cb	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  002d1	83 c4 10	 add	 esp, 16			; 00000010H

; 923  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 924  : 			}
; 925  : 
; 926  : 			return FALSE;

  002d4	33 c0		 xor	 eax, eax
  002d6	5f		 pop	 edi
  002d7	5b		 pop	 ebx
  002d8	5e		 pop	 esi

; 927  : 		}
; 928  : 
; 929  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 930  : 	}
; 931  : 	
; 932  : 	return FALSE;
; 933  : }

  002d9	5d		 pop	 ebp
  002da	c3		 ret	 0
$LN7@NpcAngelKi:

; 905  : 	}
; 906  : 	else
; 907  : 	{
; 908  : 		if ( g_BloodCastle.CheckUserWinnerParty(lpObj->m_cBloodCastleIndex, lpObj->m_Index) == TRUE )

  002db	ff 36		 push	 DWORD PTR [esi]
  002dd	0f be 86 36 12
	00 00		 movsx	 eax, BYTE PTR [esi+4662]
  002e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 ?CheckUserWinnerParty@CBloodCastle@@QAE_NHH@Z ; CBloodCastle::CheckUserWinnerParty
  002ef	3c 01		 cmp	 al, 1
  002f1	75 72		 jne	 SHORT $LN5@NpcAngelKi

; 909  : 		{
; 910  : 			lpObj->m_bBloodCastleComplete = true;
; 911  : 
; 912  : 			if ( g_BloodCastle.CheckPartyExist(lpObj->m_Index) == FALSE )

  002f3	ff 36		 push	 DWORD PTR [esi]
  002f5	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  002fa	88 86 3c 12 00
	00		 mov	 BYTE PTR [esi+4668], al
  00300	e8 00 00 00 00	 call	 ?CheckPartyExist@CBloodCastle@@QAE_NH@Z ; CBloodCastle::CheckPartyExist

; 913  : 			{
; 914  : 				GCServerCmd(lpObj->m_Index, 1, 0x17, 0);

  00305	6a 00		 push	 0
  00307	6a 17		 push	 23			; 00000017H
  00309	6a 01		 push	 1
  0030b	ff 36		 push	 DWORD PTR [esi]
  0030d	84 c0		 test	 al, al
  0030f	75 2a		 jne	 SHORT $LN16@NpcAngelKi
  00311	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd

; 915  : 
; 916  : 				LogAddTD("[Blood Castle] (%d) (Account:%s, Name:%s) Succeed Blood Castle Quest",

  00316	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00319	57		 push	 edi
  0031a	53		 push	 ebx
  0031b	0f b6 80 23 01
	00 00		 movzx	 eax, BYTE PTR [eax+291]
  00322	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00325	50		 push	 eax
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JFCICCDP@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@

; 922  : 				LogAddTD("[Blood Castle] (%d) (Account:%s, Name:%s) Succeed Blood Castle Quest - More Party to register",

  0032b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00331	83 c4 20	 add	 esp, 32			; 00000020H

; 923  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 924  : 			}
; 925  : 
; 926  : 			return FALSE;

  00334	33 c0		 xor	 eax, eax
  00336	5f		 pop	 edi
  00337	5b		 pop	 ebx
  00338	5e		 pop	 esi

; 927  : 		}
; 928  : 
; 929  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 930  : 	}
; 931  : 	
; 932  : 	return FALSE;
; 933  : }

  00339	5d		 pop	 ebp
  0033a	c3		 ret	 0
$LN16@NpcAngelKi:

; 917  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 918  : 			}
; 919  : 			else
; 920  : 			{
; 921  : 				GCServerCmd(lpObj->m_Index, 1, 0x17, 0);

  0033b	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd

; 922  : 				LogAddTD("[Blood Castle] (%d) (Account:%s, Name:%s) Succeed Blood Castle Quest - More Party to register",

  00340	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]
  00343	57		 push	 edi
  00344	53		 push	 ebx
  00345	0f b6 80 23 01
	00 00		 movzx	 eax, BYTE PTR [eax+291]
  0034c	83 e8 0a	 sub	 eax, 10			; 0000000aH
  0034f	50		 push	 eax
  00350	68 00 00 00 00	 push	 OFFSET ??_C@_0FO@BJDLMIAN@?$FLBlood?5Castle?$FN?5?$CI?$CFd?$CJ?5?$CIAccount?3?$CFs?0@
  00355	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0035b	83 c4 20	 add	 esp, 32			; 00000020H

; 923  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 924  : 			}
; 925  : 
; 926  : 			return FALSE;

  0035e	33 c0		 xor	 eax, eax
  00360	5f		 pop	 edi
  00361	5b		 pop	 ebx
  00362	5e		 pop	 esi

; 927  : 		}
; 928  : 
; 929  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 930  : 	}
; 931  : 	
; 932  : 	return FALSE;
; 933  : }

  00363	5d		 pop	 ebp
  00364	c3		 ret	 0
$LN5@NpcAngelKi:

; 835  : 	{
; 836  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);

  00365	6a 00		 push	 0
  00367	6a 18		 push	 24			; 00000018H

; 841  : 	{
; 842  : 		GCServerCmd(lpObj->m_Index, 1, 0x2E, 0);

  00369	6a 01		 push	 1
  0036b	ff 36		 push	 DWORD PTR [esi]
  0036d	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  00372	83 c4 10	 add	 esp, 16			; 00000010H

; 923  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 924  : 			}
; 925  : 
; 926  : 			return FALSE;

  00375	33 c0		 xor	 eax, eax
  00377	5f		 pop	 edi
  00378	5b		 pop	 ebx
  00379	5e		 pop	 esi

; 927  : 		}
; 928  : 
; 929  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 930  : 	}
; 931  : 	
; 932  : 	return FALSE;
; 933  : }

  0037a	5d		 pop	 ebp
  0037b	c3		 ret	 0
$LN23@NpcAngelKi:

; 820  : 	{
; 821  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);

  0037c	6a 00		 push	 0
  0037e	6a 18		 push	 24			; 00000018H
  00380	6a 01		 push	 1
  00382	ff 36		 push	 DWORD PTR [esi]
  00384	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  00389	83 c4 10	 add	 esp, 16			; 00000010H

; 923  : 					lpNpc->MapNumber-10, lpObj->AccountID, lpObj->Name);
; 924  : 			}
; 925  : 
; 926  : 			return FALSE;

  0038c	33 c0		 xor	 eax, eax
  0038e	5e		 pop	 esi

; 927  : 		}
; 928  : 
; 929  : 		GCServerCmd(lpObj->m_Index, 1, 0x18, 0);
; 930  : 	}
; 931  : 	
; 932  : 	return FALSE;
; 933  : }

  0038f	5d		 pop	 ebp
  00390	c3		 ret	 0
?NpcAngelKing@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcAngelKing
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcRoadMerchant@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcRoadMerchant@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcRoadMerchant, COMDAT

; 808  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 809  : }

  00002	c3		 ret	 0
?NpcRoadMerchant@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcRoadMerchant
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcServerDivision@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcServerDivision@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcServerDivision, COMDAT

; 785  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 786  : 	if ( gEnableServerDivision == FALSE )

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gEnableServerDivision@@3HA, 0 ; gEnableServerDivision
  0000a	74 1c		 je	 SHORT $LN5@NpcServerD

; 787  : 	{
; 788  : 		return TRUE;
; 789  : 	}
; 790  : 
; 791  : 	if ( lpObj->lpGuild != NULL )

  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0000f	83 b9 18 06 00
	00 00		 cmp	 DWORD PTR [ecx+1560], 0
  00016	74 17		 je	 SHORT $LN3@NpcServerD

; 792  : 	{
; 793  : 		GCServerCmd(lpObj->m_Index, 6, 0, 0);

  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	6a 06		 push	 6
  0001e	ff 31		 push	 DWORD PTR [ecx]
  00020	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  00025	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@NpcServerD:

; 794  : 		return TRUE;

  00028	b8 01 00 00 00	 mov	 eax, 1

; 802  : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN3@NpcServerD:

; 795  : 	}
; 796  : 
; 797  : 	lpObj->m_IfState.type = 11;
; 798  : 	lpObj->m_IfState.state = 0;
; 799  : 	lpObj->m_IfState.use = 1;

  0002f	8b 81 b8 11 00
	00		 mov	 eax, DWORD PTR [ecx+4536]
  00035	25 c1 02 ff ff	 and	 eax, -64831		; ffff02c1H
  0003a	0d c1 02 00 00	 or	 eax, 705		; 000002c1H
  0003f	89 81 b8 11 00
	00		 mov	 DWORD PTR [ecx+4536], eax

; 800  : 
; 801  : 	return FALSE;

  00045	33 c0		 xor	 eax, eax

; 802  : }

  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?NpcServerDivision@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcServerDivision
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcQuestCheck@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcQuestCheck@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcQuestCheck, COMDAT

; 772  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 	if ( g_QuestInfo.NpcTalk(lpNpc, lpObj) != FALSE )

  00003	ff 75 0c	 push	 DWORD PTR _lpObj$[ebp]
  00006	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_QuestInfo@@3VCQuestInfo@@A ; g_QuestInfo
  0000b	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  0000e	e8 00 00 00 00	 call	 ?NpcTalk@CQuestInfo@@QAEHPAUOBJECTSTRUCT@@0@Z ; CQuestInfo::NpcTalk
  00013	f7 d8		 neg	 eax
  00015	1b c0		 sbb	 eax, eax
  00017	f7 d8		 neg	 eax

; 774  : 	{
; 775  : 		return TRUE;
; 776  : 	}
; 777  : 
; 778  : 	return FALSE;
; 779  : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?NpcQuestCheck@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcQuestCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcNoriJangIn@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcNoriJangIn@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcNoriJangIn, COMDAT

; 764  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 765  : }

  00002	c3		 ret	 0
?NpcNoriJangIn@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcNoriJangIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcRorensiaSmith@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcRorensiaSmith@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcRorensiaSmith, COMDAT

; 756  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 757  : }

  00002	c3		 ret	 0
?NpcRorensiaSmith@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcRorensiaSmith
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcEventChipNPC@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_Result$ = -36						; size = 16
_Result$1 = -20						; size = 16
_Result$2 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcEventChipNPC@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcEventChipNPC, COMDAT

; 654  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 655  : #if (__CUSTOM__ == 1)
; 656  : 	if ( (lpObj->m_IfState.use) > 0 )

  00014	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  0001b	0f 87 94 00 00
	00		 ja	 $LN6@NpcEventCh

; 657  : 	{
; 658  : 		return TRUE;
; 659  : 	}
; 660  : 	
; 661  : 	if ( lpNpc->MapNumber == 0 )

  00021	8b 45 08	 mov	 eax, DWORD PTR _lpNpc$[ebp]

; 662  : 	{
; 663  : 		PMSG_EVENTCHIPINFO Result;
; 664  : 
; 665  : 		PHeadSetB((LPBYTE)&Result, 0x94, sizeof(Result));

  00024	6a 10		 push	 16			; 00000010H
  00026	68 94 00 00 00	 push	 148			; 00000094H
  0002b	8a 80 23 01 00
	00		 mov	 al, BYTE PTR [eax+291]
  00031	84 c0		 test	 al, al
  00033	75 1f		 jne	 SHORT $LN3@NpcEventCh
  00035	8d 45 ec	 lea	 eax, DWORD PTR _Result$2[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 666  : 		Result.ChipCount = g_RenaCount;

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_RenaCount@@3HA ; g_RenaCount
  00043	89 45 f0	 mov	 DWORD PTR _Result$2[ebp+4], eax

; 667  : 		Result.Type = 0;
; 668  : 		
; 669  : 		DataSend(lpObj->m_Index, (LPBYTE)&Result, Result.h.size);

  00046	0f b6 45 ed	 movzx	 eax, BYTE PTR _Result$2[ebp+1]
  0004a	50		 push	 eax
  0004b	c6 45 ef 00	 mov	 BYTE PTR _Result$2[ebp+3], 0
  0004f	8d 45 ec	 lea	 eax, DWORD PTR _Result$2[ebp]

; 670  : 
; 671  : 		lpObj->m_IfState.type = 9;
; 672  : 		lpObj->m_IfState.state = 0;
; 673  : 		lpObj->m_IfState.use = 1;
; 674  : 
; 675  : 		return TRUE;

  00052	eb 40		 jmp	 SHORT $LN7@NpcEventCh
$LN3@NpcEventCh:

; 676  : 	}
; 677  : 
; 678  : 	if ( lpNpc->MapNumber == 2 )

  00054	3c 02		 cmp	 al, 2
  00056	75 1f		 jne	 SHORT $LN4@NpcEventCh

; 679  : 	{
; 680  : 		PMSG_EVENTCHIPINFO Result;
; 681  : 
; 682  : 		PHeadSetB((LPBYTE)&Result, 0x94, sizeof(Result));

  00058	8d 45 ec	 lea	 eax, DWORD PTR _Result$1[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 683  : 		Result.ChipCount = g_StoneCount;

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_StoneCount@@3HA ; g_StoneCount
  00066	89 45 f0	 mov	 DWORD PTR _Result$1[ebp+4], eax

; 684  : 		Result.Type = 1;
; 685  : 		
; 686  : 		DataSend(lpObj->m_Index, (LPBYTE)&Result, Result.h.size);

  00069	0f b6 45 ed	 movzx	 eax, BYTE PTR _Result$1[ebp+1]
  0006d	50		 push	 eax
  0006e	c6 45 ef 01	 mov	 BYTE PTR _Result$1[ebp+3], 1
  00072	8d 45 ec	 lea	 eax, DWORD PTR _Result$1[ebp]

; 687  : 
; 688  : 		lpObj->m_IfState.type = 9;
; 689  : 		lpObj->m_IfState.state = 0;
; 690  : 		lpObj->m_IfState.use = 1;
; 691  : 
; 692  : 		return TRUE;

  00075	eb 1d		 jmp	 SHORT $LN7@NpcEventCh
$LN4@NpcEventCh:

; 693  : 	}
; 694  : 
; 695  : 	PMSG_EVENTCHIPINFO Result;
; 696  : 
; 697  : 	PHeadSetB((LPBYTE)&Result, 0x94, sizeof(Result));

  00077	8d 45 dc	 lea	 eax, DWORD PTR _Result$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 698  : 	Result.ChipCount = g_StoneCount;

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_StoneCount@@3HA ; g_StoneCount
  00085	89 45 e0	 mov	 DWORD PTR _Result$[ebp+4], eax

; 699  : 	Result.Type = 2;
; 700  : 		
; 701  : 	DataSend(lpObj->m_Index, (LPBYTE)&Result, Result.h.size);

  00088	0f b6 45 dd	 movzx	 eax, BYTE PTR _Result$[ebp+1]
  0008c	50		 push	 eax
  0008d	c6 45 df 02	 mov	 BYTE PTR _Result$[ebp+3], 2
  00091	8d 45 dc	 lea	 eax, DWORD PTR _Result$[ebp]
$LN7@NpcEventCh:
  00094	50		 push	 eax
  00095	ff 36		 push	 DWORD PTR [esi]
  00097	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 702  : 
; 703  : 	lpObj->m_IfState.type = 9;
; 704  : 	lpObj->m_IfState.state = 0;
; 705  : 	lpObj->m_IfState.use = 1;

  0009c	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  000a2	83 c4 18	 add	 esp, 24			; 00000018H
  000a5	25 41 02 ff ff	 and	 eax, -64959		; ffff0241H
  000aa	0d 41 02 00 00	 or	 eax, 577		; 00000241H
  000af	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax
$LN6@NpcEventCh:

; 706  : 	return TRUE;
; 707  : #else
; 708  : 
; 709  : 	if ( (lpObj->m_IfState.use) > 0 )
; 710  : 	{
; 711  : 		return TRUE;
; 712  : 	}
; 713  : 	
; 714  : 	if ( lpNpc->MapNumber == 0 )
; 715  : 	{
; 716  : 		PMSG_REQ_VIEW_EC_MN pMsgTha;
; 717  : 
; 718  : 		PHeadSetB((LPBYTE)&pMsgTha, 0x01, sizeof(pMsgTha));
; 719  : 		pMsgTha.iINDEX = lpObj->m_Index;
; 720  : 		strcpy(pMsgTha.szUID, lpObj->AccountID);
; 721  : 		pEventObj = lpNpc;
; 722  : 
; 723  : 		DataSendEventChip((char*)&pMsgTha, sizeof(pMsgTha));
; 724  : 		
; 725  : 		lpObj->m_IfState.type = 9;
; 726  : 		lpObj->m_IfState.state = 0;
; 727  : 		lpObj->m_IfState.use = 1;
; 728  : 
; 729  : 		return TRUE;
; 730  : 	}
; 731  : 
; 732  : 	if ( lpNpc->MapNumber == 2 )
; 733  : 	{
; 734  : 		PMSG_EVENTCHIPINFO Result;
; 735  : 
; 736  : 		PHeadSetB((LPBYTE)&Result, 0x94, sizeof(Result));
; 737  : 		Result.Type = 2;
; 738  : 		
; 739  : 		DataSend(lpObj->m_Index, (LPBYTE)&Result, Result.h.size);
; 740  : 
; 741  : 		lpObj->m_IfState.type = 9;
; 742  : 		lpObj->m_IfState.state = 0;
; 743  : 		lpObj->m_IfState.use = 1;
; 744  : 
; 745  : 		return TRUE;
; 746  : 	}
; 747  : 
; 748  : #endif
; 749  : 	return FALSE;
; 750  : }

  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	b8 01 00 00 00	 mov	 eax, 1
  000bd	33 cd		 xor	 ecx, ebp
  000bf	5e		 pop	 esi
  000c0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c3		 ret	 0
?NpcEventChipNPC@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcEventChipNPC
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDeviasMadam@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDeviasMadam@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcDeviasMadam, COMDAT

; 636  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 	if ( gEnableEventNPCTalk != FALSE )

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gEnableEventNPCTalk@@3HA, 0 ; gEnableEventNPCTalk
  0000a	74 13		 je	 SHORT $LN4@NpcDeviasM

; 638  : 	{
; 639  : 		GCServerCmd(lpObj->m_Index, 4, 1, 0);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	6a 00		 push	 0
  00011	6a 01		 push	 1
  00013	6a 04		 push	 4
  00015	ff 30		 push	 DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  0001c	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@NpcDeviasM:

; 640  : 	}
; 641  : 
; 642  : 	return FALSE;

  0001f	33 c0		 xor	 eax, eax

; 643  : }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?NpcDeviasMadam@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcDeviasMadam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcNoriaRara@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcNoriaRara@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcNoriaRara, COMDAT

; 625  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 626  : 	if ( gEnableEventNPCTalk != FALSE )

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gEnableEventNPCTalk@@3HA, 0 ; gEnableEventNPCTalk
  0000a	74 13		 je	 SHORT $LN4@NpcNoriaRa

; 627  : 	{
; 628  : 		GCServerCmd(lpObj->m_Index, 4, 2, 0);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	6a 00		 push	 0
  00011	6a 02		 push	 2
  00013	6a 04		 push	 4
  00015	ff 30		 push	 DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  0001c	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@NpcNoriaRa:

; 629  : 	}
; 630  : 
; 631  : 	return FALSE;

  0001f	33 c0		 xor	 eax, eax

; 632  : }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?NpcNoriaRara@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcNoriaRara
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcWarehouse@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcWarehouse@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcWarehouse, COMDAT

; 619  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 620  : }

  00002	c3		 ret	 0
?NpcWarehouse@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcWarehouse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDeviasWareHousemen@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDeviasWareHousemen@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcDeviasWareHousemen, COMDAT

; 613  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 614  : }

  00002	c3		 ret	 0
?NpcDeviasWareHousemen@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcDeviasWareHousemen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDeviasGuard@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDeviasGuard@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcDeviasGuard, COMDAT

; 606  : 	return TRUE;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 607  : }

  00005	c3		 ret	 0
?NpcDeviasGuard@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcDeviasGuard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcDeviasWizard@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcDeviasWizard@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcDeviasWizard, COMDAT

; 599  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 600  : }

  00002	c3		 ret	 0
?NpcDeviasWizard@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcDeviasWizard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcPosionGirl@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcPosionGirl@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcPosionGirl, COMDAT

; 591  : 	return FALSE;

  00000	33 c0		 xor	 eax, eax

; 592  : }

  00002	c3		 ret	 0
?NpcPosionGirl@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcPosionGirl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcRusipher@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_pMsg$1 = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcRusipher@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcRusipher, COMDAT

; 538  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 539  : 	if ( gDevilSquareEvent == FALSE )

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gDevilSquareEvent@@3HA, 0 ; gDevilSquareEvent
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001b	74 66		 je	 SHORT $LN13@NpcRusiphe

; 540  : 	{
; 541  : 		return TRUE;
; 542  : 	}
; 543  : 
; 544  : 
; 545  : 	int aIndex = lpObj->m_Index;
; 546  : 
; 547  : #ifdef BEREZNUK
; 548  : 	if ( lpObj->m_PK_Level >= 4 && !g_AllowPKEventDS )
; 549  : 	{
; 550  : 		GCServerMsgStringSend(lMsg.Get(MSGGET(13,72)),lpObj->m_Index,1);
; 551  : 		return TRUE;
; 552  : 	}
; 553  : #endif
; 554  : 
; 555  : 	if ( (lpObj->m_IfState.use ) > 0 )

  0001d	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  00024	57		 push	 edi
  00025	8b 3e		 mov	 edi, DWORD PTR [esi]
  00027	77 59		 ja	 SHORT $LN7@NpcRusiphe

; 556  : 	{
; 557  : 		return TRUE;
; 558  : 	}
; 559  : 
; 560  : 	if ( gUserFindDevilSquareInvitation(aIndex) == FALSE )

  00029	57		 push	 edi
  0002a	e8 00 00 00 00	 call	 ?gUserFindDevilSquareInvitation@@YAHH@Z ; gUserFindDevilSquareInvitation
  0002f	83 c4 04	 add	 esp, 4
  00032	85 c0		 test	 eax, eax
  00034	75 05		 jne	 SHORT $LN4@NpcRusiphe

; 561  : 	{
; 562  : 		GCServerCmd(lpObj->m_Index, 1, 2 ,0);

  00036	50		 push	 eax
  00037	6a 02		 push	 2

; 563  : 	}
; 564  : 	else if (g_DevilSquare.GetState() == 1 )

  00039	eb 3b		 jmp	 SHORT $LN12@NpcRusiphe
$LN4@NpcRusiphe:
  0003b	83 3d 04 00 00
	00 01		 cmp	 DWORD PTR ?g_DevilSquare@@3VCDevilSquare@@A+4, 1
  00042	75 2e		 jne	 SHORT $LN6@NpcRusiphe

; 565  : 	{
; 566  : 		PMSG_TALKRESULT pMsg;
; 567  : 
; 568  : 		pMsg.h.c = 0xC3;
; 569  : 		pMsg.h.headcode = 0x30;
; 570  : 		pMsg.h.size = sizeof(pMsg);
; 571  : 		pMsg.result = 0x04;
; 572  : 
; 573  : 		DataSend(aIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00044	6a 0b		 push	 11			; 0000000bH
  00046	8d 45 f0	 lea	 eax, DWORD PTR _pMsg$1[ebp]
  00049	c7 45 f0 c3 0b
	30 04		 mov	 DWORD PTR _pMsg$1[ebp], 70257603 ; 04300bc3H
  00050	50		 push	 eax
  00051	57		 push	 edi
  00052	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 574  : 
; 575  : 		lpObj->m_IfState.use = 1;
; 576  : 		lpObj->m_IfState.type = 12;

  00057	8b 86 b8 11 00
	00		 mov	 eax, DWORD PTR [esi+4536]
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	25 3d 03 ff ff	 and	 eax, -64707		; ffff033dH
  00065	0d 01 03 00 00	 or	 eax, 769		; 00000301H
  0006a	89 86 b8 11 00
	00		 mov	 DWORD PTR [esi+4536], eax

; 577  : 	}
; 578  : 	else

  00070	eb 10		 jmp	 SHORT $LN7@NpcRusiphe
$LN6@NpcRusiphe:

; 579  : 	{
; 580  : 		GCServerCmd(lpObj->m_Index, 1, 3, 0);

  00072	6a 00		 push	 0
  00074	6a 03		 push	 3
$LN12@NpcRusiphe:
  00076	6a 01		 push	 1
  00078	ff 36		 push	 DWORD PTR [esi]
  0007a	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
$LN7@NpcRusiphe:
  00082	5f		 pop	 edi
$LN13@NpcRusiphe:

; 581  : 	}
; 582  : 
; 583  : 	return TRUE;
; 584  : }

  00083	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00086	b8 01 00 00 00	 mov	 eax, 1
  0008b	33 cd		 xor	 ecx, ebp
  0008d	5e		 pop	 esi
  0008e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?NpcRusipher@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcRusipher
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcChaosGoblelin@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcChaosGoblelin@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcChaosGoblelin, COMDAT

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	gUserFindDevilSquareKeyEyes(lpObj->m_Index);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	e8 00 00 00 00	 call	 ?gUserFindDevilSquareKeyEyes@@YAHH@Z ; gUserFindDevilSquareKeyEyes
  0000d	83 c4 04	 add	 esp, 4

; 482  : 
; 483  : 	return FALSE;

  00010	33 c0		 xor	 eax, eax

; 484  : }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?NpcChaosGoblelin@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcChaosGoblelin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcRolensiaGuard@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcRolensiaGuard@@YAHPAUOBJECTSTRUCT@@0@Z PROC		; NpcRolensiaGuard, COMDAT

; 466  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 467  : 	if( gEnableEventNPCTalk != FALSE )

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gEnableEventNPCTalk@@3HA, 0 ; gEnableEventNPCTalk
  0000a	74 13		 je	 SHORT $LN4@NpcRolensi

; 468  : 	{
; 469  : 		GCServerCmd(lpObj->m_Index, 4, 0, 0);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0000f	6a 00		 push	 0
  00011	6a 00		 push	 0
  00013	6a 04		 push	 4
  00015	ff 30		 push	 DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  0001c	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@NpcRolensi:

; 470  : 	}
; 471  : 
; 472  : 	return TRUE;

  0001f	b8 01 00 00 00	 mov	 eax, 1

; 473  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?NpcRolensiaGuard@@YAHPAUOBJECTSTRUCT@@0@Z ENDP		; NpcRolensiaGuard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcGuildMasterTalk@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcGuildMasterTalk@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcGuildMasterTalk, COMDAT

; 421  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 422  : #if (__GENS_SYSTEM__ == 1)
; 423  : 
; 424  : 	if( lpObj->m_GensInfo.btFamily == GENS_NONE )

  00004	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	80 be ac 26 00
	00 00		 cmp	 BYTE PTR [esi+9900], 0
  0000e	75 17		 jne	 SHORT $LN2@NpcGuildMa

; 425  : 	{
; 426  : 		MsgOutput(lpObj->m_Index,"You are not a member of any gens clan!");

  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@BEEAJNGB@You?5are?5not?5a?5member?5of?5any?5gens@
  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0001c	83 c4 08	 add	 esp, 8

; 457  : 	}
; 458  : 
; 459  : 	return TRUE;

  0001f	b8 01 00 00 00	 mov	 eax, 1
  00024	5e		 pop	 esi

; 460  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN2@NpcGuildMa:

; 427  : 		return TRUE;
; 428  : 	}
; 429  : 
; 430  : #endif
; 431  : 
; 432  : 	if ( gGuildCreate == FALSE )

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gGuildCreate@@3HA, 0 ; gGuildCreate
  0002e	75 1a		 jne	 SHORT $LN3@NpcGuildMa

; 433  : 	{
; 434  : 		ChatTargetSend(lpNpc, "Guild creation is disabled!", lpObj->m_Index);

  00030	ff 36		 push	 DWORD PTR [esi]
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GIIHNFEG@Guild?5creation?5is?5disabled?$CB?$AA@

; 451  : 	{
; 452  : 		ChatTargetSend(lpNpc, lMsg.Get(MSGGET(4, 118)), lpObj->m_Index);

  00037	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  0003a	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 457  : 	}
; 458  : 
; 459  : 	return TRUE;

  00042	b8 01 00 00 00	 mov	 eax, 1
  00047	5e		 pop	 esi

; 460  : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN3@NpcGuildMa:

; 435  : 		return TRUE;
; 436  : 	}
; 437  : 
; 438  : 	if ( lpObj->GuildNumber > 0 )

  0004a	83 be 14 06 00
	00 00		 cmp	 DWORD PTR [esi+1556], 0
  00051	7e 09		 jle	 SHORT $LN4@NpcGuildMa

; 439  : 	{
; 440  : 		ChatTargetSend(lpNpc, lMsg.Get(MSGGET(4, 116)), lpObj->m_Index);

  00053	ff 36		 push	 DWORD PTR [esi]
  00055	68 74 04 00 00	 push	 1140			; 00000474H

; 441  : 		return TRUE;

  0005a	eb 20		 jmp	 SHORT $LN10@NpcGuildMa
$LN4@NpcGuildMa:

; 442  : 	}
; 443  : 
; 444  : 	int capacity = gObjGuildMasterCapacityTest(lpObj);

  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 ?gObjGuildMasterCapacityTest@@YAHPAUOBJECTSTRUCT@@@Z ; gObjGuildMasterCapacityTest
  00062	83 c4 04	 add	 esp, 4

; 445  : 
; 446  : 	if ( capacity == 0 )
; 447  : 	{
; 448  : 		ChatTargetSend(lpNpc, lMsg.Get(MSGGET(4, 117)), lpObj->m_Index);

  00065	ff 36		 push	 DWORD PTR [esi]
  00067	85 c0		 test	 eax, eax
  00069	75 07		 jne	 SHORT $LN5@NpcGuildMa
  0006b	68 75 04 00 00	 push	 1141			; 00000475H
  00070	eb 0a		 jmp	 SHORT $LN10@NpcGuildMa
$LN5@NpcGuildMa:

; 449  : 	}
; 450  : 	else if ( capacity == 2 )

  00072	83 f8 02	 cmp	 eax, 2
  00075	75 23		 jne	 SHORT $LN7@NpcGuildMa

; 451  : 	{
; 452  : 		ChatTargetSend(lpNpc, lMsg.Get(MSGGET(4, 118)), lpObj->m_Index);

  00077	68 76 04 00 00	 push	 1142			; 00000476H
$LN10@NpcGuildMa:
  0007c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00081	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00086	50		 push	 eax
  00087	ff 75 08	 push	 DWORD PTR _lpNpc$[ebp]
  0008a	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 457  : 	}
; 458  : 
; 459  : 	return TRUE;

  00092	b8 01 00 00 00	 mov	 eax, 1
  00097	5e		 pop	 esi

; 460  : }

  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
$LN7@NpcGuildMa:

; 453  : 	}
; 454  : 	else
; 455  : 	{
; 456  : 		GCGuildMasterQuestionSend(lpObj->m_Index);

  0009a	e8 00 00 00 00	 call	 ?GCGuildMasterQuestionSend@@YAXH@Z ; GCGuildMasterQuestionSend
  0009f	83 c4 04	 add	 esp, 4

; 457  : 	}
; 458  : 
; 459  : 	return TRUE;

  000a2	b8 01 00 00 00	 mov	 eax, 1
  000a7	5e		 pop	 esi

; 460  : }

  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?NpcGuildMasterTalk@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcGuildMasterTalk
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcFasi@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_hour$1 = -112						; size = 4
_min$2 = -108						; size = 4
_szTemp$3 = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcFasi@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcFasi, COMDAT

; 344  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]

; 345  : 	int bPk = FALSE;
; 346  : 
; 347  : #if( ENABLE_FIX_NPCTALKPK == 1 )
; 348  : 	if( lpObj->m_PK_Level >= 4 )

  00018	80 be 19 01 00
	00 04		 cmp	 BYTE PTR [esi+281], 4
  0001f	0f 8c fe 00 00
	00		 jl	 $LN10@NpcFasi

; 349  : 	{
; 350  : 		bPk = TRUE;
; 351  : 	}
; 352  : #else
; 353  : 	if ( lpObj->PartyNumber >= 0 )
; 354  : 	{
; 355  : 		if( gParty.GetPartyPkLevel(lpObj->PartyNumber) >= 4 )
; 356  : 		{
; 357  : 			bPk = TRUE;
; 358  : 		}
; 359  : 	}
; 360  : 	else if( lpObj->m_PK_Level >= 4 )
; 361  : 	{
; 362  : 		bPk = TRUE;
; 363  : 	}
; 364  : 
; 365  : #endif
; 366  : 
; 367  : 	if ( bPk == TRUE )
; 368  : 	{
; 369  : 		int hour = 0;
; 370  : 		int min = 0;
; 371  : 
; 372  : 		if ( lpNpc->TargetNumber != lpObj->m_Index )

  00025	0f bf 87 38 06
	00 00		 movsx	 eax, WORD PTR [edi+1592]
  0002c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _hour$1[ebp], 0
  00033	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _min$2[ebp], 0
  0003a	3b 06		 cmp	 eax, DWORD PTR [esi]
  0003c	74 75		 je	 SHORT $LN6@NpcFasi

; 373  : 		{
; 374  : 			if ( gObjGetPkTime(lpObj, hour, min) == TRUE )

  0003e	8d 45 94	 lea	 eax, DWORD PTR _min$2[ebp]
  00041	50		 push	 eax
  00042	8d 45 90	 lea	 eax, DWORD PTR _hour$1[ebp]
  00045	50		 push	 eax
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 ?gObjGetPkTime@@YAHPAUOBJECTSTRUCT@@AAH1@Z ; gObjGetPkTime
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	83 f8 01	 cmp	 eax, 1
  00052	0f 85 cb 00 00
	00		 jne	 $LN10@NpcFasi

; 375  : 			{
; 376  : 				char szTemp[100];
; 377  : 
; 378  : 				wsprintf(szTemp, lMsg.Get(MSGGET(4, 79)), hour, min);

  00058	ff 75 94	 push	 DWORD PTR _min$2[ebp]
  0005b	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00060	ff 75 90	 push	 DWORD PTR _hour$1[ebp]
  00063	68 4f 04 00 00	 push	 1103			; 0000044fH
  00068	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0006d	50		 push	 eax
  0006e	8d 45 98	 lea	 eax, DWORD PTR _szTemp$3[ebp]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 379  : 
; 380  : 				ChatTargetSend(lpNpc, szTemp, lpObj->m_Index);

  00078	ff 36		 push	 DWORD PTR [esi]
  0007a	8d 45 98	 lea	 eax, DWORD PTR _szTemp$3[ebp]
  0007d	50		 push	 eax
  0007e	57		 push	 edi
  0007f	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend

; 381  : 
; 382  : 				lpNpc->TargetNumber = lpObj->m_Index;

  00084	66 8b 06	 mov	 ax, WORD PTR [esi]
  00087	83 c4 1c	 add	 esp, 28			; 0000001cH
  0008a	66 89 87 38 06
	00 00		 mov	 WORD PTR [edi+1592], ax

; 383  : 
; 384  : 				if ( gPkLimitFree == FALSE )

  00091	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPkLimitFree@@3HA, 0 ; gPkLimitFree
  00098	0f 85 85 00 00
	00		 jne	 $LN10@NpcFasi

; 385  : 				{
; 386  : 					return TRUE;

  0009e	5f		 pop	 edi
  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	5e		 pop	 esi

; 411  : 		}
; 412  : 	}
; 413  : 
; 414  : 	return FALSE;
; 415  : }

  000a5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a8	33 cd		 xor	 ecx, ebp
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
$LN6@NpcFasi:

; 387  : 				}
; 388  : 			}
; 389  : 		}
; 390  : 		else if ( gPkLimitFree == FALSE )

  000b3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gPkLimitFree@@3HA, 0 ; gPkLimitFree
  000ba	75 67		 jne	 SHORT $LN10@NpcFasi

; 391  : 		{
; 392  : 			int numbertext = rand() % 3;

  000bc	e8 00 00 00 00	 call	 _rand
  000c1	99		 cdq
  000c2	b9 03 00 00 00	 mov	 ecx, 3
  000c7	f7 f9		 idiv	 ecx

; 393  : 
; 394  : 			switch ( numbertext )

  000c9	83 ea 00	 sub	 edx, 0
  000cc	74 1c		 je	 SHORT $LN11@NpcFasi
  000ce	83 ea 01	 sub	 edx, 1
  000d1	74 0e		 je	 SHORT $LN12@NpcFasi
  000d3	83 ea 01	 sub	 edx, 1
  000d6	75 2d		 jne	 SHORT $LN2@NpcFasi

; 403  : 
; 404  : 				case 2:
; 405  : 					ChatTargetSend(lpNpc, lMsg.Get(MSGGET(4, 100)), lpObj->m_Index);

  000d8	ff 36		 push	 DWORD PTR [esi]
  000da	68 64 04 00 00	 push	 1124			; 00000464H
  000df	eb 10		 jmp	 SHORT $LN16@NpcFasi
$LN12@NpcFasi:

; 398  : 					break;
; 399  : 
; 400  : 				case 1:
; 401  : 					ChatTargetSend(lpNpc, lMsg.Get(MSGGET(4, 99)), lpObj->m_Index);

  000e1	ff 36		 push	 DWORD PTR [esi]
  000e3	68 63 04 00 00	 push	 1123			; 00000463H

; 402  : 					break;

  000e8	eb 07		 jmp	 SHORT $LN16@NpcFasi
$LN11@NpcFasi:

; 395  : 			{
; 396  : 				case 0:
; 397  : 					ChatTargetSend(lpNpc, lMsg.Get(MSGGET(4, 98)), lpObj->m_Index);

  000ea	ff 36		 push	 DWORD PTR [esi]
  000ec	68 62 04 00 00	 push	 1122			; 00000462H
$LN16@NpcFasi:
  000f1	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  000f6	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  000fb	50		 push	 eax
  000fc	57		 push	 edi
  000fd	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@NpcFasi:

; 406  : 					break;
; 407  : 			}
; 408  : 
; 409  : 			lpNpc->TargetNumber = 0;	// Apply Deathway Fix, change 0 to -1;

  00105	33 c0		 xor	 eax, eax
  00107	66 89 87 38 06
	00 00		 mov	 WORD PTR [edi+1592], ax

; 410  : 			return TRUE;

  0010e	b8 01 00 00 00	 mov	 eax, 1
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi

; 411  : 		}
; 412  : 	}
; 413  : 
; 414  : 	return FALSE;
; 415  : }

  00115	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00118	33 cd		 xor	 ecx, ebp
  0011a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c3		 ret	 0
$LN10@NpcFasi:
  00123	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00126	33 c0		 xor	 eax, eax
  00128	5f		 pop	 edi
  00129	33 cd		 xor	 ecx, ebp
  0012b	5e		 pop	 esi
  0012c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
?NpcFasi@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcFasi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcBattleAnnouncer@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcBattleAnnouncer@@YAHPAUOBJECTSTRUCT@@0@Z PROC	; NpcBattleAnnouncer, COMDAT

; 339  : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 340  : }

  00002	c3		 ret	 0
?NpcBattleAnnouncer@@YAHPAUOBJECTSTRUCT@@0@Z ENDP	; NpcBattleAnnouncer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?NpcTalk@@YAHPAUOBJECTSTRUCT@@0@Z
_TEXT	SEGMENT
_lpNpc$ = 8						; size = 4
_lpObj$ = 12						; size = 4
?NpcTalk@@YAHPAUOBJECTSTRUCT@@0@Z PROC			; NpcTalk, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi

; 32   : 	int npcnum = lpNpc->Class;

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpNpc$[ebp]
  00008	0f b7 9f 90 00
	00 00		 movzx	 ebx, WORD PTR [edi+144]

; 33   : 
; 34   : 	if ( npcnum < 0)

  0000f	85 db		 test	 ebx, ebx
  00011	79 06		 jns	 SHORT $LN4@NpcTalk

; 35   : 	{
; 36   : 		return FALSE;

  00013	5f		 pop	 edi
  00014	33 c0		 xor	 eax, eax
  00016	5b		 pop	 ebx

; 322  : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
$LN4@NpcTalk:
  00019	56		 push	 esi

; 37   : 	}
; 38   : 
; 39   : 	if (g_ResetSystem.ProcDialog(lpObj, lpNpc))

  0001a	8b 75 0c	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ResetSystem@@3VResetSystem@@A ; g_ResetSystem
  00022	57		 push	 edi
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 ?ProcDialog@ResetSystem@@QAE_NPAUOBJECTSTRUCT@@0@Z ; ResetSystem::ProcDialog
  00029	84 c0		 test	 al, al
  0002b	75 32		 jne	 SHORT $LN92@NpcTalk

; 40   : 	{
; 41   : 		return TRUE;
; 42   : 	}
; 43   : 
; 44   : 	if ( (lpObj->m_IfState.use) > 0 )

  0002d	f6 86 b8 11 00
	00 03		 test	 BYTE PTR [esi+4536], 3
  00034	77 29		 ja	 SHORT $LN92@NpcTalk

; 45   : 	{
; 46   : 		return TRUE;
; 47   : 	}
; 48   : 
; 49   : 	if ( npcnum == 229 ) // Marlon

  00036	81 fb e5 00 00
	00		 cmp	 ebx, 229		; 000000e5H
  0003c	75 13		 jne	 SHORT $LN7@NpcTalk

; 50   : 	{
; 51   : 		gQeustNpcTeleport.TalkRefAdd();

  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gQeustNpcTeleport@@3VCQeustNpcTeleport@@A ; gQeustNpcTeleport
  00043	e8 00 00 00 00	 call	 ?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ ; CQeustNpcTeleport::TalkRefAdd

; 52   : 		lpObj->TargetShopNumber = npcnum;

  00048	8b c3		 mov	 eax, ebx
  0004a	66 89 86 3a 06
	00 00		 mov	 WORD PTR [esi+1594], ax
$LN7@NpcTalk:

; 53   : 	}
; 54   : 
; 55   : #if(__CUSTOM_QUEST__ == 1)
; 56   : 	if ( npcnum == 371 )
; 57   : 	{
; 58   : 		g_MyQuest.NpcTalk(lpObj,lpNpc);
; 59   : 		return TRUE;
; 60   : 	}
; 61   : #endif
; 62   : 
; 63   : 	if ( NpcQuestCheck(lpNpc, lpObj) != FALSE )

  00051	56		 push	 esi
  00052	57		 push	 edi
  00053	e8 00 00 00 00	 call	 ?NpcQuestCheck@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcQuestCheck
  00058	83 c4 08	 add	 esp, 8
  0005b	85 c0		 test	 eax, eax
  0005d	74 0a		 je	 SHORT $LN8@NpcTalk
$LN92@NpcTalk:
  0005f	5e		 pop	 esi
  00060	5f		 pop	 edi

; 64   : 	{
; 65   : 		return TRUE;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	5b		 pop	 ebx

; 322  : }

  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN8@NpcTalk:

; 66   : 	}
; 67   : 
; 68   : 	
; 69   : 
; 70   : 	switch ( npcnum )

  00069	81 fb d1 01 00
	00		 cmp	 ebx, 465		; 000001d1H
  0006f	0f 8f 25 03 00
	00		 jg	 $LN88@NpcTalk
  00075	0f 84 10 03 00
	00		 je	 $LN63@NpcTalk
  0007b	81 c3 33 ff ff
	ff		 add	 ebx, -205		; ffffff33H
  00081	81 fb f8 00 00
	00		 cmp	 ebx, 248		; 000000f8H
  00087	0f 87 96 04 00
	00		 ja	 $LN2@NpcTalk
  0008d	0f b6 83 00 00
	00 00		 movzx	 eax, BYTE PTR $LN89@NpcTalk[ebx]
  00094	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN94@NpcTalk[eax*4]
$LN9@NpcTalk:

; 71   : 	{
; 72   : 		case 254:
; 73   : 			return NpcFasi ( lpNpc, lpObj );

  0009b	56		 push	 esi
  0009c	57		 push	 edi
  0009d	e8 00 00 00 00	 call	 ?NpcFasi@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcFasi
  000a2	83 c4 08	 add	 esp, 8
  000a5	5e		 pop	 esi
  000a6	5f		 pop	 edi
  000a7	5b		 pop	 ebx

; 322  : }

  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
$LN10@NpcTalk:

; 74   : 
; 75   : 		case 241:
; 76   : 			return NpcGuildMasterTalk( lpNpc, lpObj );

  000aa	56		 push	 esi
  000ab	57		 push	 edi
  000ac	e8 00 00 00 00	 call	 ?NpcGuildMasterTalk@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcGuildMasterTalk
  000b1	83 c4 08	 add	 esp, 8
  000b4	5e		 pop	 esi
  000b5	5f		 pop	 edi
  000b6	5b		 pop	 ebx

; 322  : }

  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
$LN11@NpcTalk:

; 77   : 
; 78   : 		case 239:
; 79   : 			return NpcBattleAnnouncer( lpNpc, lpObj );

  000b9	56		 push	 esi
  000ba	57		 push	 edi
  000bb	e8 00 00 00 00	 call	 ?NpcBattleAnnouncer@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcBattleAnnouncer
  000c0	83 c4 08	 add	 esp, 8
  000c3	5e		 pop	 esi
  000c4	5f		 pop	 edi
  000c5	5b		 pop	 ebx

; 322  : }

  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
$LN12@NpcTalk:

; 80   : 
; 81   : 		case 249:
; 82   : 			return NpcRolensiaGuard( lpNpc, lpObj );

  000c8	56		 push	 esi
  000c9	57		 push	 edi
  000ca	e8 00 00 00 00	 call	 ?NpcRolensiaGuard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcRolensiaGuard
  000cf	83 c4 08	 add	 esp, 8
  000d2	5e		 pop	 esi
  000d3	5f		 pop	 edi
  000d4	5b		 pop	 ebx

; 322  : }

  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
$LN13@NpcTalk:

; 83   : 
; 84   : 		case 238:
; 85   : 			return NpcChaosGoblelin( lpNpc, lpObj );

  000d7	56		 push	 esi
  000d8	57		 push	 edi
  000d9	e8 00 00 00 00	 call	 ?NpcChaosGoblelin@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcChaosGoblelin
  000de	83 c4 08	 add	 esp, 8
  000e1	5e		 pop	 esi
  000e2	5f		 pop	 edi
  000e3	5b		 pop	 ebx

; 322  : }

  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
$LN14@NpcTalk:

; 86   : 
; 87   : 		case 237:
; 88   : 			return NpcRusipher( lpNpc, lpObj );

  000e6	56		 push	 esi
  000e7	57		 push	 edi
  000e8	e8 00 00 00 00	 call	 ?NpcRusipher@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcRusipher
  000ed	83 c4 08	 add	 esp, 8
  000f0	5e		 pop	 esi
  000f1	5f		 pop	 edi
  000f2	5b		 pop	 ebx

; 322  : }

  000f3	5d		 pop	 ebp
  000f4	c3		 ret	 0
$LN15@NpcTalk:

; 89   : 
; 90   : 		case 253:
; 91   : 			return NpcPosionGirl( lpNpc, lpObj );

  000f5	56		 push	 esi
  000f6	57		 push	 edi
  000f7	e8 00 00 00 00	 call	 ?NpcPosionGirl@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcPosionGirl
  000fc	83 c4 08	 add	 esp, 8
  000ff	5e		 pop	 esi
  00100	5f		 pop	 edi
  00101	5b		 pop	 ebx

; 322  : }

  00102	5d		 pop	 ebp
  00103	c3		 ret	 0
$LN16@NpcTalk:

; 92   : 
; 93   : 		case 245:
; 94   : 			return NpcDeviasWizard( lpNpc, lpObj );

  00104	56		 push	 esi
  00105	57		 push	 edi
  00106	e8 00 00 00 00	 call	 ?NpcDeviasWizard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDeviasWizard
  0010b	83 c4 08	 add	 esp, 8
  0010e	5e		 pop	 esi
  0010f	5f		 pop	 edi
  00110	5b		 pop	 ebx

; 322  : }

  00111	5d		 pop	 ebp
  00112	c3		 ret	 0
$LN17@NpcTalk:

; 95   : 
; 96   : 		case 247:
; 97   : 			return NpcDeviasGuard( lpNpc, lpObj );

  00113	56		 push	 esi
  00114	57		 push	 edi
  00115	e8 00 00 00 00	 call	 ?NpcDeviasGuard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDeviasGuard
  0011a	83 c4 08	 add	 esp, 8
  0011d	5e		 pop	 esi
  0011e	5f		 pop	 edi
  0011f	5b		 pop	 ebx

; 322  : }

  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
$LN18@NpcTalk:

; 98   : 
; 99   : 		case 240:
; 100  : 			return NpcWarehouse( lpNpc, lpObj );

  00122	56		 push	 esi
  00123	57		 push	 edi
  00124	e8 00 00 00 00	 call	 ?NpcWarehouse@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcWarehouse
  00129	83 c4 08	 add	 esp, 8
  0012c	5e		 pop	 esi
  0012d	5f		 pop	 edi
  0012e	5b		 pop	 ebx

; 322  : }

  0012f	5d		 pop	 ebp
  00130	c3		 ret	 0
$LN19@NpcTalk:

; 101  : 
; 102  : 		case 226:
; 103  : 			return NpcDarkSpiritTrainer( lpNpc, lpObj );

  00131	56		 push	 esi
  00132	57		 push	 edi
  00133	e8 00 00 00 00	 call	 ?NpcDarkSpiritTrainer@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDarkSpiritTrainer
  00138	83 c4 08	 add	 esp, 8
  0013b	5e		 pop	 esi
  0013c	5f		 pop	 edi
  0013d	5b		 pop	 ebx

; 322  : }

  0013e	5d		 pop	 ebp
  0013f	c3		 ret	 0
$LN20@NpcTalk:

; 104  : 
; 105  : 		case 242:
; 106  : 			return NpcNoriaRara( lpNpc, lpObj );

  00140	56		 push	 esi
  00141	57		 push	 edi
  00142	e8 00 00 00 00	 call	 ?NpcNoriaRara@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcNoriaRara
  00147	83 c4 08	 add	 esp, 8
  0014a	5e		 pop	 esi
  0014b	5f		 pop	 edi
  0014c	5b		 pop	 ebx

; 322  : }

  0014d	5d		 pop	 ebp
  0014e	c3		 ret	 0
$LN21@NpcTalk:

; 107  : 
; 108  : 		case 244:
; 109  : 			return NpcDeviasMadam( lpNpc, lpObj );

  0014f	56		 push	 esi
  00150	57		 push	 edi
  00151	e8 00 00 00 00	 call	 ?NpcDeviasMadam@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDeviasMadam
  00156	83 c4 08	 add	 esp, 8
  00159	5e		 pop	 esi
  0015a	5f		 pop	 edi
  0015b	5b		 pop	 ebx

; 322  : }

  0015c	5d		 pop	 ebp
  0015d	c3		 ret	 0
$LN22@NpcTalk:

; 110  : 
; 111  : 		case 236:
; 112  : 			return NpcEventChipNPC( lpNpc, lpObj );

  0015e	56		 push	 esi
  0015f	57		 push	 edi
  00160	e8 00 00 00 00	 call	 ?NpcEventChipNPC@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcEventChipNPC
  00165	83 c4 08	 add	 esp, 8
  00168	5e		 pop	 esi
  00169	5f		 pop	 edi
  0016a	5b		 pop	 ebx

; 322  : }

  0016b	5d		 pop	 ebp
  0016c	c3		 ret	 0
$LN23@NpcTalk:

; 113  : 
; 114  : 		case 234:
; 115  : 			return NpcServerDivision( lpNpc, lpObj );

  0016d	56		 push	 esi
  0016e	57		 push	 edi
  0016f	e8 00 00 00 00	 call	 ?NpcServerDivision@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcServerDivision
  00174	83 c4 08	 add	 esp, 8
  00177	5e		 pop	 esi
  00178	5f		 pop	 edi
  00179	5b		 pop	 ebx

; 322  : }

  0017a	5d		 pop	 ebp
  0017b	c3		 ret	 0
$LN24@NpcTalk:

; 116  : 
; 117  : 		case 232:
; 118  : 			return NpcAngelKing( lpNpc, lpObj );

  0017c	56		 push	 esi
  0017d	57		 push	 edi
  0017e	e8 00 00 00 00	 call	 ?NpcAngelKing@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcAngelKing
  00183	83 c4 08	 add	 esp, 8
  00186	5e		 pop	 esi
  00187	5f		 pop	 edi
  00188	5b		 pop	 ebx

; 322  : }

  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
$LN25@NpcTalk:

; 119  : 
; 120  : 		case 233:
; 121  : 			return NpcAngelMessanger( lpNpc, lpObj );

  0018b	56		 push	 esi
  0018c	57		 push	 edi
  0018d	e8 00 00 00 00	 call	 ?NpcAngelMessanger@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcAngelMessanger
  00192	83 c4 08	 add	 esp, 8
  00195	5e		 pop	 esi
  00196	5f		 pop	 edi
  00197	5b		 pop	 ebx

; 322  : }

  00198	5d		 pop	 ebp
  00199	c3		 ret	 0
$LN26@NpcTalk:

; 122  : 
; 123  : 		case 255:
; 124  : 			return NpcRolensiaMadam( lpNpc, lpObj );

  0019a	56		 push	 esi
  0019b	57		 push	 edi
  0019c	e8 00 00 00 00	 call	 ?NpcRolensiaMadam@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcRolensiaMadam
  001a1	83 c4 08	 add	 esp, 8
  001a4	5e		 pop	 esi
  001a5	5f		 pop	 edi
  001a6	5b		 pop	 ebx

; 322  : }

  001a7	5d		 pop	 ebp
  001a8	c3		 ret	 0
$LN27@NpcTalk:

; 125  : 
; 126  : 		case 250:
; 127  : 			return NpcRoadMerchant( lpNpc, lpObj );

  001a9	56		 push	 esi
  001aa	57		 push	 edi
  001ab	e8 00 00 00 00	 call	 ?NpcRoadMerchant@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcRoadMerchant
  001b0	83 c4 08	 add	 esp, 8
  001b3	5e		 pop	 esi
  001b4	5f		 pop	 edi
  001b5	5b		 pop	 ebx

; 322  : }

  001b6	5d		 pop	 ebp
  001b7	c3		 ret	 0
$LN28@NpcTalk:

; 128  : 
; 129  : 		case 246:
; 130  : 			return NpcDeviasWeapon( lpNpc, lpObj );

  001b8	56		 push	 esi
  001b9	57		 push	 edi
  001ba	e8 00 00 00 00	 call	 ?NpcDeviasWeapon@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDeviasWeapon
  001bf	83 c4 08	 add	 esp, 8
  001c2	5e		 pop	 esi
  001c3	5f		 pop	 edi
  001c4	5b		 pop	 ebx

; 322  : }

  001c5	5d		 pop	 ebp
  001c6	c3		 ret	 0
$LN29@NpcTalk:

; 131  : 
; 132  : 		case 251:
; 133  : 			return NpcRorensiaSmith( lpNpc, lpObj );

  001c7	56		 push	 esi
  001c8	57		 push	 edi
  001c9	e8 00 00 00 00	 call	 ?NpcRorensiaSmith@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcRorensiaSmith
  001ce	83 c4 08	 add	 esp, 8
  001d1	5e		 pop	 esi
  001d2	5f		 pop	 edi
  001d3	5b		 pop	 ebx

; 322  : }

  001d4	5d		 pop	 ebp
  001d5	c3		 ret	 0
$LN30@NpcTalk:

; 134  : 
; 135  : 		case 243:
; 136  : 			return NpcNoriJangIn( lpNpc, lpObj );

  001d6	56		 push	 esi
  001d7	57		 push	 edi
  001d8	e8 00 00 00 00	 call	 ?NpcNoriJangIn@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcNoriJangIn
  001dd	83 c4 08	 add	 esp, 8
  001e0	5e		 pop	 esi
  001e1	5f		 pop	 edi
  001e2	5b		 pop	 ebx

; 322  : }

  001e3	5d		 pop	 ebp
  001e4	c3		 ret	 0
$LN31@NpcTalk:

; 137  : 
; 138  : 		case 256:
; 139  : 			return NpcJewelMixDealer( lpNpc, lpObj );

  001e5	56		 push	 esi
  001e6	57		 push	 edi
  001e7	e8 00 00 00 00	 call	 ?NpcJewelMixDealer@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcJewelMixDealer
  001ec	83 c4 08	 add	 esp, 8
  001ef	5e		 pop	 esi
  001f0	5f		 pop	 edi
  001f1	5b		 pop	 ebx

; 322  : }

  001f2	5d		 pop	 ebp
  001f3	c3		 ret	 0
$LN32@NpcTalk:

; 140  : 
; 141  : #if (GS_CASTLE == 0 || GS_SPEC == 1)
; 142  : 		case 367:
; 143  : 			return NpcMainatenceMachine ( lpNpc, lpObj );

  001f4	56		 push	 esi
  001f5	57		 push	 edi
  001f6	e8 00 00 00 00	 call	 ?NpcMainatenceMachine@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcMainatenceMachine
  001fb	83 c4 08	 add	 esp, 8
  001fe	5e		 pop	 esi
  001ff	5f		 pop	 edi
  00200	5b		 pop	 ebx

; 322  : }

  00201	5d		 pop	 ebp
  00202	c3		 ret	 0
$LN33@NpcTalk:

; 144  : #endif
; 145  : 
; 146  : 		case 221:
; 147  : 			return NpcSiegeMachine_Attack( lpNpc, lpObj );

  00203	56		 push	 esi
  00204	57		 push	 edi
  00205	e8 00 00 00 00	 call	 ?NpcSiegeMachine_Attack@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSiegeMachine_Attack
  0020a	83 c4 08	 add	 esp, 8
  0020d	5e		 pop	 esi
  0020e	5f		 pop	 edi
  0020f	5b		 pop	 ebx

; 322  : }

  00210	5d		 pop	 ebp
  00211	c3		 ret	 0
$LN34@NpcTalk:

; 148  : 
; 149  : 		case 222:
; 150  : 			return NpcSiegeMachine_Defense( lpNpc, lpObj );

  00212	56		 push	 esi
  00213	57		 push	 edi
  00214	e8 00 00 00 00	 call	 ?NpcSiegeMachine_Defense@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSiegeMachine_Defense
  00219	83 c4 08	 add	 esp, 8
  0021c	5e		 pop	 esi
  0021d	5f		 pop	 edi
  0021e	5b		 pop	 ebx

; 322  : }

  0021f	5d		 pop	 ebp
  00220	c3		 ret	 0
$LN35@NpcTalk:

; 151  : 
; 152  : 		case 223:
; 153  : 			return NpcElderCircle( lpNpc, lpObj );

  00221	56		 push	 esi
  00222	57		 push	 edi
  00223	e8 00 00 00 00	 call	 ?NpcElderCircle@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcElderCircle
  00228	83 c4 08	 add	 esp, 8
  0022b	5e		 pop	 esi
  0022c	5f		 pop	 edi
  0022d	5b		 pop	 ebx

; 322  : }

  0022e	5d		 pop	 ebp
  0022f	c3		 ret	 0
$LN36@NpcTalk:

; 154  : 
; 155  : 		case 224:
; 156  : 			return NpcCastleGuard( lpNpc, lpObj );

  00230	56		 push	 esi
  00231	57		 push	 edi
  00232	e8 00 00 00 00	 call	 ?NpcCastleGuard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCastleGuard
  00237	83 c4 08	 add	 esp, 8
  0023a	5e		 pop	 esi
  0023b	5f		 pop	 edi
  0023c	5b		 pop	 ebx

; 322  : }

  0023d	5d		 pop	 ebp
  0023e	c3		 ret	 0
$LN37@NpcTalk:

; 157  : 
; 158  : 		case 219:
; 159  : 			return NpcCastleGateLever( lpNpc, lpObj );

  0023f	56		 push	 esi
  00240	57		 push	 edi
  00241	e8 00 00 00 00	 call	 ?NpcCastleGateLever@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCastleGateLever
  00246	83 c4 08	 add	 esp, 8
  00249	5e		 pop	 esi
  0024a	5f		 pop	 edi
  0024b	5b		 pop	 ebx

; 322  : }

  0024c	5d		 pop	 ebp
  0024d	c3		 ret	 0
$LN38@NpcTalk:

; 160  : 
; 161  : 		case 216:
; 162  : 			return NpcCastleCrown( lpNpc, lpObj );

  0024e	56		 push	 esi
  0024f	57		 push	 edi
  00250	e8 00 00 00 00	 call	 ?NpcCastleCrown@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCastleCrown
  00255	83 c4 08	 add	 esp, 8
  00258	5e		 pop	 esi
  00259	5f		 pop	 edi
  0025a	5b		 pop	 ebx

; 322  : }

  0025b	5d		 pop	 ebp
  0025c	c3		 ret	 0
$LN39@NpcTalk:

; 163  : 
; 164  : 		case 217:
; 165  : 		case 218:
; 166  : 			return NpcCastleSwitch( lpNpc, lpObj );

  0025d	56		 push	 esi
  0025e	57		 push	 edi
  0025f	e8 00 00 00 00	 call	 ?NpcCastleSwitch@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCastleSwitch
  00264	83 c4 08	 add	 esp, 8
  00267	5e		 pop	 esi
  00268	5f		 pop	 edi
  00269	5b		 pop	 ebx

; 322  : }

  0026a	5d		 pop	 ebp
  0026b	c3		 ret	 0
$LN40@NpcTalk:

; 167  : 
; 168  : #if (GS_CASTLE == 1)
; 169  : 		case 220:
; 170  : 			return NpcCastleHuntZoneGuard( lpNpc, lpObj );

  0026c	56		 push	 esi
  0026d	57		 push	 edi
  0026e	e8 00 00 00 00	 call	 ?NpcCastleHuntZoneGuard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCastleHuntZoneGuard
  00273	83 c4 08	 add	 esp, 8
  00276	5e		 pop	 esi
  00277	5f		 pop	 edi
  00278	5b		 pop	 ebx

; 322  : }

  00279	5d		 pop	 ebp
  0027a	c3		 ret	 0
$LN41@NpcTalk:

; 171  : #endif
; 172  : 		case 257:
; 173  : 			return NpcShadowPhantom( lpNpc, lpObj );

  0027b	56		 push	 esi
  0027c	57		 push	 edi
  0027d	e8 00 00 00 00	 call	 ?NpcShadowPhantom@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcShadowPhantom
  00282	83 c4 08	 add	 esp, 8
  00285	5e		 pop	 esi
  00286	5f		 pop	 edi
  00287	5b		 pop	 ebx

; 322  : }

  00288	5d		 pop	 ebp
  00289	c3		 ret	 0
$LN46@NpcTalk:

; 174  : 
; 175  : #if (GS_CASTLE == 1)
; 176  : 
; 177  : 		case 205:
; 178  : 			return NpcCrywolfAltar(lpNpc,lpObj);
; 179  : 
; 180  : 		case 206:
; 181  : 			return NpcCrywolfAltar(lpNpc,lpObj);
; 182  : 
; 183  : 		case 207:
; 184  : 			return NpcCrywolfAltar(lpNpc,lpObj);
; 185  : 
; 186  : 		case 208:
; 187  : 			return NpcCrywolfAltar(lpNpc,lpObj);
; 188  : 
; 189  : 		case 209:
; 190  : 			return NpcCrywolfAltar(lpNpc,lpObj);

  0028a	56		 push	 esi
  0028b	57		 push	 edi
  0028c	e8 00 00 00 00	 call	 ?NpcCrywolfAltar@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCrywolfAltar
  00291	83 c4 08	 add	 esp, 8
  00294	5e		 pop	 esi
  00295	5f		 pop	 edi
  00296	5b		 pop	 ebx

; 322  : }

  00297	5d		 pop	 ebp
  00298	c3		 ret	 0
$LN47@NpcTalk:

; 191  : #endif
; 192  : #if (CUSTOM_OLYMP==1)
; 193  : 		case 258:
; 194  : 			return g_CustomOlymp.NpcTalk(lpNpc,lpObj);
; 195  : #endif
; 196  : 		case 259:
; 197  : 			return NpcReira ( lpNpc, lpObj );

  00299	56		 push	 esi
  0029a	57		 push	 edi
  0029b	e8 00 00 00 00	 call	 ?NpcReira@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcReira
  002a0	83 c4 08	 add	 esp, 8
  002a3	5e		 pop	 esi
  002a4	5f		 pop	 edi
  002a5	5b		 pop	 ebx

; 322  : }

  002a6	5d		 pop	 ebp
  002a7	c3		 ret	 0
$LN48@NpcTalk:

; 198  : 
; 199  : 		case 368:
; 200  : 		case 369:
; 201  : 		case 370:
; 202  : 			return g_kJewelOfHarmonySystem.NpcJewelOfHarmony( lpNpc, lpObj );

  002a8	56		 push	 esi
  002a9	57		 push	 edi
  002aa	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_kJewelOfHarmonySystem@@3VCJewelOfHarmonySystem@@A ; g_kJewelOfHarmonySystem
  002af	e8 00 00 00 00	 call	 ?NpcJewelOfHarmony@CJewelOfHarmonySystem@@QAEHPAUOBJECTSTRUCT@@0@Z ; CJewelOfHarmonySystem::NpcJewelOfHarmony
  002b4	5e		 pop	 esi
  002b5	5f		 pop	 edi
  002b6	5b		 pop	 ebx

; 322  : }

  002b7	5d		 pop	 ebp
  002b8	c3		 ret	 0
$LN49@NpcTalk:

; 203  : 
; 204  : 		case 375:
; 205  : 			return NpcChaosCardMaster( lpNpc, lpObj );

  002b9	56		 push	 esi
  002ba	57		 push	 edi
  002bb	e8 00 00 00 00	 call	 ?NpcChaosCardMaster@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcChaosCardMaster
  002c0	83 c4 08	 add	 esp, 8
  002c3	5e		 pop	 esi
  002c4	5f		 pop	 edi
  002c5	5b		 pop	 ebx

; 322  : }

  002c6	5d		 pop	 ebp
  002c7	c3		 ret	 0
$LN50@NpcTalk:

; 206  : 
; 207  : 		case 376:
; 208  : 			return NpcDrinkSellerHillary( lpNpc, lpObj );

  002c8	56		 push	 esi
  002c9	57		 push	 edi
  002ca	e8 00 00 00 00	 call	 ?NpcDrinkSellerHillary@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDrinkSellerHillary
  002cf	83 c4 08	 add	 esp, 8
  002d2	5e		 pop	 esi
  002d3	5f		 pop	 edi
  002d4	5b		 pop	 ebx

; 322  : }

  002d5	5d		 pop	 ebp
  002d6	c3		 ret	 0
$LN51@NpcTalk:

; 209  : 
; 210  : 		case 377:
; 211  : 			return NpcDrinkSellerLindsay( lpNpc, lpObj );

  002d7	56		 push	 esi
  002d8	57		 push	 edi
  002d9	e8 00 00 00 00	 call	 ?NpcDrinkSellerLindsay@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDrinkSellerLindsay
  002de	83 c4 08	 add	 esp, 8
  002e1	5e		 pop	 esi
  002e2	5f		 pop	 edi
  002e3	5b		 pop	 ebx

; 322  : }

  002e4	5d		 pop	 ebp
  002e5	c3		 ret	 0
$LN52@NpcTalk:

; 212  : 
; 213  : 		case 379:
; 214  : 			return NpcFireWorkGirl( lpNpc, lpObj );

  002e6	56		 push	 esi
  002e7	57		 push	 edi
  002e8	e8 00 00 00 00	 call	 ?NpcFireWorkGirl@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcFireWorkGirl
  002ed	83 c4 08	 add	 esp, 8
  002f0	5e		 pop	 esi
  002f1	5f		 pop	 edi
  002f2	5b		 pop	 ebx

; 322  : }

  002f3	5d		 pop	 ebp
  002f4	c3		 ret	 0
$LN53@NpcTalk:

; 215  : 
; 216  : 		case 385:
; 217  : 			return NpcIllusionMaster( lpNpc, lpObj );

  002f5	56		 push	 esi
  002f6	57		 push	 edi
  002f7	e8 00 00 00 00	 call	 ?NpcIllusionMaster@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcIllusionMaster
  002fc	83 c4 08	 add	 esp, 8
  002ff	5e		 pop	 esi
  00300	5f		 pop	 edi
  00301	5b		 pop	 ebx

; 322  : }

  00302	5d		 pop	 ebp
  00303	c3		 ret	 0
$LN54@NpcTalk:

; 218  : 
; 219  : 		case 380:
; 220  : 			return NpcIllusionHolyStatue( lpNpc, lpObj );

  00304	56		 push	 esi
  00305	57		 push	 edi
  00306	e8 00 00 00 00	 call	 ?NpcIllusionHolyStatue@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcIllusionHolyStatue
  0030b	83 c4 08	 add	 esp, 8
  0030e	5e		 pop	 esi
  0030f	5f		 pop	 edi
  00310	5b		 pop	 ebx

; 322  : }

  00311	5d		 pop	 ebp
  00312	c3		 ret	 0
$LN55@NpcTalk:

; 221  : 
; 222  : 		case 383:
; 223  : 			return NpcAlliedTeamForge( lpNpc, lpObj );

  00313	56		 push	 esi
  00314	57		 push	 edi
  00315	e8 00 00 00 00	 call	 ?NpcAlliedTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcAlliedTeamForge
  0031a	83 c4 08	 add	 esp, 8
  0031d	5e		 pop	 esi
  0031e	5f		 pop	 edi
  0031f	5b		 pop	 ebx

; 322  : }

  00320	5d		 pop	 ebp
  00321	c3		 ret	 0
$LN56@NpcTalk:

; 224  : 
; 225  : 		case 384:
; 226  : 			return NpcIllusionTeamForge( lpNpc, lpObj );

  00322	56		 push	 esi
  00323	57		 push	 edi
  00324	e8 00 00 00 00	 call	 ?NpcIllusionTeamForge@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcIllusionTeamForge
  00329	83 c4 08	 add	 esp, 8
  0032c	5e		 pop	 esi
  0032d	5f		 pop	 edi
  0032e	5b		 pop	 ebx

; 322  : }

  0032f	5d		 pop	 ebp
  00330	c3		 ret	 0
$LN57@NpcTalk:

; 227  : 
; 228  : 		case 415:
; 229  : 			return NpcSilvia( lpNpc, lpObj );

  00331	56		 push	 esi
  00332	57		 push	 edi
  00333	e8 00 00 00 00	 call	 ?NpcSilvia@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSilvia
  00338	83 c4 08	 add	 esp, 8
  0033b	5e		 pop	 esi
  0033c	5f		 pop	 edi
  0033d	5b		 pop	 ebx

; 322  : }

  0033e	5d		 pop	 ebp
  0033f	c3		 ret	 0
$LN58@NpcTalk:

; 230  : 
; 231  : 		case 416:
; 232  : 			return NpcLeah( lpNpc, lpObj );

  00340	56		 push	 esi
  00341	57		 push	 edi
  00342	e8 00 00 00 00	 call	 ?NpcLeah@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcLeah
  00347	83 c4 08	 add	 esp, 8
  0034a	5e		 pop	 esi
  0034b	5f		 pop	 edi
  0034c	5b		 pop	 ebx

; 322  : }

  0034d	5d		 pop	 ebp
  0034e	c3		 ret	 0
$LN59@NpcTalk:

; 233  : 
; 234  : 		case 417:
; 235  : 			return NpcMarseille( lpNpc, lpObj );

  0034f	56		 push	 esi
  00350	57		 push	 edi
  00351	e8 00 00 00 00	 call	 ?NpcMarseille@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcMarseille
  00356	83 c4 08	 add	 esp, 8
  00359	5e		 pop	 esi
  0035a	5f		 pop	 edi
  0035b	5b		 pop	 ebx

; 322  : }

  0035c	5d		 pop	 ebp
  0035d	c3		 ret	 0
$LN60@NpcTalk:

; 236  : 
; 237  : 		case 452:
; 238  : 			return NpcSeedMaster( lpNpc, lpObj );

  0035e	56		 push	 esi
  0035f	57		 push	 edi
  00360	e8 00 00 00 00	 call	 ?NpcSeedMaster@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSeedMaster
  00365	83 c4 08	 add	 esp, 8
  00368	5e		 pop	 esi
  00369	5f		 pop	 edi
  0036a	5b		 pop	 ebx

; 322  : }

  0036b	5d		 pop	 ebp
  0036c	c3		 ret	 0
$LN61@NpcTalk:

; 239  : 
; 240  : 		case 453:
; 241  : 			return NpcSeedResearch( lpNpc, lpObj );

  0036d	56		 push	 esi
  0036e	57		 push	 edi
  0036f	e8 00 00 00 00	 call	 ?NpcSeedResearch@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSeedResearch
  00374	83 c4 08	 add	 esp, 8
  00377	5e		 pop	 esi
  00378	5f		 pop	 edi
  00379	5b		 pop	 ebx

; 322  : }

  0037a	5d		 pop	 ebp
  0037b	c3		 ret	 0
$LN62@NpcTalk:

; 242  : 
; 243  : 		case 450:
; 244  : 			return NpcCherryBlossom( lpNpc, lpObj );

  0037c	56		 push	 esi
  0037d	57		 push	 edi
  0037e	e8 00 00 00 00	 call	 ?NpcCherryBlossom@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCherryBlossom
  00383	83 c4 08	 add	 esp, 8
  00386	5e		 pop	 esi
  00387	5f		 pop	 edi
  00388	5b		 pop	 ebx

; 322  : }

  00389	5d		 pop	 ebp
  0038a	c3		 ret	 0
$LN63@NpcTalk:

; 245  : 
; 246  : 		case 465:
; 247  : 			return NpcSanta( lpNpc,lpObj);

  0038b	56		 push	 esi
  0038c	57		 push	 edi
  0038d	e8 00 00 00 00	 call	 ?NpcSanta@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSanta
  00392	83 c4 08	 add	 esp, 8
  00395	5e		 pop	 esi
  00396	5f		 pop	 edi
  00397	5b		 pop	 ebx

; 322  : }

  00398	5d		 pop	 ebp
  00399	c3		 ret	 0
$LN88@NpcTalk:

; 66   : 	}
; 67   : 
; 68   : 	
; 69   : 
; 70   : 	switch ( npcnum )

  0039a	81 c3 2d fe ff
	ff		 add	 ebx, -467		; fffffe2dH
  003a0	81 fb b8 00 00
	00		 cmp	 ebx, 184		; 000000b8H
  003a6	0f 87 77 01 00
	00		 ja	 $LN2@NpcTalk
  003ac	0f b6 83 00 00
	00 00		 movzx	 eax, BYTE PTR $LN90@NpcTalk[ebx]
  003b3	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN95@NpcTalk[eax*4]
$LN64@NpcTalk:

; 248  : 
; 249  : 		case 467:
; 250  : 			return NpcSnowman( lpNpc,lpObj);

  003ba	56		 push	 esi
  003bb	57		 push	 edi
  003bc	e8 00 00 00 00	 call	 ?NpcSnowman@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSnowman
  003c1	83 c4 08	 add	 esp, 8
  003c4	5e		 pop	 esi
  003c5	5f		 pop	 edi
  003c6	5b		 pop	 ebx

; 322  : }

  003c7	5d		 pop	 ebp
  003c8	c3		 ret	 0
$LN65@NpcTalk:

; 251  : 
; 252  : 		case 468:
; 253  : 			return NpcLitleSanta( lpNpc,lpObj,0x5E);

  003c9	6a 5e		 push	 94			; 0000005eH
  003cb	56		 push	 esi
  003cc	57		 push	 edi
  003cd	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  003d2	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d5	5e		 pop	 esi
  003d6	5f		 pop	 edi
  003d7	5b		 pop	 ebx

; 322  : }

  003d8	5d		 pop	 ebp
  003d9	c3		 ret	 0
$LN66@NpcTalk:

; 254  : 
; 255  : 		case 469:
; 256  : 			return NpcLitleSanta( lpNpc,lpObj,0x5F);

  003da	6a 5f		 push	 95			; 0000005fH
  003dc	56		 push	 esi
  003dd	57		 push	 edi
  003de	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  003e3	83 c4 0c	 add	 esp, 12			; 0000000cH
  003e6	5e		 pop	 esi
  003e7	5f		 pop	 edi
  003e8	5b		 pop	 ebx

; 322  : }

  003e9	5d		 pop	 ebp
  003ea	c3		 ret	 0
$LN67@NpcTalk:

; 257  : 
; 258  : 		case 470:
; 259  : 			return NpcLitleSanta( lpNpc,lpObj,0);

  003eb	6a 00		 push	 0
  003ed	56		 push	 esi
  003ee	57		 push	 edi
  003ef	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  003f4	83 c4 0c	 add	 esp, 12			; 0000000cH
  003f7	5e		 pop	 esi
  003f8	5f		 pop	 edi
  003f9	5b		 pop	 ebx

; 322  : }

  003fa	5d		 pop	 ebp
  003fb	c3		 ret	 0
$LN68@NpcTalk:

; 260  : 
; 261  : 		case 471:
; 262  : 			return NpcLitleSanta( lpNpc,lpObj,1);

  003fc	6a 01		 push	 1
  003fe	56		 push	 esi
  003ff	57		 push	 edi
  00400	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  00405	83 c4 0c	 add	 esp, 12			; 0000000cH
  00408	5e		 pop	 esi
  00409	5f		 pop	 edi
  0040a	5b		 pop	 ebx

; 322  : }

  0040b	5d		 pop	 ebp
  0040c	c3		 ret	 0
$LN69@NpcTalk:

; 263  : 
; 264  : 		case 472:
; 265  : 			return NpcLitleSanta( lpNpc,lpObj,0x5C);

  0040d	6a 5c		 push	 92			; 0000005cH
  0040f	56		 push	 esi
  00410	57		 push	 edi
  00411	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  00416	83 c4 0c	 add	 esp, 12			; 0000000cH
  00419	5e		 pop	 esi
  0041a	5f		 pop	 edi
  0041b	5b		 pop	 ebx

; 322  : }

  0041c	5d		 pop	 ebp
  0041d	c3		 ret	 0
$LN70@NpcTalk:

; 266  : 
; 267  : 		case 473:
; 268  : 			return NpcLitleSanta( lpNpc,lpObj,0x5D);

  0041e	6a 5d		 push	 93			; 0000005dH
  00420	56		 push	 esi
  00421	57		 push	 edi
  00422	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  00427	83 c4 0c	 add	 esp, 12			; 0000000cH
  0042a	5e		 pop	 esi
  0042b	5f		 pop	 edi
  0042c	5b		 pop	 ebx

; 322  : }

  0042d	5d		 pop	 ebp
  0042e	c3		 ret	 0
$LN71@NpcTalk:

; 269  : 
; 270  : 		case 474:
; 271  : 			return NpcLitleSanta( lpNpc,lpObj,0x60);

  0042f	6a 60		 push	 96			; 00000060H
  00431	56		 push	 esi
  00432	57		 push	 edi
  00433	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  00438	83 c4 0c	 add	 esp, 12			; 0000000cH
  0043b	5e		 pop	 esi
  0043c	5f		 pop	 edi
  0043d	5b		 pop	 ebx

; 322  : }

  0043e	5d		 pop	 ebp
  0043f	c3		 ret	 0
$LN72@NpcTalk:

; 272  : 
; 273  : 		case 475:
; 274  : 			return NpcLitleSanta( lpNpc,lpObj,0x61);

  00440	6a 61		 push	 97			; 00000061H
  00442	56		 push	 esi
  00443	57		 push	 edi
  00444	e8 00 00 00 00	 call	 ?NpcLitleSanta@@YAHPAUOBJECTSTRUCT@@0H@Z ; NpcLitleSanta
  00449	83 c4 0c	 add	 esp, 12			; 0000000cH
  0044c	5e		 pop	 esi
  0044d	5f		 pop	 edi
  0044e	5b		 pop	 ebx

; 322  : }

  0044f	5d		 pop	 ebp
  00450	c3		 ret	 0
$LN73@NpcTalk:

; 275  : 
; 276  : 		case 478:
; 277  : 			return NpcDelgado( lpNpc, lpObj );

  00451	56		 push	 esi
  00452	57		 push	 edi
  00453	e8 00 00 00 00	 call	 ?NpcDelgado@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDelgado
  00458	83 c4 08	 add	 esp, 8
  0045b	5e		 pop	 esi
  0045c	5f		 pop	 edi
  0045d	5b		 pop	 ebx

; 322  : }

  0045e	5d		 pop	 ebp
  0045f	c3		 ret	 0
$LN74@NpcTalk:

; 278  : 			break;
; 279  : 
; 280  : 		case 479:
; 281  : 			return NpcTitus( lpNpc, lpObj );

  00460	56		 push	 esi
  00461	57		 push	 edi
  00462	e8 00 00 00 00	 call	 ?NpcTitus@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcTitus
  00467	83 c4 08	 add	 esp, 8
  0046a	5e		 pop	 esi
  0046b	5f		 pop	 edi
  0046c	5b		 pop	 ebx

; 322  : }

  0046d	5d		 pop	 ebp
  0046e	c3		 ret	 0
$LN75@NpcTalk:

; 282  : 
; 283  : 		case 522:
; 284  : 			return NpcImperialFort( lpNpc, lpObj );

  0046f	56		 push	 esi
  00470	57		 push	 edi
  00471	e8 00 00 00 00	 call	 ?NpcImperialFort@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcImperialFort
  00476	83 c4 08	 add	 esp, 8
  00479	5e		 pop	 esi
  0047a	5f		 pop	 edi
  0047b	5b		 pop	 ebx

; 322  : }

  0047c	5d		 pop	 ebp
  0047d	c3		 ret	 0
$LN76@NpcTalk:

; 285  : 
; 286  : 		case 540:
; 287  : 			return NpcLugard( lpNpc, lpObj );

  0047e	56		 push	 esi
  0047f	57		 push	 edi
  00480	e8 00 00 00 00	 call	 ?NpcLugard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcLugard
  00485	83 c4 08	 add	 esp, 8
  00488	5e		 pop	 esi
  00489	5f		 pop	 edi
  0048a	5b		 pop	 ebx

; 322  : }

  0048b	5d		 pop	 ebp
  0048c	c3		 ret	 0
$LN77@NpcTalk:

; 288  : 
; 289  : 		case 541:
; 290  : 			return NpcCompensationBox( lpNpc, lpObj );

  0048d	56		 push	 esi
  0048e	57		 push	 edi
  0048f	e8 00 00 00 00	 call	 ?NpcCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCompensationBox
  00494	83 c4 08	 add	 esp, 8
  00497	5e		 pop	 esi
  00498	5f		 pop	 edi
  00499	5b		 pop	 ebx

; 322  : }

  0049a	5d		 pop	 ebp
  0049b	c3		 ret	 0
$LN78@NpcTalk:

; 291  : 
; 292  : 		case 542:
; 293  : 			return NpcGoldCompensationBox( lpNpc, lpObj );

  0049c	56		 push	 esi
  0049d	57		 push	 edi
  0049e	e8 00 00 00 00	 call	 ?NpcGoldCompensationBox@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcGoldCompensationBox
  004a3	83 c4 08	 add	 esp, 8
  004a6	5e		 pop	 esi
  004a7	5f		 pop	 edi
  004a8	5b		 pop	 ebx

; 322  : }

  004a9	5d		 pop	 ebp
  004aa	c3		 ret	 0
$LN79@NpcTalk:

; 294  : 
; 295  : 		case 543:
; 296  : 			return NpcDuprianSteward( lpNpc, lpObj );

  004ab	56		 push	 esi
  004ac	57		 push	 edi
  004ad	e8 00 00 00 00	 call	 ?NpcDuprianSteward@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDuprianSteward
  004b2	83 c4 08	 add	 esp, 8
  004b5	5e		 pop	 esi
  004b6	5f		 pop	 edi
  004b7	5b		 pop	 ebx

; 322  : }

  004b8	5d		 pop	 ebp
  004b9	c3		 ret	 0
$LN80@NpcTalk:

; 297  : 
; 298  : 		case 544:
; 299  : 			return NpcVanertSteward( lpNpc, lpObj );

  004ba	56		 push	 esi
  004bb	57		 push	 edi
  004bc	e8 00 00 00 00	 call	 ?NpcVanertSteward@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcVanertSteward
  004c1	83 c4 08	 add	 esp, 8
  004c4	5e		 pop	 esi
  004c5	5f		 pop	 edi
  004c6	5b		 pop	 ebx

; 322  : }

  004c7	5d		 pop	 ebp
  004c8	c3		 ret	 0
$LN81@NpcTalk:

; 300  : 
; 301  : 		case 547:
; 302  : 			return NpcJulia( lpNpc, lpObj );

  004c9	56		 push	 esi
  004ca	57		 push	 edi
  004cb	e8 00 00 00 00	 call	 ?NpcJulia@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcJulia
  004d0	83 c4 08	 add	 esp, 8
  004d3	5e		 pop	 esi
  004d4	5f		 pop	 edi
  004d5	5b		 pop	 ebx

; 322  : }

  004d6	5d		 pop	 ebp
  004d7	c3		 ret	 0
$LN82@NpcTalk:

; 303  : 
; 304  : 		case 579:
; 305  : 			return NpcDavid( lpNpc, lpObj );

  004d8	56		 push	 esi
  004d9	57		 push	 edi
  004da	e8 00 00 00 00	 call	 ?NpcDavid@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcDavid
  004df	83 c4 08	 add	 esp, 8
  004e2	5e		 pop	 esi
  004e3	5f		 pop	 edi
  004e4	5b		 pop	 ebx

; 322  : }

  004e5	5d		 pop	 ebp
  004e6	c3		 ret	 0
$LN83@NpcTalk:

; 306  : 
; 307  : 		case 580:
; 308  : 			return NpcCaptainSlaugh( lpNpc, lpObj );

  004e7	56		 push	 esi
  004e8	57		 push	 edi
  004e9	e8 00 00 00 00	 call	 ?NpcCaptainSlaugh@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcCaptainSlaugh
  004ee	83 c4 08	 add	 esp, 8
  004f1	5e		 pop	 esi
  004f2	5f		 pop	 edi
  004f3	5b		 pop	 ebx

; 322  : }

  004f4	5d		 pop	 ebp
  004f5	c3		 ret	 0
$LN84@NpcTalk:

; 309  : 
; 310  : 		case 582:
; 311  : 			return NpcAdniel( lpNpc, lpObj );

  004f6	56		 push	 esi
  004f7	57		 push	 edi
  004f8	e8 00 00 00 00	 call	 ?NpcAdniel@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcAdniel
  004fd	83 c4 08	 add	 esp, 8
  00500	5e		 pop	 esi
  00501	5f		 pop	 edi
  00502	5b		 pop	 ebx

; 322  : }

  00503	5d		 pop	 ebp
  00504	c3		 ret	 0
$LN85@NpcTalk:

; 312  : 
; 313  : 		case 584:
; 314  : 			return NpcSirLesnar( lpNpc, lpObj );

  00505	56		 push	 esi
  00506	57		 push	 edi
  00507	e8 00 00 00 00	 call	 ?NpcSirLesnar@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcSirLesnar
  0050c	83 c4 08	 add	 esp, 8
  0050f	5e		 pop	 esi
  00510	5f		 pop	 edi
  00511	5b		 pop	 ebx

; 322  : }

  00512	5d		 pop	 ebp
  00513	c3		 ret	 0
$LN86@NpcTalk:

; 315  : 
; 316  : 		case 651:
; 317  : 			return NpcPrivateStoreBoard(lpNpc, lpObj);

  00514	56		 push	 esi
  00515	57		 push	 edi
  00516	e8 00 00 00 00	 call	 ?NpcPrivateStoreBoard@@YAHPAUOBJECTSTRUCT@@0@Z ; NpcPrivateStoreBoard
  0051b	83 c4 08	 add	 esp, 8
  0051e	5e		 pop	 esi
  0051f	5f		 pop	 edi
  00520	5b		 pop	 ebx

; 322  : }

  00521	5d		 pop	 ebp
  00522	c3		 ret	 0
$LN2@NpcTalk:
  00523	5e		 pop	 esi
  00524	5f		 pop	 edi

; 318  : 
; 319  : 	}
; 320  : 
; 321  : 	return FALSE;

  00525	33 c0		 xor	 eax, eax
  00527	5b		 pop	 ebx

; 322  : }

  00528	5d		 pop	 ebp
  00529	c3		 ret	 0
  0052a	66 90		 npad	 2
$LN94@NpcTalk:
  0052c	00 00 00 00	 DD	 $LN46@NpcTalk
  00530	00 00 00 00	 DD	 $LN38@NpcTalk
  00534	00 00 00 00	 DD	 $LN39@NpcTalk
  00538	00 00 00 00	 DD	 $LN37@NpcTalk
  0053c	00 00 00 00	 DD	 $LN40@NpcTalk
  00540	00 00 00 00	 DD	 $LN33@NpcTalk
  00544	00 00 00 00	 DD	 $LN34@NpcTalk
  00548	00 00 00 00	 DD	 $LN35@NpcTalk
  0054c	00 00 00 00	 DD	 $LN36@NpcTalk
  00550	00 00 00 00	 DD	 $LN19@NpcTalk
  00554	00 00 00 00	 DD	 $LN24@NpcTalk
  00558	00 00 00 00	 DD	 $LN25@NpcTalk
  0055c	00 00 00 00	 DD	 $LN23@NpcTalk
  00560	00 00 00 00	 DD	 $LN22@NpcTalk
  00564	00 00 00 00	 DD	 $LN14@NpcTalk
  00568	00 00 00 00	 DD	 $LN13@NpcTalk
  0056c	00 00 00 00	 DD	 $LN11@NpcTalk
  00570	00 00 00 00	 DD	 $LN18@NpcTalk
  00574	00 00 00 00	 DD	 $LN10@NpcTalk
  00578	00 00 00 00	 DD	 $LN20@NpcTalk
  0057c	00 00 00 00	 DD	 $LN30@NpcTalk
  00580	00 00 00 00	 DD	 $LN21@NpcTalk
  00584	00 00 00 00	 DD	 $LN16@NpcTalk
  00588	00 00 00 00	 DD	 $LN28@NpcTalk
  0058c	00 00 00 00	 DD	 $LN17@NpcTalk
  00590	00 00 00 00	 DD	 $LN12@NpcTalk
  00594	00 00 00 00	 DD	 $LN27@NpcTalk
  00598	00 00 00 00	 DD	 $LN29@NpcTalk
  0059c	00 00 00 00	 DD	 $LN15@NpcTalk
  005a0	00 00 00 00	 DD	 $LN9@NpcTalk
  005a4	00 00 00 00	 DD	 $LN26@NpcTalk
  005a8	00 00 00 00	 DD	 $LN31@NpcTalk
  005ac	00 00 00 00	 DD	 $LN41@NpcTalk
  005b0	00 00 00 00	 DD	 $LN47@NpcTalk
  005b4	00 00 00 00	 DD	 $LN32@NpcTalk
  005b8	00 00 00 00	 DD	 $LN48@NpcTalk
  005bc	00 00 00 00	 DD	 $LN49@NpcTalk
  005c0	00 00 00 00	 DD	 $LN50@NpcTalk
  005c4	00 00 00 00	 DD	 $LN51@NpcTalk
  005c8	00 00 00 00	 DD	 $LN52@NpcTalk
  005cc	00 00 00 00	 DD	 $LN54@NpcTalk
  005d0	00 00 00 00	 DD	 $LN55@NpcTalk
  005d4	00 00 00 00	 DD	 $LN56@NpcTalk
  005d8	00 00 00 00	 DD	 $LN53@NpcTalk
  005dc	00 00 00 00	 DD	 $LN57@NpcTalk
  005e0	00 00 00 00	 DD	 $LN58@NpcTalk
  005e4	00 00 00 00	 DD	 $LN59@NpcTalk
  005e8	00 00 00 00	 DD	 $LN62@NpcTalk
  005ec	00 00 00 00	 DD	 $LN60@NpcTalk
  005f0	00 00 00 00	 DD	 $LN61@NpcTalk
  005f4	00 00 00 00	 DD	 $LN2@NpcTalk
$LN89@NpcTalk:
  005f8	00		 DB	 0
  005f9	00		 DB	 0
  005fa	00		 DB	 0
  005fb	00		 DB	 0
  005fc	00		 DB	 0
  005fd	32		 DB	 50			; 00000032H
  005fe	32		 DB	 50			; 00000032H
  005ff	32		 DB	 50			; 00000032H
  00600	32		 DB	 50			; 00000032H
  00601	32		 DB	 50			; 00000032H
  00602	32		 DB	 50			; 00000032H
  00603	01		 DB	 1
  00604	02		 DB	 2
  00605	02		 DB	 2
  00606	03		 DB	 3
  00607	04		 DB	 4
  00608	05		 DB	 5
  00609	06		 DB	 6
  0060a	07		 DB	 7
  0060b	08		 DB	 8
  0060c	32		 DB	 50			; 00000032H
  0060d	09		 DB	 9
  0060e	32		 DB	 50			; 00000032H
  0060f	32		 DB	 50			; 00000032H
  00610	32		 DB	 50			; 00000032H
  00611	32		 DB	 50			; 00000032H
  00612	32		 DB	 50			; 00000032H
  00613	0a		 DB	 10			; 0000000aH
  00614	0b		 DB	 11			; 0000000bH
  00615	0c		 DB	 12			; 0000000cH
  00616	32		 DB	 50			; 00000032H
  00617	0d		 DB	 13			; 0000000dH
  00618	0e		 DB	 14			; 0000000eH
  00619	0f		 DB	 15			; 0000000fH
  0061a	10		 DB	 16			; 00000010H
  0061b	11		 DB	 17			; 00000011H
  0061c	12		 DB	 18			; 00000012H
  0061d	13		 DB	 19			; 00000013H
  0061e	14		 DB	 20			; 00000014H
  0061f	15		 DB	 21			; 00000015H
  00620	16		 DB	 22			; 00000016H
  00621	17		 DB	 23			; 00000017H
  00622	18		 DB	 24			; 00000018H
  00623	32		 DB	 50			; 00000032H
  00624	19		 DB	 25			; 00000019H
  00625	1a		 DB	 26			; 0000001aH
  00626	1b		 DB	 27			; 0000001bH
  00627	32		 DB	 50			; 00000032H
  00628	1c		 DB	 28			; 0000001cH
  00629	1d		 DB	 29			; 0000001dH
  0062a	1e		 DB	 30			; 0000001eH
  0062b	1f		 DB	 31			; 0000001fH
  0062c	20		 DB	 32			; 00000020H
  0062d	32		 DB	 50			; 00000032H
  0062e	21		 DB	 33			; 00000021H
  0062f	32		 DB	 50			; 00000032H
  00630	32		 DB	 50			; 00000032H
  00631	32		 DB	 50			; 00000032H
  00632	32		 DB	 50			; 00000032H
  00633	32		 DB	 50			; 00000032H
  00634	32		 DB	 50			; 00000032H
  00635	32		 DB	 50			; 00000032H
  00636	32		 DB	 50			; 00000032H
  00637	32		 DB	 50			; 00000032H
  00638	32		 DB	 50			; 00000032H
  00639	32		 DB	 50			; 00000032H
  0063a	32		 DB	 50			; 00000032H
  0063b	32		 DB	 50			; 00000032H
  0063c	32		 DB	 50			; 00000032H
  0063d	32		 DB	 50			; 00000032H
  0063e	32		 DB	 50			; 00000032H
  0063f	32		 DB	 50			; 00000032H
  00640	32		 DB	 50			; 00000032H
  00641	32		 DB	 50			; 00000032H
  00642	32		 DB	 50			; 00000032H
  00643	32		 DB	 50			; 00000032H
  00644	32		 DB	 50			; 00000032H
  00645	32		 DB	 50			; 00000032H
  00646	32		 DB	 50			; 00000032H
  00647	32		 DB	 50			; 00000032H
  00648	32		 DB	 50			; 00000032H
  00649	32		 DB	 50			; 00000032H
  0064a	32		 DB	 50			; 00000032H
  0064b	32		 DB	 50			; 00000032H
  0064c	32		 DB	 50			; 00000032H
  0064d	32		 DB	 50			; 00000032H
  0064e	32		 DB	 50			; 00000032H
  0064f	32		 DB	 50			; 00000032H
  00650	32		 DB	 50			; 00000032H
  00651	32		 DB	 50			; 00000032H
  00652	32		 DB	 50			; 00000032H
  00653	32		 DB	 50			; 00000032H
  00654	32		 DB	 50			; 00000032H
  00655	32		 DB	 50			; 00000032H
  00656	32		 DB	 50			; 00000032H
  00657	32		 DB	 50			; 00000032H
  00658	32		 DB	 50			; 00000032H
  00659	32		 DB	 50			; 00000032H
  0065a	32		 DB	 50			; 00000032H
  0065b	32		 DB	 50			; 00000032H
  0065c	32		 DB	 50			; 00000032H
  0065d	32		 DB	 50			; 00000032H
  0065e	32		 DB	 50			; 00000032H
  0065f	32		 DB	 50			; 00000032H
  00660	32		 DB	 50			; 00000032H
  00661	32		 DB	 50			; 00000032H
  00662	32		 DB	 50			; 00000032H
  00663	32		 DB	 50			; 00000032H
  00664	32		 DB	 50			; 00000032H
  00665	32		 DB	 50			; 00000032H
  00666	32		 DB	 50			; 00000032H
  00667	32		 DB	 50			; 00000032H
  00668	32		 DB	 50			; 00000032H
  00669	32		 DB	 50			; 00000032H
  0066a	32		 DB	 50			; 00000032H
  0066b	32		 DB	 50			; 00000032H
  0066c	32		 DB	 50			; 00000032H
  0066d	32		 DB	 50			; 00000032H
  0066e	32		 DB	 50			; 00000032H
  0066f	32		 DB	 50			; 00000032H
  00670	32		 DB	 50			; 00000032H
  00671	32		 DB	 50			; 00000032H
  00672	32		 DB	 50			; 00000032H
  00673	32		 DB	 50			; 00000032H
  00674	32		 DB	 50			; 00000032H
  00675	32		 DB	 50			; 00000032H
  00676	32		 DB	 50			; 00000032H
  00677	32		 DB	 50			; 00000032H
  00678	32		 DB	 50			; 00000032H
  00679	32		 DB	 50			; 00000032H
  0067a	32		 DB	 50			; 00000032H
  0067b	32		 DB	 50			; 00000032H
  0067c	32		 DB	 50			; 00000032H
  0067d	32		 DB	 50			; 00000032H
  0067e	32		 DB	 50			; 00000032H
  0067f	32		 DB	 50			; 00000032H
  00680	32		 DB	 50			; 00000032H
  00681	32		 DB	 50			; 00000032H
  00682	32		 DB	 50			; 00000032H
  00683	32		 DB	 50			; 00000032H
  00684	32		 DB	 50			; 00000032H
  00685	32		 DB	 50			; 00000032H
  00686	32		 DB	 50			; 00000032H
  00687	32		 DB	 50			; 00000032H
  00688	32		 DB	 50			; 00000032H
  00689	32		 DB	 50			; 00000032H
  0068a	32		 DB	 50			; 00000032H
  0068b	32		 DB	 50			; 00000032H
  0068c	32		 DB	 50			; 00000032H
  0068d	32		 DB	 50			; 00000032H
  0068e	32		 DB	 50			; 00000032H
  0068f	32		 DB	 50			; 00000032H
  00690	32		 DB	 50			; 00000032H
  00691	32		 DB	 50			; 00000032H
  00692	32		 DB	 50			; 00000032H
  00693	32		 DB	 50			; 00000032H
  00694	32		 DB	 50			; 00000032H
  00695	32		 DB	 50			; 00000032H
  00696	32		 DB	 50			; 00000032H
  00697	32		 DB	 50			; 00000032H
  00698	32		 DB	 50			; 00000032H
  00699	32		 DB	 50			; 00000032H
  0069a	22		 DB	 34			; 00000022H
  0069b	23		 DB	 35			; 00000023H
  0069c	23		 DB	 35			; 00000023H
  0069d	23		 DB	 35			; 00000023H
  0069e	32		 DB	 50			; 00000032H
  0069f	32		 DB	 50			; 00000032H
  006a0	32		 DB	 50			; 00000032H
  006a1	32		 DB	 50			; 00000032H
  006a2	24		 DB	 36			; 00000024H
  006a3	25		 DB	 37			; 00000025H
  006a4	26		 DB	 38			; 00000026H
  006a5	32		 DB	 50			; 00000032H
  006a6	27		 DB	 39			; 00000027H
  006a7	28		 DB	 40			; 00000028H
  006a8	32		 DB	 50			; 00000032H
  006a9	32		 DB	 50			; 00000032H
  006aa	29		 DB	 41			; 00000029H
  006ab	2a		 DB	 42			; 0000002aH
  006ac	2b		 DB	 43			; 0000002bH
  006ad	32		 DB	 50			; 00000032H
  006ae	32		 DB	 50			; 00000032H
  006af	32		 DB	 50			; 00000032H
  006b0	32		 DB	 50			; 00000032H
  006b1	32		 DB	 50			; 00000032H
  006b2	32		 DB	 50			; 00000032H
  006b3	32		 DB	 50			; 00000032H
  006b4	32		 DB	 50			; 00000032H
  006b5	32		 DB	 50			; 00000032H
  006b6	32		 DB	 50			; 00000032H
  006b7	32		 DB	 50			; 00000032H
  006b8	32		 DB	 50			; 00000032H
  006b9	32		 DB	 50			; 00000032H
  006ba	32		 DB	 50			; 00000032H
  006bb	32		 DB	 50			; 00000032H
  006bc	32		 DB	 50			; 00000032H
  006bd	32		 DB	 50			; 00000032H
  006be	32		 DB	 50			; 00000032H
  006bf	32		 DB	 50			; 00000032H
  006c0	32		 DB	 50			; 00000032H
  006c1	32		 DB	 50			; 00000032H
  006c2	32		 DB	 50			; 00000032H
  006c3	32		 DB	 50			; 00000032H
  006c4	32		 DB	 50			; 00000032H
  006c5	32		 DB	 50			; 00000032H
  006c6	32		 DB	 50			; 00000032H
  006c7	32		 DB	 50			; 00000032H
  006c8	32		 DB	 50			; 00000032H
  006c9	32		 DB	 50			; 00000032H
  006ca	2c		 DB	 44			; 0000002cH
  006cb	2d		 DB	 45			; 0000002dH
  006cc	2e		 DB	 46			; 0000002eH
  006cd	32		 DB	 50			; 00000032H
  006ce	32		 DB	 50			; 00000032H
  006cf	32		 DB	 50			; 00000032H
  006d0	32		 DB	 50			; 00000032H
  006d1	32		 DB	 50			; 00000032H
  006d2	32		 DB	 50			; 00000032H
  006d3	32		 DB	 50			; 00000032H
  006d4	32		 DB	 50			; 00000032H
  006d5	32		 DB	 50			; 00000032H
  006d6	32		 DB	 50			; 00000032H
  006d7	32		 DB	 50			; 00000032H
  006d8	32		 DB	 50			; 00000032H
  006d9	32		 DB	 50			; 00000032H
  006da	32		 DB	 50			; 00000032H
  006db	32		 DB	 50			; 00000032H
  006dc	32		 DB	 50			; 00000032H
  006dd	32		 DB	 50			; 00000032H
  006de	32		 DB	 50			; 00000032H
  006df	32		 DB	 50			; 00000032H
  006e0	32		 DB	 50			; 00000032H
  006e1	32		 DB	 50			; 00000032H
  006e2	32		 DB	 50			; 00000032H
  006e3	32		 DB	 50			; 00000032H
  006e4	32		 DB	 50			; 00000032H
  006e5	32		 DB	 50			; 00000032H
  006e6	32		 DB	 50			; 00000032H
  006e7	32		 DB	 50			; 00000032H
  006e8	32		 DB	 50			; 00000032H
  006e9	32		 DB	 50			; 00000032H
  006ea	32		 DB	 50			; 00000032H
  006eb	32		 DB	 50			; 00000032H
  006ec	32		 DB	 50			; 00000032H
  006ed	2f		 DB	 47			; 0000002fH
  006ee	32		 DB	 50			; 00000032H
  006ef	30		 DB	 48			; 00000030H
  006f0	31		 DB	 49			; 00000031H
  006f1	0f 1f 00	 npad	 3
$LN95@NpcTalk:
  006f4	00 00 00 00	 DD	 $LN64@NpcTalk
  006f8	00 00 00 00	 DD	 $LN65@NpcTalk
  006fc	00 00 00 00	 DD	 $LN66@NpcTalk
  00700	00 00 00 00	 DD	 $LN67@NpcTalk
  00704	00 00 00 00	 DD	 $LN68@NpcTalk
  00708	00 00 00 00	 DD	 $LN69@NpcTalk
  0070c	00 00 00 00	 DD	 $LN70@NpcTalk
  00710	00 00 00 00	 DD	 $LN71@NpcTalk
  00714	00 00 00 00	 DD	 $LN72@NpcTalk
  00718	00 00 00 00	 DD	 $LN73@NpcTalk
  0071c	00 00 00 00	 DD	 $LN74@NpcTalk
  00720	00 00 00 00	 DD	 $LN75@NpcTalk
  00724	00 00 00 00	 DD	 $LN76@NpcTalk
  00728	00 00 00 00	 DD	 $LN77@NpcTalk
  0072c	00 00 00 00	 DD	 $LN78@NpcTalk
  00730	00 00 00 00	 DD	 $LN79@NpcTalk
  00734	00 00 00 00	 DD	 $LN80@NpcTalk
  00738	00 00 00 00	 DD	 $LN81@NpcTalk
  0073c	00 00 00 00	 DD	 $LN82@NpcTalk
  00740	00 00 00 00	 DD	 $LN83@NpcTalk
  00744	00 00 00 00	 DD	 $LN84@NpcTalk
  00748	00 00 00 00	 DD	 $LN85@NpcTalk
  0074c	00 00 00 00	 DD	 $LN86@NpcTalk
  00750	00 00 00 00	 DD	 $LN2@NpcTalk
$LN90@NpcTalk:
  00754	00		 DB	 0
  00755	01		 DB	 1
  00756	02		 DB	 2
  00757	03		 DB	 3
  00758	04		 DB	 4
  00759	05		 DB	 5
  0075a	06		 DB	 6
  0075b	07		 DB	 7
  0075c	08		 DB	 8
  0075d	17		 DB	 23			; 00000017H
  0075e	17		 DB	 23			; 00000017H
  0075f	09		 DB	 9
  00760	0a		 DB	 10			; 0000000aH
  00761	17		 DB	 23			; 00000017H
  00762	17		 DB	 23			; 00000017H
  00763	17		 DB	 23			; 00000017H
  00764	17		 DB	 23			; 00000017H
  00765	17		 DB	 23			; 00000017H
  00766	17		 DB	 23			; 00000017H
  00767	17		 DB	 23			; 00000017H
  00768	17		 DB	 23			; 00000017H
  00769	17		 DB	 23			; 00000017H
  0076a	17		 DB	 23			; 00000017H
  0076b	17		 DB	 23			; 00000017H
  0076c	17		 DB	 23			; 00000017H
  0076d	17		 DB	 23			; 00000017H
  0076e	17		 DB	 23			; 00000017H
  0076f	17		 DB	 23			; 00000017H
  00770	17		 DB	 23			; 00000017H
  00771	17		 DB	 23			; 00000017H
  00772	17		 DB	 23			; 00000017H
  00773	17		 DB	 23			; 00000017H
  00774	17		 DB	 23			; 00000017H
  00775	17		 DB	 23			; 00000017H
  00776	17		 DB	 23			; 00000017H
  00777	17		 DB	 23			; 00000017H
  00778	17		 DB	 23			; 00000017H
  00779	17		 DB	 23			; 00000017H
  0077a	17		 DB	 23			; 00000017H
  0077b	17		 DB	 23			; 00000017H
  0077c	17		 DB	 23			; 00000017H
  0077d	17		 DB	 23			; 00000017H
  0077e	17		 DB	 23			; 00000017H
  0077f	17		 DB	 23			; 00000017H
  00780	17		 DB	 23			; 00000017H
  00781	17		 DB	 23			; 00000017H
  00782	17		 DB	 23			; 00000017H
  00783	17		 DB	 23			; 00000017H
  00784	17		 DB	 23			; 00000017H
  00785	17		 DB	 23			; 00000017H
  00786	17		 DB	 23			; 00000017H
  00787	17		 DB	 23			; 00000017H
  00788	17		 DB	 23			; 00000017H
  00789	17		 DB	 23			; 00000017H
  0078a	17		 DB	 23			; 00000017H
  0078b	0b		 DB	 11			; 0000000bH
  0078c	17		 DB	 23			; 00000017H
  0078d	17		 DB	 23			; 00000017H
  0078e	17		 DB	 23			; 00000017H
  0078f	17		 DB	 23			; 00000017H
  00790	17		 DB	 23			; 00000017H
  00791	17		 DB	 23			; 00000017H
  00792	17		 DB	 23			; 00000017H
  00793	17		 DB	 23			; 00000017H
  00794	17		 DB	 23			; 00000017H
  00795	17		 DB	 23			; 00000017H
  00796	17		 DB	 23			; 00000017H
  00797	17		 DB	 23			; 00000017H
  00798	17		 DB	 23			; 00000017H
  00799	17		 DB	 23			; 00000017H
  0079a	17		 DB	 23			; 00000017H
  0079b	17		 DB	 23			; 00000017H
  0079c	17		 DB	 23			; 00000017H
  0079d	0c		 DB	 12			; 0000000cH
  0079e	0d		 DB	 13			; 0000000dH
  0079f	0e		 DB	 14			; 0000000eH
  007a0	0f		 DB	 15			; 0000000fH
  007a1	10		 DB	 16			; 00000010H
  007a2	17		 DB	 23			; 00000017H
  007a3	17		 DB	 23			; 00000017H
  007a4	11		 DB	 17			; 00000011H
  007a5	17		 DB	 23			; 00000017H
  007a6	17		 DB	 23			; 00000017H
  007a7	17		 DB	 23			; 00000017H
  007a8	17		 DB	 23			; 00000017H
  007a9	17		 DB	 23			; 00000017H
  007aa	17		 DB	 23			; 00000017H
  007ab	17		 DB	 23			; 00000017H
  007ac	17		 DB	 23			; 00000017H
  007ad	17		 DB	 23			; 00000017H
  007ae	17		 DB	 23			; 00000017H
  007af	17		 DB	 23			; 00000017H
  007b0	17		 DB	 23			; 00000017H
  007b1	17		 DB	 23			; 00000017H
  007b2	17		 DB	 23			; 00000017H
  007b3	17		 DB	 23			; 00000017H
  007b4	17		 DB	 23			; 00000017H
  007b5	17		 DB	 23			; 00000017H
  007b6	17		 DB	 23			; 00000017H
  007b7	17		 DB	 23			; 00000017H
  007b8	17		 DB	 23			; 00000017H
  007b9	17		 DB	 23			; 00000017H
  007ba	17		 DB	 23			; 00000017H
  007bb	17		 DB	 23			; 00000017H
  007bc	17		 DB	 23			; 00000017H
  007bd	17		 DB	 23			; 00000017H
  007be	17		 DB	 23			; 00000017H
  007bf	17		 DB	 23			; 00000017H
  007c0	17		 DB	 23			; 00000017H
  007c1	17		 DB	 23			; 00000017H
  007c2	17		 DB	 23			; 00000017H
  007c3	17		 DB	 23			; 00000017H
  007c4	12		 DB	 18			; 00000012H
  007c5	13		 DB	 19			; 00000013H
  007c6	17		 DB	 23			; 00000017H
  007c7	14		 DB	 20			; 00000014H
  007c8	17		 DB	 23			; 00000017H
  007c9	15		 DB	 21			; 00000015H
  007ca	17		 DB	 23			; 00000017H
  007cb	17		 DB	 23			; 00000017H
  007cc	17		 DB	 23			; 00000017H
  007cd	17		 DB	 23			; 00000017H
  007ce	17		 DB	 23			; 00000017H
  007cf	17		 DB	 23			; 00000017H
  007d0	17		 DB	 23			; 00000017H
  007d1	17		 DB	 23			; 00000017H
  007d2	17		 DB	 23			; 00000017H
  007d3	17		 DB	 23			; 00000017H
  007d4	17		 DB	 23			; 00000017H
  007d5	17		 DB	 23			; 00000017H
  007d6	17		 DB	 23			; 00000017H
  007d7	17		 DB	 23			; 00000017H
  007d8	17		 DB	 23			; 00000017H
  007d9	17		 DB	 23			; 00000017H
  007da	17		 DB	 23			; 00000017H
  007db	17		 DB	 23			; 00000017H
  007dc	17		 DB	 23			; 00000017H
  007dd	17		 DB	 23			; 00000017H
  007de	17		 DB	 23			; 00000017H
  007df	17		 DB	 23			; 00000017H
  007e0	17		 DB	 23			; 00000017H
  007e1	17		 DB	 23			; 00000017H
  007e2	17		 DB	 23			; 00000017H
  007e3	17		 DB	 23			; 00000017H
  007e4	17		 DB	 23			; 00000017H
  007e5	17		 DB	 23			; 00000017H
  007e6	17		 DB	 23			; 00000017H
  007e7	17		 DB	 23			; 00000017H
  007e8	17		 DB	 23			; 00000017H
  007e9	17		 DB	 23			; 00000017H
  007ea	17		 DB	 23			; 00000017H
  007eb	17		 DB	 23			; 00000017H
  007ec	17		 DB	 23			; 00000017H
  007ed	17		 DB	 23			; 00000017H
  007ee	17		 DB	 23			; 00000017H
  007ef	17		 DB	 23			; 00000017H
  007f0	17		 DB	 23			; 00000017H
  007f1	17		 DB	 23			; 00000017H
  007f2	17		 DB	 23			; 00000017H
  007f3	17		 DB	 23			; 00000017H
  007f4	17		 DB	 23			; 00000017H
  007f5	17		 DB	 23			; 00000017H
  007f6	17		 DB	 23			; 00000017H
  007f7	17		 DB	 23			; 00000017H
  007f8	17		 DB	 23			; 00000017H
  007f9	17		 DB	 23			; 00000017H
  007fa	17		 DB	 23			; 00000017H
  007fb	17		 DB	 23			; 00000017H
  007fc	17		 DB	 23			; 00000017H
  007fd	17		 DB	 23			; 00000017H
  007fe	17		 DB	 23			; 00000017H
  007ff	17		 DB	 23			; 00000017H
  00800	17		 DB	 23			; 00000017H
  00801	17		 DB	 23			; 00000017H
  00802	17		 DB	 23			; 00000017H
  00803	17		 DB	 23			; 00000017H
  00804	17		 DB	 23			; 00000017H
  00805	17		 DB	 23			; 00000017H
  00806	17		 DB	 23			; 00000017H
  00807	17		 DB	 23			; 00000017H
  00808	17		 DB	 23			; 00000017H
  00809	17		 DB	 23			; 00000017H
  0080a	17		 DB	 23			; 00000017H
  0080b	17		 DB	 23			; 00000017H
  0080c	16		 DB	 22			; 00000016H
?NpcTalk@@YAHPAUOBJECTSTRUCT@@0@Z ENDP			; NpcTalk
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 2263 : #endif

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\npctalk.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 2263 : #endif

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
