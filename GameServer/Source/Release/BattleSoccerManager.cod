; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\BattleSoccerManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??0CBattleSoccerManager@@QAE@XZ			; CBattleSoccerManager::CBattleSoccerManager
PUBLIC	??1CBattleSoccerManager@@UAE@XZ			; CBattleSoccerManager::~CBattleSoccerManager
PUBLIC	??_GCBattleSoccerManager@@UAEPAXI@Z		; CBattleSoccerManager::`scalar deleting destructor'
PUBLIC	?InitBattleSoccer@@YAXXZ			; InitBattleSoccer
PUBLIC	?ClearBattleSoccer@@YAXXZ			; ClearBattleSoccer
PUBLIC	?gCheckBlankBattleGround@@YAHXZ			; gCheckBlankBattleGround
PUBLIC	?gCheckBattleGroundTimer@@YA_JXZ		; gCheckBattleGroundTimer
PUBLIC	?gBattleGroundEnable@@YAXHH@Z			; gBattleGroundEnable
PUBLIC	?gSetBattleTeamMaster@@YAXHHPADPAU_GUILD_INFO_STRUCT@@@Z ; gSetBattleTeamMaster
PUBLIC	?gBattleGetTeamPosition@@YAXHHAAF0@Z		; gBattleGetTeamPosition
PUBLIC	?GetBattleTeamName@@YAPADHH@Z			; GetBattleTeamName
PUBLIC	?SetBattleTeamScore@@YAXHHH@Z			; SetBattleTeamScore
PUBLIC	?GetBattleTeamScore@@YAHHH@Z			; GetBattleTeamScore
PUBLIC	?BattleSoccerGoalStart@@YAXH@Z			; BattleSoccerGoalStart
PUBLIC	?BattleSoccerGoalEnd@@YAXH@Z			; BattleSoccerGoalEnd
PUBLIC	?GetBattleSoccerGoalMove@@YAHH@Z		; GetBattleSoccerGoalMove
PUBLIC	?gBattleSoccerScoreUpdate@@YAHHH@Z		; gBattleSoccerScoreUpdate
PUBLIC	?gCheckGoal@@YAHHHAAH@Z				; gCheckGoal
PUBLIC	?gCheckBattleGround@@YAHPAUOBJECTSTRUCT@@@Z	; gCheckBattleGround
PUBLIC	??_7CBattleSoccerManager@@6B@			; CBattleSoccerManager::`vftable'
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	??_R4CBattleSoccerManager@@6B@			; CBattleSoccerManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBattleSoccerManager@@@8		; CBattleSoccerManager `RTTI Type Descriptor'
PUBLIC	??_R3CBattleSoccerManager@@8			; CBattleSoccerManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBattleSoccerManager@@8			; CBattleSoccerManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBattleSoccerManager@@8		; CBattleSoccerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_rand:PROC
EXTRN	?SetGroundRect@CBattleGround@@QAEXHHHHH@Z:PROC	; CBattleGround::SetGroundRect
EXTRN	?SetBattleType@CBattleGround@@QAEXH@Z:PROC	; CBattleGround::SetBattleType
EXTRN	?Enable@CBattleGround@@QAEXH@Z:PROC		; CBattleGround::Enable
EXTRN	?GetUsed@CBattleGround@@QAEHXZ:PROC		; CBattleGround::GetUsed
EXTRN	?SetTeamMaster@CBattleGround@@QAEXHPAD@Z:PROC	; CBattleGround::SetTeamMaster
EXTRN	?SetTeamName@CBattleGround@@QAEXHPAD@Z:PROC	; CBattleGround::SetTeamName
EXTRN	?GetTeamName@CBattleGround@@QAEPADH@Z:PROC	; CBattleGround::GetTeamName
EXTRN	?SetTimer@CBattleGround@@QAEXH@Z:PROC		; CBattleGround::SetTimer
EXTRN	?GetScore@CBattleGround@@QAEHH@Z:PROC		; CBattleGround::GetScore
EXTRN	?SetScore@CBattleGround@@QAEXHH@Z:PROC		; CBattleGround::SetScore
EXTRN	??0CBattleSoccer@@QAE@XZ:PROC			; CBattleSoccer::CBattleSoccer
EXTRN	?SetGoalMove@CBattleSoccer@@QAEXH@Z:PROC	; CBattleSoccer::SetGoalMove
EXTRN	?GetGoalMove@CBattleSoccer@@QAEHXZ:PROC		; CBattleSoccer::GetGoalMove
EXTRN	?SetGoalLeftRect@CBattleSoccer@@QAEXHHHH@Z:PROC	; CBattleSoccer::SetGoalLeftRect
EXTRN	?SetGoalRightRect@CBattleSoccer@@QAEXHHHH@Z:PROC ; CBattleSoccer::SetGoalRightRect
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?gObjGuildWarEndSend@@YAXPAU_GUILD_INFO_STRUCT@@0EE@Z:PROC ; gObjGuildWarEndSend
EXTRN	?gObjGuildWarEnd@@YAXPAU_GUILD_INFO_STRUCT@@0@Z:PROC ; gObjGuildWarEnd
EXTRN	?gObjGuildWarProc@@YAHPAU_GUILD_INFO_STRUCT@@0H@Z:PROC ; gObjGuildWarProc
EXTRN	??_ECBattleSoccerManager@@UAEPAXI@Z:PROC	; CBattleSoccerManager::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gBSGround@@3PAPAVCBattleSoccer@@A:DWORD	; gBSGround
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CBattleSoccerManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBattleSoccerManager@@8 DD FLAT:??_R0?AVCBattleSoccerManager@@@8 ; CBattleSoccerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBattleSoccerManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CBattleSoccerManager@@8
rdata$r	SEGMENT
??_R2CBattleSoccerManager@@8 DD FLAT:??_R1A@?0A@EA@CBattleSoccerManager@@8 ; CBattleSoccerManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBattleSoccerManager@@8
rdata$r	SEGMENT
??_R3CBattleSoccerManager@@8 DD 00H			; CBattleSoccerManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBattleSoccerManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBattleSoccerManager@@@8
data$r	SEGMENT
??_R0?AVCBattleSoccerManager@@@8 DD FLAT:??_7type_info@@6B@ ; CBattleSoccerManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBattleSoccerManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBattleSoccerManager@@6B@
rdata$r	SEGMENT
??_R4CBattleSoccerManager@@6B@ DD 00H			; CBattleSoccerManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBattleSoccerManager@@@8
	DD	FLAT:??_R3CBattleSoccerManager@@8
rdata$r	ENDS
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CBattleSoccerManager@@6B@
CONST	SEGMENT
??_7CBattleSoccerManager@@6B@ DD FLAT:??_R4CBattleSoccerManager@@6B@ ; CBattleSoccerManager::`vftable'
	DD	FLAT:??_ECBattleSoccerManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitBattleSoccer@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitBattleSoccer@@YAXXZ$0
__ehfuncinfo$?InitBattleSoccer@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitBattleSoccer@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gCheckBattleGround@@YAHPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?gCheckBattleGround@@YAHPAUOBJECTSTRUCT@@@Z PROC	; gCheckBattleGround, COMDAT

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 291  : 		{
; 292  : 			if ( lpObj->X >= gBSGround[n]->m_rect.left && lpObj->X <= gBSGround[n]->m_rect.right && lpObj->Y >= gBSGround[n]->m_rect.top && lpObj->Y <= gBSGround[n]->m_rect.bottom ) 

  00004	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00007	33 d2		 xor	 edx, edx
  00009	57		 push	 edi
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@gCheckBatt:

; 289  : 	{
; 290  : 		if ( gBSGround[n]->m_Set == TRUE )

  00010	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edx*4]
  00017	83 78 48 01	 cmp	 DWORD PTR [eax+72], 1
  0001b	75 5e		 jne	 SHORT $LN2@gCheckBatt

; 291  : 		{
; 292  : 			if ( lpObj->X >= gBSGround[n]->m_rect.left && lpObj->X <= gBSGround[n]->m_rect.right && lpObj->Y >= gBSGround[n]->m_rect.top && lpObj->Y <= gBSGround[n]->m_rect.bottom ) 

  0001d	0f b6 8e 20 01
	00 00		 movzx	 ecx, BYTE PTR [esi+288]
  00024	3b 48 38	 cmp	 ecx, DWORD PTR [eax+56]
  00027	7c 16		 jl	 SHORT $LN6@gCheckBatt
  00029	3b 48 40	 cmp	 ecx, DWORD PTR [eax+64]
  0002c	7f 11		 jg	 SHORT $LN6@gCheckBatt
  0002e	0f b6 be 21 01
	00 00		 movzx	 edi, BYTE PTR [esi+289]
  00035	3b 78 3c	 cmp	 edi, DWORD PTR [eax+60]
  00038	7c 05		 jl	 SHORT $LN6@gCheckBatt
  0003a	3b 78 44	 cmp	 edi, DWORD PTR [eax+68]
  0003d	7e 49		 jle	 SHORT $LN11@gCheckBatt
$LN6@gCheckBatt:

; 295  : 			}
; 296  : 
; 297  : 			if ( lpObj->X >= gBSGround[n]->m_GoalLeft.left && lpObj->X <= gBSGround[n]->m_GoalLeft.right && lpObj->Y >= gBSGround[n]->m_GoalLeft.top && lpObj->Y <= gBSGround[n]->m_GoalLeft.bottom ) 

  0003f	3b 48 68	 cmp	 ecx, DWORD PTR [eax+104]
  00042	7c 16		 jl	 SHORT $LN7@gCheckBatt
  00044	3b 48 70	 cmp	 ecx, DWORD PTR [eax+112]
  00047	7f 11		 jg	 SHORT $LN7@gCheckBatt
  00049	0f b6 be 21 01
	00 00		 movzx	 edi, BYTE PTR [esi+289]
  00050	3b 78 6c	 cmp	 edi, DWORD PTR [eax+108]
  00053	7c 05		 jl	 SHORT $LN7@gCheckBatt
  00055	3b 78 74	 cmp	 edi, DWORD PTR [eax+116]
  00058	7e 2e		 jle	 SHORT $LN11@gCheckBatt
$LN7@gCheckBatt:

; 298  : 			{
; 299  : 				return n;
; 300  : 			}
; 301  : 
; 302  : 			if ( lpObj->X >= gBSGround[n]->m_GoalRight.left && lpObj->X <= gBSGround[n]->m_GoalRight.right && lpObj->Y >= gBSGround[n]->m_GoalRight.top && lpObj->Y <= gBSGround[n]->m_GoalRight.bottom ) 

  0005a	3b 48 78	 cmp	 ecx, DWORD PTR [eax+120]
  0005d	7c 1c		 jl	 SHORT $LN2@gCheckBatt
  0005f	3b 88 80 00 00
	00		 cmp	 ecx, DWORD PTR [eax+128]
  00065	7f 14		 jg	 SHORT $LN2@gCheckBatt
  00067	0f b6 8e 21 01
	00 00		 movzx	 ecx, BYTE PTR [esi+289]
  0006e	3b 48 7c	 cmp	 ecx, DWORD PTR [eax+124]
  00071	7c 08		 jl	 SHORT $LN2@gCheckBatt
  00073	3b 88 84 00 00
	00		 cmp	 ecx, DWORD PTR [eax+132]
  00079	7e 0d		 jle	 SHORT $LN11@gCheckBatt
$LN2@gCheckBatt:

; 288  : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  0007b	42		 inc	 edx
  0007c	83 fa 01	 cmp	 edx, 1
  0007f	7c 8f		 jl	 SHORT $LL4@gCheckBatt

; 303  : 			{
; 304  : 				return n;
; 305  : 			}
; 306  : 		}
; 307  : 	}
; 308  : 	return -1;

  00081	5f		 pop	 edi
  00082	83 c8 ff	 or	 eax, -1
  00085	5e		 pop	 esi

; 309  : }

  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN11@gCheckBatt:
  00088	5f		 pop	 edi

; 293  : 			{
; 294  : 				return n;

  00089	8b c2		 mov	 eax, edx
  0008b	5e		 pop	 esi

; 309  : }

  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?gCheckBattleGround@@YAHPAUOBJECTSTRUCT@@@Z ENDP	; gCheckBattleGround
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gCheckGoal@@YAHHHAAH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_ground$ = 16						; size = 4
?gCheckGoal@@YAHHHAAH@Z PROC				; gCheckGoal, COMDAT

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  00003	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00006	33 c9		 xor	 ecx, ecx
  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _x$[ebp]
  0000c	0f 1f 40 00	 npad	 4
$LL4@gCheckGoal:

; 263  : 	{
; 264  : 		if ( gBSGround[n]->m_Set == TRUE )

  00010	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  00017	83 78 48 01	 cmp	 DWORD PTR [eax+72], 1
  0001b	75 2e		 jne	 SHORT $LN2@gCheckGoal

; 265  : 		{
; 266  : 			if ( x >= gBSGround[n]->m_GoalLeft.left && x <= gBSGround[n]->m_GoalLeft.right && y >= gBSGround[n]->m_GoalLeft.top && y <= gBSGround[n]->m_GoalLeft.bottom ) 

  0001d	3b 70 68	 cmp	 esi, DWORD PTR [eax+104]
  00020	7c 0f		 jl	 SHORT $LN6@gCheckGoal
  00022	3b 70 70	 cmp	 esi, DWORD PTR [eax+112]
  00025	7f 0a		 jg	 SHORT $LN6@gCheckGoal
  00027	3b 50 6c	 cmp	 edx, DWORD PTR [eax+108]
  0002a	7c 05		 jl	 SHORT $LN6@gCheckGoal
  0002c	3b 50 74	 cmp	 edx, DWORD PTR [eax+116]
  0002f	7e 26		 jle	 SHORT $LN10@gCheckGoal
$LN6@gCheckGoal:

; 270  : 			}
; 271  : 
; 272  : 			if ( x >= gBSGround[n]->m_GoalRight.left && x <= gBSGround[n]->m_GoalRight.right && y >= gBSGround[n]->m_GoalRight.top && y <= gBSGround[n]->m_GoalRight.bottom ) 

  00031	3b 70 78	 cmp	 esi, DWORD PTR [eax+120]
  00034	7c 15		 jl	 SHORT $LN2@gCheckGoal
  00036	3b b0 80 00 00
	00		 cmp	 esi, DWORD PTR [eax+128]
  0003c	7f 0d		 jg	 SHORT $LN2@gCheckGoal
  0003e	3b 50 7c	 cmp	 edx, DWORD PTR [eax+124]
  00041	7c 08		 jl	 SHORT $LN2@gCheckGoal
  00043	3b 90 84 00 00
	00		 cmp	 edx, DWORD PTR [eax+132]
  00049	7e 16		 jle	 SHORT $LN11@gCheckGoal
$LN2@gCheckGoal:

; 262  : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  0004b	41		 inc	 ecx
  0004c	83 f9 01	 cmp	 ecx, 1
  0004f	7c bf		 jl	 SHORT $LL4@gCheckGoal

; 276  : 			}
; 277  : 		}
; 278  : 	}
; 279  : 
; 280  : 	return -1;

  00051	83 c8 ff	 or	 eax, -1
  00054	5e		 pop	 esi

; 281  : }

  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN10@gCheckGoal:

; 267  : 			{
; 268  : 				ground = n;

  00057	8b 45 10	 mov	 eax, DWORD PTR _ground$[ebp]
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx

; 269  : 				return 0;

  0005d	33 c0		 xor	 eax, eax

; 281  : }

  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN11@gCheckGoal:

; 273  : 			{
; 274  : 				ground = n;

  00061	8b 45 10	 mov	 eax, DWORD PTR _ground$[ebp]
  00064	5e		 pop	 esi
  00065	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 				return 1;

  00067	b8 01 00 00 00	 mov	 eax, 1

; 281  : }

  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?gCheckGoal@@YAHHHAAH@Z ENDP				; gCheckGoal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gBattleSoccerScoreUpdate@@YAHHH@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
?gBattleSoccerScoreUpdate@@YAHHH@Z PROC			; gBattleSoccerScoreUpdate, COMDAT

; 215  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 216  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	0f 88 84 00 00
	00		 js	 $LN11@gBattleSoc
  0000e	33 c0		 xor	 eax, eax
  00010	83 f9 01	 cmp	 ecx, 1
  00013	0f 9c c0	 setl	 al
  00016	85 c0		 test	 eax, eax
  00018	74 78		 je	 SHORT $LN11@gBattleSoc

; 218  : 
; 219  : 	int score = 20;
; 220  : 	int totalscore = 1;
; 221  : 	_GUILD_INFO_STRUCT * lpGuild;
; 222  : 	_GUILD_INFO_STRUCT * lpTargetGuild;
; 223  : 	bool bGoalTeam;
; 224  : 
; 225  : 	if ( team == 0 )

  0001a	83 7d 0c 00	 cmp	 DWORD PTR _team$[ebp], 0

; 226  : 	{
; 227  : 		lpGuild = gBSGround[ground]->m_BlueTeam;

  0001e	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	75 0e		 jne	 SHORT $LN3@gBattleSoc
  00029	8b b0 8c 00 00
	00		 mov	 esi, DWORD PTR [eax+140]

; 228  : 		lpTargetGuild = gBSGround[ground]->m_RedTeam;

  0002f	8b b8 88 00 00
	00		 mov	 edi, DWORD PTR [eax+136]

; 229  : 		bGoalTeam = true;
; 230  : 	}
; 231  : 	else

  00035	eb 0c		 jmp	 SHORT $LN4@gBattleSoc
$LN3@gBattleSoc:

; 232  : 	{
; 233  : 		lpGuild = gBSGround[ground]->m_RedTeam ;

  00037	8b b0 88 00 00
	00		 mov	 esi, DWORD PTR [eax+136]

; 234  : 		lpTargetGuild = gBSGround[ground]->m_BlueTeam;

  0003d	8b b8 8c 00 00
	00		 mov	 edi, DWORD PTR [eax+140]
$LN4@gBattleSoc:

; 235  : 		bGoalTeam = FALSE;
; 236  : 	}
; 237  : 
; 238  : 	if ( lpGuild == NULL )

  00043	85 f6		 test	 esi, esi
  00045	75 06		 jne	 SHORT $LN5@gBattleSoc

; 239  : 	{
; 240  : 		return FALSE;

  00047	5f		 pop	 edi
  00048	33 c0		 xor	 eax, eax
  0004a	5e		 pop	 esi

; 255  : }

  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN5@gBattleSoc:

; 241  : 	}
; 242  : 
; 243  : 	if (gObjGuildWarProc(lpGuild, lpTargetGuild, score) == TRUE )

  0004d	6a 14		 push	 20			; 00000014H
  0004f	57		 push	 edi
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 ?gObjGuildWarProc@@YAHPAU_GUILD_INFO_STRUCT@@0H@Z ; gObjGuildWarProc
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH
  00059	83 f8 01	 cmp	 eax, 1
  0005c	75 2b		 jne	 SHORT $LN7@gBattleSoc

; 244  : 	{
; 245  : 		if ( lpGuild->WarType == 1 )

  0005e	38 86 92 05 00
	00		 cmp	 BYTE PTR [esi+1426], al
  00064	75 23		 jne	 SHORT $LN7@gBattleSoc

; 246  : 		{
; 247  : 			gObjGuildWarEndSend(lpGuild, lpTargetGuild, 1, 0);

  00066	6a 00		 push	 0
  00068	50		 push	 eax
  00069	57		 push	 edi
  0006a	56		 push	 esi
  0006b	e8 00 00 00 00	 call	 ?gObjGuildWarEndSend@@YAXPAU_GUILD_INFO_STRUCT@@0EE@Z ; gObjGuildWarEndSend

; 248  : 			gBattleGroundEnable(lpGuild->BattleGroundIndex, FALSE);

  00070	0f b6 86 93 05
	00 00		 movzx	 eax, BYTE PTR [esi+1427]
  00077	6a 00		 push	 0
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?gBattleGroundEnable@@YAXHH@Z ; gBattleGroundEnable

; 249  : 			gObjGuildWarEnd(lpGuild, lpTargetGuild);

  0007f	57		 push	 edi
  00080	56		 push	 esi
  00081	e8 00 00 00 00	 call	 ?gObjGuildWarEnd@@YAXPAU_GUILD_INFO_STRUCT@@0@Z ; gObjGuildWarEnd
  00086	83 c4 20	 add	 esp, 32			; 00000020H
$LN7@gBattleSoc:

; 250  : //			cManager.BattleInfoSend(GetBattleTeamName(0, 0), -1, GetBattleTeamName(0, 1), -1);
; 251  : 		}
; 252  : 	}
; 253  : 
; 254  : 	return TRUE;

  00089	5f		 pop	 edi
  0008a	b8 01 00 00 00	 mov	 eax, 1
  0008f	5e		 pop	 esi

; 255  : }

  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
$LN11@gBattleSoc:

; 217  : 		return FALSE;

  00092	33 c0		 xor	 eax, eax

; 255  : }

  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
?gBattleSoccerScoreUpdate@@YAHHH@Z ENDP			; gBattleSoccerScoreUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?GetBattleSoccerGoalMove@@YAHH@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
?GetBattleSoccerGoalMove@@YAHH@Z PROC			; GetBattleSoccerGoalMove, COMDAT

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 206  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	78 19		 js	 SHORT $LN6@GetBattleS
  0000a	33 c0		 xor	 eax, eax
  0000c	83 f9 01	 cmp	 ecx, 1
  0000f	0f 9c c0	 setl	 al
  00012	85 c0		 test	 eax, eax
  00014	74 0d		 je	 SHORT $LN6@GetBattleS

; 208  : 
; 209  : 	return gBSGround[ground]->GetGoalMove();

  00016	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]

; 210  : }

  0001d	5d		 pop	 ebp

; 208  : 
; 209  : 	return gBSGround[ground]->GetGoalMove();

  0001e	e9 00 00 00 00	 jmp	 ?GetGoalMove@CBattleSoccer@@QAEHXZ ; CBattleSoccer::GetGoalMove
$LN6@GetBattleS:

; 207  : 		return 0;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?GetBattleSoccerGoalMove@@YAHH@Z ENDP			; GetBattleSoccerGoalMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?BattleSoccerGoalEnd@@YAXH@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
?BattleSoccerGoalEnd@@YAXH@Z PROC			; BattleSoccerGoalEnd, COMDAT

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 196  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	78 1a		 js	 SHORT $LN1@BattleSocc
  0000a	33 c0		 xor	 eax, eax
  0000c	83 f9 01	 cmp	 ecx, 1
  0000f	0f 9c c0	 setl	 al
  00012	85 c0		 test	 eax, eax
  00014	74 0e		 je	 SHORT $LN1@BattleSocc

; 197  : 		return;
; 198  : 
; 199  : 	gBSGround[ground]->SetGoalMove(0);

  00016	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ?SetGoalMove@CBattleSoccer@@QAEXH@Z ; CBattleSoccer::SetGoalMove
$LN1@BattleSocc:

; 200  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?BattleSoccerGoalEnd@@YAXH@Z ENDP			; BattleSoccerGoalEnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?BattleSoccerGoalStart@@YAXH@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
?BattleSoccerGoalStart@@YAXH@Z PROC			; BattleSoccerGoalStart, COMDAT

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 186  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	78 1a		 js	 SHORT $LN1@BattleSocc
  0000a	33 c0		 xor	 eax, eax
  0000c	83 f9 01	 cmp	 ecx, 1
  0000f	0f 9c c0	 setl	 al
  00012	85 c0		 test	 eax, eax
  00014	74 0e		 je	 SHORT $LN1@BattleSocc

; 187  : 		return;
; 188  : 
; 189  : 	gBSGround[ground]->SetGoalMove(1);

  00016	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?SetGoalMove@CBattleSoccer@@QAEXH@Z ; CBattleSoccer::SetGoalMove
$LN1@BattleSocc:

; 190  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?BattleSoccerGoalStart@@YAXH@Z ENDP			; BattleSoccerGoalStart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?GetBattleTeamScore@@YAHHH@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
?GetBattleTeamScore@@YAHHH@Z PROC			; GetBattleTeamScore, COMDAT

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 177  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	78 1d		 js	 SHORT $LN6@GetBattleT
  0000a	33 c0		 xor	 eax, eax
  0000c	83 f9 01	 cmp	 ecx, 1
  0000f	0f 9c c0	 setl	 al
  00012	85 c0		 test	 eax, eax
  00014	74 11		 je	 SHORT $LN6@GetBattleT

; 179  : 
; 180  : 	return gBSGround[ground]->GetScore(team);

  00016	ff 75 0c	 push	 DWORD PTR _team$[ebp]
  00019	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  00020	e8 00 00 00 00	 call	 ?GetScore@CBattleGround@@QAEHH@Z ; CBattleGround::GetScore

; 181  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN6@GetBattleT:

; 178  : 		return 0;

  00027	33 c0		 xor	 eax, eax

; 181  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?GetBattleTeamScore@@YAHHH@Z ENDP			; GetBattleTeamScore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?SetBattleTeamScore@@YAXHHH@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
_score$ = 16						; size = 4
?SetBattleTeamScore@@YAXHHH@Z PROC			; SetBattleTeamScore, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 169  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	78 1e		 js	 SHORT $LN1@SetBattleT
  0000a	33 c0		 xor	 eax, eax
  0000c	83 f9 01	 cmp	 ecx, 1
  0000f	0f 9c c0	 setl	 al
  00012	85 c0		 test	 eax, eax
  00014	74 12		 je	 SHORT $LN1@SetBattleT

; 170  : 		return;
; 171  : 
; 172  : 	gBSGround[ground]->SetScore(team, score);

  00016	ff 75 10	 push	 DWORD PTR _score$[ebp]
  00019	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  00020	ff 75 0c	 push	 DWORD PTR _team$[ebp]
  00023	e8 00 00 00 00	 call	 ?SetScore@CBattleGround@@QAEXHH@Z ; CBattleGround::SetScore
$LN1@SetBattleT:

; 173  : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?SetBattleTeamScore@@YAXHHH@Z ENDP			; SetBattleTeamScore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?GetBattleTeamName@@YAPADHH@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
?GetBattleTeamName@@YAPADHH@Z PROC			; GetBattleTeamName, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 160  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ground$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	78 1d		 js	 SHORT $LN6@GetBattleT
  0000a	33 c0		 xor	 eax, eax
  0000c	83 f9 01	 cmp	 ecx, 1
  0000f	0f 9c c0	 setl	 al
  00012	85 c0		 test	 eax, eax
  00014	74 11		 je	 SHORT $LN6@GetBattleT

; 162  : 
; 163  : 	return gBSGround[ground]->GetTeamName(team);

  00016	ff 75 0c	 push	 DWORD PTR _team$[ebp]
  00019	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ecx*4]
  00020	e8 00 00 00 00	 call	 ?GetTeamName@CBattleGround@@QAEPADH@Z ; CBattleGround::GetTeamName

; 164  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN6@GetBattleT:

; 161  : 		return NULL;

  00027	33 c0		 xor	 eax, eax

; 164  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?GetBattleTeamName@@YAPADHH@Z ENDP			; GetBattleTeamName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gBattleGetTeamPosition@@YAXHHAAF0@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
_X$ = 16						; size = 4
_Y$ = 20						; size = 4
?gBattleGetTeamPosition@@YAXHHAAF0@Z PROC		; gBattleGetTeamPosition, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 136  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _ground$[ebp]
  00007	85 db		 test	 ebx, ebx
  00009	78 68		 js	 SHORT $LN1@gBattleGet
  0000b	33 c0		 xor	 eax, eax
  0000d	83 fb 01	 cmp	 ebx, 1
  00010	0f 9c c0	 setl	 al
  00013	85 c0		 test	 eax, eax
  00015	74 5c		 je	 SHORT $LN1@gBattleGet

; 137  : 		return;
; 138  : 
; 139  : 
; 140  : 	int w = gBSGround[ground]->m_rect.right - gBSGround[ground]->m_rect.left;

  00017	8b 04 9d 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ebx*4]
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	8b 70 40	 mov	 esi, DWORD PTR [eax+64]
  00023	2b 70 38	 sub	 esi, DWORD PTR [eax+56]

; 141  : 	int h = gBSGround[ground]->m_rect.bottom - gBSGround[ground]->m_rect.top;

  00026	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
  00029	2b 78 3c	 sub	 edi, DWORD PTR [eax+60]

; 142  : 
; 143  : 	if ( w < 1 )

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	3b f0		 cmp	 esi, eax
  00033	0f 4c f0	 cmovl	 esi, eax

; 144  : 	{
; 145  : 		w = 1;
; 146  : 	}
; 147  : 
; 148  : 	if ( h < 1 )

  00036	3b f8		 cmp	 edi, eax
  00038	0f 4c f8	 cmovl	 edi, eax

; 149  : 	{
; 150  : 		h = 1;
; 151  : 	}
; 152  : 
; 153  : 	X = (BYTE)(gBSGround[ground]->m_rect.left + (rand()%w));

  0003b	e8 00 00 00 00	 call	 _rand
  00040	99		 cdq
  00041	f7 fe		 idiv	 esi
  00043	8b 04 9d 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ebx*4]
  0004a	02 50 38	 add	 dl, BYTE PTR [eax+56]
  0004d	8b 45 10	 mov	 eax, DWORD PTR _X$[ebp]
  00050	0f b6 ca	 movzx	 ecx, dl
  00053	66 89 08	 mov	 WORD PTR [eax], cx

; 154  : 	Y = (BYTE)(gBSGround[ground]->m_rect.top + (rand()%h));

  00056	e8 00 00 00 00	 call	 _rand
  0005b	99		 cdq
  0005c	f7 ff		 idiv	 edi
  0005e	8b 04 9d 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[ebx*4]
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	02 50 3c	 add	 dl, BYTE PTR [eax+60]
  0006a	8b 45 14	 mov	 eax, DWORD PTR _Y$[ebp]
  0006d	0f b6 ca	 movzx	 ecx, dl
  00070	66 89 08	 mov	 WORD PTR [eax], cx
$LN1@gBattleGet:
  00073	5b		 pop	 ebx

; 155  : }

  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?gBattleGetTeamPosition@@YAXHHAAF0@Z ENDP		; gBattleGetTeamPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gSetBattleTeamMaster@@YAXHHPADPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
_ground$ = 8						; size = 4
_team$ = 12						; size = 4
_szname$ = 16						; size = 4
_lpGuild$ = 20						; size = 4
?gSetBattleTeamMaster@@YAXHHPADPAU_GUILD_INFO_STRUCT@@@Z PROC ; gSetBattleTeamMaster, COMDAT

; 115  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 116  : 	if ( BATTLE_SOCCER_GROUND_RANGE(ground)  == FALSE )

  00004	8b 7d 08	 mov	 edi, DWORD PTR _ground$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	78 53		 js	 SHORT $LN4@gSetBattle
  0000b	33 c0		 xor	 eax, eax
  0000d	83 ff 01	 cmp	 edi, 1
  00010	0f 9c c0	 setl	 al
  00013	85 c0		 test	 eax, eax
  00015	74 47		 je	 SHORT $LN4@gSetBattle

; 117  : 		return;
; 118  : 
; 119  : 	gBSGround[ground]->SetTeamMaster(team, szname);

  00017	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edi*4]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	ff 75 10	 push	 DWORD PTR _szname$[ebp]
  00023	8b 75 0c	 mov	 esi, DWORD PTR _team$[ebp]
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamMaster

; 120  : 	gBSGround[ground]->SetTeamName(team, lpGuild->Name );

  0002c	8b 5d 14	 mov	 ebx, DWORD PTR _lpGuild$[ebp]
  0002f	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edi*4]
  00036	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00039	50		 push	 eax
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ?SetTeamName@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamName

; 121  : 
; 122  : 	if ( team == 0 )
; 123  : 	{
; 124  : 		gBSGround[ground]->m_RedTeam = lpGuild;

  00040	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[edi*4]
  00047	85 f6		 test	 esi, esi
  00049	75 0b		 jne	 SHORT $LN3@gSetBattle
  0004b	5e		 pop	 esi
  0004c	89 98 88 00 00
	00		 mov	 DWORD PTR [eax+136], ebx
  00052	5b		 pop	 ebx
  00053	5f		 pop	 edi

; 129  : 	}
; 130  : }

  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN3@gSetBattle:
  00056	5e		 pop	 esi

; 125  : 	}
; 126  : 	else
; 127  : 	{
; 128  : 		gBSGround[ground]->m_BlueTeam = lpGuild;

  00057	89 98 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ebx
  0005d	5b		 pop	 ebx
$LN4@gSetBattle:
  0005e	5f		 pop	 edi

; 129  : 	}
; 130  : }

  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?gSetBattleTeamMaster@@YAXHHPADPAU_GUILD_INFO_STRUCT@@@Z ENDP ; gSetBattleTeamMaster
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gBattleGroundEnable@@YAXHH@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_enable$ = 12						; size = 4
?gBattleGroundEnable@@YAXHH@Z PROC			; gBattleGroundEnable, COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 95   : 	if ( BATTLE_SOCCER_GROUND_RANGE(n)  == FALSE )

  00004	8b 75 08	 mov	 esi, DWORD PTR _n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	0f 88 83 00 00
	00		 js	 $LN4@gBattleGro
  0000f	33 c0		 xor	 eax, eax
  00011	83 fe 01	 cmp	 esi, 1
  00014	0f 9c c0	 setl	 al
  00017	85 c0		 test	 eax, eax
  00019	74 77		 je	 SHORT $LN4@gBattleGro

; 96   : 		return;
; 97   : 
; 98   : 	if ( enable == TRUE )

  0001b	83 7d 0c 01	 cmp	 DWORD PTR _enable$[ebp], 1

; 99   : 	{
; 100  : 		gBSGround[n]->Enable(enable);

  0001f	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[esi*4]
  00026	75 1b		 jne	 SHORT $LN3@gBattleGro
  00028	6a 01		 push	 1
  0002a	e8 00 00 00 00	 call	 ?Enable@CBattleGround@@QAEXH@Z ; CBattleGround::Enable

; 101  : 		gBSGround[n]->SetTimer(MAX_BATTLESOCCER_TIME);

  0002f	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[esi*4]
  00036	68 c0 27 09 00	 push	 600000			; 000927c0H
  0003b	e8 00 00 00 00	 call	 ?SetTimer@CBattleGround@@QAEXH@Z ; CBattleGround::SetTimer
  00040	5e		 pop	 esi

; 110  : 	}
; 111  : }

  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN3@gBattleGro:

; 102  : 	}
; 103  : 	else
; 104  : 	{
; 105  : 		gBSGround[n]->Enable(FALSE);

  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 ?Enable@CBattleGround@@QAEXH@Z ; CBattleGround::Enable

; 106  : 		gBSGround[n]->SetTeamMaster(0, "none");

  0004a	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[esi*4]
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_04CGFJFPFD@none?$AA@
  00056	6a 00		 push	 0
  00058	e8 00 00 00 00	 call	 ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamMaster

; 107  : 		gBSGround[n]->SetTeamMaster(1, "none");

  0005d	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[esi*4]
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_04CGFJFPFD@none?$AA@
  00069	6a 01		 push	 1
  0006b	e8 00 00 00 00	 call	 ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ; CBattleGround::SetTeamMaster

; 108  : 		gBSGround[n]->m_RedTeam = 0;

  00070	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[esi*4]
  00077	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], 0

; 109  : 		gBSGround[n]->m_BlueTeam = 0;

  00081	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[esi*4]
  00088	c7 80 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+140], 0
$LN4@gBattleGro:
  00092	5e		 pop	 esi

; 110  : 	}
; 111  : }

  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?gBattleGroundEnable@@YAXHH@Z ENDP			; gBattleGroundEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gCheckBattleGroundTimer@@YA_JXZ
_TEXT	SEGMENT
?gCheckBattleGroundTimer@@YA_JXZ PROC			; gCheckBattleGroundTimer, COMDAT

; 58   : 	time_t time = 0;
; 59   : 
; 60   : 	return 0;	// Deatway addon could be?

  00000	33 c0		 xor	 eax, eax
  00002	33 d2		 xor	 edx, edx

; 61   : 
; 62   : 	int i;
; 63   : 	int n;
; 64   : 
; 65   : 	for (i;i<MAX_USER_GUILD;i++)
; 66   : 	{
; 67   : 		int UserIndex = gBSGround[n]->m_BlueTeam->Index[i];
; 68   : 
; 69   : 		if ( UserIndex != -1 )
; 70   : 		{
; 71   : 			GCTimeViewSend(UserIndex,(int)time);
; 72   : 		}
; 73   : 	}
; 74   : 
; 75   : 	if ( gBSGround[n]->m_RedTeam != NULL )
; 76   : 	{
; 77   : 		for (i=0;i<MAX_USER_GUILD;i++)
; 78   : 		{
; 79   : 			int UserIndex = gBSGround[n]->m_RedTeam->Index[i];
; 80   : 
; 81   : 			if ( UserIndex != -1 )
; 82   : 			{
; 83   : 				GCTimeViewSend(UserIndex,(int)time);
; 84   : 			}
; 85   : 		}
; 86   : 	}
; 87   : 
; 88   : 	return time;
; 89   : }

  00004	c3		 ret	 0
?gCheckBattleGroundTimer@@YA_JXZ ENDP			; gCheckBattleGroundTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?gCheckBlankBattleGround@@YAHXZ
_TEXT	SEGMENT
?gCheckBlankBattleGround@@YAHXZ PROC			; gCheckBlankBattleGround, COMDAT

; 44   : {

  00000	56		 push	 esi

; 45   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  00001	33 f6		 xor	 esi, esi
$LL4@gCheckBlan:

; 46   : 	{
; 47   : 		if ( gBSGround[n]->GetUsed() == FALSE )

  00003	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A[esi*4]
  0000a	e8 00 00 00 00	 call	 ?GetUsed@CBattleGround@@QAEHXZ ; CBattleGround::GetUsed
  0000f	85 c0		 test	 eax, eax
  00011	74 0d		 je	 SHORT $LN8@gCheckBlan

; 45   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)

  00013	46		 inc	 esi
  00014	83 fe 01	 cmp	 esi, 1
  00017	7c ea		 jl	 SHORT $LL4@gCheckBlan

; 50   : 		}
; 51   : 	}
; 52   : 	return 0xFF;

  00019	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  0001e	5e		 pop	 esi

; 53   : }

  0001f	c3		 ret	 0
$LN8@gCheckBlan:

; 48   : 		{
; 49   : 			return n;

  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi

; 53   : }

  00023	c3		 ret	 0
?gCheckBlankBattleGround@@YAHXZ ENDP			; gCheckBlankBattleGround
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?ClearBattleSoccer@@YAXXZ
_TEXT	SEGMENT
?ClearBattleSoccer@@YAXXZ PROC				; ClearBattleSoccer, COMDAT

; 35   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)
; 36   : 	{
; 37   : 		delete [0] gBSGround[n];

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  00006	85 c9		 test	 ecx, ecx
  00008	74 17		 je	 SHORT $LN2@ClearBattl
  0000a	83 79 fc 00	 cmp	 DWORD PTR [ecx-4], 0
  0000e	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00011	74 07		 je	 SHORT $LN6@ClearBattl
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	6a 03		 push	 3
  00017	ff 10		 call	 DWORD PTR [eax]

; 38   : 	}
; 39   : }

  00019	c3		 ret	 0
$LN6@ClearBattl:

; 35   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)
; 36   : 	{
; 37   : 		delete [0] gBSGround[n];

  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00020	59		 pop	 ecx
$LN2@ClearBattl:

; 38   : 	}
; 39   : }

  00021	c3		 ret	 0
?ClearBattleSoccer@@YAXXZ ENDP				; ClearBattleSoccer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?InitBattleSoccer@@YAXXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitBattleSoccer@@YAXXZ PROC				; InitBattleSoccer, COMDAT

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitBattleSoccer@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 20   : 	for ( int n=0;n<MAX_BATTLESOCCER_GROUND;n++)
; 21   : 	{
; 22   : 		gBSGround[n] = new CBattleSoccer;

  00023	68 90 00 00 00	 push	 144			; 00000090H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 09		 je	 SHORT $LN6@InitBattle
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ??0CBattleSoccer@@QAE@XZ ; CBattleSoccer::CBattleSoccer
  00045	eb 02		 jmp	 SHORT $LN7@InitBattle
$LN6@InitBattle:
  00047	33 c0		 xor	 eax, eax
$LN7@InitBattle:
  00049	a3 00 00 00 00	 mov	 DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A, eax ; gBSGround

; 23   : 		gBSGround[n]->m_BlueTeam = NULL;

  0004e	c7 80 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+140], 0

; 24   : 		gBSGround[n]->m_RedTeam = NULL;

  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround

; 25   : 	}
; 26   : 
; 27   : 	gBSGround[0]->SetBattleType(1);

  0005d	6a 01		 push	 1
  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	c7 80 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+136], 0
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  00076	e8 00 00 00 00	 call	 ?SetBattleType@CBattleGround@@QAEXH@Z ; CBattleGround::SetBattleType

; 28   : 	gBSGround[0]->SetGroundRect(6, 54, 141, 70, 180);

  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  00081	68 b4 00 00 00	 push	 180			; 000000b4H
  00086	6a 46		 push	 70			; 00000046H
  00088	68 8d 00 00 00	 push	 141			; 0000008dH
  0008d	6a 36		 push	 54			; 00000036H
  0008f	6a 06		 push	 6
  00091	e8 00 00 00 00	 call	 ?SetGroundRect@CBattleGround@@QAEXHHHHH@Z ; CBattleGround::SetGroundRect

; 29   : 	gBSGround[0]->SetGoalLeftRect(60, 139, 64, 140);

  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  0009c	68 8c 00 00 00	 push	 140			; 0000008cH
  000a1	6a 40		 push	 64			; 00000040H
  000a3	68 8b 00 00 00	 push	 139			; 0000008bH
  000a8	6a 3c		 push	 60			; 0000003cH
  000aa	e8 00 00 00 00	 call	 ?SetGoalLeftRect@CBattleSoccer@@QAEXHHHH@Z ; CBattleSoccer::SetGoalLeftRect

; 30   : 	gBSGround[0]->SetGoalRightRect(60, 181, 64, 182);

  000af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gBSGround@@3PAPAVCBattleSoccer@@A ; gBSGround
  000b5	68 b6 00 00 00	 push	 182			; 000000b6H
  000ba	6a 40		 push	 64			; 00000040H
  000bc	68 b5 00 00 00	 push	 181			; 000000b5H
  000c1	6a 3c		 push	 60			; 0000003cH
  000c3	e8 00 00 00 00	 call	 ?SetGoalRightRect@CBattleSoccer@@QAEXHHHH@Z ; CBattleSoccer::SetGoalRightRect

; 31   : }

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitBattleSoccer@@YAXXZ$0:
  00000	68 90 00 00 00	 push	 144			; 00000090H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?InitBattleSoccer@@YAXXZ:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitBattleSoccer@@YAXXZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitBattleSoccer@@YAXXZ ENDP				; InitBattleSoccer
; Function compile flags: /Ogtp
;	COMDAT ??_GCBattleSoccerManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBattleSoccerManager@@UAEPAXI@Z PROC		; CBattleSoccerManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBattleSoccerManager@@UAE@XZ ; CBattleSoccerManager::~CBattleSoccerManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 04		 push	 4
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCBattleSoccerManager@@UAEPAXI@Z ENDP		; CBattleSoccerManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ??1CBattleSoccerManager@@UAE@XZ
_TEXT	SEGMENT
??1CBattleSoccerManager@@UAE@XZ PROC			; CBattleSoccerManager::~CBattleSoccerManager, COMDAT
; _this$ = ecx

; 13   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBattleSoccerManager@@6B@

; 14   : 	return;
; 15   : }

  00006	c3		 ret	 0
??1CBattleSoccerManager@@UAE@XZ ENDP			; CBattleSoccerManager::~CBattleSoccerManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ??0CBattleSoccerManager@@QAE@XZ
_TEXT	SEGMENT
??0CBattleSoccerManager@@QAE@XZ PROC			; CBattleSoccerManager::CBattleSoccerManager, COMDAT
; _this$ = ecx

; 7    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBattleSoccerManager@@6B@

; 8    : 	return;
; 9    : }

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0CBattleSoccerManager@@QAE@XZ ENDP			; CBattleSoccerManager::CBattleSoccerManager
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battlesoccermanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 310  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
