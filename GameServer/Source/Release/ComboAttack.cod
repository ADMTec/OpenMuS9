; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\ComboAttack.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CComboAttack@@QAE@XZ				; CComboAttack::CComboAttack
PUBLIC	??1CComboAttack@@UAE@XZ				; CComboAttack::~CComboAttack
PUBLIC	?GetSkillPos@CComboAttack@@AAEHH@Z		; CComboAttack::GetSkillPos
PUBLIC	?CheckCombo@CComboAttack@@QAEHHH@Z		; CComboAttack::CheckCombo
PUBLIC	??_GCComboAttack@@UAEPAXI@Z			; CComboAttack::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_7CComboAttack@@6B@				; CComboAttack::`vftable'
PUBLIC	?gComboAttack@@3VCComboAttack@@A		; gComboAttack
PUBLIC	??_R4CComboAttack@@6B@				; CComboAttack::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCComboAttack@@@8			; CComboAttack `RTTI Type Descriptor'
PUBLIC	??_R3CComboAttack@@8				; CComboAttack::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CComboAttack@@8				; CComboAttack::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CComboAttack@@8			; CComboAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	??_ECComboAttack@@UAEPAXI@Z:PROC		; CComboAttack::`vector deleting destructor'
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?gComboAttack@@3VCComboAttack@@A DD 01H DUP (?)		; gComboAttack
_BSS	ENDS
CRT$XCU	SEGMENT
?gComboAttack$initializer$@@3P6AXXZA DD FLAT:??__EgComboAttack@@YAXXZ ; gComboAttack$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CComboAttack@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CComboAttack@@8 DD FLAT:??_R0?AVCComboAttack@@@8 ; CComboAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CComboAttack@@8
rdata$r	ENDS
;	COMDAT ??_R2CComboAttack@@8
rdata$r	SEGMENT
??_R2CComboAttack@@8 DD FLAT:??_R1A@?0A@EA@CComboAttack@@8 ; CComboAttack::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CComboAttack@@8
rdata$r	SEGMENT
??_R3CComboAttack@@8 DD 00H				; CComboAttack::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CComboAttack@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCComboAttack@@@8
data$r	SEGMENT
??_R0?AVCComboAttack@@@8 DD FLAT:??_7type_info@@6B@	; CComboAttack `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCComboAttack@@', 00H
data$r	ENDS
;	COMDAT ??_R4CComboAttack@@6B@
rdata$r	SEGMENT
??_R4CComboAttack@@6B@ DD 00H				; CComboAttack::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCComboAttack@@@8
	DD	FLAT:??_R3CComboAttack@@8
rdata$r	ENDS
;	COMDAT ??_7CComboAttack@@6B@
CONST	SEGMENT
??_7CComboAttack@@6B@ DD FLAT:??_R4CComboAttack@@6B@	; CComboAttack::`vftable'
	DD	FLAT:??_ECComboAttack@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FgComboAttack@@YAXXZ
text$yd	SEGMENT
??__FgComboAttack@@YAXXZ PROC				; `dynamic atexit destructor for 'gComboAttack'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gComboAttack@@3VCComboAttack@@A ; gComboAttack
  00005	e9 00 00 00 00	 jmp	 ??1CComboAttack@@UAE@XZ	; CComboAttack::~CComboAttack
??__FgComboAttack@@YAXXZ ENDP				; `dynamic atexit destructor for 'gComboAttack''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
;	COMDAT ??__EgComboAttack@@YAXXZ
text$di	SEGMENT
??__EgComboAttack@@YAXXZ PROC				; `dynamic initializer for 'gComboAttack'', COMDAT

; 8    : CComboAttack gComboAttack;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gComboAttack@@3VCComboAttack@@A ; gComboAttack
  00005	e8 00 00 00 00	 call	 ??0CComboAttack@@QAE@XZ	; CComboAttack::CComboAttack
  0000a	68 00 00 00 00	 push	 OFFSET ??__FgComboAttack@@YAXXZ ; `dynamic atexit destructor for 'gComboAttack''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EgComboAttack@@YAXXZ ENDP				; `dynamic initializer for 'gComboAttack''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCComboAttack@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCComboAttack@@UAEPAXI@Z PROC			; CComboAttack::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CComboAttack@@UAE@XZ	; CComboAttack::~CComboAttack
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 04		 push	 4
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCComboAttack@@UAEPAXI@Z ENDP			; CComboAttack::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.h
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.h
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.h
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
;	COMDAT ?CheckCombo@CComboAttack@@QAEHHH@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_skillnum$ = 12						; size = 4
?CheckCombo@CComboAttack@@QAEHHH@Z PROC			; CComboAttack::CheckCombo, COMDAT
; _this$ = ecx

; 60   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 61   : 	LPOBJ lpObj = &gObj[aIndex];

  00005	69 75 08 40 27
	00 00		 imul	 esi, DWORD PTR _aIndex$[ebp], 10048
  0000c	57		 push	 edi
  0000d	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 62   : 	
; 63   : 	if ( lpObj->ComboSkillquestClear  != false )

  00013	80 7e 7d 00	 cmp	 BYTE PTR [esi+125], 0
  00017	0f 84 1b 01 00
	00		 je	 $LN6@CheckCombo

; 64   : 	{
; 65   : 		int sp = this->GetSkillPos(skillnum);

  0001d	8b 7d 0c	 mov	 edi, DWORD PTR _skillnum$[ebp]
  00020	57		 push	 edi
  00021	e8 00 00 00 00	 call	 ?GetSkillPos@CComboAttack@@AAEHH@Z ; CComboAttack::GetSkillPos

; 66   : 
; 67   : 		if ( sp == 0 )

  00026	85 c0		 test	 eax, eax
  00028	75 27		 jne	 SHORT $LN3@CheckCombo

; 68   : 		{
; 69   : 			lpObj->comboSkill.ProgressIndex  = 0;

  0002a	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax

; 70   : 			lpObj->comboSkill.dwTime = GetTickCount() + 3000;

  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00036	05 b8 0b 00 00	 add	 eax, 3000		; 00000bb8H
  0003b	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax

; 113  : 	return 0;

  00041	33 c0		 xor	 eax, eax
  00043	66 89 be 84 00
	00 00		 mov	 WORD PTR [esi+132], di
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 114  : }

  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
$LN3@CheckCombo:

; 71   : 			lpObj->comboSkill.Skill[0]  = skillnum;
; 72   : 		}
; 73   : 		else if ( sp == 1 )

  00051	83 f8 01	 cmp	 eax, 1
  00054	0f 85 c0 00 00
	00		 jne	 $LN5@CheckCombo

; 74   : 		{
; 75   : 			if ( lpObj->comboSkill.Skill[0]  == 0xFF )

  0005a	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  0005f	66 39 86 84 00
	00 00		 cmp	 WORD PTR [esi+132], ax
  00066	75 31		 jne	 SHORT $LN7@CheckCombo
$LN22@CheckCombo:
; File c:\users\michel\desktop\source\gameserver\source\comboattack.h

; 19   : 		this->dwTime = 0;

  00068	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
$LN11@CheckCombo:

; 20   : 		this->Skill[0] = -1;

  00072	83 c8 ff	 or	 eax, -1
  00075	66 89 86 84 00
	00 00		 mov	 WORD PTR [esi+132], ax

; 21   : 		this->Skill[1] = -1;

  0007c	66 89 86 86 00
	00 00		 mov	 WORD PTR [esi+134], ax

; 22   : 		this->Skill[2] = -1;

  00083	66 89 86 88 00
	00 00		 mov	 WORD PTR [esi+136], ax
  0008a	5f		 pop	 edi

; 23   : 		this->ProgressIndex = -1;

  0008b	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp

; 113  : 	return 0;

  00091	33 c0		 xor	 eax, eax
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx

; 114  : }

  00095	5d		 pop	 ebp
  00096	c2 08 00	 ret	 8
$LN7@CheckCombo:

; 76   : 			{
; 77   : 				lpObj->comboSkill.Init();
; 78   : 				return 0;
; 79   : 			}
; 80   : 
; 81   : 			int Time =GetTickCount();

  00099	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetTickCount@0
  0009f	ff d3		 call	 ebx

; 82   : 
; 83   : 			if (lpObj->comboSkill.dwTime < GetTickCount() )

  000a1	ff d3		 call	 ebx
  000a3	39 86 80 00 00
	00		 cmp	 DWORD PTR [esi+128], eax
  000a9	72 bd		 jb	 SHORT $LN22@CheckCombo

; 84   : 			{
; 85   : 				lpObj->comboSkill.Init();
; 86   : 				return 0;
; 87   : 			}
; 88   : 
; 89   : 			if ( lpObj->comboSkill.ProgressIndex == 0 )

  000ab	83 be 8c 00 00
	00 00		 cmp	 DWORD PTR [esi+140], 0
  000b2	75 27		 jne	 SHORT $LN9@CheckCombo

; 90   : 			{
; 91   : 				lpObj->comboSkill.ProgressIndex = 1;

  000b4	c7 86 8c 00 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+140], 1

; 92   : 				lpObj->comboSkill.dwTime = GetTickCount() + 3000;

  000be	ff d3		 call	 ebx
  000c0	05 b8 0b 00 00	 add	 eax, 3000		; 00000bb8H
  000c5	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax

; 113  : 	return 0;

  000cb	33 c0		 xor	 eax, eax
  000cd	66 89 be 86 00
	00 00		 mov	 WORD PTR [esi+134], di
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx

; 114  : }

  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN9@CheckCombo:

; 95   : 			else if ( lpObj->comboSkill.Skill[1]  != skillnum )

  000db	0f bf 86 86 00
	00 00		 movsx	 eax, WORD PTR [esi+134]
; File c:\users\michel\desktop\source\gameserver\source\comboattack.h

; 19   : 		this->dwTime = 0;

  000e2	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp

; 95   : 			else if ( lpObj->comboSkill.Skill[1]  != skillnum )

  000ec	3b c7		 cmp	 eax, edi
  000ee	74 82		 je	 SHORT $LN11@CheckCombo
; File c:\users\michel\desktop\source\gameserver\source\comboattack.h

; 20   : 		this->Skill[0] = -1;

  000f0	83 c8 ff	 or	 eax, -1
  000f3	66 89 86 84 00
	00 00		 mov	 WORD PTR [esi+132], ax

; 21   : 		this->Skill[1] = -1;

  000fa	66 89 86 86 00
	00 00		 mov	 WORD PTR [esi+134], ax

; 22   : 		this->Skill[2] = -1;

  00101	66 89 86 88 00
	00 00		 mov	 WORD PTR [esi+136], ax
  00108	5f		 pop	 edi

; 23   : 		this->ProgressIndex = -1;

  00109	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp

; 98   : 				return 1;

  0010f	b8 01 00 00 00	 mov	 eax, 1
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx

; 114  : }

  00116	5d		 pop	 ebp
  00117	c2 08 00	 ret	 8
$LN5@CheckCombo:

; 99   : 			}
; 100  : 			else
; 101  : 			{
; 102  : 				lpObj->comboSkill.Init();
; 103  : 			}
; 104  : 		}
; 105  : 		else
; 106  : 		{
; 107  : 			lpObj->comboSkill.ProgressIndex= -1;
; 108  : 			lpObj->comboSkill.dwTime = 0;
; 109  : 			lpObj->comboSkill.Skill[0] = -1;

  0011a	83 c8 ff	 or	 eax, -1
  0011d	c7 86 8c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+140], -1
  00127	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  00131	66 89 86 84 00
	00 00		 mov	 WORD PTR [esi+132], ax
$LN6@CheckCombo:

; 113  : 	return 0;

  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	33 c0		 xor	 eax, eax
  0013c	5b		 pop	 ebx

; 114  : }

  0013d	5d		 pop	 ebp
  0013e	c2 08 00	 ret	 8
?CheckCombo@CComboAttack@@QAEHHH@Z ENDP			; CComboAttack::CheckCombo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
;	COMDAT ?GetSkillPos@CComboAttack@@AAEHH@Z
_TEXT	SEGMENT
_skillnum$ = 8						; size = 4
?GetSkillPos@CComboAttack@@AAEHH@Z PROC			; CComboAttack::GetSkillPos, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 23   : 	switch (skillnum)

  00003	8b 45 08	 mov	 eax, DWORD PTR _skillnum$[ebp]
  00006	3d 4d 01 00 00	 cmp	 eax, 333		; 0000014dH
  0000b	7f 3c		 jg	 SHORT $LN9@GetSkillPo
  0000d	3d 4a 01 00 00	 cmp	 eax, 330		; 0000014aH
  00012	7d 4d		 jge	 SHORT $LN7@GetSkillPo
  00014	3d e8 00 00 00	 cmp	 eax, 232		; 000000e8H
  00019	7f 1e		 jg	 SHORT $LN10@GetSkillPo
  0001b	74 44		 je	 SHORT $LN7@GetSkillPo
  0001d	83 c0 ed	 add	 eax, -19		; ffffffedH
  00020	83 f8 18	 cmp	 eax, 24			; 00000018H
  00023	77 45		 ja	 SHORT $LN2@GetSkillPo
  00025	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN11@GetSkillPo[eax]
  0002c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@GetSkillPo[eax*4]
$LN4@GetSkillPo:

; 24   : 	{
; 25   : 		case 19:
; 26   : 		case 20:
; 27   : 		case 21:
; 28   : 		case 22:
; 29   : 		case 23:
; 30   : 			return 0;

  00033	33 c0		 xor	 eax, eax

; 56   : }

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN10@GetSkillPo:

; 23   : 	switch (skillnum)

  00039	05 ba fe ff ff	 add	 eax, -326		; fffffebaH
  0003e	83 f8 03	 cmp	 eax, 3
  00041	77 27		 ja	 SHORT $LN2@GetSkillPo

; 31   : 		case 41:
; 32   : 		case 42:
; 33   : 		case 43:
; 34   : 		case AT_SKILL_DESTRUCT:
; 35   : 			return 1;
; 36   : 		case AT_MSKILL_DK_CYCLONE1:
; 37   : 		case AT_MSKILL_DK_SLASH1:
; 38   : 		case AT_MSKILL_DK_FALLINGSLASH1:
; 39   : 		case AT_MSKILL_DK_LUNGE1:
; 40   : 			return 0;

  00043	33 c0		 xor	 eax, eax

; 56   : }

  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
$LN9@GetSkillPo:

; 23   : 	switch (skillnum)

  00049	05 b0 fe ff ff	 add	 eax, -336		; fffffeb0H
  0004e	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00051	77 17		 ja	 SHORT $LN2@GetSkillPo
  00053	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN12@GetSkillPo[eax]
  0005a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN15@GetSkillPo[eax*4]
$LN7@GetSkillPo:

; 41   : 		case AT_MSKILL_DK_TWISTINGSLASH1:
; 42   : 		case AT_MSKILL_DK_TWISTINGSLASH2:
; 43   : 		case AT_MSKILL_DK_RAGEFULBLOW1:
; 44   : 		case AT_MSKILL_DK_RAGEFULBLOW2:
; 45   : 		case AT_MSKILL_DK_DEATHSTAB1:
; 46   : 		case AT_MSKILL_DK_DEATHSTAB2:
; 47   : 		case AT_MSKILL_DK_DEATHSTAB3:
; 48   : 		case AT_MSKILL_DK_DESTRUCTION1:
; 49   : 		case AT_MSKILL_DK_DESTRUCTION2:
; 50   : 		case AT_MSKILL_DK_DESTRUCTION3:
; 51   : 		case AT_MSKILL_DK_BLOODSTORM:
; 52   : 		case AT_MSKILL_DK_BLOODSTORM1:
; 53   : 			return 1;

  00061	b8 01 00 00 00	 mov	 eax, 1

; 56   : }

  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
$LN2@GetSkillPo:

; 54   : 	}
; 55   : return -1;

  0006a	83 c8 ff	 or	 eax, -1

; 56   : }

  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
  00071	0f 1f 00	 npad	 3
$LN14@GetSkillPo:
  00074	00 00 00 00	 DD	 $LN4@GetSkillPo
  00078	00 00 00 00	 DD	 $LN7@GetSkillPo
  0007c	00 00 00 00	 DD	 $LN2@GetSkillPo
$LN11@GetSkillPo:
  00080	00		 DB	 0
  00081	00		 DB	 0
  00082	00		 DB	 0
  00083	00		 DB	 0
  00084	00		 DB	 0
  00085	02		 DB	 2
  00086	02		 DB	 2
  00087	02		 DB	 2
  00088	02		 DB	 2
  00089	02		 DB	 2
  0008a	02		 DB	 2
  0008b	02		 DB	 2
  0008c	02		 DB	 2
  0008d	02		 DB	 2
  0008e	02		 DB	 2
  0008f	02		 DB	 2
  00090	02		 DB	 2
  00091	02		 DB	 2
  00092	02		 DB	 2
  00093	02		 DB	 2
  00094	02		 DB	 2
  00095	02		 DB	 2
  00096	01		 DB	 1
  00097	01		 DB	 1
  00098	01		 DB	 1
  00099	0f 1f 00	 npad	 3
$LN15@GetSkillPo:
  0009c	00 00 00 00	 DD	 $LN7@GetSkillPo
  000a0	00 00 00 00	 DD	 $LN2@GetSkillPo
$LN12@GetSkillPo:
  000a4	00		 DB	 0
  000a5	00		 DB	 0
  000a6	01		 DB	 1
  000a7	00		 DB	 0
  000a8	00		 DB	 0
  000a9	01		 DB	 1
  000aa	00		 DB	 0
  000ab	00		 DB	 0
  000ac	00		 DB	 0
  000ad	01		 DB	 1
  000ae	00		 DB	 0
?GetSkillPos@CComboAttack@@AAEHH@Z ENDP			; CComboAttack::GetSkillPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
;	COMDAT ??1CComboAttack@@UAE@XZ
_TEXT	SEGMENT
??1CComboAttack@@UAE@XZ PROC				; CComboAttack::~CComboAttack, COMDAT
; _this$ = ecx

; 17   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CComboAttack@@6B@

; 18   : 	return;
; 19   : }

  00006	c3		 ret	 0
??1CComboAttack@@UAE@XZ ENDP				; CComboAttack::~CComboAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
;	COMDAT ??0CComboAttack@@QAE@XZ
_TEXT	SEGMENT
??0CComboAttack@@QAE@XZ PROC				; CComboAttack::CComboAttack, COMDAT
; _this$ = ecx

; 12   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CComboAttack@@6B@

; 13   : 	return;
; 14   : }

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0CComboAttack@@QAE@XZ ENDP				; CComboAttack::CComboAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.h
;	COMDAT ?Init@ComboSkillData@@QAEXXZ
_TEXT	SEGMENT
?Init@ComboSkillData@@QAEXXZ PROC			; ComboSkillData::Init, COMDAT
; _this$ = ecx

; 19   : 		this->dwTime = 0;
; 20   : 		this->Skill[0] = -1;

  00000	83 c8 ff	 or	 eax, -1
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  00009	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 21   : 		this->Skill[1] = -1;

  0000d	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 22   : 		this->Skill[2] = -1;

  00011	66 89 41 08	 mov	 WORD PTR [ecx+8], ax

; 23   : 		this->ProgressIndex = -1;

  00015	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 24   : 	};	// line : 23

  00018	c3		 ret	 0
?Init@ComboSkillData@@QAEXXZ ENDP			; ComboSkillData::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\comboattack.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
