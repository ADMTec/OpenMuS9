; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\CastleSiegeSync.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CCastleSiegeSync@@QAE@XZ			; CCastleSiegeSync::CCastleSiegeSync
PUBLIC	??1CCastleSiegeSync@@UAE@XZ			; CCastleSiegeSync::~CCastleSiegeSync
PUBLIC	?Clear@CCastleSiegeSync@@QAEXXZ			; CCastleSiegeSync::Clear
PUBLIC	?SetCastleOwnerGuild@CCastleSiegeSync@@QAEXPAD@Z ; CCastleSiegeSync::SetCastleOwnerGuild
PUBLIC	?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z	; CCastleSiegeSync::GetTaxRateChaos
PUBLIC	?GetTaxRateStore@CCastleSiegeSync@@QAEHH@Z	; CCastleSiegeSync::GetTaxRateStore
PUBLIC	?GetTaxHuntZone@CCastleSiegeSync@@QAEHHH@Z	; CCastleSiegeSync::GetTaxHuntZone
PUBLIC	?AddTributeMoney@CCastleSiegeSync@@QAEXH@Z	; CCastleSiegeSync::AddTributeMoney
PUBLIC	?ResetTributeMoney@CCastleSiegeSync@@QAEXXZ	; CCastleSiegeSync::ResetTributeMoney
PUBLIC	?AdjustTributeMoney@CCastleSiegeSync@@QAEXXZ	; CCastleSiegeSync::AdjustTributeMoney
PUBLIC	?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerMember
PUBLIC	?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerUnionMember
PUBLIC	?CheckOverlapCsMarks@CCastleSiegeSync@@QAEHH@Z	; CCastleSiegeSync::CheckOverlapCsMarks
PUBLIC	??_GCCastleSiegeSync@@UAEPAXI@Z			; CCastleSiegeSync::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7CCastleSiegeSync@@6B@			; CCastleSiegeSync::`vftable'
PUBLIC	?g_CastleSiegeSync@@3VCCastleSiegeSync@@A	; g_CastleSiegeSync
PUBLIC	??_R4CCastleSiegeSync@@6B@			; CCastleSiegeSync::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCastleSiegeSync@@@8			; CCastleSiegeSync `RTTI Type Descriptor'
PUBLIC	??_R3CCastleSiegeSync@@8			; CCastleSiegeSync::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCastleSiegeSync@@8			; CCastleSiegeSync::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCastleSiegeSync@@8		; CCastleSiegeSync::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	??_ECCastleSiegeSync@@UAEPAXI@Z:PROC		; CCastleSiegeSync::`vector deleting destructor'
EXTRN	?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z:PROC	; TUnion::SearchUnion
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?GS_GDReqCastleTributeMoney@@YAXHH@Z:PROC	; GS_GDReqCastleTributeMoney
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?UnionManager@@3VTUnion@@A:BYTE			; UnionManager
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?g_CastleSiegeSync@@3VCCastleSiegeSync@@A DB 02cH DUP (?) ; g_CastleSiegeSync
_BSS	ENDS
CRT$XCU	SEGMENT
?g_CastleSiegeSync$initializer$@@3P6AXXZA DD FLAT:??__Eg_CastleSiegeSync@@YAXXZ ; g_CastleSiegeSync$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CCastleSiegeSync@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCastleSiegeSync@@8 DD FLAT:??_R0?AVCCastleSiegeSync@@@8 ; CCastleSiegeSync::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCastleSiegeSync@@8
rdata$r	ENDS
;	COMDAT ??_R2CCastleSiegeSync@@8
rdata$r	SEGMENT
??_R2CCastleSiegeSync@@8 DD FLAT:??_R1A@?0A@EA@CCastleSiegeSync@@8 ; CCastleSiegeSync::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCastleSiegeSync@@8
rdata$r	SEGMENT
??_R3CCastleSiegeSync@@8 DD 00H				; CCastleSiegeSync::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCastleSiegeSync@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCastleSiegeSync@@@8
data$r	SEGMENT
??_R0?AVCCastleSiegeSync@@@8 DD FLAT:??_7type_info@@6B@	; CCastleSiegeSync `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCastleSiegeSync@@', 00H
data$r	ENDS
;	COMDAT ??_R4CCastleSiegeSync@@6B@
rdata$r	SEGMENT
??_R4CCastleSiegeSync@@6B@ DD 00H			; CCastleSiegeSync::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCastleSiegeSync@@@8
	DD	FLAT:??_R3CCastleSiegeSync@@8
rdata$r	ENDS
;	COMDAT ??_7CCastleSiegeSync@@6B@
CONST	SEGMENT
??_7CCastleSiegeSync@@6B@ DD FLAT:??_R4CCastleSiegeSync@@6B@ ; CCastleSiegeSync::`vftable'
	DD	FLAT:??_ECCastleSiegeSync@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_CastleSiegeSync@@YAXXZ
text$yd	SEGMENT
??__Fg_CastleSiegeSync@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CastleSiegeSync'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  00005	e9 00 00 00 00	 jmp	 ??1CCastleSiegeSync@@UAE@XZ ; CCastleSiegeSync::~CCastleSiegeSync
??__Fg_CastleSiegeSync@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CastleSiegeSync''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ??__Eg_CastleSiegeSync@@YAXXZ
text$di	SEGMENT
??__Eg_CastleSiegeSync@@YAXXZ PROC			; `dynamic initializer for 'g_CastleSiegeSync'', COMDAT

; 249  : CCastleSiegeSync g_CastleSiegeSync;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  00005	e8 00 00 00 00	 call	 ??0CCastleSiegeSync@@QAE@XZ ; CCastleSiegeSync::CCastleSiegeSync
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_CastleSiegeSync@@YAXXZ ; `dynamic atexit destructor for 'g_CastleSiegeSync''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_CastleSiegeSync@@YAXXZ ENDP			; `dynamic initializer for 'g_CastleSiegeSync''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
;	COMDAT ?GetMapSvrGroup@CMapServerManager@@QAEHXZ
_TEXT	SEGMENT
?GetMapSvrGroup@CMapServerManager@@QAEHXZ PROC		; CMapServerManager::GetMapSvrGroup, COMDAT
; _this$ = ecx

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  00000	8b 81 f8 6a 01
	00		 mov	 eax, DWORD PTR [ecx+92920]
  00006	85 c0		 test	 eax, eax
  00008	74 05		 je	 SHORT $LN2@GetMapSvrG

; 56   : 		{
; 57   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  0000a	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]

; 60   : 	}

  0000e	c3		 ret	 0
$LN2@GetMapSvrG:

; 58   : 		}
; 59   : 		return -1;

  0000f	83 c8 ff	 or	 eax, -1

; 60   : 	}

  00012	c3		 ret	 0
?GetMapSvrGroup@CMapServerManager@@QAEHXZ ENDP		; CMapServerManager::GetMapSvrGroup
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCCastleSiegeSync@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCastleSiegeSync@@UAEPAXI@Z PROC			; CCastleSiegeSync::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CCastleSiegeSync@@UAE@XZ ; CCastleSiegeSync::~CCastleSiegeSync
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 2c		 push	 44			; 0000002cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCCastleSiegeSync@@UAEPAXI@Z ENDP			; CCastleSiegeSync::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?CheckOverlapCsMarks@CCastleSiegeSync@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?CheckOverlapCsMarks@CCastleSiegeSync@@QAEHH@Z PROC	; CCastleSiegeSync::CheckOverlapCsMarks, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 226  : 	for ( int x=INVENTORY_BAG_START;x<MAIN_INVENTORY_SIZE;x++)

  00003	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00009	53		 push	 ebx
  0000a	69 5d 08 40 27
	00 00		 imul	 ebx, DWORD PTR _iIndex$[ebp], 10048
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	bf 0c 00 00 00	 mov	 edi, 12			; 0000000cH
  00018	be f0 09 00 00	 mov	 esi, 2544		; 000009f0H
  0001d	0f 1f 00	 npad	 3
$LL4@CheckOverl:

; 227  : 	{
; 228  : 		if ( gObj[iIndex].pInventory[x].IsItem() == TRUE )

  00020	8b 8c 13 c0 11
	00 00		 mov	 ecx, DWORD PTR [ebx+edx+4544]
  00027	03 ce		 add	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0002e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00034	83 f8 01	 cmp	 eax, 1
  00037	75 34		 jne	 SHORT $LN2@CheckOverl

; 229  : 		{
; 230  : 			if ( gObj[iIndex].pInventory[x].m_Type == ITEMGET(14,21) )

  00039	8b 84 13 c0 11
	00 00		 mov	 eax, DWORD PTR [ebx+edx+4544]
  00040	b9 15 1c 00 00	 mov	 ecx, 7189		; 00001c15H
  00045	66 39 4c 30 06	 cmp	 WORD PTR [eax+esi+6], cx
  0004a	75 21		 jne	 SHORT $LN2@CheckOverl

; 231  : 			{
; 232  : 				if ( gObj[iIndex].pInventory[x].m_Level == 3 )

  0004c	66 83 7c 30 08
	03		 cmp	 WORD PTR [eax+esi+8], 3
  00052	75 19		 jne	 SHORT $LN2@CheckOverl

; 233  : 				{
; 234  : 					int op = (int)gObj[iIndex].pInventory[x].m_Durability;

  00054	f3 0f 2c 4c 30
	24		 cvttss2si ecx, DWORD PTR [eax+esi+36]

; 235  : 
; 236  : 					if ( ITEM_DUR_RANGE(op) != FALSE)

  0005a	85 c9		 test	 ecx, ecx
  0005c	78 0f		 js	 SHORT $LN2@CheckOverl
  0005e	33 c0		 xor	 eax, eax
  00060	81 f9 fe 00 00
	00		 cmp	 ecx, 254		; 000000feH
  00066	0f 9e c0	 setle	 al
  00069	85 c0		 test	 eax, eax
  0006b	75 19		 jne	 SHORT $LN13@CheckOverl
$LN2@CheckOverl:

; 226  : 	for ( int x=INVENTORY_BAG_START;x<MAIN_INVENTORY_SIZE;x++)

  0006d	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  00073	47		 inc	 edi
  00074	81 fe f0 a8 00
	00		 cmp	 esi, 43248		; 0000a8f0H
  0007a	7c a4		 jl	 SHORT $LL4@CheckOverl

; 239  : 					}
; 240  : 				}
; 241  : 			}
; 242  : 		}
; 243  : 	}
; 244  : 
; 245  : 	return -1;

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	83 c8 ff	 or	 eax, -1
  00081	5b		 pop	 ebx

; 246  : }

  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
$LN13@CheckOverl:

; 237  : 					{
; 238  : 						return x;

  00086	8b c7		 mov	 eax, edi
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx

; 246  : }

  0008b	5d		 pop	 ebp
  0008c	c2 04 00	 ret	 4
?CheckOverlapCsMarks@CCastleSiegeSync@@QAEHH@Z ENDP	; CCastleSiegeSync::CheckOverlapCsMarks
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z PROC ; CCastleSiegeSync::CheckCastleOwnerUnionMember, COMDAT
; _this$ = ecx

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 188  : 	if ( gObjIsConnected(iIndex) == FALSE )

  00005	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 08		 jne	 SHORT $LN2@CheckCastl
$LN16@CheckCastl:
  00017	5f		 pop	 edi

; 189  : 	{
; 190  : 		return FALSE;

  00018	33 c0		 xor	 eax, eax
  0001a	5e		 pop	 esi

; 213  : 	{
; 214  : 		return TRUE;
; 215  : 	}
; 216  : 
; 217  : 	return FALSE;
; 218  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN2@CheckCastl:

; 191  : 	}
; 192  : 
; 193  : 	if ( strcmp(this->m_szCastleOwnerGuild, "") == 0 )

  0001f	83 c6 18	 add	 esi, 24			; 00000018H
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00027	8b c6		 mov	 eax, esi
  00029	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@CheckCastl:
  00030	8a 10		 mov	 dl, BYTE PTR [eax]
  00032	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00034	75 1a		 jne	 SHORT $LN9@CheckCastl
  00036	84 d2		 test	 dl, dl
  00038	74 12		 je	 SHORT $LN10@CheckCastl
  0003a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0003d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00040	75 0e		 jne	 SHORT $LN9@CheckCastl
  00042	83 c0 02	 add	 eax, 2
  00045	83 c1 02	 add	 ecx, 2
  00048	84 d2		 test	 dl, dl
  0004a	75 e4		 jne	 SHORT $LL8@CheckCastl
$LN10@CheckCastl:
  0004c	33 c0		 xor	 eax, eax
  0004e	eb 05		 jmp	 SHORT $LN11@CheckCastl
$LN9@CheckCastl:
  00050	1b c0		 sbb	 eax, eax
  00052	83 c8 01	 or	 eax, 1
$LN11@CheckCastl:
  00055	85 c0		 test	 eax, eax
  00057	74 be		 je	 SHORT $LN16@CheckCastl

; 194  : 	{
; 195  : 		return FALSE;
; 196  : 	}
; 197  : 
; 198  : 	_GUILD_INFO_STRUCT * lpGuildInfo = gObj[iIndex].lpGuild;

  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005e	69 cf 40 27 00
	00		 imul	 ecx, edi, 10048
  00064	8b 84 01 18 06
	00 00		 mov	 eax, DWORD PTR [ecx+eax+1560]

; 199  : 	
; 200  : 	if ( lpGuildInfo == NULL )

  0006b	85 c0		 test	 eax, eax
  0006d	74 a8		 je	 SHORT $LN16@CheckCastl

; 201  : 	{
; 202  : 		return FALSE;
; 203  : 	}
; 204  : 	
; 205  : 	TUnionInfo * pUnionInfo = UnionManager.SearchUnion(lpGuildInfo->iGuildUnion);

  0006f	ff b0 44 07 00
	00		 push	 DWORD PTR [eax+1860]
  00075	b9 00 00 00 00	 mov	 ecx, OFFSET ?UnionManager@@3VTUnion@@A ; UnionManager
  0007a	e8 00 00 00 00	 call	 ?SearchUnion@TUnion@@QAEPAVTUnionInfo@@H@Z ; TUnion::SearchUnion

; 206  : 
; 207  : 	if ( pUnionInfo == NULL )

  0007f	85 c0		 test	 eax, eax
  00081	74 94		 je	 SHORT $LN16@CheckCastl

; 208  : 	{
; 209  : 		return FALSE;
; 210  : 	}
; 211  : 
; 212  : 	if ( strcmp( pUnionInfo->m_szMasterGuild, this->m_szCastleOwnerGuild) == 0 )

  00083	83 c0 10	 add	 eax, 16			; 00000010H
$LL12@CheckCastl:
  00086	8a 08		 mov	 cl, BYTE PTR [eax]
  00088	3a 0e		 cmp	 cl, BYTE PTR [esi]
  0008a	75 25		 jne	 SHORT $LN13@CheckCastl
  0008c	84 c9		 test	 cl, cl
  0008e	74 12		 je	 SHORT $LN14@CheckCastl
  00090	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  00093	3a 4e 01	 cmp	 cl, BYTE PTR [esi+1]
  00096	75 19		 jne	 SHORT $LN13@CheckCastl
  00098	83 c0 02	 add	 eax, 2
  0009b	83 c6 02	 add	 esi, 2
  0009e	84 c9		 test	 cl, cl
  000a0	75 e4		 jne	 SHORT $LL12@CheckCastl
$LN14@CheckCastl:
  000a2	33 c9		 xor	 ecx, ecx
  000a4	33 c0		 xor	 eax, eax
  000a6	85 c9		 test	 ecx, ecx
  000a8	5f		 pop	 edi
  000a9	0f 94 c0	 sete	 al
  000ac	5e		 pop	 esi

; 213  : 	{
; 214  : 		return TRUE;
; 215  : 	}
; 216  : 
; 217  : 	return FALSE;
; 218  : }

  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
$LN13@CheckCastl:

; 208  : 	{
; 209  : 		return FALSE;
; 210  : 	}
; 211  : 
; 212  : 	if ( strcmp( pUnionInfo->m_szMasterGuild, this->m_szCastleOwnerGuild) == 0 )

  000b1	1b c9		 sbb	 ecx, ecx
  000b3	33 c0		 xor	 eax, eax
  000b5	83 c9 01	 or	 ecx, 1
  000b8	85 c9		 test	 ecx, ecx
  000ba	5f		 pop	 edi
  000bb	0f 94 c0	 sete	 al
  000be	5e		 pop	 esi

; 213  : 	{
; 214  : 		return TRUE;
; 215  : 	}
; 216  : 
; 217  : 	return FALSE;
; 218  : }

  000bf	5d		 pop	 ebp
  000c0	c2 04 00	 ret	 4
?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z ENDP ; CCastleSiegeSync::CheckCastleOwnerUnionMember
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z PROC	; CCastleSiegeSync::CheckCastleOwnerMember, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 164  : 	if ( gObjIsConnected(iIndex) == FALSE )

  00005	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 08		 jne	 SHORT $LN2@CheckCastl
$LN14@CheckCastl:
  00017	5f		 pop	 edi

; 165  : 	{
; 166  : 		return FALSE;

  00018	33 c0		 xor	 eax, eax
  0001a	5e		 pop	 esi

; 175  : 	{
; 176  : 		return FALSE;
; 177  : 	}
; 178  : 
; 179  : 	return TRUE;
; 180  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN2@CheckCastl:

; 167  : 	}
; 168  : 
; 169  : 	if ( strcmp(this->m_szCastleOwnerGuild, "") == 0 )

  0001f	8d 56 18	 lea	 edx, DWORD PTR [esi+24]
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00027	8b c2		 mov	 eax, edx
  00029	53		 push	 ebx
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL6@CheckCastl:
  00030	8a 18		 mov	 bl, BYTE PTR [eax]
  00032	3a 19		 cmp	 bl, BYTE PTR [ecx]
  00034	75 1a		 jne	 SHORT $LN7@CheckCastl
  00036	84 db		 test	 bl, bl
  00038	74 12		 je	 SHORT $LN8@CheckCastl
  0003a	8a 58 01	 mov	 bl, BYTE PTR [eax+1]
  0003d	3a 59 01	 cmp	 bl, BYTE PTR [ecx+1]
  00040	75 0e		 jne	 SHORT $LN7@CheckCastl
  00042	83 c0 02	 add	 eax, 2
  00045	83 c1 02	 add	 ecx, 2
  00048	84 db		 test	 bl, bl
  0004a	75 e4		 jne	 SHORT $LL6@CheckCastl
$LN8@CheckCastl:
  0004c	33 c0		 xor	 eax, eax
  0004e	eb 05		 jmp	 SHORT $LN9@CheckCastl
$LN7@CheckCastl:
  00050	1b c0		 sbb	 eax, eax
  00052	83 c8 01	 or	 eax, 1
$LN9@CheckCastl:
  00055	5b		 pop	 ebx
  00056	85 c0		 test	 eax, eax
  00058	74 bd		 je	 SHORT $LN14@CheckCastl

; 170  : 	{
; 171  : 		return FALSE;
; 172  : 	}
; 173  : 
; 174  : 	if ( strcmp(gObj[iIndex].GuildName, this->m_szCastleOwnerGuild) != 0 )

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005f	69 cf 40 27 00
	00		 imul	 ecx, edi, 10048
  00065	05 1c 06 00 00	 add	 eax, 1564		; 0000061cH
  0006a	03 c1		 add	 eax, ecx
  0006c	0f 1f 40 00	 npad	 4
$LL10@CheckCastl:
  00070	8a 08		 mov	 cl, BYTE PTR [eax]
  00072	3a 0a		 cmp	 cl, BYTE PTR [edx]
  00074	75 25		 jne	 SHORT $LN11@CheckCastl
  00076	84 c9		 test	 cl, cl
  00078	74 12		 je	 SHORT $LN12@CheckCastl
  0007a	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0007d	3a 4a 01	 cmp	 cl, BYTE PTR [edx+1]
  00080	75 19		 jne	 SHORT $LN11@CheckCastl
  00082	83 c0 02	 add	 eax, 2
  00085	83 c2 02	 add	 edx, 2
  00088	84 c9		 test	 cl, cl
  0008a	75 e4		 jne	 SHORT $LL10@CheckCastl
$LN12@CheckCastl:
  0008c	33 c9		 xor	 ecx, ecx
  0008e	33 c0		 xor	 eax, eax
  00090	85 c9		 test	 ecx, ecx
  00092	5f		 pop	 edi
  00093	0f 94 c0	 sete	 al
  00096	5e		 pop	 esi

; 175  : 	{
; 176  : 		return FALSE;
; 177  : 	}
; 178  : 
; 179  : 	return TRUE;
; 180  : }

  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
$LN11@CheckCastl:

; 170  : 	{
; 171  : 		return FALSE;
; 172  : 	}
; 173  : 
; 174  : 	if ( strcmp(gObj[iIndex].GuildName, this->m_szCastleOwnerGuild) != 0 )

  0009b	1b c9		 sbb	 ecx, ecx
  0009d	33 c0		 xor	 eax, eax
  0009f	83 c9 01	 or	 ecx, 1
  000a2	85 c9		 test	 ecx, ecx
  000a4	5f		 pop	 edi
  000a5	0f 94 c0	 sete	 al
  000a8	5e		 pop	 esi

; 175  : 	{
; 176  : 		return FALSE;
; 177  : 	}
; 178  : 
; 179  : 	return TRUE;
; 180  : }

  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z ENDP	; CCastleSiegeSync::CheckCastleOwnerMember
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?AdjustTributeMoney@CCastleSiegeSync@@QAEXXZ
_TEXT	SEGMENT
?AdjustTributeMoney@CCastleSiegeSync@@QAEXXZ PROC	; CCastleSiegeSync::AdjustTributeMoney, COMDAT
; _this$ = ecx

; 135  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 136  : 	if ( this->m_lCastleTributeMoney < 0 )

  00003	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  00007	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  0000a	7d 04		 jge	 SHORT $LN2@AdjustTrib

; 137  : 	{
; 138  : 		InterlockedExchange((LPLONG)&this->m_lCastleTributeMoney, 0);

  0000c	33 c0		 xor	 eax, eax
  0000e	87 02		 xchg	 DWORD PTR [edx], eax
$LN2@AdjustTrib:

; 139  : 	}
; 140  : 
; 141  : 	if ( this->m_lCastleTributeMoney == 0 )

  00010	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00012	85 c9		 test	 ecx, ecx
  00014	74 3b		 je	 SHORT $LN1@AdjustTrib

; 142  : 	{
; 143  : 		return;
; 144  : 	}
; 145  : 
; 146  : 	this->m_iCsTributeMoneyTimer++;

  00016	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00019	40		 inc	 eax
  0001a	57		 push	 edi

; 147  : 
; 148  : 	this->m_iCsTributeMoneyTimer %= 180;

  0001b	bf b4 00 00 00	 mov	 edi, 180		; 000000b4H
  00020	99		 cdq
  00021	f7 ff		 idiv	 edi
  00023	5f		 pop	 edi
  00024	89 56 28	 mov	 DWORD PTR [esi+40], edx

; 149  : 
; 150  : 	if ( this->m_iCsTributeMoneyTimer != 0 )

  00027	85 d2		 test	 edx, edx
  00029	75 26		 jne	 SHORT $LN1@AdjustTrib
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  0002b	a1 f8 6a 01 00	 mov	 eax, DWORD PTR ?g_MapServerManager@@3VCMapServerManager@@A+92920
  00030	85 c0		 test	 eax, eax
  00032	74 10		 je	 SHORT $LN7@AdjustTrib

; 56   : 		{
; 57   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  00034	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp

; 155  : 	GS_GDReqCastleTributeMoney(g_MapServerManager.GetMapSvrGroup(), this->m_lCastleTributeMoney);

  00038	51		 push	 ecx
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?GS_GDReqCastleTributeMoney@@YAXHH@Z ; GS_GDReqCastleTributeMoney
  0003f	83 c4 08	 add	 esp, 8
  00042	5e		 pop	 esi

; 156  : }

  00043	c3		 ret	 0
$LN7@AdjustTrib:
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h

; 59   : 		return -1;

  00044	83 c8 ff	 or	 eax, -1
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp

; 155  : 	GS_GDReqCastleTributeMoney(g_MapServerManager.GetMapSvrGroup(), this->m_lCastleTributeMoney);

  00047	51		 push	 ecx
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?GS_GDReqCastleTributeMoney@@YAXHH@Z ; GS_GDReqCastleTributeMoney
  0004e	83 c4 08	 add	 esp, 8
$LN1@AdjustTrib:
  00051	5e		 pop	 esi

; 156  : }

  00052	c3		 ret	 0
?AdjustTributeMoney@CCastleSiegeSync@@QAEXXZ ENDP	; CCastleSiegeSync::AdjustTributeMoney
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?ResetTributeMoney@CCastleSiegeSync@@QAEXXZ
_TEXT	SEGMENT
?ResetTributeMoney@CCastleSiegeSync@@QAEXXZ PROC	; CCastleSiegeSync::ResetTributeMoney, COMDAT
; _this$ = ecx

; 128  : 	InterlockedExchange((LPLONG)&this->m_lCastleTributeMoney, 0);

  00000	33 d2		 xor	 edx, edx
  00002	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00005	87 10		 xchg	 DWORD PTR [eax], edx

; 129  : }

  00007	c3		 ret	 0
?ResetTributeMoney@CCastleSiegeSync@@QAEXXZ ENDP	; CCastleSiegeSync::ResetTributeMoney
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?AddTributeMoney@CCastleSiegeSync@@QAEXH@Z
_TEXT	SEGMENT
_iMoney$ = 8						; size = 4
?AddTributeMoney@CCastleSiegeSync@@QAEXH@Z PROC		; CCastleSiegeSync::AddTributeMoney, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 105  : 	if ( this->m_lCastleTributeMoney < 0 )

  00003	83 79 14 00	 cmp	 DWORD PTR [ecx+20], 0
  00007	8d 51 14	 lea	 edx, DWORD PTR [ecx+20]
  0000a	7d 04		 jge	 SHORT $LN2@AddTribute

; 106  : 	{
; 107  : 		InterlockedExchange((LPLONG)&this->m_lCastleTributeMoney, 0);

  0000c	33 c0		 xor	 eax, eax
  0000e	87 02		 xchg	 DWORD PTR [edx], eax
$LN2@AddTribute:

; 108  : 	}
; 109  : 
; 110  : 	if ( iMoney <= 0 )

  00010	8b 4d 08	 mov	 ecx, DWORD PTR _iMoney$[ebp]
  00013	85 c9		 test	 ecx, ecx
  00015	7e 0f		 jle	 SHORT $LN1@AddTribute

; 111  : 	{
; 112  : 		return;
; 113  : 	}
; 114  : 
; 115  : 	if ( (this->m_lCastleTributeMoney + iMoney) > MAX_TRIBUTE_MONEY )

  00017	8b 02		 mov	 eax, DWORD PTR [edx]
  00019	03 c1		 add	 eax, ecx
  0001b	3d 00 94 35 77	 cmp	 eax, 2000000000		; 77359400H
  00020	7f 04		 jg	 SHORT $LN1@AddTribute

; 116  : 	{
; 117  : 		return;
; 118  : 	}
; 119  : 
; 120  : 	InterlockedExchangeAdd((LPLONG)&this->m_lCastleTributeMoney, iMoney);

  00022	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
$LN1@AddTribute:

; 121  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?AddTributeMoney@CCastleSiegeSync@@QAEXH@Z ENDP		; CCastleSiegeSync::AddTributeMoney
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?GetTaxHuntZone@CCastleSiegeSync@@QAEHHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
_bCheckOwnerGuild$ = 12					; size = 4
?GetTaxHuntZone@CCastleSiegeSync@@QAEHHH@Z PROC		; CCastleSiegeSync::GetTaxHuntZone, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	int iCurTaxHuntZone = this->m_iCurTaxHuntZone;
; 88   : 
; 89   : 	if ( bCheckOwnerGuild == TRUE )

  00003	83 7d 0c 01	 cmp	 DWORD PTR _bCheckOwnerGuild$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000e	75 24		 jne	 SHORT $LN7@GetTaxHunt

; 90   : 	{
; 91   : 		if ( this->CheckCastleOwnerMember(iIndex) == TRUE || this->CheckCastleOwnerUnionMember(iIndex) == TRUE )

  00010	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  00013	e8 00 00 00 00	 call	 ?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerMember
  00018	83 f8 01	 cmp	 eax, 1
  0001b	74 0f		 je	 SHORT $LN4@GetTaxHunt
  0001d	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerUnionMember
  00027	83 f8 01	 cmp	 eax, 1
  0002a	75 08		 jne	 SHORT $LN7@GetTaxHunt
$LN4@GetTaxHunt:
  0002c	5f		 pop	 edi

; 92   : 		{
; 93   : 			iCurTaxHuntZone = 0;
; 94   : 		}
; 95   : 	}
; 96   : 
; 97   : 	return iCurTaxHuntZone;

  0002d	33 c0		 xor	 eax, eax
  0002f	5e		 pop	 esi

; 98   : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN7@GetTaxHunt:

; 92   : 		{
; 93   : 			iCurTaxHuntZone = 0;
; 94   : 		}
; 95   : 	}
; 96   : 
; 97   : 	return iCurTaxHuntZone;

  00034	8b c7		 mov	 eax, edi
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi

; 98   : }

  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?GetTaxHuntZone@CCastleSiegeSync@@QAEHHH@Z ENDP		; CCastleSiegeSync::GetTaxHuntZone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?GetTaxRateStore@CCastleSiegeSync@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetTaxRateStore@CCastleSiegeSync@@QAEHH@Z PROC		; CCastleSiegeSync::GetTaxRateStore, COMDAT
; _this$ = ecx

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 72   : 	int iCurTaxRateStore = this->m_iCurTaxRateStore;
; 73   : 
; 74   : 	if ( this->CheckCastleOwnerMember(iIndex) == TRUE || this->CheckCastleOwnerUnionMember(iIndex) == TRUE )

  00005	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]
  0000d	e8 00 00 00 00	 call	 ?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerMember
  00012	83 f8 01	 cmp	 eax, 1
  00015	74 17		 je	 SHORT $LN3@GetTaxRate
  00017	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerUnionMember
  00021	83 f8 01	 cmp	 eax, 1
  00024	74 08		 je	 SHORT $LN3@GetTaxRate

; 75   : 	{
; 76   : 		iCurTaxRateStore = 0;
; 77   : 	}
; 78   : 
; 79   : 	return iCurTaxRateStore;

  00026	5e		 pop	 esi
  00027	8b c3		 mov	 eax, ebx
  00029	5b		 pop	 ebx

; 80   : }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@GetTaxRate:
  0002e	5e		 pop	 esi

; 75   : 	{
; 76   : 		iCurTaxRateStore = 0;
; 77   : 	}
; 78   : 
; 79   : 	return iCurTaxRateStore;

  0002f	33 c0		 xor	 eax, eax
  00031	5b		 pop	 ebx

; 80   : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?GetTaxRateStore@CCastleSiegeSync@@QAEHH@Z ENDP		; CCastleSiegeSync::GetTaxRateStore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z PROC		; CCastleSiegeSync::GetTaxRateChaos, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 57   : 	int iCurTaxRateChaos = this->m_iCurTaxRateChaos;
; 58   : 
; 59   : 	if ( this->CheckCastleOwnerMember(iIndex) == TRUE || this->CheckCastleOwnerUnionMember(iIndex) == TRUE )

  00005	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 5e 08	 mov	 ebx, DWORD PTR [esi+8]
  0000d	e8 00 00 00 00	 call	 ?CheckCastleOwnerMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerMember
  00012	83 f8 01	 cmp	 eax, 1
  00015	74 17		 je	 SHORT $LN3@GetTaxRate
  00017	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  0001a	8b ce		 mov	 ecx, esi
  0001c	e8 00 00 00 00	 call	 ?CheckCastleOwnerUnionMember@CCastleSiegeSync@@QAEHH@Z ; CCastleSiegeSync::CheckCastleOwnerUnionMember
  00021	83 f8 01	 cmp	 eax, 1
  00024	74 08		 je	 SHORT $LN3@GetTaxRate

; 60   : 	{
; 61   : 		iCurTaxRateChaos = 0;
; 62   : 	}
; 63   : 
; 64   : 	return iCurTaxRateChaos;

  00026	5e		 pop	 esi
  00027	8b c3		 mov	 eax, ebx
  00029	5b		 pop	 ebx

; 65   : }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@GetTaxRate:
  0002e	5e		 pop	 esi

; 60   : 	{
; 61   : 		iCurTaxRateChaos = 0;
; 62   : 	}
; 63   : 
; 64   : 	return iCurTaxRateChaos;

  0002f	33 c0		 xor	 eax, eax
  00031	5b		 pop	 ebx

; 65   : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?GetTaxRateChaos@CCastleSiegeSync@@QAEHH@Z ENDP		; CCastleSiegeSync::GetTaxRateChaos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?SetCastleOwnerGuild@CCastleSiegeSync@@QAEXPAD@Z
_TEXT	SEGMENT
_lpszGuildName$ = 8					; size = 4
?SetCastleOwnerGuild@CCastleSiegeSync@@QAEXPAD@Z PROC	; CCastleSiegeSync::SetCastleOwnerGuild, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 43   : 	if ( lpszGuildName == NULL )

  00003	8b 55 08	 mov	 edx, DWORD PTR _lpszGuildName$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 12		 je	 SHORT $LN1@SetCastleO

; 44   : 	{
; 45   : 		return;
; 46   : 	}
; 47   : 
; 48   : 	memset(this->m_szCastleOwnerGuild, 0, sizeof(this->m_szCastleOwnerGuild));

  0000a	0f 57 c0	 xorps	 xmm0, xmm0
  0000d	0f 11 41 18	 movups	 XMMWORD PTR [ecx+24], xmm0

; 49   : 	memcpy(this->m_szCastleOwnerGuild, lpszGuildName, sizeof(this->m_szCastleOwnerGuild)/2);

  00011	8b 02		 mov	 eax, DWORD PTR [edx]
  00013	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00016	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00019	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
$LN1@SetCastleO:

; 50   : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetCastleOwnerGuild@CCastleSiegeSync@@QAEXPAD@Z ENDP	; CCastleSiegeSync::SetCastleOwnerGuild
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?Clear@CCastleSiegeSync@@QAEXXZ
_TEXT	SEGMENT
?Clear@CCastleSiegeSync@@QAEXXZ PROC			; CCastleSiegeSync::Clear, COMDAT
; _this$ = ecx

; 28   : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 29   : 	this->m_iCurCastleState = -1;

  00003	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1

; 30   : 	this->m_iCurTaxRateChaos = 0;

  0000a	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 31   : 	this->m_iCurTaxRateStore  = 0;

  00011	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 32   : 	this->m_lCastleTributeMoney = 0;

  00018	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 33   : 	this->m_iCsTributeMoneyTimer = 0;

  0001f	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 34   : 	memset(this->m_szCastleOwnerGuild, 0, sizeof(this->m_szCastleOwnerGuild));

  00026	0f 11 41 18	 movups	 XMMWORD PTR [ecx+24], xmm0

; 35   : }

  0002a	c3		 ret	 0
?Clear@CCastleSiegeSync@@QAEXXZ ENDP			; CCastleSiegeSync::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ??1CCastleSiegeSync@@UAE@XZ
_TEXT	SEGMENT
??1CCastleSiegeSync@@UAE@XZ PROC			; CCastleSiegeSync::~CCastleSiegeSync, COMDAT
; _this$ = ecx

; 21   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCastleSiegeSync@@6B@

; 22   : 	return;
; 23   : }

  00006	c3		 ret	 0
??1CCastleSiegeSync@@UAE@XZ ENDP			; CCastleSiegeSync::~CCastleSiegeSync
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ??0CCastleSiegeSync@@QAE@XZ
_TEXT	SEGMENT
??0CCastleSiegeSync@@QAE@XZ PROC			; CCastleSiegeSync::CCastleSiegeSync, COMDAT
; _this$ = ecx

; 14   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CCastleSiegeSync@@6B@

; 15   : 	this->Clear();

  00009	e8 00 00 00 00	 call	 ?Clear@CCastleSiegeSync@@QAEXXZ ; CCastleSiegeSync::Clear

; 16   : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CCastleSiegeSync@@QAE@XZ ENDP			; CCastleSiegeSync::CCastleSiegeSync
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\castlesiegesync.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 250  : CCastleSiegeSync g_CastleSiegeSync;

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
