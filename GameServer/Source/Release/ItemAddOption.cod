; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\ItemAddOption.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??0CItemAddOption@@QAE@XZ			; CItemAddOption::CItemAddOption
PUBLIC	??1CItemAddOption@@UAE@XZ			; CItemAddOption::~CItemAddOption
PUBLIC	?Load@CItemAddOption@@QAEXPAD@Z			; CItemAddOption::Load
PUBLIC	?Initialize@CItemAddOption@@QAEXXZ		; CItemAddOption::Initialize
PUBLIC	?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ; CItemAddOption::GetCurrentEffectType
PUBLIC	?PrevSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ; CItemAddOption::PrevSetItemLastEffectForHallowin
PUBLIC	?NextSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ; CItemAddOption::NextSetItemLastEffectForHallowin
PUBLIC	?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse
PUBLIC	?SetItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::SetItemEffect
PUBLIC	?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CItemAddOption::ClearItemEffect
PUBLIC	?ClearItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::ClearItemEffect
PUBLIC	?SearchItemEffectType@CItemAddOption@@QAE_NHPAH00@Z ; CItemAddOption::SearchItemEffectType
PUBLIC	?SearchItemOption@CItemAddOption@@QAEHH@Z	; CItemAddOption::SearchItemOption
PUBLIC	?SetPeriodItemEffect1@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z ; CItemAddOption::SetPeriodItemEffect1
PUBLIC	?SetPeriodItemEffect2@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z ; CItemAddOption::SetPeriodItemEffect2
PUBLIC	?IsItemEffect@CItemAddOption@@QAEEH@Z		; CItemAddOption::IsItemEffect
PUBLIC	?GetItemEffect@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ; CItemAddOption::GetItemEffect
PUBLIC	?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
PUBLIC	?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
PUBLIC	?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect
PUBLIC	??_GCItemAddOption@@UAEPAXI@Z			; CItemAddOption::`scalar deleting destructor'
PUBLIC	??_7CItemAddOption@@6B@				; CItemAddOption::`vftable'
PUBLIC	?g_ItemAddOption@@3VCItemAddOption@@A		; g_ItemAddOption
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@ ; `string'
PUBLIC	??_R4CItemAddOption@@6B@			; CItemAddOption::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCItemAddOption@@@8			; CItemAddOption `RTTI Type Descriptor'
PUBLIC	??_R3CItemAddOption@@8				; CItemAddOption::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItemAddOption@@8				; CItemAddOption::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItemAddOption@@8			; CItemAddOption::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	_isalpha:PROC
EXTRN	_isdigit:PROC
EXTRN	_isspace:PROC
EXTRN	_isalnum:PROC
EXTRN	_fclose:PROC
EXTRN	_fgetc:PROC
EXTRN	_fopen:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_atof:PROC
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?GCReFillSend@@YAXHGEEG@Z:PROC			; GCReFillSend
EXTRN	?GCManaSend@@YAXHFEEG@Z:PROC			; GCManaSend
EXTRN	?GCSendEffectInfo@@YAXPAUOBJECTSTRUCT@@HHHH@Z:PROC ; GCSendEffectInfo
EXTRN	??_ECItemAddOption@@UAEPAXI@Z:PROC		; CItemAddOption::`vector deleting destructor'
EXTRN	?GetPeriodInfo@CCashItemPeriodSystem@@QAEPAUITEMPERIOD_INFO@@PAUOBJECTSTRUCT@@@Z:PROC ; CCashItemPeriodSystem::GetPeriodInfo
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?g_CashItemPeriodSystem@@3VCCashItemPeriodSystem@@A:BYTE ; g_CashItemPeriodSystem
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?g_ItemAddOption@@3VCItemAddOption@@A DB 0c84H DUP (?)	; g_ItemAddOption
?SMDFile@@3PAU_iobuf@@A DD 01H DUP (?)			; SMDFile
?TokenNumber@@3MA DD 01H DUP (?)			; TokenNumber
?TokenString@@3PADA DB 064H DUP (?)			; TokenString
?CurrentToken@@3W4SMDToken@@A DD 01H DUP (?)		; CurrentToken
_BSS	ENDS
CRT$XCU	SEGMENT
?g_ItemAddOption$initializer$@@3P6AXXZA DD FLAT:??__Eg_ItemAddOption@@YAXXZ ; g_ItemAddOption$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CItemAddOption@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CItemAddOption@@8 DD FLAT:??_R0?AVCItemAddOption@@@8 ; CItemAddOption::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItemAddOption@@8
rdata$r	ENDS
;	COMDAT ??_R2CItemAddOption@@8
rdata$r	SEGMENT
??_R2CItemAddOption@@8 DD FLAT:??_R1A@?0A@EA@CItemAddOption@@8 ; CItemAddOption::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CItemAddOption@@8
rdata$r	SEGMENT
??_R3CItemAddOption@@8 DD 00H				; CItemAddOption::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CItemAddOption@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItemAddOption@@@8
data$r	SEGMENT
??_R0?AVCItemAddOption@@@8 DD FLAT:??_7type_info@@6B@	; CItemAddOption `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItemAddOption@@', 00H
data$r	ENDS
;	COMDAT ??_R4CItemAddOption@@6B@
rdata$r	SEGMENT
??_R4CItemAddOption@@6B@ DD 00H				; CItemAddOption::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCItemAddOption@@@8
	DD	FLAT:??_R3CItemAddOption@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@
CONST	SEGMENT
??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@ DB '[ItemAdd'
	DB	'Option] Overflow ItemAddOption Table Index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CItemAddOption@@6B@
CONST	SEGMENT
??_7CItemAddOption@@6B@ DD FLAT:??_R4CItemAddOption@@6B@ ; CItemAddOption::`vftable'
	DD	FLAT:??_ECItemAddOption@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_ItemAddOption@@YAXXZ
text$yd	SEGMENT
??__Fg_ItemAddOption@@YAXXZ PROC			; `dynamic atexit destructor for 'g_ItemAddOption'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  00005	e9 00 00 00 00	 jmp	 ??1CItemAddOption@@UAE@XZ ; CItemAddOption::~CItemAddOption
??__Fg_ItemAddOption@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_ItemAddOption''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ??__Eg_ItemAddOption@@YAXXZ
text$di	SEGMENT
??__Eg_ItemAddOption@@YAXXZ PROC			; `dynamic initializer for 'g_ItemAddOption'', COMDAT

; 11   : CItemAddOption g_ItemAddOption;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ItemAddOption@@3VCItemAddOption@@A ; g_ItemAddOption
  00005	e8 00 00 00 00	 call	 ??0CItemAddOption@@QAE@XZ ; CItemAddOption::CItemAddOption
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_ItemAddOption@@YAXXZ ; `dynamic atexit destructor for 'g_ItemAddOption''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_ItemAddOption@@YAXXZ ENDP			; `dynamic initializer for 'g_ItemAddOption''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\include\readscript.h
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	int ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?TokenString@@3PADA, 0
  00017	53		 push	 ebx
  00018	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8b d8		 mov	 ebx, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	83 fb ff	 cmp	 ebx, -1
  00033	74 5d		 je	 SHORT $LN43@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)
; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	83 fb 2f	 cmp	 ebx, 47			; 0000002fH
  00038	75 30		 jne	 SHORT $LN2@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00040	e8 00 00 00 00	 call	 _fgetc
  00045	8b d8		 mov	 ebx, eax
  00047	83 c4 04	 add	 esp, 4
  0004a	83 fb 2f	 cmp	 ebx, 47			; 0000002fH
  0004d	75 1b		 jne	 SHORT $LN2@GetToken
  0004f	90		 npad	 1
$LL5@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	83 fb ff	 cmp	 ebx, -1
  00053	74 3d		 je	 SHORT $LN43@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  0005b	e8 00 00 00 00	 call	 _fgetc
  00060	8b d8		 mov	 ebx, eax
  00062	83 c4 04	 add	 esp, 4
  00065	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  00068	75 e6		 jne	 SHORT $LL5@GetToken
$LN2@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006a	53		 push	 ebx
  0006b	e8 00 00 00 00	 call	 _isspace
  00070	83 c4 04	 add	 esp, 4
  00073	85 c0		 test	 eax, eax
  00075	75 a9		 jne	 SHORT $LL4@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  00077	8d 43 de	 lea	 eax, DWORD PTR [ebx-34]
  0007a	56		 push	 esi
  0007b	83 f8 5b	 cmp	 eax, 91			; 0000005bH
  0007e	0f 87 89 01 00
	00		 ja	 $LN29@GetToken
  00084	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN58@GetToken[eax]
  0008b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN64@GetToken[eax*4]
$LN43@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE

  00092	b8 02 00 00 00	 mov	 eax, 2
  00097	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00098	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009b	33 cd		 xor	 ecx, ebp
  0009d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
$LN20@GetToken:
  000a6	5e		 pop	 esi

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000a7	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 35 ; 00000023H
  000b1	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b6	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN21@GetToken:
  000c5	5e		 pop	 esi

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000c6	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 59 ; 0000003bH
  000d0	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000d5	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000d6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d9	33 cd		 xor	 ecx, ebp
  000db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
$LN22@GetToken:
  000e4	5e		 pop	 esi

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000e5	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 44 ; 0000002cH
  000ef	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000f4	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
$LN23@GetToken:
  00103	5e		 pop	 esi

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00104	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 123 ; 0000007bH
  0010e	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  00113	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00114	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00117	33 cd		 xor	 ecx, ebp
  00119	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
$LN24@GetToken:
  00122	5e		 pop	 esi

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00123	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 125 ; 0000007dH
  0012d	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  00132	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00133	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00136	33 cd		 xor	 ecx, ebp
  00138	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c3		 ret	 0
$LN25@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  00141	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00147	53		 push	 ebx
  00148	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  0014d	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00153	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  00156	e8 00 00 00 00	 call	 _getc
  0015b	8b d8		 mov	 ebx, eax
  0015d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00160	83 fb ff	 cmp	 ebx, -1
  00163	74 2f		 je	 SHORT $LN59@GetToken
$LL9@GetToken:
  00165	83 fb 2e	 cmp	 ebx, 46			; 0000002eH
  00168	74 12		 je	 SHORT $LN26@GetToken
  0016a	53		 push	 ebx
  0016b	e8 00 00 00 00	 call	 _isdigit
  00170	83 c4 04	 add	 esp, 4
  00173	85 c0		 test	 eax, eax
  00175	75 05		 jne	 SHORT $LN26@GetToken
  00177	83 fb 2d	 cmp	 ebx, 45			; 0000002dH
  0017a	75 18		 jne	 SHORT $LN59@GetToken
$LN26@GetToken:
  0017c	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00182	88 1e		 mov	 BYTE PTR [esi], bl

; 102  : 			p++;

  00184	46		 inc	 esi
  00185	e8 00 00 00 00	 call	 _getc
  0018a	8b d8		 mov	 ebx, eax
  0018c	83 c4 04	 add	 esp, 4
  0018f	83 fb ff	 cmp	 ebx, -1
  00192	75 d1		 jne	 SHORT $LL9@GetToken
$LN59@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = (float)atof( TempString);	// Select the first Byte as Main ID

  00194	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  00197	c6 06 00	 mov	 BYTE PTR [esi], 0
  0019a	50		 push	 eax
  0019b	e8 00 00 00 00	 call	 _atof
  001a0	83 c4 04	 add	 esp, 4

; 106  : 		return CurrentToken  = NUMBER ;

  001a3	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 1
  001ad	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?TokenNumber@@3MA
  001b3	b8 01 00 00 00	 mov	 eax, 1
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  001ba	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bd	33 cd		 xor	 ecx, ebp
  001bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c3		 ret	 0
$LN27@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  001c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  001ce	be 00 00 00 00	 mov	 esi, OFFSET ?TokenString@@3PADA
  001d3	e8 00 00 00 00	 call	 _getc
  001d8	83 c4 04	 add	 esp, 4
  001db	83 f8 ff	 cmp	 eax, -1
  001de	74 1f		 je	 SHORT $LN12@GetToken
$LL11@GetToken:
  001e0	83 f8 22	 cmp	 eax, 34			; 00000022H
  001e3	0f 84 95 00 00
	00		 je	 $LN28@GetToken
  001e9	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 113  : 		{
; 114  : 			*p = ch;

  001ef	88 06		 mov	 BYTE PTR [esi], al

; 115  : 			p++;

  001f1	46		 inc	 esi
  001f2	e8 00 00 00 00	 call	 _getc
  001f7	83 c4 04	 add	 esp, 4
  001fa	83 f8 ff	 cmp	 eax, -1
  001fd	75 e1		 jne	 SHORT $LL11@GetToken
$LN12@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001ff	83 f8 22	 cmp	 eax, 34			; 00000022H
  00202	74 7a		 je	 SHORT $LN28@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  00204	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  0020a	50		 push	 eax

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  0020b	eb 69		 jmp	 SHORT $LN62@GetToken
$LN29@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  0020d	53		 push	 ebx
  0020e	e8 00 00 00 00	 call	 _isalpha
  00213	83 c4 04	 add	 esp, 4
  00216	85 c0		 test	 eax, eax
  00218	0f 84 7f 00 00
	00		 je	 $LN30@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  0021e	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00224	88 1d 00 00 00
	00		 mov	 BYTE PTR ?TokenString@@3PADA, bl
  0022a	be 01 00 00 00	 mov	 esi, OFFSET ?TokenString@@3PADA+1
  0022f	e8 00 00 00 00	 call	 _getc
  00234	8b d8		 mov	 ebx, eax
  00236	83 c4 04	 add	 esp, 4
  00239	83 fb ff	 cmp	 ebx, -1
  0023c	74 31		 je	 SHORT $LN60@GetToken
  0023e	66 90		 npad	 2
$LL13@GetToken:
  00240	83 fb 2e	 cmp	 ebx, 46			; 0000002eH
  00243	74 12		 je	 SHORT $LN32@GetToken
  00245	83 fb 5f	 cmp	 ebx, 95			; 0000005fH
  00248	74 0d		 je	 SHORT $LN32@GetToken
  0024a	53		 push	 ebx
  0024b	e8 00 00 00 00	 call	 _isalnum
  00250	83 c4 04	 add	 esp, 4
  00253	85 c0		 test	 eax, eax
  00255	74 18		 je	 SHORT $LN60@GetToken
$LN32@GetToken:
  00257	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 133  : 			{
; 134  : 				*p=ch;

  0025d	88 1e		 mov	 BYTE PTR [esi], bl

; 135  : 				p++;

  0025f	46		 inc	 esi
  00260	e8 00 00 00 00	 call	 _getc
  00265	8b d8		 mov	 ebx, eax
  00267	83 c4 04	 add	 esp, 4
  0026a	83 fb ff	 cmp	 ebx, -1
  0026d	75 d1		 jne	 SHORT $LL13@GetToken
$LN60@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0026f	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00275	53		 push	 ebx
$LN62@GetToken:
  00276	e8 00 00 00 00	 call	 _ungetc
  0027b	83 c4 08	 add	 esp, 8
$LN28@GetToken:

; 140  : 			*p=0;

  0027e	c6 06 00	 mov	 BYTE PTR [esi], 0

; 141  : 			CurrentToken=NAME;
; 142  : 			return CurrentToken;

  00281	33 c0		 xor	 eax, eax
  00283	5e		 pop	 esi
  00284	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 0
  0028e	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0028f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00292	33 cd		 xor	 ecx, ebp
  00294	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00299	8b e5		 mov	 esp, ebp
  0029b	5d		 pop	 ebp
  0029c	c3		 ret	 0
$LN30@GetToken:
  0029d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a0	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  002a5	5e		 pop	 esi
  002a6	33 cd		 xor	 ecx, ebp
  002a8	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 60 ; 0000003cH
  002b2	5b		 pop	 ebx
  002b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b8	8b e5		 mov	 esp, ebp
  002ba	5d		 pop	 ebp
  002bb	c3		 ret	 0
$LN64@GetToken:
  002bc	00 00 00 00	 DD	 $LN27@GetToken
  002c0	00 00 00 00	 DD	 $LN20@GetToken
  002c4	00 00 00 00	 DD	 $LN22@GetToken
  002c8	00 00 00 00	 DD	 $LN25@GetToken
  002cc	00 00 00 00	 DD	 $LN21@GetToken
  002d0	00 00 00 00	 DD	 $LN23@GetToken
  002d4	00 00 00 00	 DD	 $LN24@GetToken
  002d8	00 00 00 00	 DD	 $LN29@GetToken
$LN58@GetToken:
  002dc	00		 DB	 0
  002dd	01		 DB	 1
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	07		 DB	 7
  002e2	07		 DB	 7
  002e3	07		 DB	 7
  002e4	07		 DB	 7
  002e5	07		 DB	 7
  002e6	02		 DB	 2
  002e7	03		 DB	 3
  002e8	03		 DB	 3
  002e9	07		 DB	 7
  002ea	03		 DB	 3
  002eb	03		 DB	 3
  002ec	03		 DB	 3
  002ed	03		 DB	 3
  002ee	03		 DB	 3
  002ef	03		 DB	 3
  002f0	03		 DB	 3
  002f1	03		 DB	 3
  002f2	03		 DB	 3
  002f3	03		 DB	 3
  002f4	07		 DB	 7
  002f5	04		 DB	 4
  002f6	07		 DB	 7
  002f7	07		 DB	 7
  002f8	07		 DB	 7
  002f9	07		 DB	 7
  002fa	07		 DB	 7
  002fb	07		 DB	 7
  002fc	07		 DB	 7
  002fd	07		 DB	 7
  002fe	07		 DB	 7
  002ff	07		 DB	 7
  00300	07		 DB	 7
  00301	07		 DB	 7
  00302	07		 DB	 7
  00303	07		 DB	 7
  00304	07		 DB	 7
  00305	07		 DB	 7
  00306	07		 DB	 7
  00307	07		 DB	 7
  00308	07		 DB	 7
  00309	07		 DB	 7
  0030a	07		 DB	 7
  0030b	07		 DB	 7
  0030c	07		 DB	 7
  0030d	07		 DB	 7
  0030e	07		 DB	 7
  0030f	07		 DB	 7
  00310	07		 DB	 7
  00311	07		 DB	 7
  00312	07		 DB	 7
  00313	07		 DB	 7
  00314	07		 DB	 7
  00315	07		 DB	 7
  00316	07		 DB	 7
  00317	07		 DB	 7
  00318	07		 DB	 7
  00319	07		 DB	 7
  0031a	07		 DB	 7
  0031b	07		 DB	 7
  0031c	07		 DB	 7
  0031d	07		 DB	 7
  0031e	07		 DB	 7
  0031f	07		 DB	 7
  00320	07		 DB	 7
  00321	07		 DB	 7
  00322	07		 DB	 7
  00323	07		 DB	 7
  00324	07		 DB	 7
  00325	07		 DB	 7
  00326	07		 DB	 7
  00327	07		 DB	 7
  00328	07		 DB	 7
  00329	07		 DB	 7
  0032a	07		 DB	 7
  0032b	07		 DB	 7
  0032c	07		 DB	 7
  0032d	07		 DB	 7
  0032e	07		 DB	 7
  0032f	07		 DB	 7
  00330	07		 DB	 7
  00331	07		 DB	 7
  00332	07		 DB	 7
  00333	07		 DB	 7
  00334	07		 DB	 7
  00335	05		 DB	 5
  00336	07		 DB	 7
  00337	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCItemAddOption@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCItemAddOption@@UAEPAXI@Z PROC			; CItemAddOption::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CItemAddOption@@UAE@XZ ; CItemAddOption::~CItemAddOption
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 84 0c 00 00	 push	 3204			; 00000c84H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCItemAddOption@@UAEPAXI@Z ENDP			; CItemAddOption::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectOption$ = 12					; size = 4
_iOptionType$ = 16					; size = 4
_iEffectType$ = 20					; size = 4
_iEffectValue$ = 24					; size = 4
?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z PROC ; CItemAddOption::_ClearItemEffect, COMDAT
; _this$ = ecx

; 439  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 440  : 	if ( iEffectType <= 0 )

  00004	8b 7d 14	 mov	 edi, DWORD PTR _iEffectType$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	7f 07		 jg	 SHORT $LN4@ClearItemE

; 441  : 		return false;

  0000b	32 c0		 xor	 al, al
  0000d	5f		 pop	 edi

; 517  : }

  0000e	5d		 pop	 ebp
  0000f	c2 14 00	 ret	 20			; 00000014H
$LN4@ClearItemE:

; 442  : 
; 443  : 	switch ( iEffectType )

  00012	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  00015	56		 push	 esi
  00016	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  00019	0f 87 03 02 00
	00		 ja	 $LN19@ClearItemE
  0001f	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00022	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN42@ClearItemE[eax*4]
$LN5@ClearItemE:

; 444  : 	{
; 445  : 		case ADD_OPTION_LIFE:
; 446  : 			lpObj->AddLife -= iEffectValue;

  00029	8b 45 18	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  0002c	29 86 24 01 00
	00		 sub	 DWORD PTR [esi+292], eax
  00032	66 0f 6e 8e 24
	01 00 00	 movd	 xmm1, DWORD PTR [esi+292]

; 447  : 
; 448  : 			if ( (lpObj->AddLife + lpObj->MaxLife ) < lpObj->Life )

  0003a	f3 0f 10 86 d8
	00 00 00	 movss	 xmm0, DWORD PTR [esi+216]
  00042	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00045	f3 0f 58 8e dc
	00 00 00	 addss	 xmm1, DWORD PTR [esi+220]
  0004d	0f 2f c1	 comiss	 xmm0, xmm1
  00050	76 08		 jbe	 SHORT $LN6@ClearItemE

; 449  : 				lpObj->Life = lpObj->AddLife + lpObj->MaxLife;

  00052	f3 0f 11 8e d8
	00 00 00	 movss	 DWORD PTR [esi+216], xmm1
$LN6@ClearItemE:

; 450  : 
; 451  : 			GCReFillSend(lpObj->m_Index, (WORD)lpObj->Life, 0xFF, 0, lpObj->iShield);

  0005a	0f b7 86 2c 01
	00 00		 movzx	 eax, WORD PTR [esi+300]
  00061	50		 push	 eax
  00062	f3 0f 2c 86 d8
	00 00 00	 cvttss2si eax, DWORD PTR [esi+216]
  0006a	6a 00		 push	 0
  0006c	68 ff 00 00 00	 push	 255			; 000000ffH
  00071	0f b7 c0	 movzx	 eax, ax
  00074	50		 push	 eax
  00075	ff 36		 push	 DWORD PTR [esi]
  00077	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend
  0007c	66 0f 6e 86 24
	01 00 00	 movd	 xmm0, DWORD PTR [esi+292]

; 452  : 			GCReFillSend(lpObj->m_Index, (WORD)(lpObj->MaxLife + lpObj->AddLife), 0xFE, 0, lpObj->iMaxShield + lpObj->iAddShield);

  00084	66 8b 86 34 01
	00 00		 mov	 ax, WORD PTR [esi+308]
  0008b	66 03 86 30 01
	00 00		 add	 ax, WORD PTR [esi+304]
  00092	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00095	0f b7 c0	 movzx	 eax, ax
  00098	50		 push	 eax
  00099	6a 00		 push	 0
  0009b	68 fe 00 00 00	 push	 254			; 000000feH
  000a0	f3 0f 58 86 dc
	00 00 00	 addss	 xmm0, DWORD PTR [esi+220]
  000a8	f3 0f 2c c0	 cvttss2si eax, xmm0
  000ac	0f b7 c0	 movzx	 eax, ax
  000af	50		 push	 eax
  000b0	ff 36		 push	 DWORD PTR [esi]
  000b2	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend
  000b7	83 c4 28	 add	 esp, 40			; 00000028H

; 453  : 			break;

  000ba	e9 49 01 00 00	 jmp	 $LN18@ClearItemE
$LN7@ClearItemE:

; 454  : 
; 455  : 		case ADD_OPTION_MANA:
; 456  : 			lpObj->AddMana -= iEffectValue;

  000bf	8b 45 18	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  000c2	29 86 28 01 00
	00		 sub	 DWORD PTR [esi+296], eax
  000c8	66 0f 6e 8e 28
	01 00 00	 movd	 xmm1, DWORD PTR [esi+296]

; 457  : 
; 458  : 			if ( (lpObj->AddMana + lpObj->MaxMana ) < lpObj->Mana )

  000d0	f3 0f 10 86 ec
	00 00 00	 movss	 xmm0, DWORD PTR [esi+236]
  000d8	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000db	f3 0f 58 8e f0
	00 00 00	 addss	 xmm1, DWORD PTR [esi+240]
  000e3	0f 2f c1	 comiss	 xmm0, xmm1
  000e6	76 08		 jbe	 SHORT $LN8@ClearItemE

; 459  : 				lpObj->Mana = lpObj->AddMana + lpObj->MaxMana;

  000e8	f3 0f 11 8e ec
	00 00 00	 movss	 DWORD PTR [esi+236], xmm1
$LN8@ClearItemE:

; 460  : 
; 461  : 
; 462  : 			GCManaSend(lpObj->m_Index, (WORD)lpObj->Mana, -1, 0, lpObj->BP);

  000f0	0f b7 86 04 01
	00 00		 movzx	 eax, WORD PTR [esi+260]
  000f7	50		 push	 eax
  000f8	f3 0f 2c 86 ec
	00 00 00	 cvttss2si eax, DWORD PTR [esi+236]
  00100	6a 00		 push	 0
  00102	68 ff 00 00 00	 push	 255			; 000000ffH
  00107	0f b7 c0	 movzx	 eax, ax
  0010a	50		 push	 eax
  0010b	ff 36		 push	 DWORD PTR [esi]
  0010d	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHFEEG@Z	; GCManaSend
  00112	66 0f 6e 86 28
	01 00 00	 movd	 xmm0, DWORD PTR [esi+296]

; 463  : 			GCManaSend(lpObj->m_Index, (WORD)(lpObj->AddMana + lpObj->MaxMana), 0xFE, 0, lpObj->MaxBP + lpObj->AddBP);

  0011a	66 8b 86 0c 01
	00 00		 mov	 ax, WORD PTR [esi+268]
  00121	66 03 86 08 01
	00 00		 add	 ax, WORD PTR [esi+264]
  00128	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0012b	0f b7 c0	 movzx	 eax, ax
  0012e	50		 push	 eax
  0012f	6a 00		 push	 0
  00131	68 fe 00 00 00	 push	 254			; 000000feH
  00136	f3 0f 58 86 f0
	00 00 00	 addss	 xmm0, DWORD PTR [esi+240]
  0013e	f3 0f 2c c0	 cvttss2si eax, xmm0
  00142	0f b7 c0	 movzx	 eax, ax
  00145	50		 push	 eax
  00146	ff 36		 push	 DWORD PTR [esi]
  00148	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHFEEG@Z	; GCManaSend
  0014d	83 c4 28	 add	 esp, 40			; 00000028H

; 464  : 			break;

  00150	e9 b3 00 00 00	 jmp	 $LN18@ClearItemE
$LN9@ClearItemE:

; 465  : 
; 466  : 		case ADD_OPTION_ATTACK_DAMAGE:
; 467  : 			lpObj->m_AttackDamageMaxLeft -= iEffectValue;

  00155	8b 45 18	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  00158	29 86 58 06 00
	00		 sub	 DWORD PTR [esi+1624], eax
  0015e	29 86 5c 06 00
	00		 sub	 DWORD PTR [esi+1628], eax
  00164	29 86 60 06 00
	00		 sub	 DWORD PTR [esi+1632], eax
  0016a	29 86 64 06 00
	00		 sub	 DWORD PTR [esi+1636], eax

; 468  : 			lpObj->m_AttackDamageMinLeft -= iEffectValue;
; 469  : 			lpObj->m_AttackDamageMaxRight -= iEffectValue;
; 470  : 			lpObj->m_AttackDamageMinRight -= iEffectValue;
; 471  : 			lpObj->m_MagicDamageMin -= iEffectValue;
; 472  : 			lpObj->m_MagicDamageMax -= iEffectValue;
; 473  : 			break;

  00170	e9 87 00 00 00	 jmp	 $LN40@ClearItemE
$LN10@ClearItemE:

; 474  : 
; 475  : 		case ADD_OPTION_DEFENSE:
; 476  : 			lpObj->m_Defense -= iEffectValue * 10 / 20;

  00175	8b 4d 18	 mov	 ecx, DWORD PTR _iEffectValue$[ebp]
  00178	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0017d	f7 d9		 neg	 ecx
  0017f	c1 e1 02	 shl	 ecx, 2
  00182	2b 4d 18	 sub	 ecx, DWORD PTR _iEffectValue$[ebp]
  00185	03 c9		 add	 ecx, ecx
  00187	f7 e9		 imul	 ecx
  00189	c1 fa 03	 sar	 edx, 3
  0018c	8b c2		 mov	 eax, edx
  0018e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00191	03 c2		 add	 eax, edx
  00193	01 86 74 06 00
	00		 add	 DWORD PTR [esi+1652], eax

; 477  : 			break;

  00199	eb 6d		 jmp	 SHORT $LN18@ClearItemE
$LN11@ClearItemE:

; 478  : 
; 479  : 		case ADD_OPTION_STRENGTH:
; 480  : 			lpObj->AddStrength -= iEffectValue;

  0019b	66 8b 45 18	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  0019f	66 29 86 fc 00
	00 00		 sub	 WORD PTR [esi+252], ax

; 481  : 			break;

  001a6	eb 60		 jmp	 SHORT $LN18@ClearItemE
$LN12@ClearItemE:

; 482  : 
; 483  : 		case ADD_OPTION_DEXTERITY:
; 484  : 			lpObj->AddDexterity -= iEffectValue;

  001a8	66 8b 45 18	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  001ac	66 29 86 fe 00
	00 00		 sub	 WORD PTR [esi+254], ax

; 485  : 			break;

  001b3	eb 53		 jmp	 SHORT $LN18@ClearItemE
$LN13@ClearItemE:

; 486  : 
; 487  : 		case ADD_OPTION_VITALITY:
; 488  : 			lpObj->AddVitality -= iEffectValue;

  001b5	66 8b 45 18	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  001b9	66 29 86 00 01
	00 00		 sub	 WORD PTR [esi+256], ax

; 489  : 			break;

  001c0	eb 46		 jmp	 SHORT $LN18@ClearItemE
$LN14@ClearItemE:

; 490  : 
; 491  : 		case ADD_OPTION_ENERGY:
; 492  : 			lpObj->AddEnergy -= iEffectValue;

  001c2	66 8b 45 18	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  001c6	66 29 86 02 01
	00 00		 sub	 WORD PTR [esi+258], ax

; 493  : 			break;

  001cd	eb 39		 jmp	 SHORT $LN18@ClearItemE
$LN15@ClearItemE:

; 494  : 
; 495  : 		case ADD_OPTION_LEADERSHIP:
; 496  : 			lpObj->AddLeadership -= iEffectValue;

  001cf	66 8b 45 18	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  001d3	66 29 86 f6 00
	00 00		 sub	 WORD PTR [esi+246], ax

; 497  : 			break;

  001da	eb 2c		 jmp	 SHORT $LN18@ClearItemE
$LN16@ClearItemE:

; 498  : 		case ADD_OPTION_WEAPON_DAMAGE:
; 499  : 			lpObj->m_AttackDamageMaxLeft -= iEffectValue;

  001dc	8b 45 18	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  001df	29 86 58 06 00
	00		 sub	 DWORD PTR [esi+1624], eax
  001e5	29 86 5c 06 00
	00		 sub	 DWORD PTR [esi+1628], eax
  001eb	29 86 60 06 00
	00		 sub	 DWORD PTR [esi+1632], eax
  001f1	29 86 64 06 00
	00		 sub	 DWORD PTR [esi+1636], eax

; 500  : 			lpObj->m_AttackDamageMinLeft -= iEffectValue;
; 501  : 			lpObj->m_AttackDamageMaxRight -= iEffectValue;
; 502  : 			lpObj->m_AttackDamageMinRight -= iEffectValue;
; 503  : 			break;

  001f7	eb 0f		 jmp	 SHORT $LN18@ClearItemE
$LN17@ClearItemE:

; 504  : 		case ADD_OPTION_MAGIC_DAMAGE:
; 505  : 			lpObj->m_MagicDamageMin -= iEffectValue;

  001f9	8b 45 18	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
$LN40@ClearItemE:
  001fc	29 86 48 06 00
	00		 sub	 DWORD PTR [esi+1608], eax

; 506  : 			lpObj->m_MagicDamageMax -= iEffectValue;

  00202	29 86 4c 06 00
	00		 sub	 DWORD PTR [esi+1612], eax
$LN18@ClearItemE:

; 512  : 	}
; 513  : 
; 514  : 	GCSendEffectInfo(lpObj,iEffectOption,iOptionType,iEffectType,0);

  00208	6a 00		 push	 0
  0020a	57		 push	 edi
  0020b	ff 75 10	 push	 DWORD PTR _iOptionType$[ebp]
  0020e	ff 75 0c	 push	 DWORD PTR _iEffectOption$[ebp]
  00211	56		 push	 esi
  00212	e8 00 00 00 00	 call	 ?GCSendEffectInfo@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; GCSendEffectInfo
  00217	83 c4 14	 add	 esp, 20			; 00000014H

; 515  : 
; 516  : 	return true;

  0021a	b0 01		 mov	 al, 1
  0021c	5e		 pop	 esi
  0021d	5f		 pop	 edi

; 517  : }

  0021e	5d		 pop	 ebp
  0021f	c2 14 00	 ret	 20			; 00000014H
$LN19@ClearItemE:
  00222	5e		 pop	 esi

; 507  : 			break;
; 508  : 		case ADD_OPTION_UNK:
; 509  : 			break;
; 510  : 		default:
; 511  : 			return false;

  00223	32 c0		 xor	 al, al
  00225	5f		 pop	 edi

; 517  : }

  00226	5d		 pop	 ebp
  00227	c2 14 00	 ret	 20			; 00000014H
  0022a	66 90		 npad	 2
$LN42@ClearItemE:
  0022c	00 00 00 00	 DD	 $LN9@ClearItemE
  00230	00 00 00 00	 DD	 $LN10@ClearItemE
  00234	00 00 00 00	 DD	 $LN5@ClearItemE
  00238	00 00 00 00	 DD	 $LN7@ClearItemE
  0023c	00 00 00 00	 DD	 $LN19@ClearItemE
  00240	00 00 00 00	 DD	 $LN19@ClearItemE
  00244	00 00 00 00	 DD	 $LN19@ClearItemE
  00248	00 00 00 00	 DD	 $LN11@ClearItemE
  0024c	00 00 00 00	 DD	 $LN12@ClearItemE
  00250	00 00 00 00	 DD	 $LN13@ClearItemE
  00254	00 00 00 00	 DD	 $LN14@ClearItemE
  00258	00 00 00 00	 DD	 $LN15@ClearItemE
  0025c	00 00 00 00	 DD	 $LN16@ClearItemE
  00260	00 00 00 00	 DD	 $LN17@ClearItemE
  00264	00 00 00 00	 DD	 $LN18@ClearItemE
?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ENDP ; CItemAddOption::_ClearItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iEffectType$ = 12					; size = 4
_iEffectValue$ = 16					; size = 4
?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z PROC ; CItemAddOption::_SetItemEffect, COMDAT
; _this$ = ecx

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 367  : 	if ( iEffectType <= 0 )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iEffectType$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	7f 06		 jg	 SHORT $LN4@SetItemEff

; 368  : 		return false;

  0000a	32 c0		 xor	 al, al

; 433  : }

  0000c	5d		 pop	 ebp
  0000d	c2 0c 00	 ret	 12			; 0000000cH
$LN4@SetItemEff:

; 369  : 
; 370  : 	switch ( iEffectType )

  00010	83 c0 fe	 add	 eax, -2			; fffffffeH
  00013	56		 push	 esi
  00014	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  00017	0f 87 ee 01 00
	00		 ja	 $LN17@SetItemEff
  0001d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN40@SetItemEff[eax*4]
$LN5@SetItemEff:

; 371  : 	{
; 372  : 		case ADD_OPTION_LIFE:
; 373  : 			lpObj->AddLife += iEffectValue;

  00024	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00027	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  0002a	01 86 24 01 00
	00		 add	 DWORD PTR [esi+292], eax
  00030	66 0f 6e 86 24
	01 00 00	 movd	 xmm0, DWORD PTR [esi+292]

; 374  : 			GCReFillSend(lpObj->m_Index, (WORD)(lpObj->MaxLife + lpObj->AddLife), -2, 0, lpObj->iMaxShield + lpObj->iAddShield);

  00038	66 8b 86 34 01
	00 00		 mov	 ax, WORD PTR [esi+308]
  0003f	66 03 86 30 01
	00 00		 add	 ax, WORD PTR [esi+304]
  00046	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00049	0f b7 c0	 movzx	 eax, ax
  0004c	50		 push	 eax
  0004d	6a 00		 push	 0
  0004f	68 fe 00 00 00	 push	 254			; 000000feH
  00054	f3 0f 58 86 dc
	00 00 00	 addss	 xmm0, DWORD PTR [esi+220]
  0005c	f3 0f 2c c0	 cvttss2si eax, xmm0
  00060	0f b7 c0	 movzx	 eax, ax
  00063	50		 push	 eax
  00064	ff 36		 push	 DWORD PTR [esi]
  00066	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend

; 375  : 			GCReFillSend(lpObj->m_Index, (WORD)lpObj->Life, -1, 0, lpObj->iShield);

  0006b	0f b7 86 2c 01
	00 00		 movzx	 eax, WORD PTR [esi+300]
  00072	50		 push	 eax
  00073	f3 0f 2c 86 d8
	00 00 00	 cvttss2si eax, DWORD PTR [esi+216]
  0007b	6a 00		 push	 0
  0007d	68 ff 00 00 00	 push	 255			; 000000ffH
  00082	0f b7 c0	 movzx	 eax, ax
  00085	50		 push	 eax
  00086	ff 36		 push	 DWORD PTR [esi]
  00088	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHGEEG@Z ; GCReFillSend
  0008d	83 c4 28	 add	 esp, 40			; 00000028H

; 430  : 	}
; 431  : 
; 432  : 	return true;

  00090	b0 01		 mov	 al, 1
  00092	5e		 pop	 esi

; 433  : }

  00093	5d		 pop	 ebp
  00094	c2 0c 00	 ret	 12			; 0000000cH
$LN6@SetItemEff:

; 376  : 			break;
; 377  : 
; 378  : 		case ADD_OPTION_MANA:
; 379  : 			lpObj->AddMana += iEffectValue;

  00097	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  0009a	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  0009d	01 86 28 01 00
	00		 add	 DWORD PTR [esi+296], eax
  000a3	66 0f 6e 86 28
	01 00 00	 movd	 xmm0, DWORD PTR [esi+296]

; 380  : 			GCManaSend(lpObj->m_Index, (WORD)(lpObj->AddMana + lpObj->MaxMana), -2, 0, lpObj->MaxBP + lpObj->AddBP);

  000ab	66 8b 86 0c 01
	00 00		 mov	 ax, WORD PTR [esi+268]
  000b2	66 03 86 08 01
	00 00		 add	 ax, WORD PTR [esi+264]
  000b9	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000bc	0f b7 c0	 movzx	 eax, ax
  000bf	50		 push	 eax
  000c0	6a 00		 push	 0
  000c2	68 fe 00 00 00	 push	 254			; 000000feH
  000c7	f3 0f 58 86 f0
	00 00 00	 addss	 xmm0, DWORD PTR [esi+240]
  000cf	f3 0f 2c c0	 cvttss2si eax, xmm0
  000d3	0f b7 c0	 movzx	 eax, ax
  000d6	50		 push	 eax
  000d7	ff 36		 push	 DWORD PTR [esi]
  000d9	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHFEEG@Z	; GCManaSend

; 381  : 			GCManaSend(lpObj->m_Index, (WORD)lpObj->Mana, -1, 0, lpObj->BP);

  000de	0f b7 86 04 01
	00 00		 movzx	 eax, WORD PTR [esi+260]
  000e5	50		 push	 eax
  000e6	f3 0f 2c 86 ec
	00 00 00	 cvttss2si eax, DWORD PTR [esi+236]
  000ee	6a 00		 push	 0
  000f0	68 ff 00 00 00	 push	 255			; 000000ffH
  000f5	0f b7 c0	 movzx	 eax, ax
  000f8	50		 push	 eax
  000f9	ff 36		 push	 DWORD PTR [esi]
  000fb	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHFEEG@Z	; GCManaSend
  00100	83 c4 28	 add	 esp, 40			; 00000028H

; 430  : 	}
; 431  : 
; 432  : 	return true;

  00103	b0 01		 mov	 al, 1
  00105	5e		 pop	 esi

; 433  : }

  00106	5d		 pop	 ebp
  00107	c2 0c 00	 ret	 12			; 0000000cH
$LN7@SetItemEff:

; 382  : 			break;
; 383  : 
; 384  : 		case ADD_OPTION_ATTACK_DAMAGE:
; 385  : 			lpObj->m_AttackDamageMaxLeft += iEffectValue;

  0010a	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0010d	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  00110	5e		 pop	 esi
  00111	01 81 58 06 00
	00		 add	 DWORD PTR [ecx+1624], eax
  00117	01 81 5c 06 00
	00		 add	 DWORD PTR [ecx+1628], eax
  0011d	01 81 60 06 00
	00		 add	 DWORD PTR [ecx+1632], eax
  00123	01 81 64 06 00
	00		 add	 DWORD PTR [ecx+1636], eax

; 418  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;
; 419  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;
; 420  : 			lpObj->m_AttackDamageMinRight += iEffectValue;
; 421  : 			break;
; 422  : 		case ADD_OPTION_MAGIC_DAMAGE:
; 423  : 			lpObj->m_MagicDamageMin += iEffectValue;

  00129	01 81 48 06 00
	00		 add	 DWORD PTR [ecx+1608], eax

; 424  : 			lpObj->m_MagicDamageMax += iEffectValue;

  0012f	01 81 4c 06 00
	00		 add	 DWORD PTR [ecx+1612], eax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  00135	b0 01		 mov	 al, 1

; 433  : }

  00137	5d		 pop	 ebp
  00138	c2 0c 00	 ret	 12			; 0000000cH
$LN8@SetItemEff:

; 386  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;
; 387  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;
; 388  : 			lpObj->m_AttackDamageMinRight += iEffectValue;
; 389  : 			lpObj->m_MagicDamageMin += iEffectValue;
; 390  : 			lpObj->m_MagicDamageMax += iEffectValue;
; 391  : 			break;
; 392  : 		
; 393  : 		case ADD_OPTION_DEFENSE:
; 394  : 			lpObj->m_Defense += iEffectValue * 10 / 20;

  0013b	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  0013e	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]
  00141	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00144	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00149	03 c9		 add	 ecx, ecx
  0014b	f7 e9		 imul	 ecx
  0014d	c1 fa 03	 sar	 edx, 3
  00150	8b c2		 mov	 eax, edx
  00152	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00155	03 c2		 add	 eax, edx
  00157	01 86 74 06 00
	00		 add	 DWORD PTR [esi+1652], eax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  0015d	b0 01		 mov	 al, 1
  0015f	5e		 pop	 esi

; 433  : }

  00160	5d		 pop	 ebp
  00161	c2 0c 00	 ret	 12			; 0000000cH
$LN9@SetItemEff:

; 395  : 			break;
; 396  : 
; 397  : 		case ADD_OPTION_STRENGTH:
; 398  : 			lpObj->AddStrength += iEffectValue;

  00164	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00167	66 8b 45 10	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  0016b	5e		 pop	 esi
  0016c	66 01 81 fc 00
	00 00		 add	 WORD PTR [ecx+252], ax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  00173	b0 01		 mov	 al, 1

; 433  : }

  00175	5d		 pop	 ebp
  00176	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SetItemEff:

; 399  : 			break;
; 400  : 
; 401  : 		case ADD_OPTION_DEXTERITY:
; 402  : 			lpObj->AddDexterity += iEffectValue;

  00179	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  0017c	66 8b 45 10	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  00180	5e		 pop	 esi
  00181	66 01 81 fe 00
	00 00		 add	 WORD PTR [ecx+254], ax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  00188	b0 01		 mov	 al, 1

; 433  : }

  0018a	5d		 pop	 ebp
  0018b	c2 0c 00	 ret	 12			; 0000000cH
$LN11@SetItemEff:

; 403  : 			break;
; 404  : 
; 405  : 		case ADD_OPTION_VITALITY:
; 406  : 			lpObj->AddVitality += iEffectValue;

  0018e	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  00191	66 8b 45 10	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  00195	5e		 pop	 esi
  00196	66 01 81 00 01
	00 00		 add	 WORD PTR [ecx+256], ax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  0019d	b0 01		 mov	 al, 1

; 433  : }

  0019f	5d		 pop	 ebp
  001a0	c2 0c 00	 ret	 12			; 0000000cH
$LN12@SetItemEff:

; 407  : 			break;
; 408  : 
; 409  : 		case ADD_OPTION_ENERGY:
; 410  : 			lpObj->AddEnergy += iEffectValue;

  001a3	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001a6	66 8b 45 10	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  001aa	5e		 pop	 esi
  001ab	66 01 81 02 01
	00 00		 add	 WORD PTR [ecx+258], ax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  001b2	b0 01		 mov	 al, 1

; 433  : }

  001b4	5d		 pop	 ebp
  001b5	c2 0c 00	 ret	 12			; 0000000cH
$LN13@SetItemEff:

; 411  : 			break;
; 412  : 
; 413  : 		case ADD_OPTION_LEADERSHIP:
; 414  : 			lpObj->AddLeadership += iEffectValue;

  001b8	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001bb	66 8b 45 10	 mov	 ax, WORD PTR _iEffectValue$[ebp]
  001bf	5e		 pop	 esi
  001c0	66 01 81 f6 00
	00 00		 add	 WORD PTR [ecx+246], ax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  001c7	b0 01		 mov	 al, 1

; 433  : }

  001c9	5d		 pop	 ebp
  001ca	c2 0c 00	 ret	 12			; 0000000cH
$LN14@SetItemEff:

; 415  : 			break;
; 416  : 		case ADD_OPTION_WEAPON_DAMAGE:
; 417  : 			lpObj->m_AttackDamageMaxLeft += iEffectValue;

  001cd	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001d0	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  001d3	5e		 pop	 esi
  001d4	01 81 58 06 00
	00		 add	 DWORD PTR [ecx+1624], eax
  001da	01 81 5c 06 00
	00		 add	 DWORD PTR [ecx+1628], eax
  001e0	01 81 60 06 00
	00		 add	 DWORD PTR [ecx+1632], eax
  001e6	01 81 64 06 00
	00		 add	 DWORD PTR [ecx+1636], eax

; 430  : 	}
; 431  : 
; 432  : 	return true;

  001ec	b0 01		 mov	 al, 1

; 433  : }

  001ee	5d		 pop	 ebp
  001ef	c2 0c 00	 ret	 12			; 0000000cH
$LN15@SetItemEff:

; 418  : 			lpObj->m_AttackDamageMinLeft += iEffectValue;
; 419  : 			lpObj->m_AttackDamageMaxRight += iEffectValue;
; 420  : 			lpObj->m_AttackDamageMinRight += iEffectValue;
; 421  : 			break;
; 422  : 		case ADD_OPTION_MAGIC_DAMAGE:
; 423  : 			lpObj->m_MagicDamageMin += iEffectValue;

  001f2	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001f5	8b 45 10	 mov	 eax, DWORD PTR _iEffectValue$[ebp]
  001f8	01 81 48 06 00
	00		 add	 DWORD PTR [ecx+1608], eax

; 424  : 			lpObj->m_MagicDamageMax += iEffectValue;

  001fe	01 81 4c 06 00
	00		 add	 DWORD PTR [ecx+1612], eax
$LN16@SetItemEff:

; 430  : 	}
; 431  : 
; 432  : 	return true;

  00204	b0 01		 mov	 al, 1
  00206	5e		 pop	 esi

; 433  : }

  00207	5d		 pop	 ebp
  00208	c2 0c 00	 ret	 12			; 0000000cH
$LN17@SetItemEff:

; 425  : 			break;
; 426  : 		case ADD_OPTION_UNK:
; 427  : 			break;
; 428  : 		default:
; 429  : 			return false;

  0020b	32 c0		 xor	 al, al
  0020d	5e		 pop	 esi

; 433  : }

  0020e	5d		 pop	 ebp
  0020f	c2 0c 00	 ret	 12			; 0000000cH
  00212	66 90		 npad	 2
$LN40@SetItemEff:
  00214	00 00 00 00	 DD	 $LN7@SetItemEff
  00218	00 00 00 00	 DD	 $LN8@SetItemEff
  0021c	00 00 00 00	 DD	 $LN5@SetItemEff
  00220	00 00 00 00	 DD	 $LN6@SetItemEff
  00224	00 00 00 00	 DD	 $LN17@SetItemEff
  00228	00 00 00 00	 DD	 $LN17@SetItemEff
  0022c	00 00 00 00	 DD	 $LN17@SetItemEff
  00230	00 00 00 00	 DD	 $LN9@SetItemEff
  00234	00 00 00 00	 DD	 $LN10@SetItemEff
  00238	00 00 00 00	 DD	 $LN11@SetItemEff
  0023c	00 00 00 00	 DD	 $LN12@SetItemEff
  00240	00 00 00 00	 DD	 $LN13@SetItemEff
  00244	00 00 00 00	 DD	 $LN14@SetItemEff
  00248	00 00 00 00	 DD	 $LN15@SetItemEff
  0024c	00 00 00 00	 DD	 $LN16@SetItemEff
?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ENDP ; CItemAddOption::_SetItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z
_TEXT	SEGMENT
_iItemNumber$ = 8					; size = 4
?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z PROC ; CItemAddOption::_SearchItemEffect, COMDAT
; _this$ = ecx

; 553  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 554  : 	for ( int i=0;i<MAX_ITEM_ADD_OPTION;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iItemNumber$[ebp]
  00007	8d 51 0c	 lea	 edx, DWORD PTR [ecx+12]
  0000a	33 c0		 xor	 eax, eax
  0000c	0f 1f 40 00	 npad	 4
$LL4@SearchItem:

; 555  : 	{
; 556  : 		if ( m_ItemAddOption[i].iItemNumber == iItemNumber )

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 10		 je	 SHORT $LN8@SearchItem

; 554  : 	for ( int i=0;i<MAX_ITEM_ADD_OPTION;i++)

  00014	40		 inc	 eax
  00015	83 c2 20	 add	 edx, 32			; 00000020H
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@SearchItem

; 558  : 	}
; 559  : 
; 560  : 	return NULL;

  0001d	33 c0		 xor	 eax, eax
  0001f	5e		 pop	 esi

; 561  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN8@SearchItem:

; 557  : 			return &m_ItemAddOption[i];

  00024	c1 e0 05	 shl	 eax, 5
  00027	83 c0 04	 add	 eax, 4
  0002a	03 c1		 add	 eax, ecx
  0002c	5e		 pop	 esi

; 561  : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ENDP ; CItemAddOption::_SearchItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?GetItemEffect@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z
_TEXT	SEGMENT
_iItemCode$ = 8						; size = 4
?GetItemEffect@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z PROC ; CItemAddOption::GetItemEffect, COMDAT
; _this$ = ecx

; 603  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 605  : }

  00003	5d		 pop	 ebp

; 604  : 	return _SearchItemEffect(iItemCode);

  00004	e9 00 00 00 00	 jmp	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
?GetItemEffect@CItemAddOption@@QAEPAUITEMEFFECT@@H@Z ENDP ; CItemAddOption::GetItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?IsItemEffect@CItemAddOption@@QAEEH@Z
_TEXT	SEGMENT
_iItemCode$ = 8						; size = 4
?IsItemEffect@CItemAddOption@@QAEEH@Z PROC		; CItemAddOption::IsItemEffect, COMDAT
; _this$ = ecx

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 597  : 	if( _SearchItemEffect(iItemCode) == NULL )

  00003	ff 75 08	 push	 DWORD PTR _iItemCode$[ebp]
  00006	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  0000b	85 c0		 test	 eax, eax
  0000d	0f 95 c0	 setne	 al

; 598  : 		return FALSE;
; 599  : return TRUE;
; 600  : }

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?IsItemEffect@CItemAddOption@@QAEEH@Z ENDP		; CItemAddOption::IsItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?SetPeriodItemEffect2@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?SetPeriodItemEffect2@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::SetPeriodItemEffect2, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 209  : 	ITEMPERIOD_INFO * PeriodItemInfo = NULL;
; 210  : 	LPITEMEFFECT ItemEffect = NULL;
; 211  : 
; 212  : 	PeriodItemInfo = g_CashItemPeriodSystem.GetPeriodInfo(lpObj);

  00005	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CashItemPeriodSystem@@3VCCashItemPeriodSystem@@A ; g_CashItemPeriodSystem
  0000f	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
  00012	e8 00 00 00 00	 call	 ?GetPeriodInfo@CCashItemPeriodSystem@@QAEPAUITEMPERIOD_INFO@@PAUOBJECTSTRUCT@@@Z ; CCashItemPeriodSystem::GetPeriodInfo

; 213  : 
; 214  : 	if(PeriodItemInfo == FALSE)

  00017	85 c0		 test	 eax, eax
  00019	75 09		 jne	 SHORT $LN9@SetPeriodI

; 215  : 		return FALSE;

  0001b	32 c0		 xor	 al, al
  0001d	5e		 pop	 esi

; 256  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN9@SetPeriodI:
  00024	53		 push	 ebx
  00025	57		 push	 edi

; 216  : 
; 217  : 	for(int i = 0; i < SUBITEM_INFO_COUNT; i++)

  00026	8d 78 1c	 lea	 edi, DWORD PTR [eax+28]
  00029	bb 20 00 00 00	 mov	 ebx, 32			; 00000020H
  0002e	66 90		 npad	 2
$LL4@SetPeriodI:

; 218  : 	{
; 219  : 		if( PeriodItemInfo->ItemPeriod[i].btUsedItem == TRUE )

  00030	80 7f fc 01	 cmp	 BYTE PTR [edi-4], 1
  00034	75 68		 jne	 SHORT $LN2@SetPeriodI

; 220  : 		{
; 221  : 			ItemEffect = _SearchItemEffect(PeriodItemInfo->ItemPeriod[i].iItemCode);

  00036	ff 37		 push	 DWORD PTR [edi]
  00038	8b ce		 mov	 ecx, esi
  0003a	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  0003f	8b f0		 mov	 esi, eax

; 222  : 
; 223  : 			if(ItemEffect != NULL)

  00041	85 f6		 test	 esi, esi
  00043	74 56		 je	 SHORT $LN24@SetPeriodI

; 224  : 			{
; 225  : 				switch(ItemEffect->wEffectType1)

  00045	0f b7 56 02	 movzx	 edx, WORD PTR [esi+2]
  00049	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  0004c	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  0004f	77 0e		 ja	 SHORT $LN13@SetPeriodI
  00051	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN21@SetPeriodI[eax]
  00058	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN26@SetPeriodI[ecx*4]
$LN13@SetPeriodI:

; 226  : 				{
; 227  : 				case 1:
; 228  : 				case 4:
; 229  : 				case 5:
; 230  : 				case 9:
; 231  : 				case 10:
; 232  : 				case 11:
; 233  : 				case 12:
; 234  : 				case 13:
; 235  : 					break;
; 236  : 				default: _SetItemEffect(lpObj,ItemEffect->wEffectType1,ItemEffect->iEffectValue1);

  0005f	ff 76 14	 push	 DWORD PTR [esi+20]
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00065	52		 push	 edx
  00066	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00069	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN5@SetPeriodI:

; 237  : 				}
; 238  : 
; 239  : 				switch(ItemEffect->wEffectType2)

  0006e	0f b7 4e 04	 movzx	 ecx, WORD PTR [esi+4]
  00072	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00075	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00078	77 0e		 ja	 SHORT $LN15@SetPeriodI
  0007a	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN22@SetPeriodI[eax]
  00081	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN27@SetPeriodI[eax*4]
$LN15@SetPeriodI:

; 240  : 				{
; 241  : 				case 1:
; 242  : 				case 4:
; 243  : 				case 5:
; 244  : 				case 9:
; 245  : 				case 10:
; 246  : 				case 11:
; 247  : 				case 12:
; 248  : 				case 13:
; 249  : 					break;
; 250  : 				default: _SetItemEffect(lpObj,ItemEffect->wEffectType2,ItemEffect->iEffectValue2);

  00088	ff 76 18	 push	 DWORD PTR [esi+24]
  0008b	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  0008e	51		 push	 ecx
  0008f	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00092	8b ce		 mov	 ecx, esi
  00094	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
  00099	eb 03		 jmp	 SHORT $LN2@SetPeriodI
$LN24@SetPeriodI:
  0009b	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
$LN2@SetPeriodI:

; 216  : 
; 217  : 	for(int i = 0; i < SUBITEM_INFO_COUNT; i++)

  0009e	83 c7 10	 add	 edi, 16			; 00000010H
  000a1	83 eb 01	 sub	 ebx, 1
  000a4	75 8a		 jne	 SHORT $LL4@SetPeriodI

; 251  : 				}
; 252  : 			}
; 253  : 		}
; 254  : 	}
; 255  : 	return TRUE;

  000a6	5f		 pop	 edi
  000a7	5b		 pop	 ebx
  000a8	b0 01		 mov	 al, 1
  000aa	5e		 pop	 esi

; 256  : }

  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
  000b1	0f 1f 00	 npad	 3
$LN26@SetPeriodI:
  000b4	00 00 00 00	 DD	 $LN5@SetPeriodI
  000b8	00 00 00 00	 DD	 $LN13@SetPeriodI
$LN21@SetPeriodI:
  000bc	00		 DB	 0
  000bd	01		 DB	 1
  000be	01		 DB	 1
  000bf	00		 DB	 0
  000c0	00		 DB	 0
  000c1	01		 DB	 1
  000c2	01		 DB	 1
  000c3	01		 DB	 1
  000c4	00		 DB	 0
  000c5	00		 DB	 0
  000c6	00		 DB	 0
  000c7	00		 DB	 0
  000c8	00		 DB	 0
  000c9	0f 1f 00	 npad	 3
$LN27@SetPeriodI:
  000cc	00 00 00 00	 DD	 $LN24@SetPeriodI
  000d0	00 00 00 00	 DD	 $LN15@SetPeriodI
$LN22@SetPeriodI:
  000d4	00		 DB	 0
  000d5	01		 DB	 1
  000d6	01		 DB	 1
  000d7	00		 DB	 0
  000d8	00		 DB	 0
  000d9	01		 DB	 1
  000da	01		 DB	 1
  000db	01		 DB	 1
  000dc	00		 DB	 0
  000dd	00		 DB	 0
  000de	00		 DB	 0
  000df	00		 DB	 0
  000e0	00		 DB	 0
?SetPeriodItemEffect2@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::SetPeriodItemEffect2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?SetPeriodItemEffect1@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_lpObj$ = 8						; size = 4
?SetPeriodItemEffect1@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::SetPeriodItemEffect1, COMDAT
; _this$ = ecx

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 160  : 	ITEMPERIOD_INFO * PeriodItemInfo = NULL;
; 161  : 	LPITEMEFFECT ItemEffect = NULL;
; 162  : 
; 163  : 	PeriodItemInfo = g_CashItemPeriodSystem.GetPeriodInfo(lpObj);

  00005	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00008	8b f9		 mov	 edi, ecx
  0000a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CashItemPeriodSystem@@3VCCashItemPeriodSystem@@A ; g_CashItemPeriodSystem
  0000f	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  00012	e8 00 00 00 00	 call	 ?GetPeriodInfo@CCashItemPeriodSystem@@QAEPAUITEMPERIOD_INFO@@PAUOBJECTSTRUCT@@@Z ; CCashItemPeriodSystem::GetPeriodInfo

; 164  : 
; 165  : 	if(PeriodItemInfo == FALSE)

  00017	85 c0		 test	 eax, eax
  00019	75 09		 jne	 SHORT $LN9@SetPeriodI

; 166  : 		return FALSE;

  0001b	32 c0		 xor	 al, al
  0001d	5f		 pop	 edi

; 205  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN9@SetPeriodI:
  00024	53		 push	 ebx
  00025	56		 push	 esi

; 167  : 
; 168  : 	for(int i = 0; i < SUBITEM_INFO_COUNT; i++)

  00026	8d 70 1c	 lea	 esi, DWORD PTR [eax+28]
  00029	bb 20 00 00 00	 mov	 ebx, 32			; 00000020H
  0002e	66 90		 npad	 2
$LL4@SetPeriodI:

; 169  : 	{
; 170  : 		if( PeriodItemInfo->ItemPeriod[i].btUsedItem == TRUE )

  00030	80 7e fc 01	 cmp	 BYTE PTR [esi-4], 1
  00034	75 68		 jne	 SHORT $LN2@SetPeriodI

; 171  : 		{
; 172  : 			ItemEffect = _SearchItemEffect(PeriodItemInfo->ItemPeriod[i].iItemCode);

  00036	ff 36		 push	 DWORD PTR [esi]
  00038	8b cf		 mov	 ecx, edi
  0003a	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  0003f	8b f8		 mov	 edi, eax

; 173  : 
; 174  : 			if(ItemEffect != NULL)

  00041	85 ff		 test	 edi, edi
  00043	74 56		 je	 SHORT $LN23@SetPeriodI

; 175  : 			{
; 176  : 				switch(ItemEffect->wEffectType1)

  00045	0f b7 57 02	 movzx	 edx, WORD PTR [edi+2]
  00049	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
  0004c	83 f8 09	 cmp	 eax, 9
  0004f	77 1d		 ja	 SHORT $LN5@SetPeriodI
  00051	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN19@SetPeriodI[eax]
  00058	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN26@SetPeriodI[ecx*4]
$LN12@SetPeriodI:

; 177  : 				{
; 178  : 				case 4:
; 179  : 				case 5:
; 180  : 				case 9:
; 181  : 				case 10:
; 182  : 				case 11:
; 183  : 				case 12:
; 184  : 				case 13:
; 185  : 					_SetItemEffect(lpObj,ItemEffect->wEffectType1,ItemEffect->iEffectValue1);

  0005f	ff 77 14	 push	 DWORD PTR [edi+20]
  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00065	52		 push	 edx
  00066	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00069	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN5@SetPeriodI:

; 186  : 					break;
; 187  : 				}
; 188  : 
; 189  : 				switch(ItemEffect->wEffectType2)

  0006e	0f b7 4f 04	 movzx	 ecx, WORD PTR [edi+4]
  00072	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00075	83 f8 09	 cmp	 eax, 9
  00078	77 21		 ja	 SHORT $LN23@SetPeriodI
  0007a	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN20@SetPeriodI[eax]
  00081	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN27@SetPeriodI[eax*4]
$LN13@SetPeriodI:

; 190  : 				{
; 191  : 				case 4:
; 192  : 				case 5:
; 193  : 				case 9:
; 194  : 				case 10:
; 195  : 				case 11:
; 196  : 				case 12:
; 197  : 				case 13:
; 198  : 					_SetItemEffect(lpObj,ItemEffect->wEffectType2,ItemEffect->iEffectValue2);

  00088	ff 77 18	 push	 DWORD PTR [edi+24]
  0008b	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  0008e	51		 push	 ecx
  0008f	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
  00099	eb 03		 jmp	 SHORT $LN2@SetPeriodI
$LN23@SetPeriodI:
  0009b	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN2@SetPeriodI:

; 167  : 
; 168  : 	for(int i = 0; i < SUBITEM_INFO_COUNT; i++)

  0009e	83 c6 10	 add	 esi, 16			; 00000010H
  000a1	83 eb 01	 sub	 ebx, 1
  000a4	75 8a		 jne	 SHORT $LL4@SetPeriodI

; 199  : 					break;
; 200  : 				}
; 201  : 			}
; 202  : 		}
; 203  : 	}
; 204  : 	return TRUE;

  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	b0 01		 mov	 al, 1
  000aa	5f		 pop	 edi

; 205  : }

  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
  000b1	0f 1f 00	 npad	 3
$LN26@SetPeriodI:
  000b4	00 00 00 00	 DD	 $LN12@SetPeriodI
  000b8	00 00 00 00	 DD	 $LN5@SetPeriodI
$LN19@SetPeriodI:
  000bc	00		 DB	 0
  000bd	00		 DB	 0
  000be	01		 DB	 1
  000bf	01		 DB	 1
  000c0	01		 DB	 1
  000c1	00		 DB	 0
  000c2	00		 DB	 0
  000c3	00		 DB	 0
  000c4	00		 DB	 0
  000c5	00		 DB	 0
  000c6	66 90		 npad	 2
$LN27@SetPeriodI:
  000c8	00 00 00 00	 DD	 $LN13@SetPeriodI
  000cc	00 00 00 00	 DD	 $LN23@SetPeriodI
$LN20@SetPeriodI:
  000d0	00		 DB	 0
  000d1	00		 DB	 0
  000d2	01		 DB	 1
  000d3	01		 DB	 1
  000d4	01		 DB	 1
  000d5	00		 DB	 0
  000d6	00		 DB	 0
  000d7	00		 DB	 0
  000d8	00		 DB	 0
  000d9	00		 DB	 0
?SetPeriodItemEffect1@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::SetPeriodItemEffect1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?SearchItemOption@CItemAddOption@@QAEHH@Z
_TEXT	SEGMENT
_iItemNumber$ = 8					; size = 4
?SearchItemOption@CItemAddOption@@QAEHH@Z PROC		; CItemAddOption::SearchItemOption, COMDAT
; _this$ = ecx

; 582  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 583  : 	LPITEMEFFECT lpItemEffect = NULL;
; 584  : 	int ItemOption = -1;
; 585  : 
; 586  : 	lpItemEffect = _SearchItemEffect(iItemNumber);

  00003	ff 75 08	 push	 DWORD PTR _iItemNumber$[ebp]
  00006	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect

; 587  : 
; 588  : 	if(lpItemEffect == NULL)

  0000b	85 c0		 test	 eax, eax
  0000d	75 07		 jne	 SHORT $LN2@SearchItem

; 589  : 		return ItemOption;

  0000f	83 c8 ff	 or	 eax, -1

; 592  : return ItemOption;
; 593  : }

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
$LN2@SearchItem:

; 590  : 
; 591  : 	ItemOption = lpItemEffect->wOptionType;

  00016	0f b7 00	 movzx	 eax, WORD PTR [eax]

; 592  : return ItemOption;
; 593  : }

  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?SearchItemOption@CItemAddOption@@QAEHH@Z ENDP		; CItemAddOption::SearchItemOption
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?SearchItemEffectType@CItemAddOption@@QAE_NHPAH00@Z
_TEXT	SEGMENT
_iItemNumber$ = 8					; size = 4
_iEffectType1$ = 12					; size = 4
_iEffectType2$ = 16					; size = 4
_iItemPeriodDate$ = 20					; size = 4
?SearchItemEffectType@CItemAddOption@@QAE_NHPAH00@Z PROC ; CItemAddOption::SearchItemEffectType, COMDAT
; _this$ = ecx

; 566  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 567  : 	LPITEMEFFECT lpItemEffect = NULL;
; 568  : 
; 569  : 	lpItemEffect = _SearchItemEffect(iItemNumber);

  00003	ff 75 08	 push	 DWORD PTR _iItemNumber$[ebp]
  00006	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  0000b	8b d0		 mov	 edx, eax

; 570  : 
; 571  : 	if ( lpItemEffect == NULL )

  0000d	85 d2		 test	 edx, edx
  0000f	75 06		 jne	 SHORT $LN2@SearchItem

; 572  : 		return false;

  00011	32 c0		 xor	 al, al

; 579  : }

  00013	5d		 pop	 ebp
  00014	c2 10 00	 ret	 16			; 00000010H
$LN2@SearchItem:

; 573  : 
; 574  : 	*iEffectType1 = lpItemEffect->wEffectType1;

  00017	8b 45 0c	 mov	 eax, DWORD PTR _iEffectType1$[ebp]
  0001a	0f b7 4a 02	 movzx	 ecx, WORD PTR [edx+2]
  0001e	89 08		 mov	 DWORD PTR [eax], ecx

; 575  : 	*iEffectType2 = lpItemEffect->wEffectType2;

  00020	8b 45 10	 mov	 eax, DWORD PTR _iEffectType2$[ebp]
  00023	0f b7 4a 04	 movzx	 ecx, WORD PTR [edx+4]
  00027	89 08		 mov	 DWORD PTR [eax], ecx

; 576  : 	*iItemPeriodDate = lpItemEffect->iEffectValidTime;

  00029	8b 45 14	 mov	 eax, DWORD PTR _iItemPeriodDate$[ebp]
  0002c	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  0002f	89 08		 mov	 DWORD PTR [eax], ecx

; 577  : 
; 578  : 	return true;

  00031	b0 01		 mov	 al, 1

; 579  : }

  00033	5d		 pop	 ebp
  00034	c2 10 00	 ret	 16			; 00000010H
?SearchItemEffectType@CItemAddOption@@QAE_NHPAH00@Z ENDP ; CItemAddOption::SearchItemEffectType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?ClearItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HH@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iItemCode$ = 12					; size = 4
_iEffectOption$ = 16					; size = 4
?ClearItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HH@Z PROC ; CItemAddOption::ClearItemEffect, COMDAT
; _this$ = ecx

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 143  : 	LPITEMEFFECT lpItemEffect = NULL;
; 144  : 	
; 145  : 	lpItemEffect = _SearchItemEffect(iItemCode);

  00005	ff 75 0c	 push	 DWORD PTR _iItemCode$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000d	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00012	8b d8		 mov	 ebx, eax

; 146  : 
; 147  : 	if ( lpItemEffect == NULL )

  00014	85 db		 test	 ebx, ebx
  00016	75 09		 jne	 SHORT $LN2@ClearItemE

; 148  : 		return false;

  00018	32 c0		 xor	 al, al
  0001a	5b		 pop	 ebx

; 156  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 0c 00	 ret	 12			; 0000000cH
$LN2@ClearItemE:

; 149  : 
; 150  : 	_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType,

  00021	ff 73 14	 push	 DWORD PTR [ebx+20]
  00024	0f b7 43 02	 movzx	 eax, WORD PTR [ebx+2]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0002b	50		 push	 eax
  0002c	0f b7 03	 movzx	 eax, WORD PTR [ebx]
  0002f	50		 push	 eax
  00030	ff 75 10	 push	 DWORD PTR _iEffectOption$[ebp]
  00033	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00036	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 151  : 		lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);
; 152  : 
; 153  : 	_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType,

  0003b	ff 73 18	 push	 DWORD PTR [ebx+24]
  0003e	0f b7 43 04	 movzx	 eax, WORD PTR [ebx+4]
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00045	50		 push	 eax
  00046	0f b7 03	 movzx	 eax, WORD PTR [ebx]
  00049	50		 push	 eax
  0004a	ff 75 10	 push	 DWORD PTR _iEffectOption$[ebp]
  0004d	ff 75 08	 push	 DWORD PTR _lpObj$[ebp]
  00050	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 154  : 		lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);
; 155  : 	return true;

  00055	b0 01		 mov	 al, 1
  00057	5b		 pop	 ebx

; 156  : }

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 0c 00	 ret	 12			; 0000000cH
?ClearItemEffect@CItemAddOption@@QAEEPAUOBJECTSTRUCT@@HH@Z ENDP ; CItemAddOption::ClearItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iEffectOption$ = 12					; size = 4
?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z PROC ; CItemAddOption::ClearItemEffect, COMDAT
; _this$ = ecx

; 520  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 521  : 	LPITEMEFFECT lpItemEffect = NULL;
; 522  : 	
; 523  : 	lpItemEffect = GetCurrentEffectType(lpObj);

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	57		 push	 edi
  0000b	53		 push	 ebx
  0000c	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000f	e8 00 00 00 00	 call	 ?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ; CItemAddOption::GetCurrentEffectType
  00014	8b f8		 mov	 edi, eax

; 524  : 
; 525  : 	if ( lpItemEffect == NULL )

  00016	85 ff		 test	 edi, edi
  00018	75 0a		 jne	 SHORT $LN2@ClearItemE

; 526  : 		return false;

  0001a	5f		 pop	 edi
  0001b	32 c0		 xor	 al, al
  0001d	5b		 pop	 ebx

; 538  : }

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
$LN2@ClearItemE:

; 527  : 
; 528  : 	_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType,

  00024	ff 77 14	 push	 DWORD PTR [edi+20]
  00027	0f b7 47 02	 movzx	 eax, WORD PTR [edi+2]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0002e	50		 push	 eax
  0002f	0f b7 07	 movzx	 eax, WORD PTR [edi]
  00032	50		 push	 eax
  00033	ff 75 0c	 push	 DWORD PTR _iEffectOption$[ebp]
  00036	53		 push	 ebx
  00037	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 529  : 		lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);
; 530  : 
; 531  : 	_ClearItemEffect(lpObj, iEffectOption, lpItemEffect->wOptionType,

  0003c	ff 77 18	 push	 DWORD PTR [edi+24]
  0003f	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00046	50		 push	 eax
  00047	0f b7 07	 movzx	 eax, WORD PTR [edi]
  0004a	50		 push	 eax
  0004b	ff 75 0c	 push	 DWORD PTR _iEffectOption$[ebp]
  0004e	53		 push	 ebx
  0004f	e8 00 00 00 00	 call	 ?_ClearItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HHHH@Z ; CItemAddOption::_ClearItemEffect

; 532  : 		lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);
; 533  : 
; 534  : 	lpObj->m_wItemEffectType = 0;

  00054	33 c0		 xor	 eax, eax
  00056	66 89 83 62 24
	00 00		 mov	 WORD PTR [ebx+9314], ax

; 535  : 	lpObj->m_iItemEffectValidTime = 0;

  0005d	89 83 64 24 00
	00		 mov	 DWORD PTR [ebx+9316], eax

; 536  : 
; 537  : 	return true;

  00063	b0 01		 mov	 al, 1
  00065	5f		 pop	 edi
  00066	5b		 pop	 ebx

; 538  : }

  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z ENDP ; CItemAddOption::ClearItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?SetItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@HH@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_lpObj$ = 8						; size = 4
_iItemNumber$ = 12					; size = 4
_iItemUseTime$ = 16					; size = 4
?SetItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@HH@Z PROC ; CItemAddOption::SetItemEffect, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 307  : 	LPITEMEFFECT lpItemEffectBefore = NULL;
; 308  : 	LPITEMEFFECT lpItemEffect = NULL;
; 309  : 
; 310  : 	if ( lpObj == NULL )

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
  0000e	85 db		 test	 ebx, ebx
  00010	75 0a		 jne	 SHORT $LN2@SetItemEff
$LN16@SetItemEff:
  00012	5e		 pop	 esi

; 311  : 		return false;

  00013	32 c0		 xor	 al, al
  00015	5b		 pop	 ebx

; 360  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 0c 00	 ret	 12			; 0000000cH
$LN2@SetItemEff:

; 312  : 
; 313  : 	if ( lpObj->Type != OBJ_USER )

  0001c	80 7b 50 01	 cmp	 BYTE PTR [ebx+80], 1
  00020	75 f0		 jne	 SHORT $LN16@SetItemEff

; 314  : 		return false;
; 315  : 
; 316  : 	lpItemEffect = _SearchItemEffect(iItemNumber);

  00022	57		 push	 edi
  00023	ff 75 0c	 push	 DWORD PTR _iItemNumber$[ebp]
  00026	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  0002b	8b f8		 mov	 edi, eax

; 317  : 
; 318  : 	if ( lpItemEffect ==NULL )

  0002d	85 ff		 test	 edi, edi
  0002f	75 0b		 jne	 SHORT $LN4@SetItemEff

; 319  : 		return false;

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	32 c0		 xor	 al, al
  00035	5b		 pop	 ebx

; 360  : }

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 0c 00	 ret	 12			; 0000000cH
$LN4@SetItemEff:

; 320  : 
; 321  : 	lpItemEffectBefore = GetCurrentEffectType(lpObj);

  0003c	53		 push	 ebx
  0003d	8b ce		 mov	 ecx, esi
  0003f	e8 00 00 00 00	 call	 ?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ; CItemAddOption::GetCurrentEffectType

; 322  : 
; 323  : 	if ( lpItemEffectBefore != NULL )

  00044	85 c0		 test	 eax, eax
  00046	74 12		 je	 SHORT $LN6@SetItemEff

; 324  : 	{
; 325  : 		if ( lpItemEffectBefore->wOptionType == lpItemEffect->wOptionType )

  00048	66 8b 00	 mov	 ax, WORD PTR [eax]
  0004b	66 3b 07	 cmp	 ax, WORD PTR [edi]
  0004e	75 0a		 jne	 SHORT $LN6@SetItemEff

; 326  : 		{
; 327  : 			ClearItemEffect(lpObj, 2);

  00050	6a 02		 push	 2
  00052	53		 push	 ebx
  00053	8b ce		 mov	 ecx, esi
  00055	e8 00 00 00 00	 call	 ?ClearItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@H@Z ; CItemAddOption::ClearItemEffect
$LN6@SetItemEff:

; 328  : 		}
; 329  : 	}
; 330  : 
; 331  : 	if ( iItemUseTime > 0 )
; 332  : 	{
; 333  : 		_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  0005a	ff 77 14	 push	 DWORD PTR [edi+20]
  0005d	0f b7 47 02	 movzx	 eax, WORD PTR [edi+2]
  00061	8b ce		 mov	 ecx, esi
  00063	50		 push	 eax
  00064	53		 push	 ebx
  00065	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
  0006a	83 7d 10 00	 cmp	 DWORD PTR _iItemUseTime$[ebp], 0

; 334  : 		SendItemUse(lpObj,iItemNumber,lpItemEffect->wOptionType,lpItemEffect->wEffectType1,lpItemEffect->iEffectValue1,iItemUseTime * 60);

  0006e	0f b7 47 02	 movzx	 eax, WORD PTR [edi+2]
  00072	7e 38		 jle	 SHORT $LN7@SetItemEff
  00074	8b 75 10	 mov	 esi, DWORD PTR _iItemUseTime$[ebp]
  00077	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0007a	c1 e6 04	 shl	 esi, 4
  0007d	2b 75 10	 sub	 esi, DWORD PTR _iItemUseTime$[ebp]
  00080	c1 e6 02	 shl	 esi, 2
  00083	56		 push	 esi
  00084	ff 77 14	 push	 DWORD PTR [edi+20]
  00087	50		 push	 eax
  00088	0f b7 07	 movzx	 eax, WORD PTR [edi]
  0008b	50		 push	 eax
  0008c	ff 75 0c	 push	 DWORD PTR _iItemNumber$[ebp]
  0008f	53		 push	 ebx
  00090	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse

; 335  : 		_SetItemEffect(lpObj, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);

  00095	ff 77 18	 push	 DWORD PTR [edi+24]
  00098	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0009f	50		 push	 eax
  000a0	53		 push	 ebx
  000a1	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect

; 336  : 		SendItemUse(lpObj,iItemNumber,lpItemEffect->wOptionType,lpItemEffect->wEffectType2,lpItemEffect->iEffectValue2,iItemUseTime * 60);

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000a9	56		 push	 esi

; 337  : 	}
; 338  : 	else

  000aa	eb 2b		 jmp	 SHORT $LN14@SetItemEff
$LN7@SetItemEff:

; 339  : 	{
; 340  : 		_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);
; 341  : 		SendItemUse(lpObj,iItemNumber,lpItemEffect->wOptionType,lpItemEffect->wEffectType1,lpItemEffect->iEffectValue1,lpItemEffect->iEffectValidTime);

  000ac	ff 77 1c	 push	 DWORD PTR [edi+28]
  000af	8b ce		 mov	 ecx, esi
  000b1	ff 77 14	 push	 DWORD PTR [edi+20]
  000b4	50		 push	 eax
  000b5	0f b7 07	 movzx	 eax, WORD PTR [edi]
  000b8	50		 push	 eax
  000b9	ff 75 0c	 push	 DWORD PTR _iItemNumber$[ebp]
  000bc	53		 push	 ebx
  000bd	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse

; 342  : 		_SetItemEffect(lpObj, lpItemEffect->wEffectType2, lpItemEffect->iEffectValue2);

  000c2	ff 77 18	 push	 DWORD PTR [edi+24]
  000c5	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  000c9	8b ce		 mov	 ecx, esi
  000cb	50		 push	 eax
  000cc	53		 push	 ebx
  000cd	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect

; 343  : 		SendItemUse(lpObj,iItemNumber,lpItemEffect->wOptionType,lpItemEffect->wEffectType2,lpItemEffect->iEffectValue2,lpItemEffect->iEffectValidTime);

  000d2	ff 77 1c	 push	 DWORD PTR [edi+28]
  000d5	8b ce		 mov	 ecx, esi
$LN14@SetItemEff:
  000d7	ff 77 18	 push	 DWORD PTR [edi+24]
  000da	0f b7 47 04	 movzx	 eax, WORD PTR [edi+4]
  000de	50		 push	 eax
  000df	0f b7 07	 movzx	 eax, WORD PTR [edi]
  000e2	50		 push	 eax
  000e3	ff 75 0c	 push	 DWORD PTR _iItemNumber$[ebp]
  000e6	53		 push	 ebx
  000e7	e8 00 00 00 00	 call	 ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ; CItemAddOption::SendItemUse

; 344  : 	}
; 345  : 
; 346  : 	if ( lpItemEffect->wOptionType == 1  )

  000ec	66 83 3f 01	 cmp	 WORD PTR [edi], 1
  000f0	75 36		 jne	 SHORT $LN11@SetItemEff

; 347  : 	{
; 348  : 		if(iItemUseTime > 0)

  000f2	8b 4d 10	 mov	 ecx, DWORD PTR _iItemUseTime$[ebp]

; 349  : 		{
; 350  : 			lpObj->m_wItemEffectType = lpItemEffect->iItemNumber;

  000f5	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  000f9	66 89 83 62 24
	00 00		 mov	 WORD PTR [ebx+9314], ax
  00100	85 c9		 test	 ecx, ecx
  00102	7e 1b		 jle	 SHORT $LN10@SetItemEff

; 351  : 			lpObj->m_iItemEffectValidTime = iItemUseTime * 60;

  00104	8b c1		 mov	 eax, ecx
  00106	c1 e0 04	 shl	 eax, 4
  00109	2b c1		 sub	 eax, ecx
  0010b	5f		 pop	 edi
  0010c	c1 e0 02	 shl	 eax, 2

; 352  : 		}
; 353  : 		else
; 354  : 		{
; 355  : 			lpObj->m_wItemEffectType = lpItemEffect->iItemNumber;
; 356  : 			lpObj->m_iItemEffectValidTime = lpItemEffect->iEffectValidTime;

  0010f	89 83 64 24 00
	00		 mov	 DWORD PTR [ebx+9316], eax

; 357  : 		}
; 358  : 	}
; 359  : 	return true;

  00115	b0 01		 mov	 al, 1
  00117	5e		 pop	 esi
  00118	5b		 pop	 ebx

; 360  : }

  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SetItemEff:

; 352  : 		}
; 353  : 		else
; 354  : 		{
; 355  : 			lpObj->m_wItemEffectType = lpItemEffect->iItemNumber;
; 356  : 			lpObj->m_iItemEffectValidTime = lpItemEffect->iEffectValidTime;

  0011f	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00122	89 83 64 24 00
	00		 mov	 DWORD PTR [ebx+9316], eax
$LN11@SetItemEff:

; 357  : 		}
; 358  : 	}
; 359  : 	return true;

  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	b0 01		 mov	 al, 1
  0012c	5b		 pop	 ebx

; 360  : }

  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 0c 00	 ret	 12			; 0000000cH
?SetItemEffect@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@HH@Z ENDP ; CItemAddOption::SetItemEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
_iItemNumber$ = 12					; size = 4
_iOptionType$ = 16					; size = 4
_iEffectType$ = 20					; size = 4
_iEffectValue$ = 24					; size = 4
_iValidTime$ = 28					; size = 4
?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z PROC ; CItemAddOption::SendItemUse, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 296  : 	if( lpObj == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 1f		 je	 SHORT $LN4@SendItemUs

; 297  : 		return;
; 298  : 
; 299  : 	if( iItemNumber == 0 || iEffectType == 0 )

  0000a	83 7d 0c 00	 cmp	 DWORD PTR _iItemNumber$[ebp], 0
  0000e	74 19		 je	 SHORT $LN4@SendItemUs
  00010	8b 4d 14	 mov	 ecx, DWORD PTR _iEffectType$[ebp]
  00013	85 c9		 test	 ecx, ecx
  00015	74 12		 je	 SHORT $LN4@SendItemUs

; 300  : 		return;
; 301  : 
; 302  : 	GCSendEffectInfo(lpObj,0,iOptionType,iEffectType,iValidTime);

  00017	ff 75 1c	 push	 DWORD PTR _iValidTime$[ebp]
  0001a	51		 push	 ecx
  0001b	ff 75 10	 push	 DWORD PTR _iOptionType$[ebp]
  0001e	6a 00		 push	 0
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?GCSendEffectInfo@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; GCSendEffectInfo
  00026	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@SendItemUs:

; 303  : }

  00029	5d		 pop	 ebp
  0002a	c2 18 00	 ret	 24			; 00000018H
?SendItemUse@CItemAddOption@@QAEXPAUOBJECTSTRUCT@@HHHHH@Z ENDP ; CItemAddOption::SendItemUse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?NextSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?NextSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::NextSetItemLastEffectForHallowin, COMDAT
; _this$ = ecx

; 277  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 278  : 	LPITEMEFFECT lpItemEffect = NULL;
; 279  : 	int iItemEffectType = lpObj->m_wItemEffectType;

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	0f b7 87 62 24
	00 00		 movzx	 eax, WORD PTR [edi+9314]

; 280  : 
; 281  : 	lpItemEffect = this->_SearchItemEffect(iItemEffectType);

  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00017	8b d0		 mov	 edx, eax

; 282  : 
; 283  : 	if ( lpItemEffect == NULL )

  00019	85 d2		 test	 edx, edx
  0001b	75 08		 jne	 SHORT $LN2@NextSetIte

; 284  : 		return false;

  0001d	5f		 pop	 edi
  0001e	32 c0		 xor	 al, al
  00020	5e		 pop	 esi

; 292  : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
$LN2@NextSetIte:

; 285  : 
; 286  : 	if ( lpItemEffect->wEffectType1 != ADD_OPTION_LIFE && lpItemEffect->wEffectType1 != ADD_OPTION_MANA )

  00025	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00029	83 f8 04	 cmp	 eax, 4
  0002c	74 11		 je	 SHORT $LN3@NextSetIte
  0002e	83 f8 05	 cmp	 eax, 5
  00031	74 0c		 je	 SHORT $LN3@NextSetIte

; 287  : 	{
; 288  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  00033	ff 72 14	 push	 DWORD PTR [edx+20]
  00036	8b ce		 mov	 ecx, esi
  00038	50		 push	 eax
  00039	57		 push	 edi
  0003a	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN3@NextSetIte:

; 289  : 	}
; 290  : 
; 291  : 	return true;

  0003f	5f		 pop	 edi
  00040	b0 01		 mov	 al, 1
  00042	5e		 pop	 esi

; 292  : }

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?NextSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::NextSetItemLastEffectForHallowin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?PrevSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?PrevSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::PrevSetItemLastEffectForHallowin, COMDAT
; _this$ = ecx

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 260  : 	LPITEMEFFECT lpItemEffect = NULL;
; 261  : 	int iItemEffectType = lpObj->m_wItemEffectType;

  00005	8b 7d 08	 mov	 edi, DWORD PTR _lpObj$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	0f b7 87 62 24
	00 00		 movzx	 eax, WORD PTR [edi+9314]

; 262  : 
; 263  : 	lpItemEffect = this->_SearchItemEffect(iItemEffectType);

  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
  00017	8b d0		 mov	 edx, eax

; 264  : 
; 265  : 	if ( lpItemEffect == NULL )

  00019	85 d2		 test	 edx, edx
  0001b	75 08		 jne	 SHORT $LN2@PrevSetIte

; 266  : 		return false;

  0001d	5f		 pop	 edi
  0001e	32 c0		 xor	 al, al
  00020	5e		 pop	 esi

; 274  : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
$LN2@PrevSetIte:

; 267  : 
; 268  : 	if ( lpItemEffect->wEffectType1 == ADD_OPTION_LIFE || lpItemEffect->wEffectType1 == ADD_OPTION_MANA )

  00025	0f b7 42 02	 movzx	 eax, WORD PTR [edx+2]
  00029	83 f8 04	 cmp	 eax, 4
  0002c	74 05		 je	 SHORT $LN4@PrevSetIte
  0002e	83 f8 05	 cmp	 eax, 5
  00031	75 0c		 jne	 SHORT $LN3@PrevSetIte
$LN4@PrevSetIte:

; 269  : 	{
; 270  : 		this->_SetItemEffect(lpObj, lpItemEffect->wEffectType1, lpItemEffect->iEffectValue1);

  00033	ff 72 14	 push	 DWORD PTR [edx+20]
  00036	8b ce		 mov	 ecx, esi
  00038	50		 push	 eax
  00039	57		 push	 edi
  0003a	e8 00 00 00 00	 call	 ?_SetItemEffect@CItemAddOption@@AAE_NPAUOBJECTSTRUCT@@HH@Z ; CItemAddOption::_SetItemEffect
$LN3@PrevSetIte:

; 271  : 	}
; 272  : 
; 273  : 	return true;

  0003f	5f		 pop	 edi
  00040	b0 01		 mov	 al, 1
  00042	5e		 pop	 esi

; 274  : }

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?PrevSetItemLastEffectForHallowin@CItemAddOption@@QAE_NPAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::PrevSetItemLastEffectForHallowin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_lpObj$ = 8						; size = 4
?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z PROC ; CItemAddOption::GetCurrentEffectType, COMDAT
; _this$ = ecx

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 543  : 	if ( lpObj->m_wItemEffectType <= 0 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00006	0f b7 80 62 24
	00 00		 movzx	 eax, WORD PTR [eax+9314]
  0000d	66 85 c0	 test	 ax, ax
  00010	75 06		 jne	 SHORT $LN2@GetCurrent

; 544  : 		return NULL;

  00012	33 c0		 xor	 eax, eax

; 547  : }

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
$LN2@GetCurrent:

; 545  : 
; 546  : 	return _SearchItemEffect(lpObj->m_wItemEffectType);

  00018	89 45 08	 mov	 DWORD PTR _lpObj$[ebp], eax

; 547  : }

  0001b	5d		 pop	 ebp

; 545  : 
; 546  : 	return _SearchItemEffect(lpObj->m_wItemEffectType);

  0001c	e9 00 00 00 00	 jmp	 ?_SearchItemEffect@CItemAddOption@@AAEPAUITEMEFFECT@@H@Z ; CItemAddOption::_SearchItemEffect
?GetCurrentEffectType@CItemAddOption@@QAEPAUITEMEFFECT@@PAUOBJECTSTRUCT@@@Z ENDP ; CItemAddOption::GetCurrentEffectType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?Initialize@CItemAddOption@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CItemAddOption@@QAEXXZ PROC			; CItemAddOption::Initialize, COMDAT
; _this$ = ecx

; 128  : 	for ( int i=0;i<MAX_ITEM_ADD_OPTION;i++)

  00000	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  00003	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00008	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@Initialize:

; 129  : 	{
; 130  : 		m_ItemAddOption[i].iItemNumber = 0;
; 131  : 		m_ItemAddOption[i].iItemType = 0;
; 132  : 		m_ItemAddOption[i].iItemIndex = 0;
; 133  : 		m_ItemAddOption[i].wEffectType1 = 0;

  00010	33 d2		 xor	 edx, edx
  00012	c7 40 fc 00 00
	00 00		 mov	 DWORD PTR [eax-4], 0
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0001f	8d 40 20	 lea	 eax, DWORD PTR [eax+32]
  00022	c7 40 e4 00 00
	00 00		 mov	 DWORD PTR [eax-28], 0
  00029	89 50 d6	 mov	 DWORD PTR [eax-42], edx

; 134  : 		m_ItemAddOption[i].iEffectValue1 = 0;

  0002c	89 50 e8	 mov	 DWORD PTR [eax-24], edx

; 135  : 		m_ItemAddOption[i].wEffectType2 = 0;
; 136  : 		m_ItemAddOption[i].iEffectValue2 = 0;

  0002f	89 50 ec	 mov	 DWORD PTR [eax-20], edx

; 137  : 		m_ItemAddOption[i].iEffectValidTime = 0;

  00032	89 50 f0	 mov	 DWORD PTR [eax-16], edx
  00035	83 e9 01	 sub	 ecx, 1
  00038	75 d6		 jne	 SHORT $LL4@Initialize

; 138  : 	}
; 139  : }

  0003a	c3		 ret	 0
?Initialize@CItemAddOption@@QAEXXZ ENDP			; CItemAddOption::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?Load@CItemAddOption@@QAEXPAD@Z
_TEXT	SEGMENT
_this$1$ = -24						; size = 4
_iItemOption1$1$ = -20					; size = 4
_iItemIndex$1$ = -16					; size = 4
_iItemAddOptionIndex$1$ = -12				; size = 4
_iItemType$1$ = -8					; size = 4
_iType$1$ = -4						; size = 4
tv557 = 8						; size = 4
_chFileName$ = 8					; size = 4
?Load@CItemAddOption@@QAEXPAD@Z PROC			; CItemAddOption::Load, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 75 e8	 mov	 DWORD PTR _this$1$[ebp], esi

; 30   : 	SMDToken Token;
; 31   : 
; 32   : 	this->Initialize();

  0000c	e8 00 00 00 00	 call	 ?Initialize@CItemAddOption@@QAEXXZ ; CItemAddOption::Initialize

; 33   : 
; 34   : 	SMDFile = fopen(chFileName, "r");

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00016	ff 75 08	 push	 DWORD PTR _chFileName$[ebp]
  00019	e8 00 00 00 00	 call	 _fopen
  0001e	83 c4 08	 add	 esp, 8
  00021	a3 00 00 00 00	 mov	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A, eax

; 35   : 
; 36   : 	if ( SMDFile == NULL )

  00026	85 c0		 test	 eax, eax
  00028	0f 84 a9 01 00
	00		 je	 $LN1@Load

; 37   : 		return;
; 38   : 
; 39   : 	int iItemAddOptionIndex = 0;

  0002e	53		 push	 ebx
  0002f	33 db		 xor	 ebx, ebx
  00031	89 5d f4	 mov	 DWORD PTR _iItemAddOptionIndex$1$[ebp], ebx

; 40   : 
; 41   : 	while ( true )
; 42   : 	{
; 43   : 		Token = (SMDToken)GetToken();

  00034	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 44   : 
; 45   : 		if ( Token == END )

  00039	83 f8 02	 cmp	 eax, 2
  0003c	0f 84 86 01 00
	00		 je	 $LN20@Load
  00042	57		 push	 edi
$LL2@Load:

; 46   : 			break;
; 47   : 
; 48   : 		if ( Token == NUMBER )

  00043	83 f8 01	 cmp	 eax, 1
  00046	0f 85 6d 01 00
	00		 jne	 $LN18@Load

; 49   : 		{
; 50   : 			int iType = (int)TokenNumber;

  0004c	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?TokenNumber@@3MA
  00054	8b c3		 mov	 eax, ebx
  00056	c1 e0 05	 shl	 eax, 5
  00059	83 c0 0c	 add	 eax, 12			; 0000000cH
  0005c	03 c6		 add	 eax, esi
  0005e	89 45 08	 mov	 DWORD PTR tv557[ebp], eax
  00061	89 4d fc	 mov	 DWORD PTR _iType$1$[ebp], ecx
$LL4@Load:

; 51   : 
; 52   : 			while ( true )
; 53   : 			{
; 54   : 				if ( iType == 0 )

  00064	85 c9		 test	 ecx, ecx
  00066	75 41		 jne	 SHORT $LN10@Load

; 55   : 				{
; 56   : 					Token = (SMDToken)GetToken();

  00068	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 57   : 
; 58   : 					if ( strcmp("end", TokenString) == 0 )

  0006d	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  00072	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL25@Load:
  00077	8a 10		 mov	 dl, BYTE PTR [eax]
  00079	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0007b	75 1a		 jne	 SHORT $LN26@Load
  0007d	84 d2		 test	 dl, dl
  0007f	74 12		 je	 SHORT $LN27@Load
  00081	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00084	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00087	75 0e		 jne	 SHORT $LN26@Load
  00089	83 c0 02	 add	 eax, 2
  0008c	83 c1 02	 add	 ecx, 2
  0008f	84 d2		 test	 dl, dl
  00091	75 e4		 jne	 SHORT $LL25@Load
$LN27@Load:
  00093	33 c0		 xor	 eax, eax
  00095	eb 05		 jmp	 SHORT $LN28@Load
$LN26@Load:
  00097	1b c0		 sbb	 eax, eax
  00099	83 c8 01	 or	 eax, 1
$LN28@Load:
  0009c	85 c0		 test	 eax, eax
  0009e	0f 84 12 01 00
	00		 je	 $LN33@Load

; 59   : 						break;
; 60   : 				}
; 61   : 
; 62   : 				if ( iType >= 1 )

  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _iType$1$[ebp]
  000a7	eb bb		 jmp	 SHORT $LL4@Load
$LN10@Load:
  000a9	83 f9 01	 cmp	 ecx, 1
  000ac	7c b6		 jl	 SHORT $LL4@Load

; 63   : 				{
; 64   : 					int iItemNumber = 0;
; 65   : 					int iItemType = 0;
; 66   : 					int iItemIndex = 0;
; 67   : 					int iItemOption1 = 0;
; 68   : 					int iItemValue1 = 0;
; 69   : 					int iItemOption2 = 0;
; 70   : 					int iItemValue2 = 0;
; 71   : 					int iItemValidTime = 0;
; 72   : 
; 73   : 					Token = (SMDToken)GetToken();

  000ae	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 74   : 
; 75   : 					if ( !strcmp("end", TokenString))

  000b3	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  000b8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  000bd	0f 1f 00	 npad	 3
$LL29@Load:
  000c0	8a 10		 mov	 dl, BYTE PTR [eax]
  000c2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000c4	75 1a		 jne	 SHORT $LN30@Load
  000c6	84 d2		 test	 dl, dl
  000c8	74 12		 je	 SHORT $LN31@Load
  000ca	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000cd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000d0	75 0e		 jne	 SHORT $LN30@Load
  000d2	83 c0 02	 add	 eax, 2
  000d5	83 c1 02	 add	 ecx, 2
  000d8	84 d2		 test	 dl, dl
  000da	75 e4		 jne	 SHORT $LL29@Load
$LN31@Load:
  000dc	33 c0		 xor	 eax, eax
  000de	eb 05		 jmp	 SHORT $LN32@Load
$LN30@Load:
  000e0	1b c0		 sbb	 eax, eax
  000e2	83 c8 01	 or	 eax, 1
$LN32@Load:
  000e5	85 c0		 test	 eax, eax
  000e7	0f 84 c9 00 00
	00		 je	 $LN33@Load

; 76   : 						break;
; 77   : 
; 78   : 					iItemType = (int)TokenNumber;

  000ed	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  000f5	89 45 f8	 mov	 DWORD PTR _iItemType$1$[ebp], eax

; 79   : 
; 80   : 					Token = (SMDToken)GetToken();

  000f8	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 81   : 					iItemIndex = (int)TokenNumber;

  000fd	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  00105	89 45 f0	 mov	 DWORD PTR _iItemIndex$1$[ebp], eax

; 82   : 
; 83   : 					Token = (SMDToken)GetToken();

  00108	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 84   : 					iItemOption1 = (int)TokenNumber;					

  0010d	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  00115	89 45 ec	 mov	 DWORD PTR _iItemOption1$1$[ebp], eax

; 85   : 
; 86   : 					Token = (SMDToken)GetToken();

  00118	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 87   : 					iItemValue1 = (int)TokenNumber;

  0011d	f3 0f 2c 1d 00
	00 00 00	 cvttss2si ebx, DWORD PTR ?TokenNumber@@3MA

; 88   : 
; 89   : 					Token = (SMDToken)GetToken();

  00125	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 90   : 					iItemOption2 = (int)TokenNumber;

  0012a	f3 0f 2c 3d 00
	00 00 00	 cvttss2si edi, DWORD PTR ?TokenNumber@@3MA

; 91   : 
; 92   : 					Token = (SMDToken)GetToken();

  00132	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 93   : 					iItemValue2 = (int)TokenNumber;

  00137	f3 0f 2c 35 00
	00 00 00	 cvttss2si esi, DWORD PTR ?TokenNumber@@3MA

; 94   : 
; 95   : 					Token = (SMDToken)GetToken();

  0013f	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 96   : 					iItemValidTime = (int)TokenNumber;
; 97   : 
; 98   : 
; 99   : 					iItemNumber = ITEMGET(iItemType, iItemIndex);
; 100  : 					m_ItemAddOption[iItemAddOptionIndex].wOptionType = iType;

  00144	8b 45 08	 mov	 eax, DWORD PTR tv557[ebp]
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _iType$1$[ebp]

; 101  : 					m_ItemAddOption[iItemAddOptionIndex].iItemNumber = iItemNumber;

  0014a	8b 55 08	 mov	 edx, DWORD PTR tv557[ebp]
  0014d	66 89 48 f8	 mov	 WORD PTR [eax-8], cx
  00151	8b 45 f8	 mov	 eax, DWORD PTR _iItemType$1$[ebp]
  00154	8b 4d f0	 mov	 ecx, DWORD PTR _iItemIndex$1$[ebp]
  00157	c1 e0 09	 shl	 eax, 9
  0015a	03 c1		 add	 eax, ecx
  0015c	89 02		 mov	 DWORD PTR [edx], eax

; 102  : 					m_ItemAddOption[iItemAddOptionIndex].iItemType = iItemType;

  0015e	8b 45 08	 mov	 eax, DWORD PTR tv557[ebp]
  00161	8b 55 f8	 mov	 edx, DWORD PTR _iItemType$1$[ebp]
  00164	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 103  : 					m_ItemAddOption[iItemAddOptionIndex].iItemIndex = iItemIndex;

  00167	8b d0		 mov	 edx, eax

; 104  : 					m_ItemAddOption[iItemAddOptionIndex].wEffectType1 = iItemOption1;

  00169	8b 45 ec	 mov	 eax, DWORD PTR _iItemOption1$1$[ebp]
  0016c	66 89 42 fa	 mov	 WORD PTR [edx-6], ax
  00170	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA

; 105  : 					m_ItemAddOption[iItemAddOptionIndex].iEffectValue1 = iItemValue1;

  00178	89 5a 0c	 mov	 DWORD PTR [edx+12], ebx

; 106  : 					m_ItemAddOption[iItemAddOptionIndex].wEffectType2 = iItemOption2;
; 107  : 					m_ItemAddOption[iItemAddOptionIndex].iEffectValue2 = iItemValue2;
; 108  : 					m_ItemAddOption[iItemAddOptionIndex].iEffectValidTime = iItemValidTime;
; 109  : 
; 110  : 					iItemAddOptionIndex++;

  0017b	8b 5d f4	 mov	 ebx, DWORD PTR _iItemAddOptionIndex$1$[ebp]
  0017e	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00181	43		 inc	 ebx

; 111  : 
; 112  : 					if (iItemAddOptionIndex > MAX_ITEM_ADD_OPTION )

  00182	8b 4d fc	 mov	 ecx, DWORD PTR _iType$1$[ebp]
  00185	66 89 7a fc	 mov	 WORD PTR [edx-4], di
  00189	89 72 10	 mov	 DWORD PTR [edx+16], esi
  0018c	89 5d f4	 mov	 DWORD PTR _iItemAddOptionIndex$1$[ebp], ebx
  0018f	89 42 14	 mov	 DWORD PTR [edx+20], eax
  00192	83 c2 20	 add	 edx, 32			; 00000020H
  00195	89 55 08	 mov	 DWORD PTR tv557[ebp], edx
  00198	83 fb 64	 cmp	 ebx, 100		; 00000064H
  0019b	0f 8e c3 fe ff
	ff		 jle	 $LL4@Load

; 113  : 					{
; 114  : 						MsgBox("[ItemAddOption] Overflow ItemAddOption Table Index");

  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@FOAHMPMA@?$FLItemAddOption?$FN?5Overflow?5ItemAdd@
  001a6	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 115  : 					}
; 116  : 				}
; 117  : 			}

  001ab	8b 4d fc	 mov	 ecx, DWORD PTR _iType$1$[ebp]
  001ae	83 c4 04	 add	 esp, 4
  001b1	e9 ae fe ff ff	 jmp	 $LL4@Load
$LN33@Load:
  001b6	8b 75 e8	 mov	 esi, DWORD PTR _this$1$[ebp]
$LN18@Load:

; 40   : 
; 41   : 	while ( true )
; 42   : 	{
; 43   : 		Token = (SMDToken)GetToken();

  001b9	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 44   : 
; 45   : 		if ( Token == END )

  001be	83 f8 02	 cmp	 eax, 2
  001c1	0f 85 7c fe ff
	ff		 jne	 $LL2@Load
  001c7	5f		 pop	 edi
$LN20@Load:

; 118  : 		}
; 119  : 	}
; 120  : 
; 121  : 	fclose(SMDFile);

  001c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  001ce	e8 00 00 00 00	 call	 _fclose
  001d3	83 c4 04	 add	 esp, 4
  001d6	5b		 pop	 ebx
$LN1@Load:
  001d7	5e		 pop	 esi

; 122  : }

  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c2 04 00	 ret	 4
?Load@CItemAddOption@@QAEXPAD@Z ENDP			; CItemAddOption::Load
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ??1CItemAddOption@@UAE@XZ
_TEXT	SEGMENT
??1CItemAddOption@@UAE@XZ PROC				; CItemAddOption::~CItemAddOption, COMDAT
; _this$ = ecx

; 22   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CItemAddOption@@6B@

; 23   : 	return;
; 24   : }

  00006	c3		 ret	 0
??1CItemAddOption@@UAE@XZ ENDP				; CItemAddOption::~CItemAddOption
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ??0CItemAddOption@@QAE@XZ
_TEXT	SEGMENT
??0CItemAddOption@@QAE@XZ PROC				; CItemAddOption::CItemAddOption, COMDAT
; _this$ = ecx

; 17   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CItemAddOption@@6B@

; 18   : 	this->Initialize();

  00009	e8 00 00 00 00	 call	 ?Initialize@CItemAddOption@@QAEXXZ ; CItemAddOption::Initialize

; 19   : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CItemAddOption@@QAE@XZ ENDP				; CItemAddOption::CItemAddOption
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\itemaddoption.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 606  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
