; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\DbSave.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CDbSave@@QAE@XZ				; CDbSave::CDbSave
PUBLIC	??1CDbSave@@UAE@XZ				; CDbSave::~CDbSave
PUBLIC	?Initialize@CDbSave@@QAEHXZ			; CDbSave::Initialize
PUBLIC	?Feee@CDbSave@@QAEHXZ				; CDbSave::Feee
PUBLIC	?Add@CDbSave@@QAEHPAEHEH@Z			; CDbSave::Add
PUBLIC	?ThreadProc@CDbSave@@QAEKXZ			; CDbSave::ThreadProc
PUBLIC	?Begin@CDbSave@@QAEHXZ				; CDbSave::Begin
PUBLIC	?End@CDbSave@@QAEXXZ				; CDbSave::End
PUBLIC	??_GCDbSave@@UAEPAXI@Z				; CDbSave::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_7CDbSave@@6B@				; CDbSave::`vftable'
PUBLIC	??_C@_0L@ILEIIOHD@DbSave?4cpp?$AA@		; `string'
PUBLIC	??_R4CDbSave@@6B@				; CDbSave::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDbSave@@@8				; CDbSave `RTTI Type Descriptor'
PUBLIC	??_R3CDbSave@@8					; CDbSave::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDbSave@@8					; CDbSave::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDbSave@@8			; CDbSave::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??0WZQueue@@QAE@I@Z:PROC			; WZQueue::WZQueue
EXTRN	??1WZQueue@@QAE@XZ:PROC				; WZQueue::~WZQueue
EXTRN	?GetCount@WZQueue@@QAEIXZ:PROC			; WZQueue::GetCount
EXTRN	?AddToQueue@WZQueue@@QAEHQAEIEH@Z:PROC		; WZQueue::AddToQueue
EXTRN	?GetFromQueue@WZQueue@@QAEHPAEPAI0PAH@Z:PROC	; WZQueue::GetFromQueue
EXTRN	??_ECDbSave@@UAEPAXI@Z:PROC			; CDbSave::`vector deleting destructor'
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?wsDataCli@@3VwsJoinServerCli@@A:BYTE		; wsDataCli
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CDbSave@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDbSave@@8 DD FLAT:??_R0?AVCDbSave@@@8	; CDbSave::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDbSave@@8
rdata$r	ENDS
;	COMDAT ??_R2CDbSave@@8
rdata$r	SEGMENT
??_R2CDbSave@@8 DD FLAT:??_R1A@?0A@EA@CDbSave@@8	; CDbSave::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDbSave@@8
rdata$r	SEGMENT
??_R3CDbSave@@8 DD 00H					; CDbSave::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDbSave@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDbSave@@@8
data$r	SEGMENT
??_R0?AVCDbSave@@@8 DD FLAT:??_7type_info@@6B@		; CDbSave `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDbSave@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDbSave@@6B@
rdata$r	SEGMENT
??_R4CDbSave@@6B@ DD 00H				; CDbSave::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDbSave@@@8
	DD	FLAT:??_R3CDbSave@@8
rdata$r	ENDS
;	COMDAT ??_C@_0L@ILEIIOHD@DbSave?4cpp?$AA@
CONST	SEGMENT
??_C@_0L@ILEIIOHD@DbSave?4cpp?$AA@ DB 'DbSave.cpp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CDbSave@@6B@
CONST	SEGMENT
??_7CDbSave@@6B@ DD FLAT:??_R4CDbSave@@6B@		; CDbSave::`vftable'
	DD	FLAT:??_ECDbSave@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Initialize@CDbSave@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@CDbSave@@QAEHXZ$0
__ehfuncinfo$?Initialize@CDbSave@@QAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Initialize@CDbSave@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?cSaveThreadProc@@YGJPAVCDbSave@@@Z
_TEXT	SEGMENT
_pThis$ = 8						; size = 4
?cSaveThreadProc@@YGJPAVCDbSave@@@Z PROC		; cSaveThreadProc, COMDAT

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 93   : 	return pThis->ThreadProc();

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pThis$[ebp]
  00006	e8 00 00 00 00	 call	 ?ThreadProc@CDbSave@@QAEKXZ ; CDbSave::ThreadProc

; 94   : 
; 95   : }

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?cSaveThreadProc@@YGJPAVCDbSave@@@Z ENDP		; cSaveThreadProc
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDbSave@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDbSave@@UAEPAXI@Z PROC				; CDbSave::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDbSave@@UAE@XZ	; CDbSave::~CDbSave
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 2c		 push	 44			; 0000002cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCDbSave@@UAEPAXI@Z ENDP				; CDbSave::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?End@CDbSave@@QAEXXZ
_TEXT	SEGMENT
?End@CDbSave@@QAEXXZ PROC				; CDbSave::End, COMDAT
; _this$ = ecx

; 98   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 99   : 	if ( this->m_ThreadHandle != 0 )

  00003	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00006	85 c0		 test	 eax, eax
  00008	74 20		 je	 SHORT $LN2@End

; 100  : 	{
; 101  : 		this->m_bIsRunning = FALSE;
; 102  : 		WaitForSingleObject(this->m_ThreadHandle , INFINITE);

  0000a	6a ff		 push	 -1
  0000c	50		 push	 eax
  0000d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 103  : 		CloseHandle(this->m_ThreadHandle );

  0001a	ff 76 08	 push	 DWORD PTR [esi+8]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 104  : 		this->m_ThreadHandle=0;

  00023	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN2@End:
  0002a	5e		 pop	 esi

; 105  : 	}
; 106  : }

  0002b	c3		 ret	 0
?End@CDbSave@@QAEXXZ ENDP				; CDbSave::End
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?Begin@CDbSave@@QAEHXZ
_TEXT	SEGMENT
?Begin@CDbSave@@QAEHXZ PROC				; CDbSave::Begin, COMDAT
; _this$ = ecx

; 71   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 72   : 	if ( this->m_ThreadHandle != 0 )

  00003	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00007	74 05		 je	 SHORT $LN2@Begin

; 73   : 	{
; 74   : 		this->End();

  00009	e8 00 00 00 00	 call	 ?End@CDbSave@@QAEXXZ	; CDbSave::End
$LN2@Begin:

; 75   : 	}
; 76   : 
; 77   : 	this->m_bIsRunning=TRUE;
; 78   : 
; 79   : 	this->m_ThreadHandle=CreateThread( NULL, 0, (LPTHREAD_START_ROUTINE)cSaveThreadProc, this, 0, &this->m_dwThreadID  );

  0000e	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00011	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1
  00018	50		 push	 eax
  00019	6a 00		 push	 0
  0001b	56		 push	 esi
  0001c	68 00 00 00 00	 push	 OFFSET ?cSaveThreadProc@@YGJPAVCDbSave@@@Z ; cSaveThreadProc
  00021	6a 00		 push	 0
  00023	6a 00		 push	 0
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  0002b	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002e	5e		 pop	 esi

; 80   : 
; 81   : 	if ( this->m_ThreadHandle == 0 )

  0002f	85 c0		 test	 eax, eax
  00031	75 1f		 jne	 SHORT $LN3@Begin

; 82   : 	{
; 83   : 		MsgBox(lMsg.Get(MSGGET(0, 113)), __FILE__, __LINE__);

  00033	6a 53		 push	 83			; 00000053H
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILEIIOHD@DbSave?4cpp?$AA@
  0003a	6a 71		 push	 113			; 00000071H
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00041	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 84   : 		return FALSE;

  0004f	33 c0		 xor	 eax, eax

; 88   : }

  00051	c3		 ret	 0
$LN3@Begin:

; 85   : 	}
; 86   : 
; 87   : 	return TRUE;

  00052	b8 01 00 00 00	 mov	 eax, 1

; 88   : }

  00057	c3		 ret	 0
?Begin@CDbSave@@QAEHXZ ENDP				; CDbSave::Begin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?ThreadProc@CDbSave@@QAEKXZ
_TEXT	SEGMENT
_headcode$ = -5016					; size = 4
_nSize$ = -5012						; size = 4
_uindex$ = -5008					; size = 4
_RecvData$ = -5004					; size = 5000
__$ArrayPad$ = -4					; size = 4
?ThreadProc@CDbSave@@QAEKXZ PROC			; CDbSave::ThreadProc, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 98 13 00 00	 mov	 eax, 5016		; 00001398H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	8d 5f 14	 lea	 ebx, DWORD PTR [edi+20]
  0001f	90		 npad	 1
$LL2@ThreadProc:

; 110  : 	int count;
; 111  : 	BYTE RecvData[5000];
; 112  : 	UINT nSize;
; 113  : 	int headcode;
; 114  : 	INT uindex;
; 115  : 
; 116  : 	while ( true )
; 117  : 	{
; 118  : 		EnterCriticalSection(&this->criti);

  00020	53		 push	 ebx
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 119  : 		count=this->m_lpWzQueue->GetCount();

  00027	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0002a	e8 00 00 00 00	 call	 ?GetCount@WZQueue@@QAEIXZ ; WZQueue::GetCount
  0002f	8b f0		 mov	 esi, eax

; 120  : 
; 121  : 		if ( count != 0 )

  00031	85 f6		 test	 esi, esi
  00033	74 6b		 je	 SHORT $LN7@ThreadProc

; 122  : 		{
; 123  : 			if (this->m_lpWzQueue->GetFromQueue(RecvData, &nSize, (UCHAR*)&headcode, &uindex) == 1 )

  00035	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00038	8d 85 70 ec ff
	ff		 lea	 eax, DWORD PTR _uindex$[ebp]
  0003e	50		 push	 eax
  0003f	8d 85 68 ec ff
	ff		 lea	 eax, DWORD PTR _headcode$[ebp]
  00045	50		 push	 eax
  00046	8d 85 6c ec ff
	ff		 lea	 eax, DWORD PTR _nSize$[ebp]
  0004c	50		 push	 eax
  0004d	8d 85 74 ec ff
	ff		 lea	 eax, DWORD PTR _RecvData$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?GetFromQueue@WZQueue@@QAEHPAEPAI0PAH@Z ; WZQueue::GetFromQueue
  00059	83 f8 01	 cmp	 eax, 1
  0005c	75 42		 jne	 SHORT $LN7@ThreadProc

; 124  : 			{
; 125  : 				if (wsDataCli.DataSend((PCHAR)RecvData, nSize) == 0 )

  0005e	ff b5 6c ec ff
	ff		 push	 DWORD PTR _nSize$[ebp]
  00064	8d 85 74 ec ff
	ff		 lea	 eax, DWORD PTR _RecvData$[ebp]
  0006a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsDataCli@@3VwsJoinServerCli@@A ; wsDataCli
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 126  : 				{
; 127  : 					LogAdd(lMsg.Get(MSGGET(1, 189)), count, uindex);

  00075	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0007a	ff b5 70 ec ff
	ff		 push	 DWORD PTR _uindex$[ebp]
  00080	56		 push	 esi
  00081	85 c0		 test	 eax, eax
  00083	75 07		 jne	 SHORT $LN6@ThreadProc
  00085	68 bd 01 00 00	 push	 445			; 000001bdH

; 128  : 				}
; 129  : 				else

  0008a	eb 05		 jmp	 SHORT $LN18@ThreadProc
$LN6@ThreadProc:

; 130  : 				{
; 131  : 					LogAdd(lMsg.Get(MSGGET(1, 190)), count, uindex);

  0008c	68 be 01 00 00	 push	 446			; 000001beH
$LN18@ThreadProc:
  00091	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00096	50		 push	 eax
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@ThreadProc:

; 132  : 				}
; 133  : 			}
; 134  : 		}
; 135  : 
; 136  : 		if ( this->m_bIsRunning == FALSE && count == 0)

  000a0	83 7f 10 00	 cmp	 DWORD PTR [edi+16], 0
  000a4	75 04		 jne	 SHORT $LN8@ThreadProc
  000a6	85 f6		 test	 esi, esi
  000a8	74 1a		 je	 SHORT $LN17@ThreadProc
$LN8@ThreadProc:

; 137  : 		{
; 138  : 			break;
; 139  : 		}
; 140  : 
; 141  : 		LeaveCriticalSection(&this->criti);

  000aa	53		 push	 ebx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 142  : 		WaitForSingleObject(this->m_ThreadHandle , 300);

  000b1	68 2c 01 00 00	 push	 300			; 0000012cH
  000b6	ff 77 08	 push	 DWORD PTR [edi+8]
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 143  : 	}

  000bf	e9 5c ff ff ff	 jmp	 $LL2@ThreadProc
$LN17@ThreadProc:

; 144  : 	return FALSE;
; 145  : }

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c7	33 c0		 xor	 eax, eax
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	33 cd		 xor	 ecx, ebp
  000cd	5b		 pop	 ebx
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
?ThreadProc@CDbSave@@QAEKXZ ENDP			; CDbSave::ThreadProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?Add@CDbSave@@QAEHPAEHEH@Z
_TEXT	SEGMENT
_pObject$ = 8						; size = 4
_nSize$ = 12						; size = 4
_headcode$ = 16						; size = 1
_index$ = 20						; size = 4
?Add@CDbSave@@QAEHPAEHEH@Z PROC				; CDbSave::Add, COMDAT
; _this$ = ecx

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 62   : 	EnterCriticalSection(&this->criti);

  00007	8d 7e 14	 lea	 edi, DWORD PTR [esi+20]
  0000a	57		 push	 edi
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 63   : 
; 64   : 	BOOL bRet=this->m_lpWzQueue->AddToQueue(pObject, nSize, headcode, index);

  00011	ff 75 14	 push	 DWORD PTR _index$[ebp]
  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	ff 75 10	 push	 DWORD PTR _headcode$[ebp]
  0001a	ff 75 0c	 push	 DWORD PTR _nSize$[ebp]
  0001d	ff 75 08	 push	 DWORD PTR _pObject$[ebp]
  00020	e8 00 00 00 00	 call	 ?AddToQueue@WZQueue@@QAEHQAEIEH@Z ; WZQueue::AddToQueue

; 65   : 
; 66   : 	LeaveCriticalSection(&this->criti);

  00025	57		 push	 edi
  00026	8b f0		 mov	 esi, eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  0002e	5f		 pop	 edi

; 67   : 	return bRet;

  0002f	8b c6		 mov	 eax, esi
  00031	5e		 pop	 esi

; 68   : }

  00032	5d		 pop	 ebp
  00033	c2 10 00	 ret	 16			; 00000010H
?Add@CDbSave@@QAEHPAEHEH@Z ENDP				; CDbSave::Add
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?Feee@CDbSave@@QAEHXZ
_TEXT	SEGMENT
?Feee@CDbSave@@QAEHXZ PROC				; CDbSave::Feee, COMDAT
; _this$ = ecx

; 48   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 49   : 	if ( this->m_lpWzQueue != 0 )

  00004	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  00007	85 ff		 test	 edi, edi
  00009	74 19		 je	 SHORT $LN2@Feee

; 50   : 	{
; 51   : 		delete this->m_lpWzQueue;
; 52   : 		this->m_lpWzQueue = 0;

  0000b	8b cf		 mov	 ecx, edi
  0000d	e8 00 00 00 00	 call	 ??1WZQueue@@QAE@XZ	; WZQueue::~WZQueue
  00012	6a 2c		 push	 44			; 0000002cH
  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
  0001d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN2@Feee:

; 53   : 	}
; 54   : 
; 55   : 	DeleteCriticalSection(&this->criti );

  00024	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  0002e	5f		 pop	 edi

; 56   : 	return TRUE;

  0002f	b8 01 00 00 00	 mov	 eax, 1
  00034	5e		 pop	 esi

; 57   : }

  00035	c3		 ret	 0
?Feee@CDbSave@@QAEHXZ ENDP				; CDbSave::Feee
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?Initialize@CDbSave@@QAEHXZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Initialize@CDbSave@@QAEHXZ PROC			; CDbSave::Initialize, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Initialize@CDbSave@@QAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 35   : 	
; 36   : 	this->m_lpWzQueue  = new WZQueue(1280);

  00026	6a 2c		 push	 44			; 0000002cH
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 0e		 je	 SHORT $LN4@Initialize
  0003e	68 00 05 00 00	 push	 1280			; 00000500H
  00043	8b c8		 mov	 ecx, eax
  00045	e8 00 00 00 00	 call	 ??0WZQueue@@QAE@I@Z	; WZQueue::WZQueue
  0004a	eb 02		 jmp	 SHORT $LN5@Initialize
$LN4@Initialize:
  0004c	33 c0		 xor	 eax, eax
$LN5@Initialize:
  0004e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 37   : 
; 38   : 	if ( this->m_lpWzQueue == 0)

  00051	85 c0		 test	 eax, eax
  00053	75 10		 jne	 SHORT $LN2@Initialize

; 45   : }

  00055	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005f	59		 pop	 ecx
  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
$LN2@Initialize:

; 39   : 	{
; 40   : 		return FALSE;
; 41   : 	}
; 42   : 	
; 43   : 	InitializeCriticalSection(&this->criti );

  00065	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4

; 44   : 	return TRUE;

  0006f	b8 01 00 00 00	 mov	 eax, 1

; 45   : }

  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	5e		 pop	 esi
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize@CDbSave@@QAEHXZ$0:
  00000	6a 2c		 push	 44			; 0000002cH
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?Initialize@CDbSave@@QAEHXZ:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize@CDbSave@@QAEHXZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize@CDbSave@@QAEHXZ ENDP			; CDbSave::Initialize
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ??1CDbSave@@UAE@XZ
_TEXT	SEGMENT
??1CDbSave@@UAE@XZ PROC					; CDbSave::~CDbSave, COMDAT
; _this$ = ecx

; 28   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDbSave@@6B@

; 29   : 	this->End();

  00009	e8 00 00 00 00	 call	 ?End@CDbSave@@QAEXXZ	; CDbSave::End

; 30   : 	this->Feee();

  0000e	8b ce		 mov	 ecx, esi
  00010	5e		 pop	 esi
  00011	e9 00 00 00 00	 jmp	 ?Feee@CDbSave@@QAEHXZ	; CDbSave::Feee
??1CDbSave@@UAE@XZ ENDP					; CDbSave::~CDbSave
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ??0CDbSave@@QAE@XZ
_TEXT	SEGMENT
??0CDbSave@@QAE@XZ PROC					; CDbSave::CDbSave, COMDAT
; _this$ = ecx

; 21   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDbSave@@6B@

; 22   : 	this->m_lpWzQueue=NULL;

  00009	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 23   : 	this->m_bIsRunning=FALSE;

  00010	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 24   : 	this->Initialize();

  00017	e8 00 00 00 00	 call	 ?Initialize@CDbSave@@QAEHXZ ; CDbSave::Initialize

; 25   : }

  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	c3		 ret	 0
??0CDbSave@@QAE@XZ ENDP					; CDbSave::CDbSave
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GWZQueue@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GWZQueue@@QAEPAXI@Z PROC				; WZQueue::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1WZQueue@@QAE@XZ	; WZQueue::~WZQueue
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 2c		 push	 44			; 0000002cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GWZQueue@@QAEPAXI@Z ENDP				; WZQueue::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsave.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
