; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\GameServer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gServerReady@@3HA				; gServerReady
PUBLIC	?gCloseMsg@@3HA					; gCloseMsg
PUBLIC	?gCloseMsgTime@@3HA				; gCloseMsgTime
PUBLIC	?gCurPaintPlayer@@3HA				; gCurPaintPlayer
PUBLIC	?gCurPaintType@@3HA				; gCurPaintType
PUBLIC	?gCurPaintMapNumber@@3HA			; gCurPaintMapNumber
PUBLIC	?hInst@@3PAUHINSTANCE__@@A			; hInst
PUBLIC	?ghWnd@@3PAUHWND__@@A				; ghWnd
PUBLIC	?szTitle@@3PADA					; szTitle
PUBLIC	?szWindowClass@@3PADA				; szWindowClass
PUBLIC	?pOldFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA	; pOldFilter
_BSS	SEGMENT
?gServerReady@@3HA DD 01H DUP (?)			; gServerReady
?gCloseMsg@@3HA DD 01H DUP (?)				; gCloseMsg
?gCloseMsgTime@@3HA DD 01H DUP (?)			; gCloseMsgTime
?gCurPaintPlayer@@3HA DD 01H DUP (?)			; gCurPaintPlayer
?gCurPaintType@@3HA DD 01H DUP (?)			; gCurPaintType
?gCurPaintMapNumber@@3HA DD 01H DUP (?)			; gCurPaintMapNumber
?hInst@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; hInst
?ghWnd@@3PAUHWND__@@A DD 01H DUP (?)			; ghWnd
?szTitle@@3PADA DB 064H DUP (?)				; szTitle
?szWindowClass@@3PADA DB 040H DUP (?)			; szWindowClass
?pOldFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA DD 01H DUP (?) ; pOldFilter
_BSS	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_WinMain@16
PUBLIC	___local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	_sprintf
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	?AllServerStart@@YAHXZ				; AllServerStart
PUBLIC	?GameServerStart@@YAHXZ				; GameServerStart
PUBLIC	?InitInstance@@YAHPAUHINSTANCE__@@H@Z		; InitInstance
PUBLIC	?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z		; MyRegisterClass
PUBLIC	?WndProc@@YGJPAUHWND__@@IIJ@Z			; WndProc
PUBLIC	?About@@YGJPAUHWND__@@IIJ@Z			; About
PUBLIC	?make_minidump@@YGJPAU_EXCEPTION_POINTERS@@@Z	; make_minidump
PUBLIC	?SetUnhandledFilter@@YAXXZ			; SetUnhandledFilter
PUBLIC	?UnSetUnhandledFilter@@YAXXZ			; UnSetUnhandledFilter
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?g_RingAttackEvent@@3VCRingAttackEvent@@A	; g_RingAttackEvent
PUBLIC	?g_XMasAttackEvent@@3VCXMasAttackEvent@@A	; g_XMasAttackEvent
PUBLIC	?gWhatsUpDummyServer@@3VCWhatsUpDummyServer@@A	; gWhatsUpDummyServer
PUBLIC	??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@		; `string'
PUBLIC	??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@	; `string'
PUBLIC	??_C@_0L@OMFGIKED@Log?2Crash?2?$AA@		; `string'
PUBLIC	??_C@_0BJ@ICIDNHOD@?$CFs?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@ ; `string'
PUBLIC	??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@		; `string'
PUBLIC	??_C@_0L@COJEKOJM@ServerPort?$AA@		; `string'
PUBLIC	??_C@_0L@PJJKMLL@Connection?$AA@		; `string'
PUBLIC	??_C@_09PFCHIMEP@127?40?40?41?$AA@		; `string'
PUBLIC	??_C@_0N@OJGEKGHE@JoinServerIP?$AA@		; `string'
PUBLIC	??_C@_0P@KNHIEOID@JoinServerPort?$AA@		; `string'
PUBLIC	??_C@_0O@GAHENNLP@DataServer1IP?$AA@		; `string'
PUBLIC	??_C@_0BA@ECKBGBKC@DataServer1Port?$AA@		; `string'
PUBLIC	??_C@_0O@HCMBHCFB@DataServer2IP?$AA@		; `string'
PUBLIC	??_C@_0BA@MEDFBDAM@DataServer2Port?$AA@		; `string'
PUBLIC	??_C@_0N@KOPNFGLM@ExDBServerIP?$AA@		; `string'
PUBLIC	??_C@_0P@BDOGKGEA@ExDBServerPort?$AA@		; `string'
PUBLIC	??_C@_0BA@KNCKALNP@RankingServerIP?$AA@		; `string'
PUBLIC	??_C@_0BC@EIOMLALK@RankingServerPort?$AA@	; `string'
PUBLIC	??_C@_0O@JMPCLILK@EventServerIP?$AA@		; `string'
PUBLIC	??_C@_0BA@CAOPMLG@EventServerPort?$AA@		; `string'
PUBLIC	??_C@_0CA@JEOBDLCB@Event?5Chip?5Server?5connect?5fail?$CB?$AA@ ; `string'
PUBLIC	??_C@_0BA@LAAHBEDI@closeplayer?4txt?$AA@	; `string'
PUBLIC	??_C@_0BE@EFNDCBPE@World?2MapServer?4xml?$AA@	; `string'
PUBLIC	??_C@_0BG@BGIJHNGE@Event?2CastleSiege?4dat?$AA@	; `string'
PUBLIC	??_C@_0BB@COIIOJMI@CommonServer?4cfg?$AA@	; `string'
PUBLIC	??_C@_05LGELBCGM@Close?$AA@			; `string'
PUBLIC	??_C@_0BC@EBEJPBOM@GameServer?5close?$DP?$AA@	; `string'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__SetUnhandledExceptionFilter@4:PROC
EXTRN	__imp__SetErrorMode@4:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadStringA@16:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	__imp__GetPrivateProfileStringA@24:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__RegisterClassExA@4:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__DialogBoxParamA@20:PROC
EXTRN	__imp__EndDialog@8:PROC
EXTRN	__imp__SetTimer@16:PROC
EXTRN	__imp__KillTimer@8:PROC
EXTRN	__imp__LoadAcceleratorsA@8:PROC
EXTRN	__imp__TranslateAcceleratorA@12:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__FillRect@12:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	__imp__LoadIconA@8:PROC
EXTRN	__imp__InitCommonControls@0:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?LogDateChange@@YAHXZ:PROC			; LogDateChange
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	?GiocpInit@@YAXXZ:PROC				; GiocpInit
EXTRN	?CreateGIocp@@YAHH@Z:PROC			; CreateGIocp
EXTRN	?GiocpDelete@@YAXXZ:PROC			; GiocpDelete
EXTRN	?UpdateRun@CGensSystem@@QAEXXZ:PROC		; CGensSystem::UpdateRun
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?WeatherVariationProcess@MapClass@@QAEXXZ:PROC	; MapClass::WeatherVariationProcess
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	?MonsterAndMsgProc@@YAXXZ:PROC			; MonsterAndMsgProc
EXTRN	?MoveMonsterProc@@YAXXZ:PROC			; MoveMonsterProc
EXTRN	?gObjAllLogOut@@YAXXZ:PROC			; gObjAllLogOut
EXTRN	?gObjAllDisconnect@@YAXXZ:PROC			; gObjAllDisconnect
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObjViewportPaint@@YAXPAUHWND__@@F@Z:PROC	; gObjViewportPaint
EXTRN	?gObjViewportListCreate@@YAXF@Z:PROC		; gObjViewportListCreate
EXTRN	?gObjViewportListDestroy@@YAXF@Z:PROC		; gObjViewportListDestroy
EXTRN	?PShop_ViewportListRegenarate@@YAXF@Z:PROC	; PShop_ViewportListRegenarate
EXTRN	?gObjStateSetCreate@@YAXH@Z:PROC		; gObjStateSetCreate
EXTRN	?gObjSetState@@YAXXZ:PROC			; gObjSetState
EXTRN	?gObjSecondProc@@YAXXZ:PROC			; gObjSecondProc
EXTRN	?gObjViewportListProtocol@@YAXF@Z:PROC		; gObjViewportListProtocol
EXTRN	?gObjCheckAllUserDuelStop@@YAXXZ:PROC		; gObjCheckAllUserDuelStop
EXTRN	?gObjUnionUpdateProc@@YAXH@Z:PROC		; gObjUnionUpdateProc
EXTRN	??0CRingAttackEvent@@QAE@XZ:PROC		; CRingAttackEvent::CRingAttackEvent
EXTRN	??1CRingAttackEvent@@UAE@XZ:PROC		; CRingAttackEvent::~CRingAttackEvent
EXTRN	?Run@CRingAttackEvent@@QAEXXZ:PROC		; CRingAttackEvent::Run
EXTRN	??0CXMasAttackEvent@@QAE@XZ:PROC		; CXMasAttackEvent::CXMasAttackEvent
EXTRN	??1CXMasAttackEvent@@UAE@XZ:PROC		; CXMasAttackEvent::~CXMasAttackEvent
EXTRN	?Run@CXMasAttackEvent@@QAEXXZ:PROC		; CXMasAttackEvent::Run
EXTRN	??0CWhatsUpDummyServer@@QAE@XZ:PROC		; CWhatsUpDummyServer::CWhatsUpDummyServer
EXTRN	??1CWhatsUpDummyServer@@QAE@XZ:PROC		; CWhatsUpDummyServer::~CWhatsUpDummyServer
EXTRN	?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z:PROC ; CWhatsUpDummyServer::Start
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?Start@CDragonEvent@@QAEXXZ:PROC		; CDragonEvent::Start
EXTRN	?End@CDragonEvent@@QAEXXZ:PROC			; CDragonEvent::End
EXTRN	?Run@CDragonEvent@@QAEXXZ:PROC			; CDragonEvent::Run
EXTRN	?TimeCheckCashDelete@CWhisperCash@@QAEXXZ:PROC	; CWhisperCash::TimeCheckCashDelete
EXTRN	?Run@CAttackEvent@@QAEXXZ:PROC			; CAttackEvent::Run
EXTRN	?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z:PROC ; CMonsterSetBase::MonsterSetBaseReload
EXTRN	?gSetDate@@YAXXZ:PROC				; gSetDate
EXTRN	?GameMainInit@@YAXPAUHWND__@@@Z:PROC		; GameMainInit
EXTRN	?GameMainFree@@YAXXZ:PROC			; GameMainFree
EXTRN	?GMJoinServerConnect@@YAHPADK@Z:PROC		; GMJoinServerConnect
EXTRN	?GMEventChipServerConnect@@YAHPADK@Z:PROC	; GMEventChipServerConnect
EXTRN	?GameMainServerCreate@@YAHKK@Z:PROC		; GameMainServerCreate
EXTRN	?GMServerMsgProc@@YAXIJ@Z:PROC			; GMServerMsgProc
EXTRN	?GMClientMsgProc@@YAXIJ@Z:PROC			; GMClientMsgProc
EXTRN	?GMJoinClientMsgProc@@YAXIJ@Z:PROC		; GMJoinClientMsgProc
EXTRN	?GMRankingClientMsgProc@@YAXIJ@Z:PROC		; GMRankingClientMsgProc
EXTRN	?GMEventChipClientMsgProc@@YAXIJ@Z:PROC		; GMEventChipClientMsgProc
EXTRN	?ExDataClientMsgProc@@YAXIJ@Z:PROC		; ExDataClientMsgProc
EXTRN	?ReadCommonServerInfo@@YAXXZ:PROC		; ReadCommonServerInfo
EXTRN	?GameServerInfoSend@@YAXXZ:PROC			; GameServerInfoSend
EXTRN	?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z:PROC	; ReadEventInfo
EXTRN	?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z:PROC	; ReadGameEtcInfo
EXTRN	?ReadCommonlocInfo@@YAXXZ:PROC			; ReadCommonlocInfo
EXTRN	?Connect@DBSockMng@@QAEXXZ:PROC			; DBSockMng::Connect
EXTRN	?MsgProc@DBSockMng@@QAEHHIJ@Z:PROC		; DBSockMng::MsgProc
EXTRN	?GetActiveDS@DBSockMng@@QAEHXZ:PROC		; DBSockMng::GetActiveDS
EXTRN	?DGGuildListRequest@@YAXXZ:PROC			; DGGuildListRequest
EXTRN	?GJNotifyMaxUserCount@@YAXXZ:PROC		; GJNotifyMaxUserCount
EXTRN	?Run@CBloodCastle@@QAEXXZ:PROC			; CBloodCastle::Run
EXTRN	?Run@CChaosCastle@@QAEXXZ:PROC			; CChaosCastle::Run
EXTRN	??0Ccloseplayer@@QAE@XZ:PROC			; Ccloseplayer::Ccloseplayer
EXTRN	??1Ccloseplayer@@UAE@XZ:PROC			; Ccloseplayer::~Ccloseplayer
EXTRN	?Load@Ccloseplayer@@QAEXPAD@Z:PROC		; Ccloseplayer::Load
EXTRN	?LoadData@CMapServerManager@@QAEHPAD@Z:PROC	; CMapServerManager::LoadData
EXTRN	?Reload@ShopManager@@QAEXXZ:PROC		; ShopManager::Reload
EXTRN	?WeaponAttackProc@CWeapon@@QAEXXZ:PROC		; CWeapon::WeaponAttackProc
EXTRN	?AdjustTributeMoney@CCastleSiegeSync@@QAEXXZ:PROC ; CCastleSiegeSync::AdjustTributeMoney
EXTRN	?Run@CEledoradoEvent@@QAEXXZ:PROC		; CEledoradoEvent::Run
EXTRN	?Run@CEventManagement@@QAEXXZ:PROC		; CEventManagement::Run
EXTRN	?CheckShopServerConnectState@CCashShop@@QAEXXZ:PROC ; CCashShop::CheckShopServerConnectState
EXTRN	?CashShopOptioNReload@CCashShop@@QAEXXZ:PROC	; CCashShop::CashShopOptioNReload
EXTRN	?ItemCheckWorker@CCashShop@@QAEXXZ:PROC		; CCashShop::ItemCheckWorker
EXTRN	?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z:PROC ; TServerInfoDisplayer::Run
EXTRN	?MonsterMoveProc@TMonsterAI@@SAXXZ:PROC		; TMonsterAI::MonsterMoveProc
EXTRN	?MonsterAIProc@TMonsterAI@@SAXXZ:PROC		; TMonsterAI::MonsterAIProc
EXTRN	?Run@CKanturu@@QAEXXZ:PROC			; CKanturu::Run
EXTRN	?UserMonsterCountCheck@CKanturu@@QAEXXZ:PROC	; CKanturu::UserMonsterCountCheck
EXTRN	?Run@CCastleDeepEvent@@QAEXXZ:PROC		; CCastleDeepEvent::Run
EXTRN	?LoadPreFixData@CCastleSiege@@QAEHPAD@Z:PROC	; CCastleSiege::LoadPreFixData
EXTRN	?LoadData@CCastleSiege@@QAEHPAD@Z:PROC		; CCastleSiege::LoadData
EXTRN	?DataRequest@CCastleSiege@@QAEHXZ:PROC		; CCastleSiege::DataRequest
EXTRN	?Run@CCastleSiege@@QAEXXZ:PROC			; CCastleSiege::Run
EXTRN	?GetDataLoadState@CCastleSiege@@QAEHXZ:PROC	; CCastleSiege::GetDataLoadState
EXTRN	?SetDataLoadState@CCastleSiege@@QAEXH@Z:PROC	; CCastleSiege::SetDataLoadState
EXTRN	?SendCastleStateSync@CCastleSiege@@QAEXXZ:PROC	; CCastleSiege::SendCastleStateSync
EXTRN	?Run@CCrywolf@@QAEXXZ:PROC			; CCrywolf::Run
EXTRN	?CrywolfSecondAct@CCrywolf@@QAEXXZ:PROC		; CCrywolf::CrywolfSecondAct
EXTRN	?Run@CIllusionTempleEvent@@QAEXXZ:PROC		; CIllusionTempleEvent::Run
EXTRN	?SendOnPoint@Notice@@QAEXXZ:PROC		; Notice::SendOnPoint
EXTRN	?Run@CRaklion@@QAEXXZ:PROC			; CRaklion::Run
EXTRN	?Run@CDoubleGoerEvent@@QAEXXZ:PROC		; CDoubleGoerEvent::Run
EXTRN	?Run@CImperialGuardian@@QAEXXZ:PROC		; CImperialGuardian::Run
EXTRN	?SetMuTimer@CMuTimer@@QAEXXZ:PROC		; CMuTimer::SetMuTimer
EXTRN	?SetTimerEnd@CMuTimer@@QAEXXZ:PROC		; CMuTimer::SetTimerEnd
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?LogTextPaint@@3P6AXPAUHWND__@@@ZA:DWORD	; LogTextPaint
EXTRN	?gGensSystem@@3VCGensSystem@@A:BYTE		; gGensSystem
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?JoinServerConnected@@3HA:DWORD			; JoinServerConnected
EXTRN	?IsEventChipServerConnected@@3HA:DWORD		; IsEventChipServerConnected
EXTRN	?DragonEvent@@3PAVCDragonEvent@@A:DWORD		; DragonEvent
EXTRN	?AttackEvent@@3PAVCAttackEvent@@A:DWORD		; AttackEvent
EXTRN	?gFireCrackerEvent@@3HA:DWORD			; gFireCrackerEvent
EXTRN	?gDoPShopOpen@@3HA:DWORD			; gDoPShopOpen
EXTRN	?GameServerPort@@3HA:DWORD			; GameServerPort
EXTRN	?JoinServerPort@@3HA:DWORD			; JoinServerPort
EXTRN	?JoinServerIP@@3PADA:BYTE			; JoinServerIP
EXTRN	?DataServerPort@@3HA:DWORD			; DataServerPort
EXTRN	?DataServerIP@@3PADA:BYTE			; DataServerIP
EXTRN	?DataServerPort2@@3HA:DWORD			; DataServerPort2
EXTRN	?DataServerIP2@@3PADA:BYTE			; DataServerIP2
EXTRN	?ExDbPort@@3HA:DWORD				; ExDbPort
EXTRN	?ExDBServerIP@@3PADA:BYTE			; ExDBServerIP
EXTRN	?RankingServerPort@@3HA:DWORD			; RankingServerPort
EXTRN	?RankingServerIP@@3PADA:BYTE			; RankingServerIP
EXTRN	?EventServerPort@@3HA:DWORD			; EventServerPort
EXTRN	?EventServerIP@@3PADA:BYTE			; EventServerIP
EXTRN	?wsGServer@@3VCwsGameServer@@A:BYTE		; wsGServer
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
EXTRN	?gMSetBase@@3VCMonsterSetBase@@A:BYTE		; gMSetBase
EXTRN	?WhisperCash@@3VCWhisperCash@@A:BYTE		; WhisperCash
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?g_BloodCastle@@3VCBloodCastle@@A:BYTE		; g_BloodCastle
EXTRN	?g_ChaosCastle@@3VCChaosCastle@@A:BYTE		; g_ChaosCastle
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	?g_ShopManager@@3VShopManager@@A:BYTE		; g_ShopManager
EXTRN	?g_CsNPC_Weapon@@3VCWeapon@@A:BYTE		; g_CsNPC_Weapon
EXTRN	?g_CastleSiegeSync@@3VCCastleSiegeSync@@A:BYTE	; g_CastleSiegeSync
EXTRN	?gEledoradoEvent@@3VCEledoradoEvent@@A:BYTE	; gEledoradoEvent
EXTRN	?g_EventManager@@3VCEventManagement@@A:BYTE	; g_EventManager
EXTRN	?g_CashShop@@3VCCashShop@@A:BYTE		; g_CashShop
EXTRN	?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A:BYTE ; g_ServerInfoDisplayer
EXTRN	?g_Kanturu@@3VCKanturu@@A:BYTE			; g_Kanturu
EXTRN	?g_CastleDeepEvent@@3VCCastleDeepEvent@@A:BYTE	; g_CastleDeepEvent
EXTRN	?g_CastleSiege@@3VCCastleSiege@@A:BYTE		; g_CastleSiege
EXTRN	?g_iCastleItemMixLimit@@3HA:DWORD		; g_iCastleItemMixLimit
EXTRN	?g_Crywolf@@3VCCrywolf@@A:BYTE			; g_Crywolf
EXTRN	?g_IllusionTemple@@3VCIllusionTempleEvent@@A:BYTE ; g_IllusionTemple
EXTRN	?g_Notice@@3VNotice@@A:BYTE			; g_Notice
EXTRN	?g_Raklion@@3VCRaklion@@A:BYTE			; g_Raklion
EXTRN	?gDoubleGoer@@3VCDoubleGoerEvent@@A:BYTE	; gDoubleGoer
EXTRN	?g_ImperialGuardian@@3VCImperialGuardian@@A:BYTE ; g_ImperialGuardian
EXTRN	?g_MuTimer@@3VCMuTimer@@A:BYTE			; g_MuTimer
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?g_RingAttackEvent@@3VCRingAttackEvent@@A DB 0138H DUP (?) ; g_RingAttackEvent
?g_XMasAttackEvent@@3VCXMasAttackEvent@@A DB 084H DUP (?) ; g_XMasAttackEvent
?gWhatsUpDummyServer@@3VCWhatsUpDummyServer@@A DB 0cH DUP (?) ; gWhatsUpDummyServer
_BSS	ENDS
CRT$XCU	SEGMENT
?g_RingAttackEvent$initializer$@@3P6AXXZA DD FLAT:??__Eg_RingAttackEvent@@YAXXZ ; g_RingAttackEvent$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_0BC@EBEJPBOM@GameServer?5close?$DP?$AA@
CONST	SEGMENT
??_C@_0BC@EBEJPBOM@GameServer?5close?$DP?$AA@ DB 'GameServer close?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGELBCGM@Close?$AA@
CONST	SEGMENT
??_C@_05LGELBCGM@Close?$AA@ DB 'Close', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@COIIOJMI@CommonServer?4cfg?$AA@
CONST	SEGMENT
??_C@_0BB@COIIOJMI@CommonServer?4cfg?$AA@ DB 'CommonServer.cfg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BGIJHNGE@Event?2CastleSiege?4dat?$AA@
CONST	SEGMENT
??_C@_0BG@BGIJHNGE@Event?2CastleSiege?4dat?$AA@ DB 'Event\CastleSiege.dat'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EFNDCBPE@World?2MapServer?4xml?$AA@
CONST	SEGMENT
??_C@_0BE@EFNDCBPE@World?2MapServer?4xml?$AA@ DB 'World\MapServer.xml', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAAHBEDI@closeplayer?4txt?$AA@
CONST	SEGMENT
??_C@_0BA@LAAHBEDI@closeplayer?4txt?$AA@ DB 'closeplayer.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JEOBDLCB@Event?5Chip?5Server?5connect?5fail?$CB?$AA@
CONST	SEGMENT
??_C@_0CA@JEOBDLCB@Event?5Chip?5Server?5connect?5fail?$CB?$AA@ DB 'Event '
	DB	'Chip Server connect fail!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CAOPMLG@EventServerPort?$AA@
CONST	SEGMENT
??_C@_0BA@CAOPMLG@EventServerPort?$AA@ DB 'EventServerPort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JMPCLILK@EventServerIP?$AA@
CONST	SEGMENT
??_C@_0O@JMPCLILK@EventServerIP?$AA@ DB 'EventServerIP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EIOMLALK@RankingServerPort?$AA@
CONST	SEGMENT
??_C@_0BC@EIOMLALK@RankingServerPort?$AA@ DB 'RankingServerPort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KNCKALNP@RankingServerIP?$AA@
CONST	SEGMENT
??_C@_0BA@KNCKALNP@RankingServerIP?$AA@ DB 'RankingServerIP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDOGKGEA@ExDBServerPort?$AA@
CONST	SEGMENT
??_C@_0P@BDOGKGEA@ExDBServerPort?$AA@ DB 'ExDBServerPort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KOPNFGLM@ExDBServerIP?$AA@
CONST	SEGMENT
??_C@_0N@KOPNFGLM@ExDBServerIP?$AA@ DB 'ExDBServerIP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MEDFBDAM@DataServer2Port?$AA@
CONST	SEGMENT
??_C@_0BA@MEDFBDAM@DataServer2Port?$AA@ DB 'DataServer2Port', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCMBHCFB@DataServer2IP?$AA@
CONST	SEGMENT
??_C@_0O@HCMBHCFB@DataServer2IP?$AA@ DB 'DataServer2IP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ECKBGBKC@DataServer1Port?$AA@
CONST	SEGMENT
??_C@_0BA@ECKBGBKC@DataServer1Port?$AA@ DB 'DataServer1Port', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GAHENNLP@DataServer1IP?$AA@
CONST	SEGMENT
??_C@_0O@GAHENNLP@DataServer1IP?$AA@ DB 'DataServer1IP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KNHIEOID@JoinServerPort?$AA@
CONST	SEGMENT
??_C@_0P@KNHIEOID@JoinServerPort?$AA@ DB 'JoinServerPort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OJGEKGHE@JoinServerIP?$AA@
CONST	SEGMENT
??_C@_0N@OJGEKGHE@JoinServerIP?$AA@ DB 'JoinServerIP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PFCHIMEP@127?40?40?41?$AA@
CONST	SEGMENT
??_C@_09PFCHIMEP@127?40?40?41?$AA@ DB '127.0.0.1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PJJKMLL@Connection?$AA@
CONST	SEGMENT
??_C@_0L@PJJKMLL@Connection?$AA@ DB 'Connection', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COJEKOJM@ServerPort?$AA@
CONST	SEGMENT
??_C@_0L@COJEKOJM@ServerPort?$AA@ DB 'ServerPort', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
CONST	SEGMENT
??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@ DB 'ServerInfo.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ICIDNHOD@?$CFs?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@
CONST	SEGMENT
??_C@_0BJ@ICIDNHOD@?$CFs?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@ DB '%'
	DB	's%d-%d-%d_%dh%dm%ds.dmp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OMFGIKED@Log?2Crash?2?$AA@
CONST	SEGMENT
??_C@_0L@OMFGIKED@Log?2Crash?2?$AA@ DB 'Log\Crash\', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@
CONST	SEGMENT
??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@ DB 'MiniDumpWriteDump', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@
CONST	SEGMENT
??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@ DB 'DBGHELP.DLL', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?WndProc@@YGJPAUHWND__@@IIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?WndProc@@YGJPAUHWND__@@IIJ@Z$0
__ehfuncinfo$?WndProc@@YGJPAUHWND__@@IIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?WndProc@@YGJPAUHWND__@@IIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
?g_XMasAttackEvent$initializer$@@3P6AXXZA DD FLAT:??__Eg_XMasAttackEvent@@YAXXZ ; g_XMasAttackEvent$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?gWhatsUpDummyServer$initializer$@@3P6AXXZA DD FLAT:??__EgWhatsUpDummyServer@@YAXXZ ; gWhatsUpDummyServer$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?UnSetUnhandledFilter@@YAXXZ
_TEXT	SEGMENT
?UnSetUnhandledFilter@@YAXXZ PROC			; UnSetUnhandledFilter, COMDAT

; 137  : 	SetUnhandledExceptionFilter(pOldFilter);

  00000	ff 35 00 00 00
	00		 push	 DWORD PTR ?pOldFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA ; pOldFilter
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4

; 138  : }

  0000c	c3		 ret	 0
?UnSetUnhandledFilter@@YAXXZ ENDP			; UnSetUnhandledFilter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?SetUnhandledFilter@@YAXXZ
_TEXT	SEGMENT
?SetUnhandledFilter@@YAXXZ PROC				; SetUnhandledFilter, COMDAT

; 130  : 	SetErrorMode(SEM_FAILCRITICALERRORS);

  00000	6a 01		 push	 1
  00002	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetErrorMode@4

; 131  : 	pOldFilter = SetUnhandledExceptionFilter(&make_minidump);

  00008	68 00 00 00 00	 push	 OFFSET ?make_minidump@@YGJPAU_EXCEPTION_POINTERS@@@Z ; make_minidump
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?pOldFilter@@3P6GJPAU_EXCEPTION_POINTERS@@@ZA, eax ; pOldFilter

; 132  : }

  00018	c3		 ret	 0
?SetUnhandledFilter@@YAXXZ ENDP				; SetUnhandledFilter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?make_minidump@@YGJPAU_EXCEPTION_POINTERS@@@Z
_TEXT	SEGMENT
_ExInfo$1 = -96						; size = 12
_pTime$2 = -84						; size = 16
_szDmpName$3 = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_e$ = 8							; size = 4
?make_minidump@@YGJPAU_EXCEPTION_POINTERS@@@Z PROC	; make_minidump, COMDAT

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _e$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi

; 87   : 	HMODULE hDbgDll = LoadLibrary("DBGHELP.DLL");

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IBNEFJCG@DBGHELP?4DLL?$AA@
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4

; 88   : 
; 89   : 	if( hDbgDll )

  00021	85 c0		 test	 eax, eax
  00023	0f 84 df 00 00
	00		 je	 $LN3@make_minid

; 90   : 	{
; 91   : 		MINIDUMPWRITEDUMP _MiniDumpWrite = (MINIDUMPWRITEDUMP)GetProcAddress(hDbgDll,"MiniDumpWriteDump");

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNIKNFKD@MiniDumpWriteDump?$AA@
  0002e	50		 push	 eax
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00035	8b f8		 mov	 edi, eax

; 92   : 
; 93   : 		if( _MiniDumpWrite )

  00037	85 ff		 test	 edi, edi
  00039	0f 84 c9 00 00
	00		 je	 $LN3@make_minid

; 94   : 		{
; 95   : 			char szDmpName[64] = {0};
; 96   : 			SYSTEMTIME pTime;
; 97   : 			GetLocalTime(&pTime);

  0003f	6a 40		 push	 64			; 00000040H
  00041	8d 45 bc	 lea	 eax, DWORD PTR _szDmpName$3[ebp]
  00044	6a 00		 push	 0
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	8d 45 ac	 lea	 eax, DWORD PTR _pTime$2[ebp]
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 98   : 
; 99   : 			sprintf(szDmpName,"%s%d-%d-%d_%dh%dm%ds.dmp",

  00059	0f b7 45 b8	 movzx	 eax, WORD PTR _pTime$2[ebp+12]
  0005d	50		 push	 eax
  0005e	0f b7 45 b6	 movzx	 eax, WORD PTR _pTime$2[ebp+10]
  00062	50		 push	 eax
  00063	0f b7 45 b4	 movzx	 eax, WORD PTR _pTime$2[ebp+8]
  00067	50		 push	 eax
  00068	0f b7 45 b2	 movzx	 eax, WORD PTR _pTime$2[ebp+6]
  0006c	50		 push	 eax
  0006d	0f b7 45 ae	 movzx	 eax, WORD PTR _pTime$2[ebp+2]
  00071	50		 push	 eax
  00072	0f b7 45 ac	 movzx	 eax, WORD PTR _pTime$2[ebp]
  00076	50		 push	 eax
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OMFGIKED@Log?2Crash?2?$AA@
  0007c	8d 45 bc	 lea	 eax, DWORD PTR _szDmpName$3[ebp]
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ICIDNHOD@?$CFs?$CFd?9?$CFd?9?$CFd_?$CFdh?$CFdm?$CFds?4dmp?$AA@
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 _sprintf
  0008a	83 c4 24	 add	 esp, 36			; 00000024H

; 100  : 				LOG_PATH_CRASH, pTime.wYear,pTime.wMonth,pTime.wDay,pTime.wHour,pTime.wMinute,pTime.wSecond);
; 101  : 
; 102  : 			HANDLE hFile = CreateFile(szDmpName,GENERIC_WRITE,FILE_SHARE_WRITE,NULL,CREATE_ALWAYS,128,NULL);

  0008d	8d 45 bc	 lea	 eax, DWORD PTR _szDmpName$3[ebp]
  00090	6a 00		 push	 0
  00092	68 80 00 00 00	 push	 128			; 00000080H
  00097	6a 02		 push	 2
  00099	6a 00		 push	 0
  0009b	6a 02		 push	 2
  0009d	68 00 00 00 40	 push	 1073741824		; 40000000H
  000a2	50		 push	 eax
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  000a9	8b f0		 mov	 esi, eax

; 103  : 
; 104  : 			if( hFile != INVALID_HANDLE_VALUE )

  000ab	83 fe ff	 cmp	 esi, -1
  000ae	74 51		 je	 SHORT $LN5@make_minid

; 105  : 			{
; 106  : 				_MINIDUMP_EXCEPTION_INFORMATION ExInfo;
; 107  : 
; 108  : 				ExInfo.ThreadId = ::GetCurrentThreadId();

  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0

; 109  : 				ExInfo.ExceptionPointers = e;
; 110  : 				ExInfo.ClientPointers = NULL;
; 111  : 
; 112  : 				BOOL bDump = _MiniDumpWrite(GetCurrentProcess(),GetCurrentProcessId(),hFile,0x26,&ExInfo,NULL,NULL);

  000b6	6a 00		 push	 0
  000b8	6a 00		 push	 0
  000ba	89 45 a0	 mov	 DWORD PTR _ExInfo$1[ebp], eax
  000bd	8d 45 a0	 lea	 eax, DWORD PTR _ExInfo$1[ebp]
  000c0	50		 push	 eax
  000c1	6a 26		 push	 38			; 00000026H
  000c3	56		 push	 esi
  000c4	89 5d a4	 mov	 DWORD PTR _ExInfo$1[ebp+4], ebx
  000c7	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ExInfo$1[ebp+8], 0
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  000d4	50		 push	 eax
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcess@0
  000db	50		 push	 eax
  000dc	ff d7		 call	 edi

; 113  : 
; 114  : 				if( bDump )

  000de	85 c0		 test	 eax, eax
  000e0	74 1f		 je	 SHORT $LN5@make_minid

; 115  : 				{
; 116  : 					CloseHandle(hFile);

  000e2	56		 push	 esi
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi

; 117  : 					return true;

  000eb	b8 01 00 00 00	 mov	 eax, 1
  000f0	5b		 pop	 ebx

; 122  : 		}
; 123  : 	}
; 124  : 	return EXCEPTION_CONTINUE_SEARCH;
; 125  : }

  000f1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f4	33 cd		 xor	 ecx, ebp
  000f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c2 04 00	 ret	 4
$LN5@make_minid:

; 118  : 				}
; 119  : 			}
; 120  : 
; 121  : 			CloseHandle(hFile);

  00101	56		 push	 esi
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN3@make_minid:

; 122  : 		}
; 123  : 	}
; 124  : 	return EXCEPTION_CONTINUE_SEARCH;
; 125  : }

  00108	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010b	33 c0		 xor	 eax, eax
  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	33 cd		 xor	 ecx, ebp
  00111	5b		 pop	 ebx
  00112	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c2 04 00	 ret	 4
?make_minidump@@YGJPAU_EXCEPTION_POINTERS@@@Z ENDP	; make_minidump
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?About@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hDlg$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?About@@YGJPAUHWND__@@IIJ@Z PROC			; About, COMDAT

; 792  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 793  : 	switch (message)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00006	2d 10 01 00 00	 sub	 eax, 272		; 00000110H
  0000b	74 1d		 je	 SHORT $LN4@About
  0000d	83 e8 01	 sub	 eax, 1
  00010	75 21		 jne	 SHORT $LN6@About

; 797  : 
; 798  : 		case WM_COMMAND:
; 799  : 			if ( ( wParam & 0xFFFF & 0xFFFF ) == IDOK || (wParam & 0xFFFF & 0xFFFF ) == IDCANCEL) 

  00012	0f b7 45 10	 movzx	 eax, WORD PTR _wParam$[ebp]
  00016	83 f8 01	 cmp	 eax, 1
  00019	74 05		 je	 SHORT $LN7@About
  0001b	83 f8 02	 cmp	 eax, 2
  0001e	75 13		 jne	 SHORT $LN6@About
$LN7@About:

; 800  : 			{
; 801  : 				EndDialog(hDlg, (wParam& 0xFFFF & 0xFFFF ));

  00020	50		 push	 eax
  00021	ff 75 08	 push	 DWORD PTR _hDlg$[ebp]
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
$LN4@About:

; 794  : 	{
; 795  : 		case WM_INITDIALOG:
; 796  : 				return TRUE;

  0002a	b8 01 00 00 00	 mov	 eax, 1

; 807  : }

  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
$LN6@About:

; 802  : 				return TRUE;
; 803  : 			}
; 804  : 			break;
; 805  : 	}
; 806  :     return FALSE;

  00033	33 c0		 xor	 eax, eax

; 807  : }

  00035	5d		 pop	 ebp
  00036	c2 10 00	 ret	 16			; 00000010H
?About@@YGJPAUHWND__@@IIJ@Z ENDP			; About
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?WndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_closeplayer$2 = -292					; size = 4
_rect$3 = -288						; size = 16
_szTemp$4 = -272					; size = 256
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WndProc@@YGJPAUHWND__@@IIJ@Z PROC			; WndProc, COMDAT

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?WndProc@@YGJPAUHWND__@@IIJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 317  : 	INT wmId, wmEvent;
; 318  : 
; 319  : 	switch (message) 

  0002e	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00031	8b 7d 08	 mov	 edi, DWORD PTR _hWnd$[ebp]
  00034	3d 01 04 00 00	 cmp	 eax, 1025		; 00000401H
  00039	0f 87 c2 09 00
	00		 ja	 $LN126@WndProc
  0003f	0f 84 a7 09 00
	00		 je	 $LN79@WndProc
  00045	83 f8 10	 cmp	 eax, 16			; 00000010H
  00048	77 5e		 ja	 SHORT $LN127@WndProc
  0004a	74 2d		 je	 SHORT $LN119@WndProc
  0004c	8b c8		 mov	 ecx, eax
  0004e	83 e9 01	 sub	 ecx, 1
  00051	0f 84 5a 0a 00
	00		 je	 $LN14@WndProc
  00057	83 e9 01	 sub	 ecx, 1
  0005a	0f 85 55 0a 00
	00		 jne	 $LN122@WndProc

; 777  : 			}
; 778  : 			break;
; 779  : 		case WM_DESTROY:
; 780  : 			GameMainFree();

  00060	e8 00 00 00 00	 call	 ?GameMainFree@@YAXXZ	; GameMainFree

; 781  : 			GiocpDelete();

  00065	e8 00 00 00 00	 call	 ?GiocpDelete@@YAXXZ	; GiocpDelete

; 782  : 			PostQuitMessage(0);

  0006a	6a 00		 push	 0
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4

; 786  :    }
; 787  :    return 0;

  00072	33 c0		 xor	 eax, eax
  00074	e9 4a 0a 00 00	 jmp	 $LN1@WndProc
$LN119@WndProc:

; 766  : 					}
; 767  : #else
; 768  : 					LogDateChange();
; 769  : #endif
; 770  : 					break;
; 771  : 			}
; 772  : 			break;
; 773  : 		case WM_CLOSE:
; 774  : 			if (MessageBox(ghWnd, "GameServer close?", "Close", MB_YESNO|MB_APPLMODAL) == IDYES)

  00079	6a 04		 push	 4
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_05LGELBCGM@Close?$AA@
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EBEJPBOM@GameServer?5close?$DP?$AA@
  00085	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  00091	83 f8 06	 cmp	 eax, 6
  00094	0f 85 17 0a 00
	00		 jne	 $LN14@WndProc

; 775  : 			{
; 776  : 				DestroyWindow(hWnd);

  0009a	57		 push	 edi
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4

; 786  :    }
; 787  :    return 0;

  000a1	33 c0		 xor	 eax, eax
  000a3	e9 1b 0a 00 00	 jmp	 $LN1@WndProc
$LN127@WndProc:

; 317  : 	INT wmId, wmEvent;
; 318  : 
; 319  : 	switch (message) 

  000a8	8b c8		 mov	 ecx, eax
  000aa	81 e9 11 01 00
	00		 sub	 ecx, 273		; 00000111H
  000b0	0f 84 4d 04 00
	00		 je	 $LN15@WndProc
  000b6	83 e9 02	 sub	 ecx, 2
  000b9	0f 85 f6 09 00
	00		 jne	 $LN122@WndProc

; 566  : 			break;
; 567  : 		case WM_TIMER:
; 568  : 			switch ( wParam )

  000bf	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  000c2	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  000c7	0f 87 91 01 00
	00		 ja	 $LN125@WndProc
  000cd	0f 84 15 01 00
	00		 je	 $LN105@WndProc
  000d3	83 e8 64	 sub	 eax, 100		; 00000064H
  000d6	0f 84 8c 00 00
	00		 je	 $LN91@WndProc
  000dc	83 e8 01	 sub	 eax, 1
  000df	0f 85 cc 09 00
	00		 jne	 $LN14@WndProc

; 640  : 					break;
; 641  : 				case WM_FIRST_MSG_PROCESS:
; 642  : 					{
; 643  : 						int n;
; 644  : 						for ( n=0;n<OBJMAX;n++)

  000e5	33 f6		 xor	 esi, esi
  000e7	33 db		 xor	 ebx, ebx
  000e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@WndProc:

; 645  : 						{
; 646  : 							gObjStateSetCreate(n);

  000f0	56		 push	 esi
  000f1	e8 00 00 00 00	 call	 ?gObjStateSetCreate@@YAXH@Z ; gObjStateSetCreate

; 647  : 							gObjViewportListDestroy(n);

  000f6	0f b7 fe	 movzx	 edi, si
  000f9	57		 push	 edi
  000fa	e8 00 00 00 00	 call	 ?gObjViewportListDestroy@@YAXF@Z ; gObjViewportListDestroy

; 648  : 							gObjViewportListCreate(n);

  000ff	57		 push	 edi
  00100	e8 00 00 00 00	 call	 ?gObjViewportListCreate@@YAXF@Z ; gObjViewportListCreate

; 649  : 							gObjViewportListProtocol(n);

  00105	57		 push	 edi
  00106	e8 00 00 00 00	 call	 ?gObjViewportListProtocol@@YAXF@Z ; gObjViewportListProtocol
  0010b	83 c4 10	 add	 esp, 16			; 00000010H

; 650  : 
; 651  : 							if( n >= OBJ_STARTUSERINDEX )

  0010e	81 fe 04 29 00
	00		 cmp	 esi, 10500		; 00002904H
  00114	7c 32		 jl	 SHORT $LN8@WndProc

; 652  : 							{
; 653  : 								gObjUnionUpdateProc(n);

  00116	56		 push	 esi
  00117	e8 00 00 00 00	 call	 ?gObjUnionUpdateProc@@YAXH@Z ; gObjUnionUpdateProc
  0011c	83 c4 04	 add	 esp, 4

; 654  : 
; 655  : 								if ( gDoPShopOpen != FALSE )

  0011f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gDoPShopOpen@@3HA, 0 ; gDoPShopOpen
  00126	74 20		 je	 SHORT $LN8@WndProc

; 656  : 								{
; 657  : 									PShop_ViewportListRegenarate(n);

  00128	57		 push	 edi
  00129	e8 00 00 00 00	 call	 ?PShop_ViewportListRegenarate@@YAXF@Z ; PShop_ViewportListRegenarate

; 658  : 
; 659  : 									if (gObjIsConnected(n) != PLAYER_EMPTY )

  0012e	56		 push	 esi
  0012f	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00134	83 c4 08	 add	 esp, 8
  00137	85 c0		 test	 eax, eax
  00139	74 0d		 je	 SHORT $LN8@WndProc

; 660  : 									{
; 661  : 										gObj[n].m_bPShopItemChange = false;

  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00140	c6 84 03 5e 12
	00 00 00	 mov	 BYTE PTR [ebx+eax+4702], 0
$LN8@WndProc:

; 640  : 					break;
; 641  : 				case WM_FIRST_MSG_PROCESS:
; 642  : 					{
; 643  : 						int n;
; 644  : 						for ( n=0;n<OBJMAX;n++)

  00148	81 c3 40 27 00
	00		 add	 ebx, 10048		; 00002740H
  0014e	46		 inc	 esi
  0014f	81 fb 00 2f e3
	06		 cmp	 ebx, 115552000		; 06e32f00H
  00155	7c 99		 jl	 SHORT $LL10@WndProc

; 662  : 									}
; 663  : 								}
; 664  : 							}
; 665  : 						}
; 666  : 						gObjSetState();

  00157	e8 00 00 00 00	 call	 ?gObjSetState@@YAXXZ	; gObjSetState

; 667  : 						GameServerInfoSend();

  0015c	e8 00 00 00 00	 call	 ?GameServerInfoSend@@YAXXZ ; GameServerInfoSend

; 786  :    }
; 787  :    return 0;

  00161	33 c0		 xor	 eax, eax
  00163	e9 5b 09 00 00	 jmp	 $LN1@WndProc
$LN91@WndProc:

; 573  : 					break;
; 574  : 				case WM_LOG_PAINT:
; 575  : 					{
; 576  : 						RECT rect;
; 577  : 						HDC hdc = GetDC(hWnd);

  00168	57		 push	 edi
  00169	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  0016f	8b f0		 mov	 esi, eax

; 578  : 						GetClientRect(hWnd, &rect);

  00171	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _rect$3[ebp]
  00177	50		 push	 eax
  00178	57		 push	 edi
  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 579  : 						FillRect(hdc, &rect, (HBRUSH)GetStockObject(0));

  0017f	6a 00		 push	 0
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  00187	50		 push	 eax
  00188	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _rect$3[ebp]
  0018e	50		 push	 eax
  0018f	56		 push	 esi
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FillRect@12

; 580  : 						ReleaseDC(hWnd, hdc);

  00196	56		 push	 esi
  00197	57		 push	 edi
  00198	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8

; 581  : 
; 582  : 						if ( gCurPaintType == 0)

  0019e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gCurPaintType@@3HA, 0 ; gCurPaintType
  001a5	75 0f		 jne	 SHORT $LN93@WndProc

; 583  : 						{
; 584  : 							if ( LogTextPaint != NULL )

  001a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?LogTextPaint@@3P6AXPAUHWND__@@@ZA ; LogTextPaint
  001ac	85 c0		 test	 eax, eax
  001ae	74 06		 je	 SHORT $LN93@WndProc

; 585  : 							{
; 586  : 								LogTextPaint(hWnd);

  001b0	57		 push	 edi
  001b1	ff d0		 call	 eax
  001b3	83 c4 04	 add	 esp, 4
$LN93@WndProc:

; 587  : 							}
; 588  : 						}
; 589  : 						
; 590  : 						gObjViewportPaint(hWnd, gCurPaintPlayer);

  001b6	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?gCurPaintPlayer@@3HA
  001bd	50		 push	 eax
  001be	57		 push	 edi
  001bf	e8 00 00 00 00	 call	 ?gObjViewportPaint@@YAXPAUHWND__@@F@Z ; gObjViewportPaint
  001c4	83 c4 08	 add	 esp, 8

; 591  : 						g_ServerInfoDisplayer.Run(hWnd);

  001c7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A ; g_ServerInfoDisplayer
  001cc	57		 push	 edi
  001cd	e8 00 00 00 00	 call	 ?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z ; TServerInfoDisplayer::Run

; 592  : 						GJNotifyMaxUserCount();

  001d2	e8 00 00 00 00	 call	 ?GJNotifyMaxUserCount@@YAXXZ ; GJNotifyMaxUserCount

; 593  : 
; 594  : #if (__CUSTOM__ == 1)
; 595  : 					g_Notice.SendOnPoint();

  001d7	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Notice@@3VNotice@@A ; g_Notice
  001dc	e8 00 00 00 00	 call	 ?SendOnPoint@Notice@@QAEXXZ ; Notice::SendOnPoint

; 786  :    }
; 787  :    return 0;

  001e1	33 c0		 xor	 eax, eax
  001e3	e9 db 08 00 00	 jmp	 $LN1@WndProc
$LN105@WndProc:

; 668  : 					}
; 669  : 					break;
; 670  : 				case WM_SECOND_MSG_PROCESS:
; 671  : 					{
; 672  : 						for (int n = 0;n<MAX_NUMBER_MAP;n++)

  001e8	be 00 00 00 00	 mov	 esi, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  001ed	0f 1f 00	 npad	 3
$LL13@WndProc:

; 673  : 						{
; 674  : 							MapC[n].WeatherVariationProcess();

  001f0	8b ce		 mov	 ecx, esi
  001f2	e8 00 00 00 00	 call	 ?WeatherVariationProcess@MapClass@@QAEXXZ ; MapClass::WeatherVariationProcess
  001f7	81 c6 28 38 05
	00		 add	 esi, 342056		; 00053828H
  001fd	81 fe a0 ef 09
	02		 cmp	 esi, OFFSET ?MapC@@3PAVMapClass@@A+34205600
  00203	7c eb		 jl	 SHORT $LL13@WndProc

; 675  : 						}
; 676  : 						wsGServer.m_SendSec = wsGServer.m_SendSecTmp;

  00205	a1 20 00 00 00	 mov	 eax, DWORD PTR ?wsGServer@@3VCwsGameServer@@A+32

; 677  : 						wsGServer.m_RecvSec = wsGServer.m_RecvSecTmp;
; 678  : 						wsGServer.m_SendSecTmp = 0;
; 679  : 						wsGServer.m_RecvSecTmp = 0;
; 680  : 						DragonEvent->Run();

  0020a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00210	a3 1c 00 00 00	 mov	 DWORD PTR ?wsGServer@@3VCwsGameServer@@A+28, eax
  00215	a1 28 00 00 00	 mov	 eax, DWORD PTR ?wsGServer@@3VCwsGameServer@@A+40
  0021a	a3 24 00 00 00	 mov	 DWORD PTR ?wsGServer@@3VCwsGameServer@@A+36, eax
  0021f	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wsGServer@@3VCwsGameServer@@A+32, 0
  00229	c7 05 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wsGServer@@3VCwsGameServer@@A+40, 0
  00233	e8 00 00 00 00	 call	 ?Run@CDragonEvent@@QAEXXZ ; CDragonEvent::Run

; 681  : 						AttackEvent->Run();

  00238	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?AttackEvent@@3PAVCAttackEvent@@A ; AttackEvent
  0023e	e8 00 00 00 00	 call	 ?Run@CAttackEvent@@QAEXXZ ; CAttackEvent::Run

; 682  : 						gEledoradoEvent.Run();

  00243	b9 00 00 00 00	 mov	 ecx, OFFSET ?gEledoradoEvent@@3VCEledoradoEvent@@A ; gEledoradoEvent
  00248	e8 00 00 00 00	 call	 ?Run@CEledoradoEvent@@QAEXXZ ; CEledoradoEvent::Run

; 683  : 						g_EventManager.Run();

  0024d	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_EventManager@@3VCEventManagement@@A ; g_EventManager
  00252	e8 00 00 00 00	 call	 ?Run@CEventManagement@@QAEXXZ ; CEventManagement::Run

; 786  :    }
; 787  :    return 0;

  00257	33 c0		 xor	 eax, eax
  00259	e9 65 08 00 00	 jmp	 $LN1@WndProc
$LN125@WndProc:

; 566  : 			break;
; 567  : 		case WM_TIMER:
; 568  : 			switch ( wParam )

  0025e	05 17 fc ff ff	 add	 eax, -1001		; fffffc17H
  00263	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00266	0f 87 45 08 00
	00		 ja	 $LN14@WndProc
  0026c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN144@WndProc[eax*4]
$LN90@WndProc:

; 569  : 			{
; 570  : 				case WM_GUILD_LIST_REQUEST:
; 571  : 					DGGuildListRequest();

  00273	e8 00 00 00 00	 call	 ?DGGuildListRequest@@YAXXZ ; DGGuildListRequest

; 572  : 					KillTimer(ghWnd, WM_GUILD_LIST_REQUEST);

  00278	68 f0 03 00 00	 push	 1008			; 000003f0H
  0027d	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00283	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8

; 786  :    }
; 787  :    return 0;

  00289	33 c0		 xor	 eax, eax
  0028b	e9 33 08 00 00	 jmp	 $LN1@WndProc
$LN94@WndProc:

; 596  : #endif
; 597  : 					}
; 598  : 					break;
; 599  : 				case WM_MONSTER_AND_MSG_PROC:
; 600  : 					MonsterAndMsgProc();

  00290	e8 00 00 00 00	 call	 ?MonsterAndMsgProc@@YAXXZ ; MonsterAndMsgProc

; 786  :    }
; 787  :    return 0;

  00295	33 c0		 xor	 eax, eax
  00297	e9 27 08 00 00	 jmp	 $LN1@WndProc
$LN95@WndProc:

; 601  : 					break;
; 602  : 				case WM_MOVE_MONSTER_PROC:
; 603  : 					MoveMonsterProc();

  0029c	e8 00 00 00 00	 call	 ?MoveMonsterProc@@YAXXZ	; MoveMonsterProc

; 604  : #if (GS_CASTLE==0 || GS_SPEC == 1)
; 605  : 					g_Kanturu.UserMonsterCountCheck();

  002a1	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  002a6	e8 00 00 00 00	 call	 ?UserMonsterCountCheck@CKanturu@@QAEXXZ ; CKanturu::UserMonsterCountCheck

; 786  :    }
; 787  :    return 0;

  002ab	33 c0		 xor	 eax, eax
  002ad	e9 11 08 00 00	 jmp	 $LN1@WndProc
$LN96@WndProc:

; 606  : #endif
; 607  : 					break;
; 608  : 				case WM_EVENT_RUN_PROC:
; 609  : 					g_BloodCastle.Run();

  002b2	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_BloodCastle@@3VCBloodCastle@@A ; g_BloodCastle
  002b7	e8 00 00 00 00	 call	 ?Run@CBloodCastle@@QAEXXZ ; CBloodCastle::Run

; 610  : 					g_RingAttackEvent.Run();

  002bc	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RingAttackEvent@@3VCRingAttackEvent@@A ; g_RingAttackEvent
  002c1	e8 00 00 00 00	 call	 ?Run@CRingAttackEvent@@QAEXXZ ; CRingAttackEvent::Run

; 611  : 					g_ChaosCastle.Run();

  002c6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ChaosCastle@@3VCChaosCastle@@A ; g_ChaosCastle
  002cb	e8 00 00 00 00	 call	 ?Run@CChaosCastle@@QAEXXZ ; CChaosCastle::Run

; 612  : 					g_IllusionTemple.Run();

  002d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_IllusionTemple@@3VCIllusionTempleEvent@@A ; g_IllusionTemple
  002d5	e8 00 00 00 00	 call	 ?Run@CIllusionTempleEvent@@QAEXXZ ; CIllusionTempleEvent::Run

; 613  : #if (GS_CASTLE==1)
; 614  : 					g_CastleSiege.Run();

  002da	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  002df	e8 00 00 00 00	 call	 ?Run@CCastleSiege@@QAEXXZ ; CCastleSiege::Run

; 615  : 					g_CastleDeepEvent.Run();

  002e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleDeepEvent@@3VCCastleDeepEvent@@A ; g_CastleDeepEvent
  002e9	e8 00 00 00 00	 call	 ?Run@CCastleDeepEvent@@QAEXXZ ; CCastleDeepEvent::Run

; 616  : 					g_CsNPC_Weapon.WeaponAttackProc();

  002ee	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CsNPC_Weapon@@3VCWeapon@@A ; g_CsNPC_Weapon
  002f3	e8 00 00 00 00	 call	 ?WeaponAttackProc@CWeapon@@QAEXXZ ; CWeapon::WeaponAttackProc

; 617  : 					g_Crywolf.Run();

  002f8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Crywolf@@3VCCrywolf@@A ; g_Crywolf
  002fd	e8 00 00 00 00	 call	 ?Run@CCrywolf@@QAEXXZ	; CCrywolf::Run

; 618  : #endif
; 619  : #if (GS_CASTLE == 0 || GS_SPEC == 1)
; 620  : 					g_Kanturu.Run();

  00302	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Kanturu@@3VCKanturu@@A ; g_Kanturu
  00307	e8 00 00 00 00	 call	 ?Run@CKanturu@@QAEXXZ	; CKanturu::Run

; 621  : 					g_CsNPC_Weapon.WeaponAttackProc();

  0030c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CsNPC_Weapon@@3VCWeapon@@A ; g_CsNPC_Weapon
  00311	e8 00 00 00 00	 call	 ?WeaponAttackProc@CWeapon@@QAEXXZ ; CWeapon::WeaponAttackProc

; 622  : #endif
; 623  : 					g_Raklion.Run();

  00316	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Raklion@@3VCRaklion@@A ; g_Raklion
  0031b	e8 00 00 00 00	 call	 ?Run@CRaklion@@QAEXXZ	; CRaklion::Run

; 624  : 					g_XMasAttackEvent.Run();

  00320	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_XMasAttackEvent@@3VCXMasAttackEvent@@A ; g_XMasAttackEvent
  00325	e8 00 00 00 00	 call	 ?Run@CXMasAttackEvent@@QAEXXZ ; CXMasAttackEvent::Run

; 625  : 					g_ImperialGuardian.Run();

  0032a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ImperialGuardian@@3VCImperialGuardian@@A ; g_ImperialGuardian
  0032f	e8 00 00 00 00	 call	 ?Run@CImperialGuardian@@QAEXXZ ; CImperialGuardian::Run

; 626  : 					//gDuelSystem.Run();
; 627  : 					gDoubleGoer.Run();

  00334	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDoubleGoer@@3VCDoubleGoerEvent@@A ; gDoubleGoer
  00339	e8 00 00 00 00	 call	 ?Run@CDoubleGoerEvent@@QAEXXZ ; CDoubleGoerEvent::Run

; 786  :    }
; 787  :    return 0;

  0033e	33 c0		 xor	 eax, eax
  00340	e9 7e 07 00 00	 jmp	 $LN1@WndProc
$LN99@WndProc:

; 628  : 					break;
; 629  : 				case WM_EVENT_RUN_PROC2:
; 630  : 					//g_ArcaWar.Run();
; 631  : 					break;
; 632  : 				case WM_DUEL_RUN_PROC:
; 633  : 					//g_DuelManager.Run();
; 634  : 					break;
; 635  : 				case WM_AI_MONSTER_MOVE_PROC:
; 636  : 					TMonsterAI::MonsterMoveProc();

  00345	e8 00 00 00 00	 call	 ?MonsterMoveProc@TMonsterAI@@SAXXZ ; TMonsterAI::MonsterMoveProc

; 786  :    }
; 787  :    return 0;

  0034a	33 c0		 xor	 eax, eax
  0034c	e9 72 07 00 00	 jmp	 $LN1@WndProc
$LN100@WndProc:

; 637  : 					break;
; 638  : 				case WM_AI_MONSTER_PROC:
; 639  : 					TMonsterAI::MonsterAIProc();

  00351	e8 00 00 00 00	 call	 ?MonsterAIProc@TMonsterAI@@SAXXZ ; TMonsterAI::MonsterAIProc

; 786  :    }
; 787  :    return 0;

  00356	33 c0		 xor	 eax, eax
  00358	e9 66 07 00 00	 jmp	 $LN1@WndProc
$LN106@WndProc:

; 684  : #if (CUSTOM_OLYMP==1)
; 685  : 						g_CustomOlymp.Run();
; 686  : #endif
; 687  : 					}
; 688  : 					break;
; 689  : 				case WM_GS_CLOSE:
; 690  : 					if ( gCloseMsg != 0 )

  0035d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gCloseMsg@@3HA, 0 ; gCloseMsg
  00364	0f 84 d9 00 00
	00		 je	 $LN112@WndProc

; 691  : 					{
; 692  : 						gCloseMsgTime--;

  0036a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gCloseMsgTime@@3HA ; gCloseMsgTime
  00370	4e		 dec	 esi
  00371	89 35 00 00 00
	00		 mov	 DWORD PTR ?gCloseMsgTime@@3HA, esi ; gCloseMsgTime

; 693  : 
; 694  : 						if ( gCloseMsgTime <= 1 )

  00377	83 fe 01	 cmp	 esi, 1
  0037a	7f 3b		 jg	 SHORT $LN108@WndProc

; 695  : 						{
; 696  : 							if ( gCloseMsgTime == 1 )

  0037c	0f 85 93 00 00
	00		 jne	 $LN111@WndProc

; 697  : 							{
; 698  : 								AllSendServerMsg(lMsg.Get(MSGGET(1, 193)));

  00382	68 c1 01 00 00	 push	 449			; 000001c1H
  00387	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0038c	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00391	50		 push	 eax
  00392	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00397	83 c4 04	 add	 esp, 4

; 699  : 								LogAddC(2, lMsg.Get(MSGGET(1, 193)));

  0039a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0039f	68 c1 01 00 00	 push	 449			; 000001c1H
  003a4	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  003a9	50		 push	 eax
  003aa	6a 02		 push	 2
  003ac	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  003b2	83 c4 08	 add	 esp, 8

; 700  : 							}
; 701  : 						}
; 702  : 						else

  003b5	eb 58		 jmp	 SHORT $LN140@WndProc
$LN108@WndProc:

; 703  : 						{
; 704  : 							if ( (gCloseMsgTime % 10) == 0 )

  003b7	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  003bc	f7 ee		 imul	 esi
  003be	c1 fa 02	 sar	 edx, 2
  003c1	8b c2		 mov	 eax, edx
  003c3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003c6	03 c2		 add	 eax, edx
  003c8	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  003cb	8b c6		 mov	 eax, esi
  003cd	03 c9		 add	 ecx, ecx
  003cf	2b c1		 sub	 eax, ecx
  003d1	75 42		 jne	 SHORT $LN111@WndProc

; 705  : 							{
; 706  : 								char szTemp[256];
; 707  : 
; 708  : 								wsprintf( szTemp, lMsg.Get(MSGGET(1, 194)), gCloseMsgTime);

  003d3	56		 push	 esi
  003d4	68 c2 01 00 00	 push	 450			; 000001c2H
  003d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  003de	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  003e3	50		 push	 eax
  003e4	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szTemp$4[ebp]
  003ea	50		 push	 eax
  003eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 709  : 								AllSendServerMsg(szTemp);

  003f1	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szTemp$4[ebp]
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg

; 710  : 								LogAddC(2, szTemp);

  003fd	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szTemp$4[ebp]
  00403	50		 push	 eax
  00404	6a 02		 push	 2
  00406	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0040c	83 c4 18	 add	 esp, 24			; 00000018H
$LN140@WndProc:
  0040f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gCloseMsgTime@@3HA ; gCloseMsgTime
$LN111@WndProc:

; 711  : 							}
; 712  : 						}
; 713  : 
; 714  : 						if ( gCloseMsgTime < 0 )

  00415	85 f6		 test	 esi, esi
  00417	79 2a		 jns	 SHORT $LN112@WndProc

; 715  : 						{
; 716  : 							KillTimer(ghWnd, WM_GS_CLOSE);

  00419	68 ea 03 00 00	 push	 1002			; 000003eaH
  0041e	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00424	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__KillTimer@8

; 717  : 							gObjAllLogOut();

  0042a	e8 00 00 00 00	 call	 ?gObjAllLogOut@@YAXXZ	; gObjAllLogOut

; 718  : 							gCloseMsgTime = 0;

  0042f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gCloseMsgTime@@3HA, 0 ; gCloseMsgTime

; 719  : 							gCloseMsg = 0;

  00439	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gCloseMsg@@3HA, 0 ; gCloseMsg
$LN112@WndProc:

; 720  : 						}
; 721  : 					}
; 722  : 					gObjSecondProc();

  00443	e8 00 00 00 00	 call	 ?gObjSecondProc@@YAXXZ	; gObjSecondProc

; 723  : #if (GS_CASTLE == 1)
; 724  : 					if(cDBSMng.GetActiveDS() > -1)

  00448	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0044d	e8 00 00 00 00	 call	 ?GetActiveDS@DBSockMng@@QAEHXZ ; DBSockMng::GetActiveDS
  00452	83 f8 ff	 cmp	 eax, -1
  00455	7e 19		 jle	 SHORT $LN114@WndProc

; 725  : 					{
; 726  : 						if(g_CastleSiege.GetDataLoadState() == 2)

  00457	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0045c	e8 00 00 00 00	 call	 ?GetDataLoadState@CCastleSiege@@QAEHXZ ; CCastleSiege::GetDataLoadState
  00461	83 f8 02	 cmp	 eax, 2
  00464	75 0a		 jne	 SHORT $LN114@WndProc

; 727  : 						{
; 728  : 							g_CastleSiege.DataRequest();

  00466	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0046b	e8 00 00 00 00	 call	 ?DataRequest@CCastleSiege@@QAEHXZ ; CCastleSiege::DataRequest
$LN114@WndProc:

; 729  : 						}
; 730  : 
; 731  : #if (CUSTOM_OLYMP==1)
; 732  : 						if(g_CustomOlymp.GetDataLoadState() == 2 )
; 733  : 						{
; 734  : 							g_CustomOlymp.DataRequest();
; 735  : 						}
; 736  : 					
; 737  : #endif
; 738  : 					}
; 739  : 					g_CastleSiege.SendCastleStateSync();

  00470	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00475	e8 00 00 00 00	 call	 ?SendCastleStateSync@CCastleSiege@@QAEXXZ ; CCastleSiege::SendCastleStateSync

; 740  : 					g_CastleSiegeSync.AdjustTributeMoney();

  0047a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  0047f	e8 00 00 00 00	 call	 ?AdjustTributeMoney@CCastleSiegeSync@@QAEXXZ ; CCastleSiegeSync::AdjustTributeMoney

; 741  : 					g_Crywolf.CrywolfSecondAct();

  00484	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_Crywolf@@3VCCrywolf@@A ; g_Crywolf
  00489	e8 00 00 00 00	 call	 ?CrywolfSecondAct@CCrywolf@@QAEXXZ ; CCrywolf::CrywolfSecondAct

; 742  : #endif
; 743  : #if (GS_CASTLE == 0 || GS_SPEC == 1)
; 744  : 					g_CastleSiegeSync.AdjustTributeMoney();

  0048e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiegeSync@@3VCCastleSiegeSync@@A ; g_CastleSiegeSync
  00493	e8 00 00 00 00	 call	 ?AdjustTributeMoney@CCastleSiegeSync@@QAEXXZ ; CCastleSiegeSync::AdjustTributeMoney

; 745  : 
; 746  : #if(__GENS_SYSTEM__ == 1)
; 747  : 					gGensSystem.UpdateRun();

  00498	b9 00 00 00 00	 mov	 ecx, OFFSET ?gGensSystem@@3VCGensSystem@@A ; gGensSystem
  0049d	e8 00 00 00 00	 call	 ?UpdateRun@CGensSystem@@QAEXXZ ; CGensSystem::UpdateRun

; 786  :    }
; 787  :    return 0;

  004a2	33 c0		 xor	 eax, eax
  004a4	e9 1a 06 00 00	 jmp	 $LN1@WndProc
$LN115@WndProc:

; 748  : #endif
; 749  : #endif
; 750  : 					break;
; 751  : 				case WM_SET_DATE:
; 752  : 					gSetDate();

  004a9	e8 00 00 00 00	 call	 ?gSetDate@@YAXXZ	; gSetDate

; 753  : 					WhisperCash.TimeCheckCashDelete();

  004ae	b9 00 00 00 00	 mov	 ecx, OFFSET ?WhisperCash@@3VCWhisperCash@@A ; WhisperCash
  004b3	e8 00 00 00 00	 call	 ?TimeCheckCashDelete@CWhisperCash@@QAEXXZ ; CWhisperCash::TimeCheckCashDelete

; 786  :    }
; 787  :    return 0;

  004b8	33 c0		 xor	 eax, eax
  004ba	e9 04 06 00 00	 jmp	 $LN1@WndProc
$LN116@WndProc:

; 754  : 					break;
; 755  : 				case WM_CONNECT_DATASERVER:
; 756  : 					cDBSMng.Connect();

  004bf	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  004c4	e8 00 00 00 00	 call	 ?Connect@DBSockMng@@QAEXXZ ; DBSockMng::Connect

; 757  : 					g_CashShop.CheckShopServerConnectState();

  004c9	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CashShop@@3VCCashShop@@A ; g_CashShop
  004ce	e8 00 00 00 00	 call	 ?CheckShopServerConnectState@CCashShop@@QAEXXZ ; CCashShop::CheckShopServerConnectState

; 758  : 					gObjCheckAllUserDuelStop();

  004d3	e8 00 00 00 00	 call	 ?gObjCheckAllUserDuelStop@@YAXXZ ; gObjCheckAllUserDuelStop

; 759  : 					g_CashShop.ItemCheckWorker();

  004d8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CashShop@@3VCCashShop@@A ; g_CashShop
  004dd	e8 00 00 00 00	 call	 ?ItemCheckWorker@CCashShop@@QAEXXZ ; CCashShop::ItemCheckWorker

; 786  :    }
; 787  :    return 0;

  004e2	33 c0		 xor	 eax, eax
  004e4	e9 da 05 00 00	 jmp	 $LN1@WndProc
$LN117@WndProc:

; 760  : 					break;
; 761  : 				case WM_LOG_DATE_CHANGE:
; 762  : #if (GS_CASTLE == 1)
; 763  : 					if(LogDateChange() == TRUE)	

  004e9	e8 00 00 00 00	 call	 ?LogDateChange@@YAHXZ	; LogDateChange
  004ee	83 f8 01	 cmp	 eax, 1
  004f1	0f 85 ba 05 00
	00		 jne	 $LN14@WndProc

; 764  : 					{
; 765  : 						g_iCastleItemMixLimit = 1;

  004f7	a3 00 00 00 00	 mov	 DWORD PTR ?g_iCastleItemMixLimit@@3HA, eax ; g_iCastleItemMixLimit

; 786  :    }
; 787  :    return 0;

  004fc	33 c0		 xor	 eax, eax
  004fe	e9 c0 05 00 00	 jmp	 $LN1@WndProc
$LN15@WndProc:

; 320  : 	{
; 321  : 		case WM_CREATE:
; 322  : 			return 0;
; 323  : 		case WM_COMMAND:
; 324  : 
; 325  : 			wmId    = wParam & 0xFFFF & 0xFFFF; 

  00503	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00506	0f b7 c1	 movzx	 eax, cx

; 326  : 			wmEvent = (wParam >> 16) & 0xFFFF;
; 327  : 
; 328  : 			switch (wmId)

  00509	3d 03 80 00 00	 cmp	 eax, 32771		; 00008003H
  0050e	7f 5a		 jg	 SHORT $LN124@WndProc
  00510	74 3d		 je	 SHORT $LN39@WndProc
  00512	83 e8 68	 sub	 eax, 104		; 00000068H
  00515	74 1b		 je	 SHORT $LN16@WndProc
  00517	83 e8 01	 sub	 eax, 1
  0051a	0f 85 be 04 00
	00		 jne	 $LN78@WndProc

; 332  : 				   break;
; 333  : 				case IDM_EXIT:
; 334  : 				   SendMessage(hWnd, WM_CLOSE, 0, 0);

  00520	50		 push	 eax
  00521	50		 push	 eax
  00522	6a 10		 push	 16			; 00000010H
  00524	57		 push	 edi
  00525	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 786  :    }
; 787  :    return 0;

  0052b	33 c0		 xor	 eax, eax
  0052d	e9 91 05 00 00	 jmp	 $LN1@WndProc
$LN16@WndProc:

; 329  : 			{
; 330  : 				case IDM_ABOUT:
; 331  : 				   DialogBox(hInst, (LPCTSTR)IDD_ABOUT_BOX, hWnd, (DLGPROC)About);

  00532	6a 00		 push	 0
  00534	68 00 00 00 00	 push	 OFFSET ?About@@YGJPAUHWND__@@IIJ@Z ; About
  00539	57		 push	 edi
  0053a	6a 67		 push	 103			; 00000067H
  0053c	ff 35 00 00 00
	00		 push	 DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
  00542	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20

; 786  :    }
; 787  :    return 0;

  00548	33 c0		 xor	 eax, eax
  0054a	e9 74 05 00 00	 jmp	 $LN1@WndProc
$LN39@WndProc:

; 410  : 					gCurPaintMapNumber = 34;	// Crywolf
; 411  : 					break;
; 412  : 				case IDM_DOUBLEGOER1:
; 413  : 					gCurPaintType=1;

  0054f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCurPaintType@@3HA, 1 ; gCurPaintType

; 786  :    }
; 787  :    return 0;

  00559	33 c0		 xor	 eax, eax
  0055b	c7 05 00 00 00
	00 44 00 00 00	 mov	 DWORD PTR ?gCurPaintMapNumber@@3HA, 68 ; gCurPaintMapNumber, 00000044H
  00565	e9 59 05 00 00	 jmp	 $LN1@WndProc
$LN124@WndProc:

; 326  : 			wmEvent = (wParam >> 16) & 0xFFFF;
; 327  : 
; 328  : 			switch (wmId)

  0056a	2d 04 80 00 00	 sub	 eax, 32772		; 00008004H
  0056f	83 f8 39	 cmp	 eax, 57			; 00000039H
  00572	0f 87 66 04 00
	00		 ja	 $LN78@WndProc
  00578	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN145@WndProc[eax*4]
$LN18@WndProc:

; 335  : 				   break;
; 336  : 				case IDM_CLOSE_PLAYER:
; 337  : 					{
; 338  : 						Ccloseplayer closeplayer;

  0057f	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _closeplayer$2[ebp]
  00585	e8 00 00 00 00	 call	 ??0Ccloseplayer@@QAE@XZ	; Ccloseplayer::Ccloseplayer

; 339  : 						closeplayer.Load("closeplayer.txt");

  0058a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LAAHBEDI@closeplayer?4txt?$AA@
  0058f	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _closeplayer$2[ebp]
  00595	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0059c	e8 00 00 00 00	 call	 ?Load@Ccloseplayer@@QAEXPAD@Z ; Ccloseplayer::Load

; 340  : 					}

  005a1	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _closeplayer$2[ebp]
  005a7	e8 00 00 00 00	 call	 ??1Ccloseplayer@@UAE@XZ	; Ccloseplayer::~Ccloseplayer

; 786  :    }
; 787  :    return 0;

  005ac	33 c0		 xor	 eax, eax
  005ae	e9 10 05 00 00	 jmp	 $LN1@WndProc
$LN19@WndProc:

; 341  : 					break;
; 342  : 				case IDM_ALL_USER_CLOSE:
; 343  : 					gObjAllDisconnect();

  005b3	e8 00 00 00 00	 call	 ?gObjAllDisconnect@@YAXXZ ; gObjAllDisconnect

; 786  :    }
; 787  :    return 0;

  005b8	33 c0		 xor	 eax, eax
  005ba	e9 04 05 00 00	 jmp	 $LN1@WndProc
$LN20@WndProc:

; 344  : 					break;
; 345  : 				case IDM_ALL_USER_LOGOUT:
; 346  : 					gObjAllLogOut();

  005bf	e8 00 00 00 00	 call	 ?gObjAllLogOut@@YAXXZ	; gObjAllLogOut

; 786  :    }
; 787  :    return 0;

  005c4	33 c0		 xor	 eax, eax
  005c6	e9 f8 04 00 00	 jmp	 $LN1@WndProc
$LN21@WndProc:

; 347  : 					break;
; 348  : 				case IDM_ALL_POSITION_RELOAD:
; 349  : 					gMSetBase.MonsterSetBaseReload(LOAD_ALLOBJ);

  005cb	6a ff		 push	 -1
  005cd	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMSetBase@@3VCMonsterSetBase@@A ; gMSetBase
  005d2	e8 00 00 00 00	 call	 ?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z ; CMonsterSetBase::MonsterSetBaseReload

; 786  :    }
; 787  :    return 0;

  005d7	33 c0		 xor	 eax, eax
  005d9	e9 e5 04 00 00	 jmp	 $LN1@WndProc
$LN22@WndProc:

; 350  : 					break;
; 351  : 				case IDM_MONSTER_POSITION_RELOAD:
; 352  : 					gMSetBase.MonsterSetBaseReload(LOAD_MONSTERLIST);

  005de	6a 02		 push	 2
  005e0	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMSetBase@@3VCMonsterSetBase@@A ; gMSetBase
  005e5	e8 00 00 00 00	 call	 ?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z ; CMonsterSetBase::MonsterSetBaseReload

; 786  :    }
; 787  :    return 0;

  005ea	33 c0		 xor	 eax, eax
  005ec	e9 d2 04 00 00	 jmp	 $LN1@WndProc
$LN23@WndProc:

; 353  : 					break;
; 354  : 				case IDM_GOLDEN_POSITION_RELOAD:
; 355  : 					gMSetBase.MonsterSetBaseReload(LOAD_ELDORADOLIST);

  005f1	6a 01		 push	 1
  005f3	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMSetBase@@3VCMonsterSetBase@@A ; gMSetBase
  005f8	e8 00 00 00 00	 call	 ?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z ; CMonsterSetBase::MonsterSetBaseReload

; 786  :    }
; 787  :    return 0;

  005fd	33 c0		 xor	 eax, eax
  005ff	e9 bf 04 00 00	 jmp	 $LN1@WndProc
$LN24@WndProc:

; 356  : 					break;
; 357  : 				case IDM_NPC_POSITION_RELOAD:
; 358  : 					gMSetBase.MonsterSetBaseReload(LOAD_NPCLIST);

  00604	6a 00		 push	 0
  00606	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMSetBase@@3VCMonsterSetBase@@A ; gMSetBase
  0060b	e8 00 00 00 00	 call	 ?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z ; CMonsterSetBase::MonsterSetBaseReload

; 786  :    }
; 787  :    return 0;

  00610	33 c0		 xor	 eax, eax
  00612	e9 ac 04 00 00	 jmp	 $LN1@WndProc
$LN25@WndProc:

; 359  : 					break;
; 360  : 				case IDM_SHOP_RELOAD:
; 361  : 					g_ShopManager.Reload();

  00617	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ShopManager@@3VShopManager@@A ; g_ShopManager
  0061c	e8 00 00 00 00	 call	 ?Reload@ShopManager@@QAEXXZ ; ShopManager::Reload

; 786  :    }
; 787  :    return 0;

  00621	33 c0		 xor	 eax, eax
  00623	e9 9b 04 00 00	 jmp	 $LN1@WndProc
$LN26@WndProc:

; 362  : 					break;
; 363  : 				case IDM_MAP_SERVER_INFO_RELOAD:
; 364  : 					g_MapServerManager.LoadData(gDirPath.GetNewPath(FILE_WORLD_MAPSERVER));

  00628	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EFNDCBPE@World?2MapServer?4xml?$AA@
  0062d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00632	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00637	50		 push	 eax
  00638	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  0063d	e8 00 00 00 00	 call	 ?LoadData@CMapServerManager@@QAEHPAD@Z ; CMapServerManager::LoadData

; 786  :    }
; 787  :    return 0;

  00642	33 c0		 xor	 eax, eax
  00644	e9 7a 04 00 00	 jmp	 $LN1@WndProc
$LN27@WndProc:

; 365  : 					break;
; 366  : #if (GS_CASTLE == 1)
; 367  : 				case IDM_CASTLE_SIEGE_RELOAD:
; 368  : 					if(g_CastleSiege.LoadData(gDirPath.GetNewPath(FILE_EVENT_CASTLESIEGE)) != FALSE)

  00649	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@BGIJHNGE@Event?2CastleSiege?4dat?$AA@
  0064e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00653	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00658	50		 push	 eax
  00659	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0065e	e8 00 00 00 00	 call	 ?LoadData@CCastleSiege@@QAEHPAD@Z ; CCastleSiege::LoadData
  00663	85 c0		 test	 eax, eax
  00665	0f 84 46 04 00
	00		 je	 $LN14@WndProc

; 369  : 					{
; 370  : 						g_CastleSiege.LoadPreFixData(gDirPath.GetNewPath(FILE_SERVER_COMMON));

  0066b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@COIIOJMI@CommonServer?4cfg?$AA@
  00670	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00675	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0067a	50		 push	 eax
  0067b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  00680	e8 00 00 00 00	 call	 ?LoadPreFixData@CCastleSiege@@QAEHPAD@Z ; CCastleSiege::LoadPreFixData

; 371  : 						g_CastleSiege.SetDataLoadState(2);

  00685	6a 02		 push	 2
  00687	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CastleSiege@@3VCCastleSiege@@A ; g_CastleSiege
  0068c	e8 00 00 00 00	 call	 ?SetDataLoadState@CCastleSiege@@QAEXH@Z ; CCastleSiege::SetDataLoadState

; 786  :    }
; 787  :    return 0;

  00691	33 c0		 xor	 eax, eax
  00693	e9 2b 04 00 00	 jmp	 $LN1@WndProc
$LN29@WndProc:

; 372  : 					}
; 373  : 					break;
; 374  : #endif
; 375  : 				case IDM_OPTION_RELOAD:
; 376  : 					ReadCommonServerInfo();

  00698	e8 00 00 00 00	 call	 ?ReadCommonServerInfo@@YAXXZ ; ReadCommonServerInfo

; 786  :    }
; 787  :    return 0;

  0069d	33 c0		 xor	 eax, eax
  0069f	e9 1f 04 00 00	 jmp	 $LN1@WndProc
$LN31@WndProc:

; 377  : 					break;
; 378  : 				case IDM_RELOAD_SCRIPTS:
; 379  : #if (ENABLETEST_ZTLUA == 1)
; 380  : 					g_LuaBackup.Reload();
; 381  : #endif
; 382  : 					break;
; 383  : 				case IDM_VERSION_RELOAD:
; 384  : 					ReadCommonlocInfo();

  006a4	e8 00 00 00 00	 call	 ?ReadCommonlocInfo@@YAXXZ ; ReadCommonlocInfo

; 786  :    }
; 787  :    return 0;

  006a9	33 c0		 xor	 eax, eax
  006ab	e9 13 04 00 00	 jmp	 $LN1@WndProc
$LN32@WndProc:

; 385  : 					break;
; 386  : 				case IDM_CASHSHOP_OPTION_RELOAD:
; 387  : 					g_CashShop.CashShopOptioNReload();

  006b0	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CashShop@@3VCCashShop@@A ; g_CashShop
  006b5	e8 00 00 00 00	 call	 ?CashShopOptioNReload@CCashShop@@QAEXXZ ; CCashShop::CashShopOptioNReload

; 786  :    }
; 787  :    return 0;

  006ba	33 c0		 xor	 eax, eax
  006bc	e9 02 04 00 00	 jmp	 $LN1@WndProc
$LN33@WndProc:

; 388  : 					break;
; 389  : 				case IDM_LOG_PAINT:
; 390  : 					gCurPaintType=0;

  006c1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gCurPaintType@@3HA, 0 ; gCurPaintType

; 786  :    }
; 787  :    return 0;

  006cb	33 c0		 xor	 eax, eax
  006cd	e9 f1 03 00 00	 jmp	 $LN1@WndProc
$LN34@WndProc:

; 391  : 					break;
; 392  : 				case IDM_MAP1:
; 393  : 					gCurPaintMapNumber = 0;	// Lorencia

  006d2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gCurPaintMapNumber@@3HA, 0 ; gCurPaintMapNumber

; 786  :    }
; 787  :    return 0;

  006dc	33 c0		 xor	 eax, eax
  006de	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCurPaintType@@3HA, 1 ; gCurPaintType
  006e8	e9 d6 03 00 00	 jmp	 $LN1@WndProc
$LN35@WndProc:

; 394  : 					gCurPaintType=1;
; 395  : 					break;
; 396  : 				case IDM_MAP2:
; 397  : 					gCurPaintType=1;

  006ed	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCurPaintType@@3HA, 1 ; gCurPaintType

; 786  :    }
; 787  :    return 0;

  006f7	33 c0		 xor	 eax, eax
  006f9	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCurPaintMapNumber@@3HA, 1 ; gCurPaintMapNumber
  00703	e9 bb 03 00 00	 jmp	 $LN1@WndProc
$LN36@WndProc:

; 398  : 					gCurPaintMapNumber = 1;	// Dungeon
; 399  : 					break;
; 400  : 				case IDM_MAP3:
; 401  : 					gCurPaintType=1;

  00708	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCurPaintType@@3HA, 1 ; gCurPaintType

; 786  :    }
; 787  :    return 0;

  00712	33 c0		 xor	 eax, eax
  00714	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?gCurPaintMapNumber@@3HA, 2 ; gCurPaintMapNumber
  0071e	e9 a0 03 00 00	 jmp	 $LN1@WndProc
$LN37@WndProc:

; 402  : 					gCurPaintMapNumber = 2;	// Devias
; 403  : 					break;
; 404  : 				case IDM_MAP4:
; 405  : 					gCurPaintType=1;

  00723	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCurPaintType@@3HA, 1 ; gCurPaintType

; 786  :    }
; 787  :    return 0;

  0072d	33 c0		 xor	 eax, eax
  0072f	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?gCurPaintMapNumber@@3HA, 3 ; gCurPaintMapNumber
  00739	e9 85 03 00 00	 jmp	 $LN1@WndProc
$LN38@WndProc:

; 406  : 					gCurPaintMapNumber = 3;	// Noria
; 407  : 					break;
; 408  : 				case IDM_CRYWOLF:
; 409  : 					gCurPaintType=1;

  0073e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCurPaintType@@3HA, 1 ; gCurPaintType

; 786  :    }
; 787  :    return 0;

  00748	33 c0		 xor	 eax, eax
  0074a	c7 05 00 00 00
	00 22 00 00 00	 mov	 DWORD PTR ?gCurPaintMapNumber@@3HA, 34 ; gCurPaintMapNumber, 00000022H
  00754	e9 6a 03 00 00	 jmp	 $LN1@WndProc
$LN40@WndProc:

; 414  : 					gCurPaintMapNumber = 68;	// Double Goer
; 415  : 					break;
; 416  : 				case IDM_DRAGON_EVENT:
; 417  : 					if (  DragonEvent->GetState() != 0 )

  00759	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  0075f	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00763	74 0c		 je	 SHORT $LN41@WndProc

; 418  : 						DragonEvent->End();

  00765	e8 00 00 00 00	 call	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End

; 786  :    }
; 787  :    return 0;

  0076a	33 c0		 xor	 eax, eax
  0076c	e9 52 03 00 00	 jmp	 $LN1@WndProc
$LN41@WndProc:

; 419  : 					else
; 420  : 						DragonEvent->Start();

  00771	e8 00 00 00 00	 call	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start

; 786  :    }
; 787  :    return 0;

  00776	33 c0		 xor	 eax, eax
  00778	e9 46 03 00 00	 jmp	 $LN1@WndProc
$LN43@WndProc:

; 421  : 					break;
; 422  : 				case IDM_FIRECRACKER:
; 423  : 					if ( gFireCrackerEvent != 0 )

  0077d	33 c0		 xor	 eax, eax
  0077f	39 05 00 00 00
	00		 cmp	 DWORD PTR ?gFireCrackerEvent@@3HA, eax ; gFireCrackerEvent
  00785	0f 94 c0	 sete	 al
  00788	a3 00 00 00 00	 mov	 DWORD PTR ?gFireCrackerEvent@@3HA, eax ; gFireCrackerEvent

; 786  :    }
; 787  :    return 0;

  0078d	33 c0		 xor	 eax, eax
  0078f	e9 2f 03 00 00	 jmp	 $LN1@WndProc
$LN46@WndProc:

; 424  : 						gFireCrackerEvent = 0;
; 425  : 					else
; 426  : 						gFireCrackerEvent=1;
; 427  : 					break;
; 428  : 				case IDM_5_MINUTE_CLOSE:
; 429  : 					if ( gCloseMsg == 0 )

  00794	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gCloseMsg@@3HA, 0 ; gCloseMsg
  0079b	0f 85 10 03 00
	00		 jne	 $LN14@WndProc

; 430  : 					{
; 431  : 						gCloseMsgTime = 300;

  007a1	c7 05 00 00 00
	00 2c 01 00 00	 mov	 DWORD PTR ?gCloseMsgTime@@3HA, 300 ; gCloseMsgTime, 0000012cH

; 432  : 						gCloseMsg=1;

  007ab	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gCloseMsg@@3HA, 1 ; gCloseMsg

; 433  : 						AllSendServerMsg( lMsg.Get(MSGGET(4, 104)) );

  007b5	68 68 04 00 00	 push	 1128			; 00000468H
$LN142@WndProc:
  007ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  007bf	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  007c4	50		 push	 eax
  007c5	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  007ca	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  007cd	33 c0		 xor	 eax, eax
  007cf	e9 ef 02 00 00	 jmp	 $LN1@WndProc
$LN48@WndProc:

; 434  : 					}
; 435  : 					break;
; 436  : 				case IDM_3_MINUTE_CLOSE:
; 437  : 					if ( gCloseMsg == 0 )

  007d4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gCloseMsg@@3HA, 0 ; gCloseMsg
  007db	0f 85 d0 02 00
	00		 jne	 $LN14@WndProc

; 438  : 					{
; 439  : 						gCloseMsgTime = 180;

  007e1	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?gCloseMsgTime@@3HA, 180 ; gCloseMsgTime, 000000b4H

; 440  : 						gCloseMsg=2;

  007eb	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?gCloseMsg@@3HA, 2 ; gCloseMsg

; 441  : 						AllSendServerMsg(lMsg.Get(MSGGET(4, 105)) );

  007f5	68 69 04 00 00	 push	 1129			; 00000469H

; 442  : 					}
; 443  : 					break;

  007fa	eb be		 jmp	 SHORT $LN142@WndProc
$LN50@WndProc:

; 444  : 				case IDM_1_MINUTE_CLOSE:
; 445  : 					if ( gCloseMsg == 0 )

  007fc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gCloseMsg@@3HA, 0 ; gCloseMsg
  00803	0f 85 a8 02 00
	00		 jne	 $LN14@WndProc

; 446  : 					{
; 447  : 						gCloseMsgTime = 60;

  00809	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?gCloseMsgTime@@3HA, 60 ; gCloseMsgTime, 0000003cH

; 448  : 						gCloseMsg=3;

  00813	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?gCloseMsg@@3HA, 3 ; gCloseMsg

; 449  : 						AllSendServerMsg(lMsg.Get(MSGGET(4, 106)) );

  0081d	68 6a 04 00 00	 push	 1130			; 0000046aH

; 450  : 					}
; 451  : 					break;

  00822	eb 96		 jmp	 SHORT $LN142@WndProc
$LN52@WndProc:

; 452  : 				case IDM_RELOAD_ALL_EVENT:
; 453  : 					ReadEventInfo(MU_EVENT_ALL );

  00824	6a 00		 push	 0
  00826	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  0082b	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  0082e	33 c0		 xor	 eax, eax
  00830	e9 8e 02 00 00	 jmp	 $LN1@WndProc
$LN53@WndProc:

; 454  : 					break;
; 455  : 				case IDM_RELOAD_DEVILSQUARE:
; 456  : 					ReadEventInfo(MU_EVENT_DEVILSQUARE );

  00835	6a 01		 push	 1
  00837	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  0083c	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  0083f	33 c0		 xor	 eax, eax
  00841	e9 7d 02 00 00	 jmp	 $LN1@WndProc
$LN54@WndProc:

; 457  : 					break;
; 458  : 				case IDM_RELOAD_BLOODCASTLE:
; 459  : 					ReadEventInfo(MU_EVENT_BLOODCASTLE );

  00846	6a 02		 push	 2
  00848	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  0084d	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00850	33 c0		 xor	 eax, eax
  00852	e9 6c 02 00 00	 jmp	 $LN1@WndProc
$LN55@WndProc:

; 460  : 					break;
; 461  : 				case IDM_RELOAD_UNDERWORLD_ATTACK:
; 462  : 					ReadEventInfo(MU_EVENT_ATTACKEVENTTROOP );

  00857	6a 03		 push	 3
  00859	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  0085e	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00861	33 c0		 xor	 eax, eax
  00863	e9 5b 02 00 00	 jmp	 $LN1@WndProc
$LN56@WndProc:

; 463  : 					break;
; 464  : 				case IDM_RELOAD_GOLDENTROOP_ATTACK:
; 465  : 					ReadEventInfo(MU_EVENT_GOLDENTROOP );

  00868	6a 04		 push	 4
  0086a	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  0086f	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00872	33 c0		 xor	 eax, eax
  00874	e9 4a 02 00 00	 jmp	 $LN1@WndProc
$LN57@WndProc:

; 466  : 					break;
; 467  : 				case IDM_RELOAD_WHITEMAGE_ATTACK:
; 468  : 					ReadEventInfo(MU_EVENT_WHITEMAGETROOP );

  00879	6a 05		 push	 5
  0087b	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  00880	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00883	33 c0		 xor	 eax, eax
  00885	e9 39 02 00 00	 jmp	 $LN1@WndProc
$LN58@WndProc:

; 469  : 					break;
; 470  : 				case IDM_RELOAD_LOVE_PANGPANG:
; 471  : 					ReadEventInfo(MU_EVENT_LOVEPANGPANG );

  0088a	6a 06		 push	 6
  0088c	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  00891	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00894	33 c0		 xor	 eax, eax
  00896	e9 28 02 00 00	 jmp	 $LN1@WndProc
$LN59@WndProc:

; 472  : 					break;
; 473  : 				case IDM_RELOAD_FIRECRACKER:
; 474  : 					ReadEventInfo(MU_EVENT_FIRECRACKER );

  0089b	6a 07		 push	 7
  0089d	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  008a2	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  008a5	33 c0		 xor	 eax, eax
  008a7	e9 17 02 00 00	 jmp	 $LN1@WndProc
$LN60@WndProc:

; 475  : 					break;
; 476  : 				case IDM_RELOAD_XMAS_STAR:
; 477  : 					ReadEventInfo(MU_EVENT_XMASSTAR );

  008ac	6a 09		 push	 9
  008ae	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  008b3	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  008b6	33 c0		 xor	 eax, eax
  008b8	e9 06 02 00 00	 jmp	 $LN1@WndProc
$LN61@WndProc:

; 478  : 					break;
; 479  : 				case IDM_RELOAD_HEART_OF_LOVE:
; 480  : 					ReadEventInfo(MU_EVENT_HEARTOFLOVE );

  008bd	6a 0a		 push	 10			; 0000000aH
  008bf	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  008c4	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  008c7	33 c0		 xor	 eax, eax
  008c9	e9 f5 01 00 00	 jmp	 $LN1@WndProc
$LN62@WndProc:

; 481  : 					break;
; 482  : 				case IDM_RELOAD_NPC_SAY_HAPPY_NEW_YEAR:
; 483  : 					ReadEventInfo(MU_EVENT_SAY_HAPPYNEWYEAR );

  008ce	6a 0b		 push	 11			; 0000000bH
  008d0	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  008d5	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  008d8	33 c0		 xor	 eax, eax
  008da	e9 e4 01 00 00	 jmp	 $LN1@WndProc
$LN63@WndProc:

; 484  : 					break;
; 485  : 				case IDM_RELOAD_NPC_SAY_MERRY_XMAS:
; 486  : 					ReadEventInfo(MU_EVENT_SAY_MERRYXMAS );

  008df	6a 0c		 push	 12			; 0000000cH
  008e1	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  008e6	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  008e9	33 c0		 xor	 eax, eax
  008eb	e9 d3 01 00 00	 jmp	 $LN1@WndProc
$LN64@WndProc:

; 487  : 					break;
; 488  : 				case IDM_RELOAD_CHAOSCASTLE:
; 489  : 					ReadEventInfo(MU_EVENT_CHAOSCASTLE );

  008f0	6a 0d		 push	 13			; 0000000dH
  008f2	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  008f7	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  008fa	33 c0		 xor	 eax, eax
  008fc	e9 c2 01 00 00	 jmp	 $LN1@WndProc
$LN65@WndProc:

; 490  : 					break;
; 491  : 				case IDM_RELOAD_CHRISTMAS_RIBBONBOX:
; 492  : 					ReadEventInfo(MU_EVENT_CHRISTMAS_RIBBONBOX );

  00901	6a 0e		 push	 14			; 0000000eH
  00903	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  00908	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  0090b	33 c0		 xor	 eax, eax
  0090d	e9 b1 01 00 00	 jmp	 $LN1@WndProc
$LN66@WndProc:

; 493  : 					break;
; 494  : 				case IDM_RELOAD_VALENTINE_DAY_CHOCOLATE_BOX:
; 495  : 					ReadEventInfo(MU_EVENT_VALENTINESDAY_CHOCOLATEBOX );

  00912	6a 0f		 push	 15			; 0000000fH
  00914	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  00919	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  0091c	33 c0		 xor	 eax, eax
  0091e	e9 a0 01 00 00	 jmp	 $LN1@WndProc
$LN67@WndProc:

; 496  : 					break;
; 497  : 				case IDM_RELOAD_WHITE_DAY_CANDY_BOX:
; 498  : 					ReadEventInfo(MU_EVENT_WHITEDAY_CANDYBOX  );

  00923	6a 10		 push	 16			; 00000010H
  00925	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
  0092a	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  0092d	33 c0		 xor	 eax, eax
  0092f	e9 8f 01 00 00	 jmp	 $LN1@WndProc
$LN68@WndProc:

; 499  : 					break;
; 500  : 				case IDM_RELOAD_ALL_ETC_OPTION:
; 501  : 					ReadGameEtcInfo(MU_ETC_ALL );

  00934	6a 00		 push	 0
  00936	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  0093b	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  0093e	33 c0		 xor	 eax, eax
  00940	e9 7e 01 00 00	 jmp	 $LN1@WndProc
$LN69@WndProc:

; 502  : 					break;
; 503  : 				case IDM_RELOAD_CREATE_CHARACTER:
; 504  : 					ReadGameEtcInfo(MU_ETC_CREATECHARACTER );

  00945	6a 01		 push	 1
  00947	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  0094c	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  0094f	33 c0		 xor	 eax, eax
  00951	e9 6d 01 00 00	 jmp	 $LN1@WndProc
$LN70@WndProc:

; 505  : 					break;
; 506  : 				case IDM_RELOAD_GUILD:
; 507  : 					ReadGameEtcInfo(MU_ETC_GUILD );

  00956	6a 02		 push	 2
  00958	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  0095d	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00960	33 c0		 xor	 eax, eax
  00962	e9 5c 01 00 00	 jmp	 $LN1@WndProc
$LN71@WndProc:

; 508  : 					break;
; 509  : 				case IDM_RELOAD_TRADE:
; 510  : 					ReadGameEtcInfo(MU_ETC_TRADE );

  00967	6a 03		 push	 3
  00969	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  0096e	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00971	33 c0		 xor	 eax, eax
  00973	e9 4b 01 00 00	 jmp	 $LN1@WndProc
$LN72@WndProc:

; 511  : 					break;
; 512  : 				case IDM_RELOAD_CHAOSBOX:
; 513  : 					ReadGameEtcInfo(MU_ETC_USECHAOSBOX );

  00978	6a 04		 push	 4
  0097a	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  0097f	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00982	33 c0		 xor	 eax, eax
  00984	e9 3a 01 00 00	 jmp	 $LN1@WndProc
$LN73@WndProc:

; 514  : 					break;
; 515  : 				case IDM_RELOAD_PERSONAL_SHOP:
; 516  : 					ReadGameEtcInfo(MU_ETC_PERSONALSHOP );

  00989	6a 05		 push	 5
  0098b	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  00990	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  00993	33 c0		 xor	 eax, eax
  00995	e9 29 01 00 00	 jmp	 $LN1@WndProc
$LN74@WndProc:

; 517  : 					break;
; 518  : 				case IDM_RELOAD_PK_ITEM_DROP:
; 519  : 					ReadGameEtcInfo(MU_ETC_PKITEMDROP );

  0099a	6a 06		 push	 6
  0099c	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  009a1	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  009a4	33 c0		 xor	 eax, eax
  009a6	e9 18 01 00 00	 jmp	 $LN1@WndProc
$LN75@WndProc:

; 520  : 					break;
; 521  : 				case IDM_RELOAD_ITEM_DROP_RATE:
; 522  : 					ReadGameEtcInfo(MU_ETC_ITEMDROPRATE );

  009ab	6a 07		 push	 7
  009ad	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  009b2	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  009b5	33 c0		 xor	 eax, eax
  009b7	e9 07 01 00 00	 jmp	 $LN1@WndProc
$LN76@WndProc:

; 523  : 					break;
; 524  : 				case IDM_RELOAD_SPEEDHACK:
; 525  : 					ReadGameEtcInfo(MU_ETC_SPEEDHACK );

  009bc	6a 08		 push	 8
  009be	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  009c3	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  009c6	33 c0		 xor	 eax, eax
  009c8	e9 f6 00 00 00	 jmp	 $LN1@WndProc
$LN77@WndProc:

; 526  : 					break;
; 527  : 				case IDM_RELOAD_GAMEGUARD_CHECKSUM_CHECK:
; 528  : 					ReadGameEtcInfo(MU_ETC_GAMEGUARD );

  009cd	6a 09		 push	 9
  009cf	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  009d4	83 c4 04	 add	 esp, 4

; 786  :    }
; 787  :    return 0;

  009d7	33 c0		 xor	 eax, eax
  009d9	e9 e5 00 00 00	 jmp	 $LN1@WndProc
$LN78@WndProc:

; 529  : 					break;
; 530  : 				default:
; 531  : 					return DefWindowProc(hWnd, message, wParam, lParam);

  009de	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  009e1	51		 push	 ecx
  009e2	68 11 01 00 00	 push	 273			; 00000111H
  009e7	e9 d0 00 00 00	 jmp	 $LN141@WndProc
$LN79@WndProc:

; 532  : 					break;
; 533  : 			}
; 534  : 			break;
; 535  : 		case WM_GM_SERVER_MSG_PROC:
; 536  : 			GMServerMsgProc(wParam, lParam);

  009ec	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  009ef	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  009f2	e8 00 00 00 00	 call	 ?GMServerMsgProc@@YAXIJ@Z ; GMServerMsgProc
  009f7	83 c4 08	 add	 esp, 8

; 786  :    }
; 787  :    return 0;

  009fa	33 c0		 xor	 eax, eax
  009fc	e9 c2 00 00 00	 jmp	 $LN1@WndProc
$LN126@WndProc:

; 317  : 	INT wmId, wmEvent;
; 318  : 
; 319  : 	switch (message) 

  00a01	8d 88 fe fb ff
	ff		 lea	 ecx, DWORD PTR [eax-1026]
  00a07	83 f9 0c	 cmp	 ecx, 12			; 0000000cH
  00a0a	0f 87 a5 00 00
	00		 ja	 $LN122@WndProc
  00a10	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN146@WndProc[ecx*4]
$LN80@WndProc:

; 537  : 			break;
; 538  : 		case WM_GM_CLIENT_MSG_PROC:
; 539  : 			{
; 540  : 				int wp = wParam;
; 541  : 				int lp = lParam;
; 542  : 				GMClientMsgProc(wParam, lParam);

  00a17	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00a1a	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00a1d	e8 00 00 00 00	 call	 ?GMClientMsgProc@@YAXIJ@Z ; GMClientMsgProc
  00a22	83 c4 08	 add	 esp, 8

; 786  :    }
; 787  :    return 0;

  00a25	33 c0		 xor	 eax, eax
  00a27	e9 97 00 00 00	 jmp	 $LN1@WndProc
$LN81@WndProc:

; 543  : 			}
; 544  : 			break;
; 545  : 		case WM_GM_JOIN_CLIENT_MSG_PROC:
; 546  : 			GMJoinClientMsgProc(wParam, lParam);

  00a2c	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00a2f	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00a32	e8 00 00 00 00	 call	 ?GMJoinClientMsgProc@@YAXIJ@Z ; GMJoinClientMsgProc
  00a37	83 c4 08	 add	 esp, 8

; 786  :    }
; 787  :    return 0;

  00a3a	33 c0		 xor	 eax, eax
  00a3c	e9 82 00 00 00	 jmp	 $LN1@WndProc
$LN82@WndProc:

; 547  : 			break;
; 548  : 		case WM_GM_RANKING_CLIENT_MSG_PROC:
; 549  : 			GMRankingClientMsgProc(wParam, lParam);

  00a41	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00a44	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00a47	e8 00 00 00 00	 call	 ?GMRankingClientMsgProc@@YAXIJ@Z ; GMRankingClientMsgProc
  00a4c	83 c4 08	 add	 esp, 8

; 786  :    }
; 787  :    return 0;

  00a4f	33 c0		 xor	 eax, eax
  00a51	eb 70		 jmp	 SHORT $LN1@WndProc
$LN83@WndProc:

; 550  : 			break;
; 551  : 		case WM_GM_EVENTCHIP_CLIENT_MSG_PROC:
; 552  : 			GMEventChipClientMsgProc(wParam, lParam);

  00a53	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00a56	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00a59	e8 00 00 00 00	 call	 ?GMEventChipClientMsgProc@@YAXIJ@Z ; GMEventChipClientMsgProc
  00a5e	83 c4 08	 add	 esp, 8

; 786  :    }
; 787  :    return 0;

  00a61	33 c0		 xor	 eax, eax
  00a63	eb 5e		 jmp	 SHORT $LN1@WndProc
$LN84@WndProc:

; 553  : 			break;
; 554  : 		case WM_GM_DATA1_CLIENT_MSG_PROC:
; 555  : 			cDBSMng.MsgProc(0, wParam, lParam);

  00a65	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00a68	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00a6d	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00a70	6a 00		 push	 0
  00a72	e8 00 00 00 00	 call	 ?MsgProc@DBSockMng@@QAEHHIJ@Z ; DBSockMng::MsgProc

; 786  :    }
; 787  :    return 0;

  00a77	33 c0		 xor	 eax, eax
  00a79	eb 48		 jmp	 SHORT $LN1@WndProc
$LN85@WndProc:

; 556  : 			break;
; 557  : 		case WM_GM_DATA2_CLIENT_MSG_PROC:
; 558  : 			cDBSMng.MsgProc(1, wParam, lParam);

  00a7b	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00a7e	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00a83	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00a86	6a 01		 push	 1
  00a88	e8 00 00 00 00	 call	 ?MsgProc@DBSockMng@@QAEHHIJ@Z ; DBSockMng::MsgProc

; 786  :    }
; 787  :    return 0;

  00a8d	33 c0		 xor	 eax, eax
  00a8f	eb 32		 jmp	 SHORT $LN1@WndProc
$LN86@WndProc:

; 559  : 			break;
; 560  : 		case WM_GM_EXDATA_CLIENT_MSG_PROC:
; 561  : 			ExDataClientMsgProc(wParam, lParam);

  00a91	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00a94	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00a97	e8 00 00 00 00	 call	 ?ExDataClientMsgProc@@YAXIJ@Z ; ExDataClientMsgProc
  00a9c	83 c4 08	 add	 esp, 8

; 786  :    }
; 787  :    return 0;

  00a9f	33 c0		 xor	 eax, eax
  00aa1	eb 20		 jmp	 SHORT $LN1@WndProc
$LN87@WndProc:

; 562  : 			break;
; 563  : 		case WM_START_SERVER:
; 564  : 			if ( gServerReady == 2 )

  00aa3	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?gServerReady@@3HA, 2 ; gServerReady
  00aaa	75 05		 jne	 SHORT $LN14@WndProc

; 565  : 				GameServerStart();

  00aac	e8 00 00 00 00	 call	 ?GameServerStart@@YAHXZ	; GameServerStart
$LN14@WndProc:

; 786  :    }
; 787  :    return 0;

  00ab1	33 c0		 xor	 eax, eax
  00ab3	eb 0e		 jmp	 SHORT $LN1@WndProc
$LN122@WndProc:

; 783  : 			break;
; 784  : 		default:
; 785  : 			return DefWindowProc(hWnd, message, wParam, lParam);

  00ab5	ff 75 14	 push	 DWORD PTR _lParam$[ebp]
  00ab8	ff 75 10	 push	 DWORD PTR _wParam$[ebp]
  00abb	50		 push	 eax
$LN141@WndProc:
  00abc	57		 push	 edi
  00abd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
$LN1@WndProc:

; 788  : }

  00ac3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ac6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00acd	59		 pop	 ecx
  00ace	5f		 pop	 edi
  00acf	5e		 pop	 esi
  00ad0	5b		 pop	 ebx
  00ad1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ad4	33 cd		 xor	 ecx, ebp
  00ad6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00adb	8b e5		 mov	 esp, ebp
  00add	5d		 pop	 ebp
  00ade	c2 10 00	 ret	 16			; 00000010H
  00ae1	0f 1f 00	 npad	 3
$LN144@WndProc:
  00ae4	00 00 00 00	 DD	 $LN115@WndProc
  00ae8	00 00 00 00	 DD	 $LN106@WndProc
  00aec	00 00 00 00	 DD	 $LN117@WndProc
  00af0	00 00 00 00	 DD	 $LN96@WndProc
  00af4	00 00 00 00	 DD	 $LN95@WndProc
  00af8	00 00 00 00	 DD	 $LN94@WndProc
  00afc	00 00 00 00	 DD	 $LN116@WndProc
  00b00	00 00 00 00	 DD	 $LN90@WndProc
  00b04	00 00 00 00	 DD	 $LN14@WndProc
  00b08	00 00 00 00	 DD	 $LN99@WndProc
  00b0c	00 00 00 00	 DD	 $LN100@WndProc
$LN145@WndProc:
  00b10	00 00 00 00	 DD	 $LN21@WndProc
  00b14	00 00 00 00	 DD	 $LN34@WndProc
  00b18	00 00 00 00	 DD	 $LN35@WndProc
  00b1c	00 00 00 00	 DD	 $LN25@WndProc
  00b20	00 00 00 00	 DD	 $LN78@WndProc
  00b24	00 00 00 00	 DD	 $LN31@WndProc
  00b28	00 00 00 00	 DD	 $LN36@WndProc
  00b2c	00 00 00 00	 DD	 $LN78@WndProc
  00b30	00 00 00 00	 DD	 $LN33@WndProc
  00b34	00 00 00 00	 DD	 $LN18@WndProc
  00b38	00 00 00 00	 DD	 $LN19@WndProc
  00b3c	00 00 00 00	 DD	 $LN20@WndProc
  00b40	00 00 00 00	 DD	 $LN23@WndProc
  00b44	00 00 00 00	 DD	 $LN46@WndProc
  00b48	00 00 00 00	 DD	 $LN48@WndProc
  00b4c	00 00 00 00	 DD	 $LN50@WndProc
  00b50	00 00 00 00	 DD	 $LN37@WndProc
  00b54	00 00 00 00	 DD	 $LN78@WndProc
  00b58	00 00 00 00	 DD	 $LN29@WndProc
  00b5c	00 00 00 00	 DD	 $LN40@WndProc
  00b60	00 00 00 00	 DD	 $LN43@WndProc
  00b64	00 00 00 00	 DD	 $LN78@WndProc
  00b68	00 00 00 00	 DD	 $LN52@WndProc
  00b6c	00 00 00 00	 DD	 $LN53@WndProc
  00b70	00 00 00 00	 DD	 $LN54@WndProc
  00b74	00 00 00 00	 DD	 $LN24@WndProc
  00b78	00 00 00 00	 DD	 $LN55@WndProc
  00b7c	00 00 00 00	 DD	 $LN56@WndProc
  00b80	00 00 00 00	 DD	 $LN57@WndProc
  00b84	00 00 00 00	 DD	 $LN22@WndProc
  00b88	00 00 00 00	 DD	 $LN58@WndProc
  00b8c	00 00 00 00	 DD	 $LN59@WndProc
  00b90	00 00 00 00	 DD	 $LN60@WndProc
  00b94	00 00 00 00	 DD	 $LN61@WndProc
  00b98	00 00 00 00	 DD	 $LN62@WndProc
  00b9c	00 00 00 00	 DD	 $LN63@WndProc
  00ba0	00 00 00 00	 DD	 $LN68@WndProc
  00ba4	00 00 00 00	 DD	 $LN69@WndProc
  00ba8	00 00 00 00	 DD	 $LN70@WndProc
  00bac	00 00 00 00	 DD	 $LN71@WndProc
  00bb0	00 00 00 00	 DD	 $LN73@WndProc
  00bb4	00 00 00 00	 DD	 $LN74@WndProc
  00bb8	00 00 00 00	 DD	 $LN75@WndProc
  00bbc	00 00 00 00	 DD	 $LN72@WndProc
  00bc0	00 00 00 00	 DD	 $LN76@WndProc
  00bc4	00 00 00 00	 DD	 $LN77@WndProc
  00bc8	00 00 00 00	 DD	 $LN64@WndProc
  00bcc	00 00 00 00	 DD	 $LN27@WndProc
  00bd0	00 00 00 00	 DD	 $LN26@WndProc
  00bd4	00 00 00 00	 DD	 $LN78@WndProc
  00bd8	00 00 00 00	 DD	 $LN78@WndProc
  00bdc	00 00 00 00	 DD	 $LN38@WndProc
  00be0	00 00 00 00	 DD	 $LN65@WndProc
  00be4	00 00 00 00	 DD	 $LN66@WndProc
  00be8	00 00 00 00	 DD	 $LN67@WndProc
  00bec	00 00 00 00	 DD	 $LN78@WndProc
  00bf0	00 00 00 00	 DD	 $LN32@WndProc
  00bf4	00 00 00 00	 DD	 $LN14@WndProc
$LN146@WndProc:
  00bf8	00 00 00 00	 DD	 $LN80@WndProc
  00bfc	00 00 00 00	 DD	 $LN81@WndProc
  00c00	00 00 00 00	 DD	 $LN122@WndProc
  00c04	00 00 00 00	 DD	 $LN87@WndProc
  00c08	00 00 00 00	 DD	 $LN122@WndProc
  00c0c	00 00 00 00	 DD	 $LN122@WndProc
  00c10	00 00 00 00	 DD	 $LN122@WndProc
  00c14	00 00 00 00	 DD	 $LN122@WndProc
  00c18	00 00 00 00	 DD	 $LN84@WndProc
  00c1c	00 00 00 00	 DD	 $LN85@WndProc
  00c20	00 00 00 00	 DD	 $LN82@WndProc
  00c24	00 00 00 00	 DD	 $LN83@WndProc
  00c28	00 00 00 00	 DD	 $LN86@WndProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?WndProc@@YGJPAUHWND__@@IIJ@Z$0:
  00000	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _closeplayer$2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1Ccloseplayer@@UAE@XZ	; Ccloseplayer::~Ccloseplayer
__ehhandler$?WndProc@@YGJPAUHWND__@@IIJ@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a d8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-296]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?WndProc@@YGJPAUHWND__@@IIJ@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?WndProc@@YGJPAUHWND__@@IIJ@Z ENDP			; WndProc
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_wcex$ = -48						; size = 48
_hInstance$ = 8						; size = 4
?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z PROC		; MyRegisterClass, COMDAT

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H

; 258  : 	WNDCLASSEX wcex;
; 259  : 
; 260  : 	wcex.cbSize = sizeof(WNDCLASSEX); 
; 261  : 
; 262  : 	wcex.style			= CS_HREDRAW | CS_VREDRAW;
; 263  : 	wcex.lpfnWndProc	= (WNDPROC)WndProc;
; 264  : 	wcex.cbClsExtra		= 0;
; 265  : 	wcex.cbWndExtra		= 0;
; 266  : 	wcex.hInstance		= hInstance;

  00006	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]

; 267  : 	wcex.hIcon			= LoadIcon(hInstance, (LPCTSTR)IDI_NORMAL_V1);

  00009	6a 6b		 push	 107			; 0000006bH
  0000b	50		 push	 eax
  0000c	c7 45 d0 30 00
	00 00		 mov	 DWORD PTR _wcex$[ebp], 48 ; 00000030H
  00013	c7 45 d4 03 00
	00 00		 mov	 DWORD PTR _wcex$[ebp+4], 3
  0001a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _wcex$[ebp+8], OFFSET ?WndProc@@YGJPAUHWND__@@IIJ@Z ; WndProc
  00021	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _wcex$[ebp+12], 0
  00028	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _wcex$[ebp+16], 0
  0002f	89 45 e4	 mov	 DWORD PTR _wcex$[ebp+20], eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8

; 268  : 	wcex.hCursor		= LoadCursor(NULL, IDC_ARROW);

  00038	68 00 7f 00 00	 push	 32512			; 00007f00H
  0003d	6a 00		 push	 0
  0003f	89 45 e8	 mov	 DWORD PTR _wcex$[ebp+24], eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8

; 269  : 	wcex.hbrBackground	= (HBRUSH)(COLOR_WINDOW+1);
; 270  : 	wcex.lpszMenuName	= (LPCSTR)IDR_MENU;
; 271  : 	wcex.lpszClassName	= szWindowClass;
; 272  : 	wcex.hIconSm		= LoadIcon(wcex.hInstance, (LPCTSTR)IDI_ICON_MINIMIZED);

  00048	6a 6c		 push	 108			; 0000006cH
  0004a	ff 75 e4	 push	 DWORD PTR _wcex$[ebp+20]
  0004d	89 45 ec	 mov	 DWORD PTR _wcex$[ebp+28], eax
  00050	c7 45 f0 06 00
	00 00		 mov	 DWORD PTR _wcex$[ebp+32], 6
  00057	c7 45 f4 6d 00
	00 00		 mov	 DWORD PTR _wcex$[ebp+36], 109 ; 0000006dH
  0005e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _wcex$[ebp+40], OFFSET ?szWindowClass@@3PADA ; szWindowClass
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  0006b	89 45 fc	 mov	 DWORD PTR _wcex$[ebp+44], eax

; 273  : 
; 274  : 	return RegisterClassEx(&wcex);

  0006e	8d 45 d0	 lea	 eax, DWORD PTR _wcex$[ebp]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassExA@4

; 275  : }

  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z ENDP		; MyRegisterClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?InitInstance@@YAHPAUHINSTANCE__@@H@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_nCmdShow$ = 12						; size = 4
?InitInstance@@YAHPAUHINSTANCE__@@H@Z PROC		; InitInstance, COMDAT

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 
; 281  : 	HWND hWnd;
; 282  : 	hInst=hInstance;

  00003	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00006	56		 push	 esi

; 283  : 
; 284  : #if (ZEONWINDOW == TRUE)
; 285  :     hWnd = CreateWindowEx(

  00007	6a 00		 push	 0
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	6a 00		 push	 0
  0000e	68 58 02 00 00	 push	 600			; 00000258H
  00013	68 ee 02 00 00	 push	 750			; 000002eeH
  00018	6a 00		 push	 0
  0001a	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0001f	68 00 00 ca 10	 push	 281673728		; 10ca0000H
  00024	68 00 00 00 00	 push	 OFFSET ?szTitle@@3PADA	; szTitle
  00029	68 00 00 00 00	 push	 OFFSET ?szWindowClass@@3PADA ; szWindowClass
  0002e	6a 00		 push	 0
  00030	a3 00 00 00 00	 mov	 DWORD PTR ?hInst@@3PAUHINSTANCE__@@A, eax ; hInst
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExA@48
  0003b	8b f0		 mov	 esi, eax

; 286  :         0,
; 287  :         szWindowClass,
; 288  :         szTitle,
; 289  :         WS_OVERLAPPED+WS_CAPTION+WS_SYSMENU+WS_MINIMIZEBOX+WS_VISIBLE,
; 290  :         CW_USEDEFAULT, 0, GAMESERVER_WIDTH, GAMESERVER_HEIGHT,
; 291  :         NULL, NULL, hInstance, NULL);
; 292  : #else
; 293  : 	hWnd = CreateWindowEx(
; 294  :         0,
; 295  :         szWindowClass,
; 296  :         szTitle,
; 297  :         WS_OVERLAPPEDWINDOW,
; 298  :         CW_USEDEFAULT, 0, CW_USEDEFAULT,0,
; 299  :         NULL, NULL, hInstance, NULL);
; 300  : #endif
; 301  : 	
; 302  : 	if (hWnd == 0) 

  0003d	85 f6		 test	 esi, esi
  0003f	75 03		 jne	 SHORT $LN2@InitInstan
  00041	5e		 pop	 esi

; 312  : }

  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
$LN2@InitInstan:

; 303  : 	{
; 304  : 		return 0;
; 305  : 	}
; 306  : 
; 307  : 	ShowWindow(hWnd, nCmdShow);

  00044	ff 75 0c	 push	 DWORD PTR _nCmdShow$[ebp]
  00047	56		 push	 esi
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 308  : 	UpdateWindow(hWnd);

  0004e	56		 push	 esi
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4

; 309  : 
; 310  : 	ghWnd=hWnd;

  00055	89 35 00 00 00
	00		 mov	 DWORD PTR ?ghWnd@@3PAUHWND__@@A, esi ; ghWnd

; 311  : 	return TRUE;

  0005b	b8 01 00 00 00	 mov	 eax, 1
  00060	5e		 pop	 esi

; 312  : }

  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?InitInstance@@YAHPAUHINSTANCE__@@H@Z ENDP		; InitInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?GameServerStart@@YAHXZ
_TEXT	SEGMENT
?GameServerStart@@YAHXZ PROC				; GameServerStart, COMDAT

; 239  : 	if (GameMainServerCreate(WM_GM_SERVER_MSG_PROC, WM_GM_CLIENT_MSG_PROC) == FALSE )

  00000	68 02 04 00 00	 push	 1026			; 00000402H
  00005	68 01 04 00 00	 push	 1025			; 00000401H
  0000a	e8 00 00 00 00	 call	 ?GameMainServerCreate@@YAHKK@Z ; GameMainServerCreate
  0000f	83 c4 08	 add	 esp, 8
  00012	85 c0		 test	 eax, eax
  00014	75 1b		 jne	 SHORT $LN2@GameServer

; 240  : 	{
; 241  : 		MsgBox(lMsg.Get(MSGGET( 1, 142) ));

  00016	68 8e 01 00 00	 push	 398			; 0000018eH
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00020	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  0002b	83 c4 04	 add	 esp, 4

; 242  : 		return FALSE;

  0002e	33 c0		 xor	 eax, eax

; 253  : }

  00030	c3		 ret	 0
$LN2@GameServer:

; 243  : 	}
; 244  : 
; 245  : 
; 246  : 	CreateGIocp(GameServerPort);

  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?GameServerPort@@3HA ; GameServerPort
  00037	e8 00 00 00 00	 call	 ?CreateGIocp@@YAHH@Z	; CreateGIocp
  0003c	83 c4 04	 add	 esp, 4

; 247  : 
; 248  : 	SetTimer(ghWnd, WM_LOG_PAINT, 2000, NULL);

  0003f	6a 00		 push	 0
  00041	68 d0 07 00 00	 push	 2000			; 000007d0H
  00046	6a 64		 push	 100			; 00000064H
  00048	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTimer@16

; 249  : 	SetTimer(ghWnd, WM_CONNECT_DATASERVER, 10000, NULL);

  00054	6a 00		 push	 0
  00056	68 10 27 00 00	 push	 10000			; 00002710H
  0005b	68 ef 03 00 00	 push	 1007			; 000003efH
  00060	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTimer@16

; 250  : 
; 251  : 	g_MuTimer.SetMuTimer();

  0006c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MuTimer@@3VCMuTimer@@A ; g_MuTimer
  00071	e8 00 00 00 00	 call	 ?SetMuTimer@CMuTimer@@QAEXXZ ; CMuTimer::SetMuTimer

; 252  : 	return TRUE;

  00076	b8 01 00 00 00	 mov	 eax, 1

; 253  : }

  0007b	c3		 ret	 0
?GameServerStart@@YAHXZ ENDP				; GameServerStart
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FgWhatsUpDummyServer@@YAXXZ
text$yd	SEGMENT
??__FgWhatsUpDummyServer@@YAXXZ PROC			; `dynamic atexit destructor for 'gWhatsUpDummyServer'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gWhatsUpDummyServer@@3VCWhatsUpDummyServer@@A ; gWhatsUpDummyServer
  00005	e9 00 00 00 00	 jmp	 ??1CWhatsUpDummyServer@@QAE@XZ ; CWhatsUpDummyServer::~CWhatsUpDummyServer
??__FgWhatsUpDummyServer@@YAXXZ ENDP			; `dynamic atexit destructor for 'gWhatsUpDummyServer''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ??__EgWhatsUpDummyServer@@YAXXZ
text$di	SEGMENT
??__EgWhatsUpDummyServer@@YAXXZ PROC			; `dynamic initializer for 'gWhatsUpDummyServer'', COMDAT

; 57   : CWhatsUpDummyServer gWhatsUpDummyServer;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gWhatsUpDummyServer@@3VCWhatsUpDummyServer@@A ; gWhatsUpDummyServer
  00005	e8 00 00 00 00	 call	 ??0CWhatsUpDummyServer@@QAE@XZ ; CWhatsUpDummyServer::CWhatsUpDummyServer
  0000a	68 00 00 00 00	 push	 OFFSET ??__FgWhatsUpDummyServer@@YAXXZ ; `dynamic atexit destructor for 'gWhatsUpDummyServer''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EgWhatsUpDummyServer@@YAXXZ ENDP			; `dynamic initializer for 'gWhatsUpDummyServer''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_XMasAttackEvent@@YAXXZ
text$yd	SEGMENT
??__Fg_XMasAttackEvent@@YAXXZ PROC			; `dynamic atexit destructor for 'g_XMasAttackEvent'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_XMasAttackEvent@@3VCXMasAttackEvent@@A ; g_XMasAttackEvent
  00005	e9 00 00 00 00	 jmp	 ??1CXMasAttackEvent@@UAE@XZ ; CXMasAttackEvent::~CXMasAttackEvent
??__Fg_XMasAttackEvent@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_XMasAttackEvent''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ??__Eg_XMasAttackEvent@@YAXXZ
text$di	SEGMENT
??__Eg_XMasAttackEvent@@YAXXZ PROC			; `dynamic initializer for 'g_XMasAttackEvent'', COMDAT

; 56   : CXMasAttackEvent	g_XMasAttackEvent;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_XMasAttackEvent@@3VCXMasAttackEvent@@A ; g_XMasAttackEvent
  00005	e8 00 00 00 00	 call	 ??0CXMasAttackEvent@@QAE@XZ ; CXMasAttackEvent::CXMasAttackEvent
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_XMasAttackEvent@@YAXXZ ; `dynamic atexit destructor for 'g_XMasAttackEvent''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_XMasAttackEvent@@YAXXZ ENDP			; `dynamic initializer for 'g_XMasAttackEvent''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_RingAttackEvent@@YAXXZ
text$yd	SEGMENT
??__Fg_RingAttackEvent@@YAXXZ PROC			; `dynamic atexit destructor for 'g_RingAttackEvent'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RingAttackEvent@@3VCRingAttackEvent@@A ; g_RingAttackEvent
  00005	e9 00 00 00 00	 jmp	 ??1CRingAttackEvent@@UAE@XZ ; CRingAttackEvent::~CRingAttackEvent
??__Fg_RingAttackEvent@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_RingAttackEvent''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ??__Eg_RingAttackEvent@@YAXXZ
text$di	SEGMENT
??__Eg_RingAttackEvent@@YAXXZ PROC			; `dynamic initializer for 'g_RingAttackEvent'', COMDAT

; 55   : CRingAttackEvent	g_RingAttackEvent;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_RingAttackEvent@@3VCRingAttackEvent@@A ; g_RingAttackEvent
  00005	e8 00 00 00 00	 call	 ??0CRingAttackEvent@@QAE@XZ ; CRingAttackEvent::CRingAttackEvent
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_RingAttackEvent@@YAXXZ ; `dynamic atexit destructor for 'g_RingAttackEvent''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_RingAttackEvent@@YAXXZ ENDP			; `dynamic initializer for 'g_RingAttackEvent''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dragonevent.h
;	COMDAT ?GetState@CDragonEvent@@QAEEXZ
_TEXT	SEGMENT
?GetState@CDragonEvent@@QAEEXZ PROC			; CDragonEvent::GetState, COMDAT
; _this$ = ecx

; 20   : 	BYTE GetState(){return this->EventState;}	// Dagon event line 30.h

  00000	8a 41 04	 mov	 al, BYTE PTR [ecx+4]
  00003	c3		 ret	 0
?GetState@CDragonEvent@@QAEEXZ ENDP			; CDragonEvent::GetState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?AllServerStart@@YAHXZ
_TEXT	SEGMENT
?AllServerStart@@YAHXZ PROC				; AllServerStart, COMDAT

; 201  : 	
; 202  : 	if (JoinServerConnected==0)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?JoinServerConnected@@3HA, 0 ; JoinServerConnected
  00007	75 31		 jne	 SHORT $LN3@AllServerS

; 203  : 	{
; 204  : 		if (GMJoinServerConnect(JoinServerIP, WM_GM_JOIN_CLIENT_MSG_PROC) == 0)

  00009	68 03 04 00 00	 push	 1027			; 00000403H
  0000e	68 00 00 00 00	 push	 OFFSET ?JoinServerIP@@3PADA ; JoinServerIP
  00013	e8 00 00 00 00	 call	 ?GMJoinServerConnect@@YAHPADK@Z ; GMJoinServerConnect
  00018	83 c4 08	 add	 esp, 8
  0001b	85 c0		 test	 eax, eax
  0001d	75 1b		 jne	 SHORT $LN3@AllServerS

; 205  : 		{	
; 206  : 			// LoginServer connect fail
; 207  : 			MsgBox(lMsg.Get(MSGGET(1, 144)));

  0001f	68 90 01 00 00	 push	 400			; 00000190H
  00024	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00029	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00034	83 c4 04	 add	 esp, 4

; 208  : 			return 0;

  00037	33 c0		 xor	 eax, eax

; 234  : }

  00039	c3		 ret	 0
$LN3@AllServerS:

; 209  : 		}
; 210  : 	}
; 211  : 
; 212  : 	/*if (IsDevilSquareEventConnected==0)
; 213  : 	{
; 214  : 		if (GMRankingServerConnect(RankingServerIP, WM_GM_RANKING_CLIENT_MSG_PROC) == 0)
; 215  : 		{
; 216  : 			MsgBox("Ranking Server connect fail!");
; 217  : 			return 0;
; 218  : 		}
; 219  : 		IsDevilSquareEventConnected=1;
; 220  : 	}*/
; 221  : 
; 222  : 	if (IsEventChipServerConnected==0)

  0003a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?IsEventChipServerConnected@@3HA, 0 ; IsEventChipServerConnected
  00041	75 30		 jne	 SHORT $LN4@AllServerS

; 223  : 	{
; 224  : 		if (GMEventChipServerConnect(ExDBServerIP, WM_GM_EVENTCHIP_CLIENT_MSG_PROC) == 0)

  00043	68 0d 04 00 00	 push	 1037			; 0000040dH
  00048	68 00 00 00 00	 push	 OFFSET ?ExDBServerIP@@3PADA ; ExDBServerIP
  0004d	e8 00 00 00 00	 call	 ?GMEventChipServerConnect@@YAHPADK@Z ; GMEventChipServerConnect
  00052	83 c4 08	 add	 esp, 8
  00055	85 c0		 test	 eax, eax
  00057	75 10		 jne	 SHORT $LN5@AllServerS

; 225  : 		{
; 226  : 			MsgBox("Event Chip Server connect fail!");

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JEOBDLCB@Event?5Chip?5Server?5connect?5fail?$CB?$AA@
  0005e	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00063	83 c4 04	 add	 esp, 4

; 227  : 			return 0;

  00066	33 c0		 xor	 eax, eax

; 234  : }

  00068	c3		 ret	 0
$LN5@AllServerS:

; 228  : 		}
; 229  : 		IsEventChipServerConnected=1;

  00069	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?IsEventChipServerConnected@@3HA, 1 ; IsEventChipServerConnected
$LN4@AllServerS:

; 230  : 	}
; 231  : 
; 232  : 	cDBSMng.Connect();

  00073	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00078	e8 00 00 00 00	 call	 ?Connect@DBSockMng@@QAEXXZ ; DBSockMng::Connect

; 233  : 	return TRUE;

  0007d	b8 01 00 00 00	 mov	 eax, 1

; 234  : }

  00082	c3		 ret	 0
?AllServerStart@@YAHXZ ENDP				; AllServerStart
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1776 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1777 :     int _Result;
; 1778 :     va_list _ArgList;
; 1779 :     __crt_va_start(_ArgList, _Format);
; 1780 : 
; 1781 :     #pragma warning(push)
; 1782 :     #pragma warning(disable: 4996) // Deprecation
; 1783 :     _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1784 :     #pragma warning(pop)
; 1785 : 
; 1786 :     __crt_va_end(_ArgList);
; 1787 :     return _Result;
; 1788 : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	ff 75 14	 push	 DWORD PTR __ArgList$[ebp]
  00006	ff 75 10	 push	 DWORD PTR __Locale$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1456 :     #pragma warning(push)
; 1457 :     #pragma warning(disable: 4996) // Deprecation
; 1458 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 1459 :     #pragma warning(pop)
; 1460 : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	ff 75 18	 push	 DWORD PTR __ArgList$[ebp]
  00006	ff 75 14	 push	 DWORD PTR __Locale$[ebp]
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1391 : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_msg$ = -28						; size = 28
_hAccelTable$1$ = 8					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	56		 push	 esi
  00007	57		 push	 edi

; 143  : 	SetUnhandledFilter();

  00008	e8 00 00 00 00	 call	 ?SetUnhandledFilter@@YAXXZ ; SetUnhandledFilter

; 144  : 
; 145  : 	MSG msg;
; 146  : 	HACCEL hAccelTable;
; 147  : 
; 148  : 	LoadString(hInstance, IDS_APP_TITLE, szTitle, 100);

  0000d	8b 7d 08	 mov	 edi, DWORD PTR _hInstance$[ebp]
  00010	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__LoadStringA@16
  00016	6a 64		 push	 100			; 00000064H
  00018	68 00 00 00 00	 push	 OFFSET ?szTitle@@3PADA	; szTitle
  0001d	6a 67		 push	 103			; 00000067H
  0001f	57		 push	 edi
  00020	ff d6		 call	 esi

; 149  : 	LoadString(hInstance, IDS_GAMESERVER, szWindowClass, 100);

  00022	6a 64		 push	 100			; 00000064H
  00024	68 00 00 00 00	 push	 OFFSET ?szWindowClass@@3PADA ; szWindowClass
  00029	6a 6d		 push	 109			; 0000006dH
  0002b	57		 push	 edi
  0002c	ff d6		 call	 esi

; 150  : 	MyRegisterClass(hInstance);

  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 ?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z ; MyRegisterClass
  00034	83 c4 04	 add	 esp, 4

; 151  : 
; 152  : 	InitCommonControls();

  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitCommonControls@0

; 153  : 
; 154  : 	if (!InitInstance(hInstance, nCmdShow))

  0003d	ff 75 14	 push	 DWORD PTR _nCmdShow$[ebp]
  00040	57		 push	 edi
  00041	e8 00 00 00 00	 call	 ?InitInstance@@YAHPAUHINSTANCE__@@H@Z ; InitInstance
  00046	83 c4 08	 add	 esp, 8
  00049	85 c0		 test	 eax, eax
  0004b	75 08		 jne	 SHORT $LN4@WinMain
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi

; 196  : }

  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 10 00	 ret	 16			; 00000010H
$LN4@WinMain:

; 155  : 	{
; 156  : 		return 0;
; 157  : 	}
; 158  : 
; 159  : 	ShowWindow(ghWnd, SW_SHOWNORMAL);// Showm GameServer Window

  00055	6a 01		 push	 1
  00057	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 160  : 
; 161  : 	hAccelTable=LoadAccelerators(hInstance,(LPCSTR)IDA_GAMESERVER);// Load Accelerators

  00063	6a 6d		 push	 109			; 0000006dH
  00065	57		 push	 edi
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadAcceleratorsA@8
  0006c	89 45 08	 mov	 DWORD PTR _hAccelTable$1$[ebp], eax

; 162  : 
; 163  : 	GiocpInit();

  0006f	e8 00 00 00 00	 call	 ?GiocpInit@@YAXXZ	; GiocpInit

; 164  : 	GameMainInit(ghWnd);

  00074	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0007a	e8 00 00 00 00	 call	 ?GameMainInit@@YAXPAUHWND__@@@Z ; GameMainInit
  0007f	83 c4 04	 add	 esp, 4

; 165  : 	
; 166  : 	GameServerPort			= GetPrivateProfileIntA("Connection", "ServerPort", 55901, gDirPath.GetNewPath(FILE_SERVER_INFO));

  00082	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  0008c	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00091	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetPrivateProfileIntA@16
  00097	50		 push	 eax
  00098	68 5d da 00 00	 push	 55901			; 0000da5dH
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@COJEKOJM@ServerPort?$AA@
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  000a7	ff d7		 call	 edi

; 167  : 	GetPrivateProfileStringA("Connection", "JoinServerIP", "127.0.0.1", JoinServerIP, sizeof(JoinServerIP), gDirPath.GetNewPath(FILE_SERVER_INFO));

  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  000ae	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  000b3	a3 00 00 00 00	 mov	 DWORD PTR ?GameServerPort@@3HA, eax ; GameServerPort
  000b8	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  000bd	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetPrivateProfileStringA@24
  000c3	50		 push	 eax
  000c4	68 00 01 00 00	 push	 256			; 00000100H
  000c9	68 00 00 00 00	 push	 OFFSET ?JoinServerIP@@3PADA ; JoinServerIP
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_09PFCHIMEP@127?40?40?41?$AA@
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OJGEKGHE@JoinServerIP?$AA@
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  000dd	ff d6		 call	 esi

; 168  : 	JoinServerPort			= GetPrivateProfileIntA("Connection", "JoinServerPort", 55970, gDirPath.GetNewPath(FILE_SERVER_INFO));

  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  000e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  000e9	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  000ee	50		 push	 eax
  000ef	68 a2 da 00 00	 push	 55970			; 0000daa2H
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KNHIEOID@JoinServerPort?$AA@
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  000fe	ff d7		 call	 edi

; 169  : 	GetPrivateProfileStringA("Connection", "DataServer1IP", "127.0.0.1", DataServerIP, sizeof(DataServerIP), gDirPath.GetNewPath(FILE_SERVER_INFO));

  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  00105	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0010a	a3 00 00 00 00	 mov	 DWORD PTR ?JoinServerPort@@3HA, eax ; JoinServerPort
  0010f	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00114	50		 push	 eax
  00115	68 00 01 00 00	 push	 256			; 00000100H
  0011a	68 00 00 00 00	 push	 OFFSET ?DataServerIP@@3PADA ; DataServerIP
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_09PFCHIMEP@127?40?40?41?$AA@
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GAHENNLP@DataServer1IP?$AA@
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  0012e	ff d6		 call	 esi

; 170  : 	DataServerPort			= GetPrivateProfileIntA("Connection", "DataServer1Port", 55960, gDirPath.GetNewPath(FILE_SERVER_INFO));

  00130	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  00135	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0013a	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0013f	50		 push	 eax
  00140	68 98 da 00 00	 push	 55960			; 0000da98H
  00145	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ECKBGBKC@DataServer1Port?$AA@
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  0014f	ff d7		 call	 edi

; 171  : 	GetPrivateProfileStringA("Connection", "DataServer2IP", "127.0.0.1", DataServerIP2, sizeof(DataServerIP2), gDirPath.GetNewPath(FILE_SERVER_INFO));

  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  00156	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0015b	a3 00 00 00 00	 mov	 DWORD PTR ?DataServerPort@@3HA, eax ; DataServerPort
  00160	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00165	50		 push	 eax
  00166	68 00 01 00 00	 push	 256			; 00000100H
  0016b	68 00 00 00 00	 push	 OFFSET ?DataServerIP2@@3PADA ; DataServerIP2
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_09PFCHIMEP@127?40?40?41?$AA@
  00175	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HCMBHCFB@DataServer2IP?$AA@
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  0017f	ff d6		 call	 esi

; 172  : 	DataServerPort2			= GetPrivateProfileIntA("Connection", "DataServer2Port", DataServerPort+2, gDirPath.GetNewPath(FILE_SERVER_INFO));

  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  00186	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0018b	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00190	50		 push	 eax
  00191	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DataServerPort@@3HA ; DataServerPort
  00196	83 c0 02	 add	 eax, 2
  00199	50		 push	 eax
  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MEDFBDAM@DataServer2Port?$AA@
  0019f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  001a4	ff d7		 call	 edi
  001a6	a3 00 00 00 00	 mov	 DWORD PTR ?DataServerPort2@@3HA, eax ; DataServerPort2

; 173  : 	GetPrivateProfileStringA("Connection", "ExDBServerIP", "127.0.0.1", ExDBServerIP, sizeof(ExDBServerIP), gDirPath.GetNewPath(FILE_SERVER_INFO));

  001ab	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  001b0	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  001b5	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  001ba	50		 push	 eax
  001bb	68 00 01 00 00	 push	 256			; 00000100H
  001c0	68 00 00 00 00	 push	 OFFSET ?ExDBServerIP@@3PADA ; ExDBServerIP
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_09PFCHIMEP@127?40?40?41?$AA@
  001ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KOPNFGLM@ExDBServerIP?$AA@
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  001d4	ff d6		 call	 esi

; 174  : 	ExDbPort				= GetPrivateProfileIntA("Connection", "ExDBServerPort", 55906, gDirPath.GetNewPath(FILE_SERVER_INFO));

  001d6	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  001db	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  001e0	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  001e5	50		 push	 eax
  001e6	68 62 da 00 00	 push	 55906			; 0000da62H
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDOGKGEA@ExDBServerPort?$AA@
  001f0	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  001f5	ff d7		 call	 edi

; 175  : 	GetPrivateProfileStringA("Connection", "RankingServerIP", "127.0.0.1", RankingServerIP, sizeof(RankingServerIP), gDirPath.GetNewPath(FILE_SERVER_INFO));

  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  001fc	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00201	a3 00 00 00 00	 mov	 DWORD PTR ?ExDbPort@@3HA, eax ; ExDbPort
  00206	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0020b	50		 push	 eax
  0020c	68 00 01 00 00	 push	 256			; 00000100H
  00211	68 00 00 00 00	 push	 OFFSET ?RankingServerIP@@3PADA ; RankingServerIP
  00216	68 00 00 00 00	 push	 OFFSET ??_C@_09PFCHIMEP@127?40?40?41?$AA@
  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KNCKALNP@RankingServerIP?$AA@
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  00225	ff d6		 call	 esi

; 176  : 	RankingServerPort		= GetPrivateProfileIntA("Connection", "RankingServerPort", 44455, gDirPath.GetNewPath(FILE_SERVER_INFO));

  00227	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  0022c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00231	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00236	50		 push	 eax
  00237	68 a7 ad 00 00	 push	 44455			; 0000ada7H
  0023c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EIOMLALK@RankingServerPort?$AA@
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  00246	ff d7		 call	 edi

; 177  : 	GetPrivateProfileStringA("Connection", "EventServerIP", "127.0.0.1", EventServerIP, sizeof(EventServerIP), gDirPath.GetNewPath(FILE_SERVER_INFO));

  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  0024d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00252	a3 00 00 00 00	 mov	 DWORD PTR ?RankingServerPort@@3HA, eax ; RankingServerPort
  00257	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0025c	50		 push	 eax
  0025d	68 00 01 00 00	 push	 256			; 00000100H
  00262	68 00 00 00 00	 push	 OFFSET ?EventServerIP@@3PADA ; EventServerIP
  00267	68 00 00 00 00	 push	 OFFSET ??_C@_09PFCHIMEP@127?40?40?41?$AA@
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JMPCLILK@EventServerIP?$AA@
  00271	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  00276	ff d6		 call	 esi

; 178  : 	EventServerPort			= GetPrivateProfileIntA("Connection", "EventServerPort", 44456, gDirPath.GetNewPath(FILE_SERVER_INFO));

  00278	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BDDBDOEC@ServerInfo?4dat?$AA@
  0027d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00282	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00287	50		 push	 eax
  00288	68 a8 ad 00 00	 push	 44456			; 0000ada8H
  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CAOPMLG@EventServerPort?$AA@
  00292	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PJJKMLL@Connection?$AA@
  00297	ff d7		 call	 edi
  00299	a3 00 00 00 00	 mov	 DWORD PTR ?EventServerPort@@3HA, eax ; EventServerPort

; 179  : 
; 180  : 	gWhatsUpDummyServer.Start(ghWnd, GameServerPort+1);

  0029e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gWhatsUpDummyServer@@3VCWhatsUpDummyServer@@A ; gWhatsUpDummyServer
  002a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameServerPort@@3HA ; GameServerPort
  002a8	40		 inc	 eax
  002a9	50		 push	 eax
  002aa	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  002b0	e8 00 00 00 00	 call	 ?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z ; CWhatsUpDummyServer::Start

; 181  : 	AllServerStart();

  002b5	e8 00 00 00 00	 call	 ?AllServerStart@@YAHXZ	; AllServerStart

; 182  : 
; 183  : 	while(GetMessage(&msg, NULL, 0, 0) != 0)

  002ba	6a 00		 push	 0
  002bc	6a 00		 push	 0
  002be	6a 00		 push	 0
  002c0	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  002c3	50		 push	 eax
  002c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
  002ca	85 c0		 test	 eax, eax
  002cc	74 44		 je	 SHORT $LN3@WinMain
  002ce	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__TranslateMessage@4
  002d4	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__DispatchMessageA@4
  002da	53		 push	 ebx
  002db	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__TranslateAcceleratorA@12
$LL2@WinMain:

; 184  : 	{
; 185  : 		if (!TranslateAccelerator(msg.hwnd,hAccelTable,&msg))

  002e1	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  002e4	50		 push	 eax
  002e5	ff 75 08	 push	 DWORD PTR _hAccelTable$1$[ebp]
  002e8	ff 75 e4	 push	 DWORD PTR _msg$[ebp]
  002eb	ff d3		 call	 ebx
  002ed	85 c0		 test	 eax, eax
  002ef	75 0c		 jne	 SHORT $LN5@WinMain

; 186  : 		{
; 187  : 		    TranslateMessage(&msg);

  002f1	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  002f4	50		 push	 eax
  002f5	ff d6		 call	 esi

; 188  : 		    DispatchMessage(&msg);

  002f7	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  002fa	50		 push	 eax
  002fb	ff d7		 call	 edi
$LN5@WinMain:

; 182  : 
; 183  : 	while(GetMessage(&msg, NULL, 0, 0) != 0)

  002fd	6a 00		 push	 0
  002ff	6a 00		 push	 0
  00301	6a 00		 push	 0
  00303	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00306	50		 push	 eax
  00307	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
  0030d	85 c0		 test	 eax, eax
  0030f	75 d0		 jne	 SHORT $LL2@WinMain
  00311	5b		 pop	 ebx
$LN3@WinMain:

; 189  : 		}
; 190  : 	}
; 191  : 
; 192  : 	g_MuTimer.SetTimerEnd();

  00312	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MuTimer@@3VCMuTimer@@A ; g_MuTimer
  00317	e8 00 00 00 00	 call	 ?SetTimerEnd@CMuTimer@@QAEXXZ ; CMuTimer::SetTimerEnd

; 193  : 	UnSetUnhandledFilter();

  0031c	e8 00 00 00 00	 call	 ?UnSetUnhandledFilter@@YAXXZ ; UnSetUnhandledFilter

; 194  : 
; 195  : 	return msg.wParam;

  00321	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00324	5f		 pop	 edi
  00325	5e		 pop	 esi

; 196  : }

  00326	8b e5		 mov	 esp, ebp
  00328	5d		 pop	 ebp
  00329	c2 10 00	 ret	 16			; 00000010H
_WinMain@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 809  : // -------------------------------------------------------------------------------

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\gameserver.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 809  : // -------------------------------------------------------------------------------

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
