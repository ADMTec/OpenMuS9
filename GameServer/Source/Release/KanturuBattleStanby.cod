; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\KanturuBattleStanby.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CKanturuBattleStanby@@QAE@XZ			; CKanturuBattleStanby::CKanturuBattleStanby
PUBLIC	??1CKanturuBattleStanby@@UAE@XZ			; CKanturuBattleStanby::~CKanturuBattleStanby
PUBLIC	?Init@CKanturuBattleStanby@@QAEXXZ		; CKanturuBattleStanby::Init
PUBLIC	?LoadData@CKanturuBattleStanby@@QAEHPAD@Z	; CKanturuBattleStanby::LoadData
PUBLIC	?ResetAllData@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ResetAllData
PUBLIC	?Run@CKanturuBattleStanby@@QAEXXZ		; CKanturuBattleStanby::Run
PUBLIC	?SetState@CKanturuBattleStanby@@QAEXH@Z		; CKanturuBattleStanby::SetState
PUBLIC	?SetNextState@CKanturuBattleStanby@@QAEXH@Z	; CKanturuBattleStanby::SetNextState
PUBLIC	?SetState_NONE@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_NONE
PUBLIC	?SetState_START@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_START
PUBLIC	?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_NOTIFY
PUBLIC	?SetState_END@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::SetState_END
PUBLIC	?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_NONE
PUBLIC	?ProcState_START@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_START
PUBLIC	?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_NOTIFY
PUBLIC	?ProcState_END@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::ProcState_END
PUBLIC	?CheckStateTime@CKanturuBattleStanby@@QAEXXZ	; CKanturuBattleStanby::CheckStateTime
PUBLIC	?GetRemainTime@CKanturuBattleStanby@@QAEHXZ	; CKanturuBattleStanby::GetRemainTime
PUBLIC	??_GCKanturuBattleStanby@@UAEPAXI@Z		; CKanturuBattleStanby::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7CKanturuBattleStanby@@6B@			; CKanturuBattleStanby::`vftable'
PUBLIC	??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@ ; `string'
PUBLIC	??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@ ; `string'
PUBLIC	??_R0K@8					; unsigned long `RTTI Type Descriptor'
PUBLIC	??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@ ; `string'
PUBLIC	??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
PUBLIC	??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
PUBLIC	??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
PUBLIC	??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ ; `string'
PUBLIC	??_R4CKanturuBattleStanby@@6B@			; CKanturuBattleStanby::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturuBattleStanby@@@8		; CKanturuBattleStanby `RTTI Type Descriptor'
PUBLIC	??_R3CKanturuBattleStanby@@8			; CKanturuBattleStanby::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturuBattleStanby@@8			; CKanturuBattleStanby::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturuBattleStanby@@8		; CKanturuBattleStanby::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	_isalpha:PROC
EXTRN	_isdigit:PROC
EXTRN	_isspace:PROC
EXTRN	_isalnum:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	_fclose:PROC
EXTRN	_fgetc:PROC
EXTRN	_fopen:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_atof:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??0CKanturuStateInfo@@QAE@XZ:PROC		; CKanturuStateInfo::CKanturuStateInfo
EXTRN	??1CKanturuStateInfo@@UAE@XZ:PROC		; CKanturuStateInfo::~CKanturuStateInfo
EXTRN	??_ECKanturuBattleStanby@@UAEPAXI@Z:PROC	; CKanturuBattleStanby::`vector deleting destructor'
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ:PROC ; CKanturuMonsterMng::ResetRegenMonsterObjData
EXTRN	?ResetAllData@CKanturuBattleUserMng@@QAEXXZ:PROC ; CKanturuBattleUserMng::ResetAllData
EXTRN	??0CKanturuUtil@@QAE@XZ:PROC			; CKanturuUtil::CKanturuUtil
EXTRN	??1CKanturuUtil@@UAE@XZ:PROC			; CKanturuUtil::~CKanturuUtil
EXTRN	?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z:PROC ; CKanturuUtil::NotifyKanturuChangeState
EXTRN	?SendMsgKauturuMapUser@CKanturuUtil@@QAAXPADZZ:PROC ; CKanturuUtil::SendMsgKauturuMapUser
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A:BYTE ; g_KanturuMonsterMng
EXTRN	?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A:BYTE ; g_KanturuBattleUserMng
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?SMDFile@@3PAU_iobuf@@A DD 01H DUP (?)			; SMDFile
?TokenNumber@@3MA DD 01H DUP (?)			; TokenNumber
?TokenString@@3PADA DB 064H DUP (?)			; TokenString
?CurrentToken@@3W4SMDToken@@A DD 01H DUP (?)		; CurrentToken
?KANTURU_UTIL@@3VCKanturuUtil@@A DD 01H DUP (?)		; KANTURU_UTIL
_BSS	ENDS
CRT$XCU	SEGMENT
?KANTURU_UTIL$initializer$@@3P6AXXZA DD FLAT:??__EKANTURU_UTIL@@YAXXZ ; KANTURU_UTIL$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CKanturuBattleStanby@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturuBattleStanby@@8 DD FLAT:??_R0?AVCKanturuBattleStanby@@@8 ; CKanturuBattleStanby::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturuBattleStanby@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturuBattleStanby@@8
rdata$r	SEGMENT
??_R2CKanturuBattleStanby@@8 DD FLAT:??_R1A@?0A@EA@CKanturuBattleStanby@@8 ; CKanturuBattleStanby::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturuBattleStanby@@8
rdata$r	SEGMENT
??_R3CKanturuBattleStanby@@8 DD 00H			; CKanturuBattleStanby::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturuBattleStanby@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturuBattleStanby@@@8
data$r	SEGMENT
??_R0?AVCKanturuBattleStanby@@@8 DD FLAT:??_7type_info@@6B@ ; CKanturuBattleStanby `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturuBattleStanby@@', 00H
data$r	ENDS
;	COMDAT ??_R4CKanturuBattleStanby@@6B@
rdata$r	SEGMENT
??_R4CKanturuBattleStanby@@6B@ DD 00H			; CKanturuBattleStanby::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturuBattleStanby@@@8
	DD	FLAT:??_R3CKanturuBattleStanby@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> END', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> NOTIFY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> START', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
CONST	SEGMENT
??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@ DB '['
	DB	' KANTURU ][ BattleStanby ] State(%d) -> NONE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@
CONST	SEGMENT
??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@ DB '['
	DB	' KANTURU ][ BattleStanby ] - Loading Exception Error (%s) Fil'
	DB	'e. ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_R0K@8
data$r	SEGMENT
??_R0K@8 DD	FLAT:??_7type_info@@6B@			; unsigned long `RTTI Type Descriptor'
	DD	00H
	DB	'.K', 00H
data$r	ENDS
;	COMDAT ??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@
CONST	SEGMENT
??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@ DB '['
	DB	' KANTURU ][ BattleStanby ] %s file is Loaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@
CONST	SEGMENT
??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@ DB '['
	DB	' KANTURU ][ BattleStanby ] - Exceed Max State Time (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@
CONST	SEGMENT
??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@ DB '['
	DB	' KANTURU ][ BattleStanby ] - Can''t Open %s ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@
CONST	SEGMENT
??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@ DB '['
	DB	' KANTURU ][ BattleStanby ] - File load error : File Name Erro'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CKanturuBattleStanby@@6B@
CONST	SEGMENT
??_7CKanturuBattleStanby@@6B@ DD FLAT:??_R4CKanturuBattleStanby@@6B@ ; CKanturuBattleStanby::`vftable'
	DD	FLAT:??_ECKanturuBattleStanby@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$2 DD 00H
	DD	FLAT:??_R0K@8
	DD	00H
	DD	FLAT:__catch$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$0
__unwindtable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$2
__ehfuncinfo$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CKanturuBattleStanby@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FKANTURU_UTIL@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_UTIL@@YAXXZ PROC				; `dynamic atexit destructor for 'KANTURU_UTIL'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?KANTURU_UTIL@@3VCKanturuUtil@@A
  00005	e9 00 00 00 00	 jmp	 ??1CKanturuUtil@@UAE@XZ	; CKanturuUtil::~CKanturuUtil
??__FKANTURU_UTIL@@YAXXZ ENDP				; `dynamic atexit destructor for 'KANTURU_UTIL''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ??__EKANTURU_UTIL@@YAXXZ
text$di	SEGMENT
??__EKANTURU_UTIL@@YAXXZ PROC				; `dynamic initializer for 'KANTURU_UTIL'', COMDAT

; 17   : static CKanturuUtil KANTURU_UTIL;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?KANTURU_UTIL@@3VCKanturuUtil@@A
  00005	e8 00 00 00 00	 call	 ??0CKanturuUtil@@QAE@XZ	; CKanturuUtil::CKanturuUtil
  0000a	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_UTIL@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_UTIL''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EKANTURU_UTIL@@YAXXZ ENDP				; `dynamic initializer for 'KANTURU_UTIL''
text$di	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\include\readscript.h
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	int ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?TokenString@@3PADA, 0
  00017	53		 push	 ebx
  00018	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8b d8		 mov	 ebx, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	83 fb ff	 cmp	 ebx, -1
  00033	74 5d		 je	 SHORT $LN43@GetToken

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)
; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	83 fb 2f	 cmp	 ebx, 47			; 0000002fH
  00038	75 30		 jne	 SHORT $LN2@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00040	e8 00 00 00 00	 call	 _fgetc
  00045	8b d8		 mov	 ebx, eax
  00047	83 c4 04	 add	 esp, 4
  0004a	83 fb 2f	 cmp	 ebx, 47			; 0000002fH
  0004d	75 1b		 jne	 SHORT $LN2@GetToken
  0004f	90		 npad	 1
$LL5@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	83 fb ff	 cmp	 ebx, -1
  00053	74 3d		 je	 SHORT $LN43@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  0005b	e8 00 00 00 00	 call	 _fgetc
  00060	8b d8		 mov	 ebx, eax
  00062	83 c4 04	 add	 esp, 4
  00065	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  00068	75 e6		 jne	 SHORT $LL5@GetToken
$LN2@GetToken:

; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006a	53		 push	 ebx
  0006b	e8 00 00 00 00	 call	 _isspace
  00070	83 c4 04	 add	 esp, 4
  00073	85 c0		 test	 eax, eax
  00075	75 a9		 jne	 SHORT $LL4@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  00077	8d 43 de	 lea	 eax, DWORD PTR [ebx-34]
  0007a	56		 push	 esi
  0007b	83 f8 5b	 cmp	 eax, 91			; 0000005bH
  0007e	0f 87 89 01 00
	00		 ja	 $LN29@GetToken
  00084	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN58@GetToken[eax]
  0008b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN64@GetToken[eax*4]
$LN43@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE

  00092	b8 02 00 00 00	 mov	 eax, 2
  00097	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00098	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009b	33 cd		 xor	 ecx, ebp
  0009d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
$LN20@GetToken:
  000a6	5e		 pop	 esi

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000a7	c7 05 00 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 35 ; 00000023H
  000b1	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b6	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN21@GetToken:
  000c5	5e		 pop	 esi

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000c6	c7 05 00 00 00
	00 3b 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 59 ; 0000003bH
  000d0	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000d5	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000d6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d9	33 cd		 xor	 ecx, ebp
  000db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
$LN22@GetToken:
  000e4	5e		 pop	 esi

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000e5	c7 05 00 00 00
	00 2c 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 44 ; 0000002cH
  000ef	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000f4	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  000f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
$LN23@GetToken:
  00103	5e		 pop	 esi

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  00104	c7 05 00 00 00
	00 7b 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 123 ; 0000007bH
  0010e	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  00113	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00114	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00117	33 cd		 xor	 ecx, ebp
  00119	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
$LN24@GetToken:
  00122	5e		 pop	 esi

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  00123	c7 05 00 00 00
	00 7d 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 125 ; 0000007dH
  0012d	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  00132	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00133	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00136	33 cd		 xor	 ecx, ebp
  00138	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c3		 ret	 0
$LN25@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  00141	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00147	53		 push	 ebx
  00148	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  0014d	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00153	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  00156	e8 00 00 00 00	 call	 _getc
  0015b	8b d8		 mov	 ebx, eax
  0015d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00160	83 fb ff	 cmp	 ebx, -1
  00163	74 2f		 je	 SHORT $LN59@GetToken
$LL9@GetToken:
  00165	83 fb 2e	 cmp	 ebx, 46			; 0000002eH
  00168	74 12		 je	 SHORT $LN26@GetToken
  0016a	53		 push	 ebx
  0016b	e8 00 00 00 00	 call	 _isdigit
  00170	83 c4 04	 add	 esp, 4
  00173	85 c0		 test	 eax, eax
  00175	75 05		 jne	 SHORT $LN26@GetToken
  00177	83 fb 2d	 cmp	 ebx, 45			; 0000002dH
  0017a	75 18		 jne	 SHORT $LN59@GetToken
$LN26@GetToken:
  0017c	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00182	88 1e		 mov	 BYTE PTR [esi], bl

; 102  : 			p++;

  00184	46		 inc	 esi
  00185	e8 00 00 00 00	 call	 _getc
  0018a	8b d8		 mov	 ebx, eax
  0018c	83 c4 04	 add	 esp, 4
  0018f	83 fb ff	 cmp	 ebx, -1
  00192	75 d1		 jne	 SHORT $LL9@GetToken
$LN59@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = (float)atof( TempString);	// Select the first Byte as Main ID

  00194	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  00197	c6 06 00	 mov	 BYTE PTR [esi], 0
  0019a	50		 push	 eax
  0019b	e8 00 00 00 00	 call	 _atof
  001a0	83 c4 04	 add	 esp, 4

; 106  : 		return CurrentToken  = NUMBER ;

  001a3	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 1
  001ad	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?TokenNumber@@3MA
  001b3	b8 01 00 00 00	 mov	 eax, 1
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  001ba	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bd	33 cd		 xor	 ecx, ebp
  001bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c3		 ret	 0
$LN27@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  001c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  001ce	be 00 00 00 00	 mov	 esi, OFFSET ?TokenString@@3PADA
  001d3	e8 00 00 00 00	 call	 _getc
  001d8	83 c4 04	 add	 esp, 4
  001db	83 f8 ff	 cmp	 eax, -1
  001de	74 1f		 je	 SHORT $LN12@GetToken
$LL11@GetToken:
  001e0	83 f8 22	 cmp	 eax, 34			; 00000022H
  001e3	0f 84 95 00 00
	00		 je	 $LN28@GetToken
  001e9	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 113  : 		{
; 114  : 			*p = ch;

  001ef	88 06		 mov	 BYTE PTR [esi], al

; 115  : 			p++;

  001f1	46		 inc	 esi
  001f2	e8 00 00 00 00	 call	 _getc
  001f7	83 c4 04	 add	 esp, 4
  001fa	83 f8 ff	 cmp	 eax, -1
  001fd	75 e1		 jne	 SHORT $LL11@GetToken
$LN12@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001ff	83 f8 22	 cmp	 eax, 34			; 00000022H
  00202	74 7a		 je	 SHORT $LN28@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  00204	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  0020a	50		 push	 eax

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  0020b	eb 69		 jmp	 SHORT $LN62@GetToken
$LN29@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  0020d	53		 push	 ebx
  0020e	e8 00 00 00 00	 call	 _isalpha
  00213	83 c4 04	 add	 esp, 4
  00216	85 c0		 test	 eax, eax
  00218	0f 84 7f 00 00
	00		 je	 $LN30@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  0021e	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00224	88 1d 00 00 00
	00		 mov	 BYTE PTR ?TokenString@@3PADA, bl
  0022a	be 01 00 00 00	 mov	 esi, OFFSET ?TokenString@@3PADA+1
  0022f	e8 00 00 00 00	 call	 _getc
  00234	8b d8		 mov	 ebx, eax
  00236	83 c4 04	 add	 esp, 4
  00239	83 fb ff	 cmp	 ebx, -1
  0023c	74 31		 je	 SHORT $LN60@GetToken
  0023e	66 90		 npad	 2
$LL13@GetToken:
  00240	83 fb 2e	 cmp	 ebx, 46			; 0000002eH
  00243	74 12		 je	 SHORT $LN32@GetToken
  00245	83 fb 5f	 cmp	 ebx, 95			; 0000005fH
  00248	74 0d		 je	 SHORT $LN32@GetToken
  0024a	53		 push	 ebx
  0024b	e8 00 00 00 00	 call	 _isalnum
  00250	83 c4 04	 add	 esp, 4
  00253	85 c0		 test	 eax, eax
  00255	74 18		 je	 SHORT $LN60@GetToken
$LN32@GetToken:
  00257	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A

; 133  : 			{
; 134  : 				*p=ch;

  0025d	88 1e		 mov	 BYTE PTR [esi], bl

; 135  : 				p++;

  0025f	46		 inc	 esi
  00260	e8 00 00 00 00	 call	 _getc
  00265	8b d8		 mov	 ebx, eax
  00267	83 c4 04	 add	 esp, 4
  0026a	83 fb ff	 cmp	 ebx, -1
  0026d	75 d1		 jne	 SHORT $LL13@GetToken
$LN60@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0026f	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  00275	53		 push	 ebx
$LN62@GetToken:
  00276	e8 00 00 00 00	 call	 _ungetc
  0027b	83 c4 08	 add	 esp, 8
$LN28@GetToken:

; 140  : 			*p=0;

  0027e	c6 06 00	 mov	 BYTE PTR [esi], 0

; 141  : 			CurrentToken=NAME;
; 142  : 			return CurrentToken;

  00281	33 c0		 xor	 eax, eax
  00283	5e		 pop	 esi
  00284	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 0
  0028e	5b		 pop	 ebx

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'
; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0028f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00292	33 cd		 xor	 ecx, ebp
  00294	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00299	8b e5		 mov	 esp, ebp
  0029b	5d		 pop	 ebp
  0029c	c3		 ret	 0
$LN30@GetToken:
  0029d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a0	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  002a5	5e		 pop	 esi
  002a6	33 cd		 xor	 ecx, ebp
  002a8	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?CurrentToken@@3W4SMDToken@@A, 60 ; 0000003cH
  002b2	5b		 pop	 ebx
  002b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b8	8b e5		 mov	 esp, ebp
  002ba	5d		 pop	 ebp
  002bb	c3		 ret	 0
$LN64@GetToken:
  002bc	00 00 00 00	 DD	 $LN27@GetToken
  002c0	00 00 00 00	 DD	 $LN20@GetToken
  002c4	00 00 00 00	 DD	 $LN22@GetToken
  002c8	00 00 00 00	 DD	 $LN25@GetToken
  002cc	00 00 00 00	 DD	 $LN21@GetToken
  002d0	00 00 00 00	 DD	 $LN23@GetToken
  002d4	00 00 00 00	 DD	 $LN24@GetToken
  002d8	00 00 00 00	 DD	 $LN29@GetToken
$LN58@GetToken:
  002dc	00		 DB	 0
  002dd	01		 DB	 1
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	07		 DB	 7
  002e2	07		 DB	 7
  002e3	07		 DB	 7
  002e4	07		 DB	 7
  002e5	07		 DB	 7
  002e6	02		 DB	 2
  002e7	03		 DB	 3
  002e8	03		 DB	 3
  002e9	07		 DB	 7
  002ea	03		 DB	 3
  002eb	03		 DB	 3
  002ec	03		 DB	 3
  002ed	03		 DB	 3
  002ee	03		 DB	 3
  002ef	03		 DB	 3
  002f0	03		 DB	 3
  002f1	03		 DB	 3
  002f2	03		 DB	 3
  002f3	03		 DB	 3
  002f4	07		 DB	 7
  002f5	04		 DB	 4
  002f6	07		 DB	 7
  002f7	07		 DB	 7
  002f8	07		 DB	 7
  002f9	07		 DB	 7
  002fa	07		 DB	 7
  002fb	07		 DB	 7
  002fc	07		 DB	 7
  002fd	07		 DB	 7
  002fe	07		 DB	 7
  002ff	07		 DB	 7
  00300	07		 DB	 7
  00301	07		 DB	 7
  00302	07		 DB	 7
  00303	07		 DB	 7
  00304	07		 DB	 7
  00305	07		 DB	 7
  00306	07		 DB	 7
  00307	07		 DB	 7
  00308	07		 DB	 7
  00309	07		 DB	 7
  0030a	07		 DB	 7
  0030b	07		 DB	 7
  0030c	07		 DB	 7
  0030d	07		 DB	 7
  0030e	07		 DB	 7
  0030f	07		 DB	 7
  00310	07		 DB	 7
  00311	07		 DB	 7
  00312	07		 DB	 7
  00313	07		 DB	 7
  00314	07		 DB	 7
  00315	07		 DB	 7
  00316	07		 DB	 7
  00317	07		 DB	 7
  00318	07		 DB	 7
  00319	07		 DB	 7
  0031a	07		 DB	 7
  0031b	07		 DB	 7
  0031c	07		 DB	 7
  0031d	07		 DB	 7
  0031e	07		 DB	 7
  0031f	07		 DB	 7
  00320	07		 DB	 7
  00321	07		 DB	 7
  00322	07		 DB	 7
  00323	07		 DB	 7
  00324	07		 DB	 7
  00325	07		 DB	 7
  00326	07		 DB	 7
  00327	07		 DB	 7
  00328	07		 DB	 7
  00329	07		 DB	 7
  0032a	07		 DB	 7
  0032b	07		 DB	 7
  0032c	07		 DB	 7
  0032d	07		 DB	 7
  0032e	07		 DB	 7
  0032f	07		 DB	 7
  00330	07		 DB	 7
  00331	07		 DB	 7
  00332	07		 DB	 7
  00333	07		 DB	 7
  00334	07		 DB	 7
  00335	05		 DB	 5
  00336	07		 DB	 7
  00337	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCKanturuBattleStanby@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCKanturuBattleStanby@@UAEPAXI@Z PROC		; CKanturuBattleStanby::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CKanturuBattleStanby@@UAE@XZ ; CKanturuBattleStanby::~CKanturuBattleStanby
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 64		 push	 100			; 00000064H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCKanturuBattleStanby@@UAEPAXI@Z ENDP		; CKanturuBattleStanby::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?GetRemainTime@CKanturuBattleStanby@@QAEHXZ
_TEXT	SEGMENT
?GetRemainTime@CKanturuBattleStanby@@QAEHXZ PROC	; CKanturuBattleStanby::GetRemainTime, COMDAT
; _this$ = ecx

; 331  : 	return this->m_StateInfo[iCurrentState].GetRemainTime();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	57		 push	 edi
  00004	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00007	8d 3c 81	 lea	 edi, DWORD PTR [ecx+eax*4]
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 73   : 		int iRemainTime = 0;

  0000a	33 c0		 xor	 eax, eax

; 74   : 
; 75   : 		if ( this->GetCondition() == 1 )

  0000c	83 7f 18 01	 cmp	 DWORD PTR [edi+24], 1
  00010	75 2b		 jne	 SHORT $LN5@GetRemainT
  00012	56		 push	 esi

; 61   : 		return this->m_dwAppliedTickCount;

  00013	8b 77 20	 mov	 esi, DWORD PTR [edi+32]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  0001c	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  0001f	2b c6		 sub	 eax, esi

; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00021	2b c8		 sub	 ecx, eax
  00023	5e		 pop	 esi

; 78   : 
; 79   : 			if ( iRemainTime <= 0 )

  00024	85 c9		 test	 ecx, ecx
  00026	7f 04		 jg	 SHORT $LN7@GetRemainT
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 331  : 	return this->m_StateInfo[iCurrentState].GetRemainTime();

  00028	33 c0		 xor	 eax, eax
  0002a	5f		 pop	 edi

; 332  : }

  0002b	c3		 ret	 0
$LN7@GetRemainT:
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 84   : 			iRemainTime /= 1000;

  0002c	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00031	f7 e9		 imul	 ecx
  00033	c1 fa 06	 sar	 edx, 6
  00036	8b c2		 mov	 eax, edx
  00038	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003b	03 c2		 add	 eax, edx
$LN5@GetRemainT:
  0003d	5f		 pop	 edi
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 332  : }

  0003e	c3		 ret	 0
?GetRemainTime@CKanturuBattleStanby@@QAEHXZ ENDP	; CKanturuBattleStanby::GetRemainTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?CheckStateTime@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
tv188 = -4						; size = 4
?CheckStateTime@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::CheckStateTime, COMDAT
; _this$ = ecx

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx
  00007	57		 push	 edi
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h

; 47   : 	int GetBattleStanbyState(){return this->m_iBattleStanbyState;}

  00008	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 314  : 	if ( iCurrentState )

  0000b	85 ff		 test	 edi, edi
  0000d	74 46		 je	 SHORT $LN4@CheckState

; 316  : 		if ( this->m_StateInfo[iCurrentState].GetCondition() == 1 )

  0000f	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
  00012	83 7c 83 18 01	 cmp	 DWORD PTR [ebx+eax*4+24], 1
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 42   : 		return this->m_iCondition;

  00017	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0001a	89 45 fc	 mov	 DWORD PTR tv188[ebp], eax
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 316  : 		if ( this->m_StateInfo[iCurrentState].GetCondition() == 1 )

  0001d	75 36		 jne	 SHORT $LN4@CheckState
  0001f	56		 push	 esi
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 61   : 		return this->m_dwAppliedTickCount;

  00020	8b 70 20	 mov	 esi, DWORD PTR [eax+32]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 68   : 		return iElapsedTime;
; 69   : 	}
; 70   : 
; 71   : 	int GetRemainTime()
; 72   : 	{
; 73   : 		int iRemainTime = 0;
; 74   : 
; 75   : 		if ( this->GetCondition() == 1 )
; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00029	8b 4d fc	 mov	 ecx, DWORD PTR tv188[ebp]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  0002c	2b c6		 sub	 eax, esi
  0002e	5e		 pop	 esi

; 68   : 		return iElapsedTime;
; 69   : 	}
; 70   : 
; 71   : 	int GetRemainTime()
; 72   : 	{
; 73   : 		int iRemainTime = 0;
; 74   : 
; 75   : 		if ( this->GetCondition() == 1 )
; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  0002f	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00032	2b c8		 sub	 ecx, eax

; 78   : 
; 79   : 			if ( iRemainTime <= 0 )

  00034	85 c9		 test	 ecx, ecx
  00036	7e 15		 jle	 SHORT $LN24@CheckState

; 80   : 			{
; 81   : 				return 0;
; 82   : 			}
; 83   : 
; 84   : 			iRemainTime /= 1000;

  00038	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  0003d	f7 e9		 imul	 ecx
  0003f	c1 fa 06	 sar	 edx, 6
  00042	8b c2		 mov	 eax, edx
  00044	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00047	03 c2		 add	 eax, edx

; 85   : 		}
; 86   : 
; 87   : 		return iRemainTime;
; 88   : 	}
; 89   : 
; 90   : 	BOOL IsTimeOut()
; 91   : 	{
; 92   : 		if ( this->GetRemainTime() <= 0 )

  00049	85 c0		 test	 eax, eax
  0004b	7f 08		 jg	 SHORT $LN4@CheckState
$LN24@CheckState:
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 320  : 				this->SetNextState(iCurrentState);

  0004d	57		 push	 edi
  0004e	8b cb		 mov	 ecx, ebx
  00050	e8 00 00 00 00	 call	 ?SetNextState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetNextState
$LN4@CheckState:
  00055	5f		 pop	 edi
  00056	5b		 pop	 ebx

; 321  : 			}
; 322  : 		}
; 323  : 	}
; 324  : }

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?CheckStateTime@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::CheckStateTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
;	COMDAT ?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ
_TEXT	SEGMENT
?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ PROC	; CKanturuBattleStanby::GetBattleStanbyState, COMDAT
; _this$ = ecx

; 47   : 	int GetBattleStanbyState(){return this->m_iBattleStanbyState;}

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetBattleStanbyState@CKanturuBattleStanby@@QAEHXZ ENDP	; CKanturuBattleStanby::GetBattleStanbyState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
;	COMDAT ?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z
_TEXT	SEGMENT
_iBattleStanbyState$ = 8				; size = 4
?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z PROC ; CKanturuBattleStanby::SetBattleStanbyState, COMDAT
; _this$ = ecx

; 46   : 	void SetBattleStanbyState(int iBattleStanbyState){this->m_iBattleStanbyState = iBattleStanbyState;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _iBattleStanbyState$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetBattleStanbyState@CKanturuBattleStanby@@QAEXH@Z ENDP ; CKanturuBattleStanby::SetBattleStanbyState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?ProcState_END@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?ProcState_END@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_END, COMDAT
; _this$ = ecx

; 305  : 	return;
; 306  : }

  00000	c3		 ret	 0
?ProcState_END@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_END
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_NOTIFY, COMDAT
; _this$ = ecx

; 299  : 	return;
; 300  : }

  00000	c3		 ret	 0
?ProcState_NOTIFY@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_NOTIFY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?ProcState_START@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?ProcState_START@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_START, COMDAT
; _this$ = ecx

; 293  : 	return;
; 294  : }

  00000	c3		 ret	 0
?ProcState_START@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_START
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::ProcState_NONE, COMDAT
; _this$ = ecx

; 287  : 	return;
; 288  : }

  00000	c3		 ret	 0
?ProcState_NONE@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::ProcState_NONE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?SetState_END@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?SetState_END@CKanturuBattleStanby@@QAEXXZ PROC		; CKanturuBattleStanby::SetState_END, COMDAT
; _this$ = ecx

; 277  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> END",

  00003	ff 76 04	 push	 DWORD PTR [esi+4]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@GJHFCOMK@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  0000b	6a 05		 push	 5
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h

; 46   : 	void SetBattleStanbyState(int iBattleStanbyState){this->m_iBattleStanbyState = iBattleStanbyState;}

  00016	c7 46 04 03 00
	00 00		 mov	 DWORD PTR [esi+4], 3
  0001d	5e		 pop	 esi
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 282  : }

  0001e	c3		 ret	 0
?SetState_END@CKanturuBattleStanby@@QAEXXZ ENDP		; CKanturuBattleStanby::SetState_END
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::SetState_NOTIFY, COMDAT
; _this$ = ecx

; 267  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 268  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> NOTIFY",

  00003	ff 76 04	 push	 DWORD PTR [esi+4]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OHJJIPGF@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  0000b	6a 05		 push	 5
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h

; 46   : 	void SetBattleStanbyState(int iBattleStanbyState){this->m_iBattleStanbyState = iBattleStanbyState;}

  00016	c7 46 04 02 00
	00 00		 mov	 DWORD PTR [esi+4], 2
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 272  : 	KANTURU_UTIL.SendMsgKauturuMapUser(lMsg.Get(MSGGET(13, 31)));

  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00022	68 1f 0d 00 00	 push	 3359			; 00000d1fH
  00027	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ?KANTURU_UTIL@@3VCKanturuUtil@@A
  00032	e8 00 00 00 00	 call	 ?SendMsgKauturuMapUser@CKanturuUtil@@QAAXPADZZ ; CKanturuUtil::SendMsgKauturuMapUser
  00037	83 c4 08	 add	 esp, 8
  0003a	5e		 pop	 esi

; 273  : }

  0003b	c3		 ret	 0
?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::SetState_NOTIFY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?SetState_START@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?SetState_START@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::SetState_START, COMDAT
; _this$ = ecx

; 258  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 259  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> START",

  00003	ff 76 04	 push	 DWORD PTR [esi+4]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JECNKHGH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  0000b	6a 05		 push	 5
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h

; 46   : 	void SetBattleStanbyState(int iBattleStanbyState){this->m_iBattleStanbyState = iBattleStanbyState;}

  00016	c7 46 04 01 00
	00 00		 mov	 DWORD PTR [esi+4], 1
  0001d	5e		 pop	 esi
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 263  : }

  0001e	c3		 ret	 0
?SetState_START@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::SetState_START
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?SetState_NONE@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?SetState_NONE@CKanturuBattleStanby@@QAEXXZ PROC	; CKanturuBattleStanby::SetState_NONE, COMDAT
; _this$ = ecx

; 248  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 249  : 	LogAddC(5, "[ KANTURU ][ BattleStanby ] State(%d) -> NONE",

  00003	ff 76 04	 push	 DWORD PTR [esi+4]
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@DECNDGGC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5Stat@
  0000b	6a 05		 push	 5
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h

; 46   : 	void SetBattleStanbyState(int iBattleStanbyState){this->m_iBattleStanbyState = iBattleStanbyState;}

  00016	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001d	5e		 pop	 esi
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 253  : }

  0001e	c3		 ret	 0
?SetState_NONE@CKanturuBattleStanby@@QAEXXZ ENDP	; CKanturuBattleStanby::SetState_NONE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?SetNextState@CKanturuBattleStanby@@QAEXH@Z
_TEXT	SEGMENT
_iCurrentState$ = 8					; size = 4
?SetNextState@CKanturuBattleStanby@@QAEXH@Z PROC	; CKanturuBattleStanby::SetNextState, COMDAT
; _this$ = ecx

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 235  : 	int iNextState = iCurrentState + 1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCurrentState$[ebp]

; 236  : 
; 237  : 	if ( iNextState >= KANTURU_STANBY_STATE_INFO )

  00006	33 d2		 xor	 edx, edx
  00008	40		 inc	 eax
  00009	83 f8 04	 cmp	 eax, 4
  0000c	0f 4d c2	 cmovge	 eax, edx

; 238  : 	{
; 239  : 		iNextState = KANTURU_STANBY_NONE;
; 240  : 	}
; 241  : 
; 242  : 	this->SetState(iNextState);

  0000f	89 45 08	 mov	 DWORD PTR _iCurrentState$[ebp], eax

; 243  : }

  00012	5d		 pop	 ebp

; 238  : 	{
; 239  : 		iNextState = KANTURU_STANBY_NONE;
; 240  : 	}
; 241  : 
; 242  : 	this->SetState(iNextState);

  00013	e9 00 00 00 00	 jmp	 ?SetState@CKanturuBattleStanby@@QAEXH@Z ; CKanturuBattleStanby::SetState
?SetNextState@CKanturuBattleStanby@@QAEXH@Z ENDP	; CKanturuBattleStanby::SetNextState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?SetState@CKanturuBattleStanby@@QAEXH@Z
_TEXT	SEGMENT
_iBattleStanbyState$ = 8				; size = 4
?SetState@CKanturuBattleStanby@@QAEXH@Z PROC		; CKanturuBattleStanby::SetState, COMDAT
; _this$ = ecx

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 195  : 	if ( this->m_StateInfo[iBattleStanbyState].GetCondition() > 0 )

  00006	8b 7d 08	 mov	 edi, DWORD PTR _iBattleStanbyState$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
  0000e	83 7c 86 18 00	 cmp	 DWORD PTR [esi+eax*4+24], 0
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 42   : 		return this->m_iCondition;

  00013	8d 1c 86	 lea	 ebx, DWORD PTR [esi+eax*4]
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 195  : 	if ( this->m_StateInfo[iBattleStanbyState].GetCondition() > 0 )

  00016	7e 09		 jle	 SHORT $LN7@SetState
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 56   : 		this->m_dwAppliedTickCount = GetTickCount();

  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0001e	89 43 20	 mov	 DWORD PTR [ebx+32], eax
$LN7@SetState:
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 200  : 	g_KanturuMonsterMng.ResetRegenMonsterObjData();

  00021	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuMonsterMng@@3VCKanturuMonsterMng@@A ; g_KanturuMonsterMng
  00026	e8 00 00 00 00	 call	 ?ResetRegenMonsterObjData@CKanturuMonsterMng@@QAEXXZ ; CKanturuMonsterMng::ResetRegenMonsterObjData
  0002b	b9 00 dd 49 06	 mov	 ecx, 105504000		; 0649dd00H
$LL4@SetState:

; 201  : 
; 202  : #if (GS_CASTLE == 0 || GS_SPEC == 1)
; 203  : 	for ( int iCount=OBJ_STARTUSERINDEX;iCount<OBJMAX;iCount++)
; 204  : 	{
; 205  : 		gObj[iCount].m_bKanturuEntranceByNPC = FALSE;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00035	c7 84 01 a0 25
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+9632], 0
  00040	81 c1 40 27 00
	00		 add	 ecx, 10048		; 00002740H
  00046	81 f9 00 2f e3
	06		 cmp	 ecx, 115552000		; 06e32f00H
  0004c	7c e2		 jl	 SHORT $LL4@SetState

; 206  : 	}
; 207  : #endif
; 208  : 
; 209  : 	g_KanturuBattleUserMng.ResetAllData();

  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00053	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 210  : 
; 211  : 	switch ( iBattleStanbyState )

  00058	83 ff 03	 cmp	 edi, 3
  0005b	77 29		 ja	 SHORT $LN5@SetState
  0005d	ff 24 bd 00 00
	00 00		 jmp	 DWORD PTR $LN22@SetState[edi*4]
$LN8@SetState:

; 212  : 	{
; 213  : 		case KANTURU_STANBY_NONE:
; 214  : 			this->SetState_NONE();

  00064	8b ce		 mov	 ecx, esi
  00066	e8 00 00 00 00	 call	 ?SetState_NONE@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_NONE

; 215  : 			break;

  0006b	eb 19		 jmp	 SHORT $LN5@SetState
$LN9@SetState:

; 216  : 		case KANTURU_STANBY_START:
; 217  : 			this->SetState_START();

  0006d	8b ce		 mov	 ecx, esi
  0006f	e8 00 00 00 00	 call	 ?SetState_START@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_START

; 218  : 			break;

  00074	eb 10		 jmp	 SHORT $LN5@SetState
$LN10@SetState:

; 219  : 		case KANTURU_STANBY_NOTIFY:
; 220  : 			this->SetState_NOTIFY();

  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?SetState_NOTIFY@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_NOTIFY

; 221  : 			break;

  0007d	eb 07		 jmp	 SHORT $LN5@SetState
$LN11@SetState:

; 222  : 		case KANTURU_STANBY_END:
; 223  : 			this->SetState_END();

  0007f	8b ce		 mov	 ecx, esi
  00081	e8 00 00 00 00	 call	 ?SetState_END@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::SetState_END
$LN5@SetState:

; 224  : 			break;
; 225  : 	}
; 226  : 
; 227  : 	KANTURU_UTIL.NotifyKanturuChangeState(KANTURU_STATE_BATTLE_STANTBY, this->m_iBattleStanbyState);

  00086	ff 76 04	 push	 DWORD PTR [esi+4]
  00089	b9 00 00 00 00	 mov	 ecx, OFFSET ?KANTURU_UTIL@@3VCKanturuUtil@@A
  0008e	6a 01		 push	 1
  00090	e8 00 00 00 00	 call	 ?NotifyKanturuChangeState@CKanturuUtil@@QAEXHH@Z ; CKanturuUtil::NotifyKanturuChangeState

; 228  : 	g_KanturuBattleUserMng.ResetAllData();

  00095	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  0009a	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 229  : }

  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
  000a6	66 90		 npad	 2
$LN22@SetState:
  000a8	00 00 00 00	 DD	 $LN8@SetState
  000ac	00 00 00 00	 DD	 $LN9@SetState
  000b0	00 00 00 00	 DD	 $LN10@SetState
  000b4	00 00 00 00	 DD	 $LN11@SetState
?SetState@CKanturuBattleStanby@@QAEXH@Z ENDP		; CKanturuBattleStanby::SetState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?Run@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?Run@CKanturuBattleStanby@@QAEXXZ PROC			; CKanturuBattleStanby::Run, COMDAT
; _this$ = ecx

; 172  : 	this->CheckStateTime();

  00000	e9 00 00 00 00	 jmp	 ?CheckStateTime@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::CheckStateTime
?Run@CKanturuBattleStanby@@QAEXXZ ENDP			; CKanturuBattleStanby::Run
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?ResetAllData@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?ResetAllData@CKanturuBattleStanby@@QAEXXZ PROC		; CKanturuBattleStanby::ResetAllData, COMDAT
; _this$ = ecx
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 30   : 		this->m_iState = iStateTimeInfo;

  00000	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 31   : 	}
; 32   : 
; 33   : 	//int __thiscall GetStateInfo();
; 34   : 	void SetCondition(int iCondition)
; 35   : 	{
; 36   : 		this->m_iCondition = iCondition;

  00007	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 37   : 	}
; 38   : 
; 39   : 
; 40   : 	int GetCondition()
; 41   : 	{
; 42   : 		return this->m_iCondition;
; 43   : 	}
; 44   : 
; 45   : 	void SetValue(int iValue)
; 46   : 	{
; 47   : 		this->m_iValue = iValue;

  0000e	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 30   : 		this->m_iState = iStateTimeInfo;

  00015	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 31   : 	}
; 32   : 
; 33   : 	//int __thiscall GetStateInfo();
; 34   : 	void SetCondition(int iCondition)
; 35   : 	{
; 36   : 		this->m_iCondition = iCondition;

  0001c	c7 41 2c 00 00
	00 00		 mov	 DWORD PTR [ecx+44], 0

; 37   : 	}
; 38   : 
; 39   : 
; 40   : 	int GetCondition()
; 41   : 	{
; 42   : 		return this->m_iCondition;
; 43   : 	}
; 44   : 
; 45   : 	void SetValue(int iValue)
; 46   : 	{
; 47   : 		this->m_iValue = iValue;

  00023	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 30   : 		this->m_iState = iStateTimeInfo;

  0002a	c7 41 3c 00 00
	00 00		 mov	 DWORD PTR [ecx+60], 0

; 31   : 	}
; 32   : 
; 33   : 	//int __thiscall GetStateInfo();
; 34   : 	void SetCondition(int iCondition)
; 35   : 	{
; 36   : 		this->m_iCondition = iCondition;

  00031	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0

; 37   : 	}
; 38   : 
; 39   : 
; 40   : 	int GetCondition()
; 41   : 	{
; 42   : 		return this->m_iCondition;
; 43   : 	}
; 44   : 
; 45   : 	void SetValue(int iValue)
; 46   : 	{
; 47   : 		this->m_iValue = iValue;

  00038	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0

; 30   : 		this->m_iState = iStateTimeInfo;

  0003f	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0

; 31   : 	}
; 32   : 
; 33   : 	//int __thiscall GetStateInfo();
; 34   : 	void SetCondition(int iCondition)
; 35   : 	{
; 36   : 		this->m_iCondition = iCondition;

  00046	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0

; 37   : 	}
; 38   : 
; 39   : 
; 40   : 	int GetCondition()
; 41   : 	{
; 42   : 		return this->m_iCondition;
; 43   : 	}
; 44   : 
; 45   : 	void SetValue(int iValue)
; 46   : 	{
; 47   : 		this->m_iValue = iValue;

  0004d	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 49   : 	this->m_StateInfoCount = 0;

  00054	c7 41 60 00 00
	00 00		 mov	 DWORD PTR [ecx+96], 0

; 50   : }

  0005b	c3		 ret	 0
?ResetAllData@CKanturuBattleStanby@@QAEXXZ ENDP		; CKanturuBattleStanby::ResetAllData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_iType$1$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_lpszFileName$ = 8					; size = 4
?LoadData@CKanturuBattleStanby@@QAEHPAD@Z PROC		; CKanturuBattleStanby::LoadData, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f1		 mov	 esi, ecx
  0002d	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi

; 57   : 	this->m_bFileDataLoad = FALSE;
; 58   : 
; 59   : 	if ( !lpszFileName || !strcmp(lpszFileName, ""))

  00030	8b 5d 08	 mov	 ebx, DWORD PTR _lpszFileName$[ebp]
  00033	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0003a	85 db		 test	 ebx, ebx
  0003c	0f 84 06 02 00
	00		 je	 $LN7@LoadData
  00042	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00047	8b c3		 mov	 eax, ebx
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL36@LoadData:
  00050	8a 10		 mov	 dl, BYTE PTR [eax]
  00052	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00054	75 1a		 jne	 SHORT $LN37@LoadData
  00056	84 d2		 test	 dl, dl
  00058	74 12		 je	 SHORT $LN38@LoadData
  0005a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0005d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00060	75 0e		 jne	 SHORT $LN37@LoadData
  00062	83 c0 02	 add	 eax, 2
  00065	83 c1 02	 add	 ecx, 2
  00068	84 d2		 test	 dl, dl
  0006a	75 e4		 jne	 SHORT $LL36@LoadData
$LN38@LoadData:
  0006c	33 c0		 xor	 eax, eax
  0006e	eb 05		 jmp	 SHORT $LN39@LoadData
$LN37@LoadData:
  00070	1b c0		 sbb	 eax, eax
  00072	83 c8 01	 or	 eax, 1
$LN39@LoadData:
  00075	85 c0		 test	 eax, eax
  00077	0f 84 cb 01 00
	00		 je	 $LN7@LoadData

; 63   : 	}
; 64   : 
; 65   : 	try
; 66   : 	{
; 67   : 		SMDFile = fopen(lpszFileName, "r");

  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00082	53		 push	 ebx
  00083	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0008a	e8 00 00 00 00	 call	 _fopen
  0008f	83 c4 08	 add	 esp, 8
  00092	a3 00 00 00 00	 mov	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A, eax

; 68   : 
; 69   : 		if ( SMDFile == NULL )

  00097	85 c0		 test	 eax, eax
  00099	75 19		 jne	 SHORT $LN9@LoadData

; 70   : 		{
; 71   : 			DWORD dwLastError = GetLastError();

  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 72   : 
; 73   : 			MsgBox("[ KANTURU ][ BattleStanby ] - Can't Open %s ",

  000a1	53		 push	 ebx
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@DONCNDEM@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ca@
  000a7	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  000ac	83 c4 08	 add	 esp, 8

; 74   : 				lpszFileName);
; 75   : 
; 76   : 			return FALSE;

  000af	e9 a1 01 00 00	 jmp	 $LN50@LoadData
$LN9@LoadData:

; 77   : 		}
; 78   : 
; 79   : 		SMDToken Token;
; 80   : 		this->ResetAllData();

  000b4	8b ce		 mov	 ecx, esi
  000b6	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleStanby@@QAEXXZ ; CKanturuBattleStanby::ResetAllData
  000bb	0f 1f 44 00 00	 npad	 5
$LL2@LoadData:

; 81   : 
; 82   : 		int iType = -1;
; 83   : 		int iState = 0;
; 84   : 		int iCondition = 0;
; 85   : 		int iValue = 0;
; 86   : 
; 87   : 		while ( true )
; 88   : 		{
; 89   : 			Token = GetToken();

  000c0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 90   : 
; 91   : 			if ( Token == END )

  000c5	83 f8 02	 cmp	 eax, 2
  000c8	75 3a		 jne	 SHORT $LN10@LoadData

; 152  : 
; 153  : 		fclose(SMDFile);

  000ca	ff 35 00 00 00
	00		 push	 DWORD PTR ?SMDFile@@3PAU_iobuf@@A
  000d0	e8 00 00 00 00	 call	 _fclose

; 154  : 
; 155  : 		LogAddC(2, "[ KANTURU ][ BattleStanby ] %s file is Loaded",

  000d5	53		 push	 ebx
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@PJNGKGKN@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?$CFs?5f@
  000db	6a 02		 push	 2
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 156  : 			lpszFileName);
; 157  : 
; 158  : 		this->m_bFileDataLoad = TRUE;

  000e3	c7 46 0c 01 00
	00 00		 mov	 DWORD PTR [esi+12], 1
  000ea	83 c4 10	 add	 esp, 16			; 00000010H

; 164  : 
; 165  : 	return this->m_bFileDataLoad;

  000ed	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]

; 166  : }

  000f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fa	59		 pop	 ecx
  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 04 00	 ret	 4
$LN10@LoadData:

; 92   : 			{
; 93   : 				break;
; 94   : 			}
; 95   : 
; 96   : 			iType = (int)TokenNumber;

  00104	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?TokenNumber@@3MA
  0010c	89 45 ec	 mov	 DWORD PTR _iType$1$[ebp], eax
  0010f	90		 npad	 1
$LL4@LoadData:

; 97   : 
; 98   : 			while ( true )
; 99   : 			{
; 100  : 				if ( iType == 1 )

  00110	83 f8 01	 cmp	 eax, 1
  00113	0f 85 e4 00 00
	00		 jne	 $LN11@LoadData

; 101  : 				{
; 102  : 					iState = 0;
; 103  : 					iCondition = 0;
; 104  : 					iValue = 0;
; 105  : 
; 106  : 					Token = GetToken();

  00119	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 107  : 
; 108  : 					if ( !strcmp("end", TokenString))

  0011e	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  00123	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL40@LoadData:
  00128	8a 10		 mov	 dl, BYTE PTR [eax]
  0012a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0012c	75 1a		 jne	 SHORT $LN41@LoadData
  0012e	84 d2		 test	 dl, dl
  00130	74 12		 je	 SHORT $LN42@LoadData
  00132	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00135	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00138	75 0e		 jne	 SHORT $LN41@LoadData
  0013a	83 c0 02	 add	 eax, 2
  0013d	83 c1 02	 add	 ecx, 2
  00140	84 d2		 test	 dl, dl
  00142	75 e4		 jne	 SHORT $LL40@LoadData
$LN42@LoadData:
  00144	33 c0		 xor	 eax, eax
  00146	eb 05		 jmp	 SHORT $LN43@LoadData
$LN41@LoadData:
  00148	1b c0		 sbb	 eax, eax
  0014a	83 c8 01	 or	 eax, 1
$LN43@LoadData:
  0014d	8b 5d 08	 mov	 ebx, DWORD PTR _lpszFileName$[ebp]
  00150	85 c0		 test	 eax, eax
  00152	0f 84 68 ff ff
	ff		 je	 $LL2@LoadData

; 109  : 					{
; 110  : 						break;
; 111  : 					}
; 112  : 
; 113  : 					iState = (int)TokenNumber;

  00158	f3 0f 2c 1d 00
	00 00 00	 cvttss2si ebx, DWORD PTR ?TokenNumber@@3MA

; 114  : 
; 115  : 					Token = GetToken();

  00160	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 116  : 					iCondition = (int)TokenNumber;

  00165	f3 0f 2c 3d 00
	00 00 00	 cvttss2si edi, DWORD PTR ?TokenNumber@@3MA

; 117  : 
; 118  : 					Token = GetToken();

  0016d	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 119  : 					iValue = (int)TokenNumber;
; 120  : 
; 121  : 					if ( this->m_StateInfoCount < 0 || this->m_StateInfoCount >= KANTURU_STANBY_STATE_INFO )

  00172	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00175	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?TokenNumber@@3MA
  0017d	85 c0		 test	 eax, eax
  0017f	78 36		 js	 SHORT $LN15@LoadData
  00181	83 f8 04	 cmp	 eax, 4
  00184	7d 31		 jge	 SHORT $LN15@LoadData
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 30   : 		this->m_iState = iStateTimeInfo;

  00186	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00189	89 5c 86 14	 mov	 DWORD PTR [esi+eax*4+20], ebx
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 130  : 					this->m_StateInfo[this->m_StateInfoCount].SetCondition(iCondition);

  0018d	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00190	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 36   : 		this->m_iCondition = iCondition;

  00193	89 7c 86 18	 mov	 DWORD PTR [esi+eax*4+24], edi
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 132  : 					if ( iCondition == 1 )

  00197	83 ff 01	 cmp	 edi, 1
  0019a	75 06		 jne	 SHORT $LN16@LoadData

; 133  : 					{
; 134  : 						iValue *= 1000;

  0019c	69 c9 e8 03 00
	00		 imul	 ecx, ecx, 1000
$LN16@LoadData:

; 135  : 					}
; 136  : 
; 137  : 					this->m_StateInfo[this->m_StateInfoCount].SetValue(iValue);

  001a2	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  001a5	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h

; 47   : 		this->m_iValue = iValue;

  001a8	89 4c 86 1c	 mov	 DWORD PTR [esi+eax*4+28], ecx
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 138  : 					this->m_StateInfoCount++;

  001ac	ff 46 60	 inc	 DWORD PTR [esi+96]

; 139  : 				}
; 140  : 				else

  001af	8b 45 ec	 mov	 eax, DWORD PTR _iType$1$[ebp]
  001b2	e9 59 ff ff ff	 jmp	 $LL4@LoadData
$LN15@LoadData:

; 122  : 					{
; 123  : 						MsgBox("[ KANTURU ][ BattleStanby ] - Exceed Max State Time (%d)",

  001b7	50		 push	 eax
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@KOHOKNIH@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Ex@
  001bd	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 124  : 							this->m_StateInfoCount);
; 125  : 
; 126  : 						break;

  001c2	8b 5d 08	 mov	 ebx, DWORD PTR _lpszFileName$[ebp]
  001c5	83 c4 08	 add	 esp, 8
  001c8	e9 f3 fe ff ff	 jmp	 $LL2@LoadData
__catch$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z$0:

; 159  : 	}	// __try
; 160  : 	catch (DWORD)
; 161  : 	{
; 162  : 		MsgBox("[ KANTURU ][ BattleStanby ] - Loading Exception Error (%s) File. ", lpszFileName);

  001cd	ff 75 08	 push	 DWORD PTR _lpszFileName$[ebp]
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@LDIGKEIC@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Lo@
  001d5	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  001da	83 c4 08	 add	 esp, 8

; 163  : 	}

  001dd	b8 00 00 00 00	 mov	 eax, $LN48@LoadData
  001e2	c3		 ret	 0
$LN48@LoadData:
  001e3	8b 75 e8	 mov	 esi, DWORD PTR _this$[ebp]

; 164  : 
; 165  : 	return this->m_bFileDataLoad;

  001e6	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]

; 166  : }

  001e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f3	59		 pop	 ecx
  001f4	5f		 pop	 edi
  001f5	5e		 pop	 esi
  001f6	5b		 pop	 ebx
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 04 00	 ret	 4
$LN11@LoadData:

; 141  : 				{
; 142  : 					Token = GetToken();

  001fd	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 143  : 
; 144  : 					if ( !strcmp("end", TokenString))

  00202	b9 00 00 00 00	 mov	 ecx, OFFSET ?TokenString@@3PADA
  00207	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  0020c	0f 1f 40 00	 npad	 4
$LL44@LoadData:
  00210	8a 10		 mov	 dl, BYTE PTR [eax]
  00212	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00214	75 1a		 jne	 SHORT $LN45@LoadData
  00216	84 d2		 test	 dl, dl
  00218	74 12		 je	 SHORT $LN46@LoadData
  0021a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0021d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00220	75 0e		 jne	 SHORT $LN45@LoadData
  00222	83 c0 02	 add	 eax, 2
  00225	83 c1 02	 add	 ecx, 2
  00228	84 d2		 test	 dl, dl
  0022a	75 e4		 jne	 SHORT $LL44@LoadData
$LN46@LoadData:
  0022c	33 c0		 xor	 eax, eax
  0022e	eb 05		 jmp	 SHORT $LN47@LoadData
$LN45@LoadData:
  00230	1b c0		 sbb	 eax, eax
  00232	83 c8 01	 or	 eax, 1
$LN47@LoadData:
  00235	85 c0		 test	 eax, eax
  00237	8b 45 ec	 mov	 eax, DWORD PTR _iType$1$[ebp]
  0023a	0f 85 d0 fe ff
	ff		 jne	 $LL4@LoadData

; 145  : 					{
; 146  : 						break;
; 147  : 					}
; 148  : 				}
; 149  : 
; 150  : 			}	// while
; 151  : 		}	// while

  00240	8b 5d 08	 mov	 ebx, DWORD PTR _lpszFileName$[ebp]
  00243	e9 78 fe ff ff	 jmp	 $LL2@LoadData
$LN7@LoadData:

; 60   : 	{
; 61   : 		MsgBox("[ KANTURU ][ BattleStanby ] - File load error : File Name Error");

  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@OLPEHDLL@?$FL?5KANTURU?5?$FN?$FL?5BattleStanby?5?$FN?5?9?5Fi@
  0024d	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00252	83 c4 04	 add	 esp, 4
$LN50@LoadData:

; 62   : 		return FALSE;

  00255	33 c0		 xor	 eax, eax

; 166  : }

  00257	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0025a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00261	59		 pop	 ecx
  00262	5f		 pop	 edi
  00263	5e		 pop	 esi
  00264	5b		 pop	 ebx
  00265	8b e5		 mov	 esp, ebp
  00267	5d		 pop	 ebp
  00268	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadData@CKanturuBattleStanby@@QAEHPAD@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadData@CKanturuBattleStanby@@QAEHPAD@Z ENDP		; CKanturuBattleStanby::LoadData
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?Init@CKanturuBattleStanby@@QAEXXZ
_TEXT	SEGMENT
?Init@CKanturuBattleStanby@@QAEXXZ PROC			; CKanturuBattleStanby::Init, COMDAT
; _this$ = ecx

; 37   : 	return;
; 38   : }

  00000	c3		 ret	 0
?Init@CKanturuBattleStanby@@QAEXXZ ENDP			; CKanturuBattleStanby::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ??1CKanturuBattleStanby@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CKanturuBattleStanby@@UAE@XZ PROC			; CKanturuBattleStanby::~CKanturuBattleStanby, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CKanturuBattleStanby@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 30   : 	return;
; 31   : }

  00022	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  00027	6a 04		 push	 4
  00029	6a 14		 push	 20			; 00000014H
  0002b	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]
  0002e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CKanturuBattleStanby@@6B@
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0003a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00044	59		 pop	 ecx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CKanturuBattleStanby@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CKanturuBattleStanby@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CKanturuBattleStanby@@UAE@XZ ENDP			; CKanturuBattleStanby::~CKanturuBattleStanby
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ??0CKanturuBattleStanby@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CKanturuBattleStanby@@QAE@XZ PROC			; CKanturuBattleStanby::CKanturuBattleStanby, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	68 00 00 00 00	 push	 OFFSET ??1CKanturuStateInfo@@UAE@XZ ; CKanturuStateInfo::~CKanturuStateInfo
  0000a	8b f1		 mov	 esi, ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0CKanturuStateInfo@@QAE@XZ ; CKanturuStateInfo::CKanturuStateInfo
  00011	6a 04		 push	 4
  00013	6a 14		 push	 20			; 00000014H
  00015	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00018	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0001b	50		 push	 eax
  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CKanturuBattleStanby@@6B@
  00022	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.h

; 46   : 	void SetBattleStanbyState(int iBattleStanbyState){this->m_iBattleStanbyState = iBattleStanbyState;}

  00027	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp

; 26   : }

  0002e	8b c6		 mov	 eax, esi
  00030	5e		 pop	 esi
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??0CKanturuBattleStanby@@QAE@XZ ENDP			; CKanturuBattleStanby::CKanturuBattleStanby
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?IsTimeOut@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?IsTimeOut@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::IsTimeOut, COMDAT
; _this$ = ecx

; 91   : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 68   : 		return iElapsedTime;
; 69   : 	}
; 70   : 
; 71   : 	int GetRemainTime()
; 72   : 	{
; 73   : 		int iRemainTime = 0;
; 74   : 
; 75   : 		if ( this->GetCondition() == 1 )

  00003	83 7f 08 01	 cmp	 DWORD PTR [edi+8], 1
  00007	75 2f		 jne	 SHORT $LN14@IsTimeOut
  00009	56		 push	 esi

; 61   : 		return this->m_dwAppliedTickCount;

  0000a	8b 77 10	 mov	 esi, DWORD PTR [edi+16]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00013	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  00016	2b c6		 sub	 eax, esi

; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00018	2b c8		 sub	 ecx, eax
  0001a	5e		 pop	 esi

; 78   : 
; 79   : 			if ( iRemainTime <= 0 )

  0001b	85 c9		 test	 ecx, ecx
  0001d	7e 19		 jle	 SHORT $LN14@IsTimeOut

; 80   : 			{
; 81   : 				return 0;
; 82   : 			}
; 83   : 
; 84   : 			iRemainTime /= 1000;

  0001f	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00024	f7 e9		 imul	 ecx
  00026	c1 fa 06	 sar	 edx, 6
  00029	8b c2		 mov	 eax, edx
  0002b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002e	03 c2		 add	 eax, edx

; 92   : 		if ( this->GetRemainTime() <= 0 )

  00030	85 c0		 test	 eax, eax
  00032	7e 04		 jle	 SHORT $LN14@IsTimeOut

; 95   : 		}
; 96   : 
; 97   : 		return FALSE;

  00034	33 c0		 xor	 eax, eax
  00036	5f		 pop	 edi

; 98   : 	}

  00037	c3		 ret	 0
$LN14@IsTimeOut:

; 93   : 		{
; 94   : 			return TRUE;

  00038	b8 01 00 00 00	 mov	 eax, 1
  0003d	5f		 pop	 edi

; 98   : 	}

  0003e	c3		 ret	 0
?IsTimeOut@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::IsTimeOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?GetRemainTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetRemainTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetRemainTime, COMDAT
; _this$ = ecx

; 72   : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 73   : 		int iRemainTime = 0;

  00003	33 c0		 xor	 eax, eax

; 74   : 
; 75   : 		if ( this->GetCondition() == 1 )

  00005	83 7f 08 01	 cmp	 DWORD PTR [edi+8], 1
  00009	75 2b		 jne	 SHORT $LN1@GetRemainT
  0000b	56		 push	 esi

; 61   : 		return this->m_dwAppliedTickCount;

  0000c	8b 77 10	 mov	 esi, DWORD PTR [edi+16]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  00015	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]

; 62   : 	}
; 63   : 
; 64   : 	//void __thiscall ResetAppliedTime();
; 65   : 	int GetElapsedTime()
; 66   : 	{
; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  00018	2b c6		 sub	 eax, esi

; 76   : 		{
; 77   : 			iRemainTime = this->m_iValue - this->GetElapsedTime();

  0001a	2b c8		 sub	 ecx, eax
  0001c	5e		 pop	 esi

; 78   : 
; 79   : 			if ( iRemainTime <= 0 )

  0001d	85 c9		 test	 ecx, ecx
  0001f	7f 04		 jg	 SHORT $LN3@GetRemainT

; 80   : 			{
; 81   : 				return 0;

  00021	33 c0		 xor	 eax, eax
  00023	5f		 pop	 edi

; 85   : 		}
; 86   : 
; 87   : 		return iRemainTime;
; 88   : 	}

  00024	c3		 ret	 0
$LN3@GetRemainT:

; 82   : 			}
; 83   : 
; 84   : 			iRemainTime /= 1000;

  00025	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  0002a	f7 e9		 imul	 ecx
  0002c	c1 fa 06	 sar	 edx, 6
  0002f	8b c2		 mov	 eax, edx
  00031	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00034	03 c2		 add	 eax, edx
$LN1@GetRemainT:
  00036	5f		 pop	 edi

; 85   : 		}
; 86   : 
; 87   : 		return iRemainTime;
; 88   : 	}

  00037	c3		 ret	 0
?GetRemainTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetRemainTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?GetElapsedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetElapsedTime, COMDAT
; _this$ = ecx

; 66   : 	{

  00000	56		 push	 esi

; 61   : 		return this->m_dwAppliedTickCount;

  00001	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]

; 67   : 		int iElapsedTime = GetTickCount() - this->GetAppliedTime();

  00004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0000a	2b c6		 sub	 eax, esi
  0000c	5e		 pop	 esi

; 68   : 		return iElapsedTime;
; 69   : 	}

  0000d	c3		 ret	 0
?GetElapsedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetElapsedTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?GetAppliedTime@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetAppliedTime, COMDAT
; _this$ = ecx

; 61   : 		return this->m_dwAppliedTickCount;

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 62   : 	}

  00003	c3		 ret	 0
?GetAppliedTime@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetAppliedTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?SetAppliedTime@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::SetAppliedTime, COMDAT
; _this$ = ecx

; 55   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 56   : 		this->m_dwAppliedTickCount = GetTickCount();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0000c	5e		 pop	 esi

; 57   : 	}

  0000d	c3		 ret	 0
?SetAppliedTime@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::SetAppliedTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?SetValue@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetValue@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetValue, COMDAT
; _this$ = ecx

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 		this->m_iValue = iValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iValue$[ebp]
  00006	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 48   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetValue@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?GetCondition@CKanturuStateInfo@@QAEHXZ
_TEXT	SEGMENT
?GetCondition@CKanturuStateInfo@@QAEHXZ PROC		; CKanturuStateInfo::GetCondition, COMDAT
; _this$ = ecx

; 42   : 		return this->m_iCondition;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 43   : 	}

  00003	c3		 ret	 0
?GetCondition@CKanturuStateInfo@@QAEHXZ ENDP		; CKanturuStateInfo::GetCondition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?SetCondition@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iCondition$ = 8					; size = 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetCondition, COMDAT
; _this$ = ecx

; 35   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 36   : 		this->m_iCondition = iCondition;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iCondition$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 37   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetCondition@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetCondition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?SetStateInfo@CKanturuStateInfo@@QAEXH@Z
_TEXT	SEGMENT
_iStateTimeInfo$ = 8					; size = 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z PROC		; CKanturuStateInfo::SetStateInfo, COMDAT
; _this$ = ecx

; 29   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 30   : 		this->m_iState = iStateTimeInfo;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iStateTimeInfo$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 31   : 	}

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetStateInfo@CKanturuStateInfo@@QAEXH@Z ENDP		; CKanturuStateInfo::SetStateInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturustateinfo.h
;	COMDAT ?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ
_TEXT	SEGMENT
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ PROC		; CKanturuStateInfo::ResetTimeInfo, COMDAT
; _this$ = ecx

; 26   : 
; 27   : 
; 28   : 	void SetStateInfo(int iStateTimeInfo)
; 29   : 	{
; 30   : 		this->m_iState = iStateTimeInfo;

  00000	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 31   : 	}
; 32   : 
; 33   : 	//int __thiscall GetStateInfo();
; 34   : 	void SetCondition(int iCondition)
; 35   : 	{
; 36   : 		this->m_iCondition = iCondition;

  00007	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 37   : 	}
; 38   : 
; 39   : 
; 40   : 	int GetCondition()
; 41   : 	{
; 42   : 		return this->m_iCondition;
; 43   : 	}
; 44   : 
; 45   : 	void SetValue(int iValue)
; 46   : 	{
; 47   : 		this->m_iValue = iValue;

  0000e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 22   : 		this->SetStateInfo(0);
; 23   : 		this->SetCondition(0);
; 24   : 		this->SetValue(0);
; 25   : 	}

  00015	c3		 ret	 0
?ResetTimeInfo@CKanturuStateInfo@@QAEXXZ ENDP		; CKanturuStateInfo::ResetTimeInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\kanturubattlestanby.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
