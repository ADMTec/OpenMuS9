; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\TNotice.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char *>
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z		; TNotice::MakeNoticeMsg
PUBLIC	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ		; TNotice::MakeNoticeMsgEx
PUBLIC	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z	; TNotice::SetNoticeProperty
PUBLIC	?SendNoticeToAllUser@TNotice@@SAXPAX@Z		; TNotice::SendNoticeToAllUser
PUBLIC	?SendNoticeToUser@TNotice@@SAXHPAX@Z		; TNotice::SendNoticeToUser
PUBLIC	?AllSendServerMsg@TNotice@@SAXPAD@Z		; TNotice::AllSendServerMsg
PUBLIC	?GCServerMsgStringSend@TNotice@@SAXPADHE@Z	; TNotice::GCServerMsgStringSend
PUBLIC	??0TNotice@@QAE@E@Z				; TNotice::TNotice
PUBLIC	?SendToUser@TNotice@@QAAXHPADZZ			; TNotice::SendToUser
PUBLIC	?SendToAllUser@TNotice@@QAAXPADZZ		; TNotice::SendToAllUser
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__wsprintfA:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?SendToAllUser@TNotice@@QAAXPADZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szMsg$ = 12						; size = 4
?SendToAllUser@TNotice@@QAAXPADZZ PROC			; TNotice::SendToAllUser, COMDAT

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 190  : 	vsprintf(this->m_Notice.Notice, (char*)szMsg, pArguments);

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _this$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00007	8d 45 10	 lea	 eax, DWORD PTR _szMsg$[ebp+4]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	ff 75 0c	 push	 DWORD PTR _szMsg$[ebp]
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp

; 190  : 	vsprintf(this->m_Notice.Notice, (char*)szMsg, pArguments);

  00012	8d 73 0d	 lea	 esi, DWORD PTR [ebx+13]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00015	6a ff		 push	 -1
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	ff 70 04	 push	 DWORD PTR [eax+4]
  00022	83 c9 01	 or	 ecx, 1
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  0002b	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp

; 201  : 	PHeadSetB((LPBYTE)&this->m_Notice, 0x0D, strlen(this->m_Notice.Notice)  + sizeof(PMSG_NOTICE) - sizeof(this->m_Notice.Notice) + 1);

  0002e	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL16@SendToAllU:
  00031	8a 06		 mov	 al, BYTE PTR [esi]
  00033	46		 inc	 esi
  00034	84 c0		 test	 al, al
  00036	75 f9		 jne	 SHORT $LL16@SendToAllU
  00038	2b f1		 sub	 esi, ecx
  0003a	8d 46 11	 lea	 eax, DWORD PTR [esi+17]
  0003d	50		 push	 eax
  0003e	6a 0d		 push	 13			; 0000000dH
  00040	53		 push	 ebx
  00041	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 202  : #endif
; 203  : 
; 204  : 	for ( int n = OBJ_STARTUSERINDEX ; n < OBJMAX ; n++)

  00049	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  0004e	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
$LL4@SendToAllU:
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp

; 206  : 		if ( gObj[n].Connected == PLAYER_PLAYING )

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00058	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0005d	75 16		 jne	 SHORT $LN2@SendToAllU

; 207  : 		{
; 208  : 			if ( gObj[n].Type  == OBJ_USER )

  0005f	80 7c 06 50 01	 cmp	 BYTE PTR [esi+eax+80], 1
  00064	75 0f		 jne	 SHORT $LN2@SendToAllU

; 209  : 			{
; 210  : 				DataSend(n, (LPBYTE)&this->m_Notice , this->m_Notice.h.size );

  00066	0f b6 43 01	 movzx	 eax, BYTE PTR [ebx+1]
  0006a	50		 push	 eax
  0006b	53		 push	 ebx
  0006c	57		 push	 edi
  0006d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendToAllU:

; 202  : #endif
; 203  : 
; 204  : 	for ( int n = OBJ_STARTUSERINDEX ; n < OBJMAX ; n++)

  00075	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  0007b	47		 inc	 edi
  0007c	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  00082	7c cf		 jl	 SHORT $LL4@SendToAllU
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx

; 211  : 			}
; 212  : 		}
; 213  : 	}
; 214  : }

  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
?SendToAllUser@TNotice@@QAAXPADZZ ENDP			; TNotice::SendToAllUser
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?SendToUser@TNotice@@QAAXHPADZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
_aIndex$ = 12						; size = 4
_szMsg$ = 16						; size = 4
?SendToUser@TNotice@@QAAXHPADZZ PROC			; TNotice::SendToUser, COMDAT

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 234  : 	vsprintf(this->m_Notice.Notice, (char*)szMsg, pArguments);

  00005	8b 7d 08	 mov	 edi, DWORD PTR _this$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00008	8d 45 14	 lea	 eax, DWORD PTR _szMsg$[ebp+4]
  0000b	50		 push	 eax
  0000c	6a 00		 push	 0
  0000e	ff 75 10	 push	 DWORD PTR _szMsg$[ebp]
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp

; 234  : 	vsprintf(this->m_Notice.Notice, (char*)szMsg, pArguments);

  00011	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00014	6a ff		 push	 -1
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	ff 70 04	 push	 DWORD PTR [eax+4]
  00021	83 c9 01	 or	 ecx, 1
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  0002a	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp

; 245  : 	PHeadSetB((LPBYTE)&this->m_Notice, 0x0D, strlen(this->m_Notice.Notice)  + sizeof(PMSG_NOTICE) - sizeof(this->m_Notice.Notice) + 1);

  0002d	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL7@SendToUser:
  00030	8a 06		 mov	 al, BYTE PTR [esi]
  00032	46		 inc	 esi
  00033	84 c0		 test	 al, al
  00035	75 f9		 jne	 SHORT $LL7@SendToUser
  00037	2b f1		 sub	 esi, ecx
  00039	83 c6 11	 add	 esi, 17			; 00000011H
  0003c	56		 push	 esi
  0003d	6a 0d		 push	 13			; 0000000dH
  0003f	57		 push	 edi
  00040	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 246  : #endif
; 247  : 
; 248  : 	DataSend(aIndex, (LPBYTE)&this->m_Notice , this->m_Notice.h.size );

  00045	0f b6 47 01	 movzx	 eax, BYTE PTR [edi+1]
  00049	50		 push	 eax
  0004a	57		 push	 edi
  0004b	ff 75 0c	 push	 DWORD PTR _aIndex$[ebp]
  0004e	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00053	83 c4 18	 add	 esp, 24			; 00000018H
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi

; 249  : 
; 250  : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?SendToUser@TNotice@@QAAXHPADZZ ENDP			; TNotice::SendToUser
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ??0TNotice@@QAE@E@Z
_TEXT	SEGMENT
_btType$ = 8						; size = 1
??0TNotice@@QAE@E@Z PROC				; TNotice::TNotice, COMDAT
; _this$ = ecx

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 159  : 	this->m_Notice.btCount = 1;
; 160  : 	this->m_Notice.btSpeed = 20;
; 161  : 	this->m_Notice.dwColor = _ARGB(255, 255, 200, 80 );
; 162  : 	this->m_Notice.wDelay = 0;

  00003	33 c0		 xor	 eax, eax
  00005	c6 41 04 01	 mov	 BYTE PTR [ecx+4], 1
  00009	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 163  : 	this->m_Notice.type = btType;

  0000d	8a 45 08	 mov	 al, BYTE PTR _btType$[ebp]
  00010	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 164  : }

  00013	8b c1		 mov	 eax, ecx
  00015	c6 41 0c 14	 mov	 BYTE PTR [ecx+12], 20	; 00000014H
  00019	c7 41 08 ff c8
	50 ff		 mov	 DWORD PTR [ecx+8], -11482881 ; ff50c8ffH
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0TNotice@@QAE@E@Z ENDP				; TNotice::TNotice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?GCServerMsgStringSend@TNotice@@SAXPADHE@Z
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_szMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
_type$ = 16						; size = 1
?GCServerMsgStringSend@TNotice@@SAXPADHE@Z PROC		; TNotice::GCServerMsgStringSend, COMDAT

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _szMsg$[ebp]

; 149  : 	PMSG_NOTICE pNotice;
; 150  : 	
; 151  : 	MakeNoticeMsg(&pNotice, type, szMsg);

  00016	50		 push	 eax
  00017	ff 75 10	 push	 DWORD PTR _type$[ebp]
  0001a	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 152  : 	DataSend(aIndex, (unsigned char*)&pNotice, pNotice.h.size);

  00026	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  0002d	50		 push	 eax
  0002e	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00034	50		 push	 eax
  00035	ff 75 0c	 push	 DWORD PTR _aIndex$[ebp]
  00038	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 153  : }

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00040	83 c4 18	 add	 esp, 24			; 00000018H
  00043	33 cd		 xor	 ecx, ebp
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?GCServerMsgStringSend@TNotice@@SAXPADHE@Z ENDP		; TNotice::GCServerMsgStringSend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?AllSendServerMsg@TNotice@@SAXPAD@Z
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_chatmsg$ = 8						; size = 4
?AllSendServerMsg@TNotice@@SAXPAD@Z PROC		; TNotice::AllSendServerMsg, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _chatmsg$[ebp]
  00016	56		 push	 esi
  00017	57		 push	 edi

; 131  : 	PMSG_NOTICE pNotice;
; 132  : 	
; 133  : 	MakeNoticeMsg((TNotice *)&pNotice, 0,  chatmsg);

  00018	50		 push	 eax
  00019	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  0001f	6a 00		 push	 0
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH

; 134  : 
; 135  : 	for ( int n = OBJ_STARTUSERINDEX ; n < OBJMAX ; n++)

  0002a	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  0002f	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
$LL4@AllSendSer:

; 136  : 	{
; 137  : 		if ( gObj[n].Connected == PLAYER_PLAYING )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00039	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0003e	75 1f		 jne	 SHORT $LN2@AllSendSer

; 138  : 		{
; 139  : 			if ( gObj[n].Type  == OBJ_USER )

  00040	80 7c 06 50 01	 cmp	 BYTE PTR [esi+eax+80], 1
  00045	75 18		 jne	 SHORT $LN2@AllSendSer

; 140  : 			{
; 141  : 				DataSend(n, (unsigned char*)&pNotice , pNotice.h.size );

  00047	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  0004e	50		 push	 eax
  0004f	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00055	50		 push	 eax
  00056	57		 push	 edi
  00057	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@AllSendSer:

; 134  : 
; 135  : 	for ( int n = OBJ_STARTUSERINDEX ; n < OBJMAX ; n++)

  0005f	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00065	47		 inc	 edi
  00066	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  0006c	7c c6		 jl	 SHORT $LL4@AllSendSer

; 142  : 			}
; 143  : 		}
; 144  : 	}
; 145  : }

  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	5f		 pop	 edi
  00072	33 cd		 xor	 ecx, ebp
  00074	5e		 pop	 esi
  00075	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
?AllSendServerMsg@TNotice@@SAXPAD@Z ENDP		; TNotice::AllSendServerMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?SendNoticeToUser@TNotice@@SAXHPAX@Z
_TEXT	SEGMENT
_aIndex$ = 8						; size = 4
_lpNotice$ = 12						; size = 4
?SendNoticeToUser@TNotice@@SAXHPAX@Z PROC		; TNotice::SendNoticeToUser, COMDAT

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 123  : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 124  : 	DataSend(aIndex, (unsigned char*)pNotice, pNotice->h.size  );

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _lpNotice$[ebp]
  00006	0f b6 41 01	 movzx	 eax, BYTE PTR [ecx+1]
  0000a	50		 push	 eax
  0000b	51		 push	 ecx
  0000c	ff 75 08	 push	 DWORD PTR _aIndex$[ebp]
  0000f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 125  : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?SendNoticeToUser@TNotice@@SAXHPAX@Z ENDP		; TNotice::SendNoticeToUser
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?SendNoticeToAllUser@TNotice@@SAXPAX@Z
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
?SendNoticeToAllUser@TNotice@@SAXPAX@Z PROC		; TNotice::SendNoticeToAllUser, COMDAT

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 107  : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 108  : 
; 109  : 	for ( int n = OBJ_STARTUSERINDEX ; n < OBJMAX ; n++)

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _lpNotice$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  0000e	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
$LL4@SendNotice:

; 110  : 	{
; 111  : 		if ( gObj[n].Connected == PLAYER_PLAYING )

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 16		 jne	 SHORT $LN2@SendNotice

; 112  : 		{
; 113  : 			if ( gObj[n].Type  == OBJ_USER )

  0001f	80 7c 06 50 01	 cmp	 BYTE PTR [esi+eax+80], 1
  00024	75 0f		 jne	 SHORT $LN2@SendNotice

; 114  : 			{
; 115  : 				DataSend(n, (unsigned char*)pNotice  , pNotice->h.size  );

  00026	0f b6 43 01	 movzx	 eax, BYTE PTR [ebx+1]
  0002a	50		 push	 eax
  0002b	53		 push	 ebx
  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendNotice:

; 107  : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 108  : 
; 109  : 	for ( int n = OBJ_STARTUSERINDEX ; n < OBJMAX ; n++)

  00035	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  0003b	47		 inc	 edi
  0003c	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  00042	7c cf		 jl	 SHORT $LL4@SendNotice
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx

; 116  : 			}
; 117  : 		}
; 118  : 	}
; 119  : }

  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?SendNoticeToAllUser@TNotice@@SAXPAX@Z ENDP		; TNotice::SendNoticeToAllUser
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_dwColor$ = 16						; size = 4
_btCount$ = 20						; size = 1
_wDelay$ = 24						; size = 2
_btSpeed$ = 28						; size = 1
?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z PROC		; TNotice::SetNoticeProperty, COMDAT

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 96   : 	PMSG_NOTICE * pNotice =(PMSG_NOTICE *) lpNotice;
; 97   : 
; 98   : 	pNotice->type = btType;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpNotice$[ebp]
  00006	8a 45 0c	 mov	 al, BYTE PTR _btType$[ebp]
  00009	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 99   : 	pNotice->dwColor = dwColor;

  0000c	8b 45 10	 mov	 eax, DWORD PTR _dwColor$[ebp]
  0000f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 100  : 	pNotice->btCount = btCount;

  00012	8a 45 14	 mov	 al, BYTE PTR _btCount$[ebp]
  00015	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 101  : 	pNotice->wDelay = wDelay;

  00018	66 8b 45 18	 mov	 ax, WORD PTR _wDelay$[ebp]
  0001c	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 102  : 	pNotice->btSpeed = btSpeed;

  00020	8a 45 1c	 mov	 al, BYTE PTR _btSpeed$[ebp]
  00023	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 103  : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ENDP		; TNotice::SetNoticeProperty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_szNoticeMsg$ = 16					; size = 4
?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ PROC		; TNotice::MakeNoticeMsgEx, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 33   : 	pNotice->type = btType;

  00003	8a 45 0c	 mov	 al, BYTE PTR _btType$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR _lpNotice$[ebp]
  0000b	88 47 03	 mov	 BYTE PTR [edi+3], al

; 34   : 
; 35   : #ifdef GS_UNICODE
; 36   : 	unsigned char szTempMsg[4096]={0};
; 37   : #endif
; 38   : 
; 39   : 
; 40   : 	va_list pArguments;
; 41   : 
; 42   : #ifdef GS_UNICODE
; 43   : 	memset( pNotice->szNoticeMessage, 0, sizeof(pNotice->szNoticeMessage));
; 44   : #endif
; 45   : 
; 46   : 
; 47   : 	va_start(pArguments, szNoticeMsg);
; 48   : 
; 49   : #ifdef GS_UNICODE
; 50   : 	vsprintf((char*)szTempMsg, (char*)szNoticeMsg, pArguments);
; 51   : #else
; 52   : 	vsprintf((char*)pNotice->Notice, (char*)szNoticeMsg, pArguments);

  0000e	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00011	8d 45 14	 lea	 eax, DWORD PTR _szNoticeMsg$[ebp+4]
  00014	50		 push	 eax
  00015	6a 00		 push	 0
  00017	ff 75 10	 push	 DWORD PTR _szNoticeMsg$[ebp]
  0001a	6a ff		 push	 -1
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]
  00024	ff 70 04	 push	 DWORD PTR [eax+4]
  00027	83 c9 01	 or	 ecx, 1
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00030	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp

; 64   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, strlen(pNotice->Notice)  + sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + 1);

  00033	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL7@MakeNotice:
  00036	8a 06		 mov	 al, BYTE PTR [esi]
  00038	46		 inc	 esi
  00039	84 c0		 test	 al, al
  0003b	75 f9		 jne	 SHORT $LL7@MakeNotice
  0003d	2b f1		 sub	 esi, ecx
  0003f	83 c6 11	 add	 esi, 17			; 00000011H
  00042	56		 push	 esi
  00043	6a 0d		 push	 13			; 0000000dH
  00045	57		 push	 edi
  00046	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi

; 65   : #endif
; 66   : 
; 67   : }

  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ENDP		; TNotice::MakeNoticeMsgEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z
_TEXT	SEGMENT
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_szNoticeMsg$ = 16					; size = 4
?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z PROC		; TNotice::MakeNoticeMsg, COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 11   : 	PMSG_NOTICE * pNotice = (PMSG_NOTICE *)lpNotice;
; 12   : 	pNotice->type  = btType;

  00003	8a 45 0c	 mov	 al, BYTE PTR _btType$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR _lpNotice$[ebp]

; 13   : 
; 14   : #ifdef GS_UNICODE
; 15   : 	unsigned char szTempMsg[4096]={0};
; 16   : 	memset( pNotice->szNoticeMessage, 0, sizeof(pNotice->szNoticeMessage));
; 17   : 	MultiByteToWideChar( 1258, 0, (char*)szNoticeMsg,  strlen((char*)szNoticeMsg), (unsigned short*)szTempMsg, sizeof(szTempMsg) );
; 18   : 	memcpy(pNotice->szNoticeMessage, szTempMsg, sizeof(pNotice->szNoticeMessage));
; 19   : 	pNotice->szNoticeMessage[254]=0;
; 20   : 	pNotice->szNoticeMessage[255]=0;
; 21   : 	wsprintf(pNotice->Notice, szNoticeMsg);
; 22   : 	PHeadSetB(&pNotice->PacketHeader, 0x0D, wcslen((unsigned short *)pNotice->szNoticeMessage)*2+ 0x12);
; 23   : #else
; 24   : 	wsprintf(pNotice->Notice, szNoticeMsg);

  0000b	ff 75 10	 push	 DWORD PTR _szNoticeMsg$[ebp]
  0000e	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
  00011	88 47 03	 mov	 BYTE PTR [edi+3], al
  00014	56		 push	 esi
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  0001b	83 c4 08	 add	 esp, 8

; 25   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, strlen(pNotice->Notice) + sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + 1 );

  0001e	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL3@MakeNotice:
  00021	8a 06		 mov	 al, BYTE PTR [esi]
  00023	46		 inc	 esi
  00024	84 c0		 test	 al, al
  00026	75 f9		 jne	 SHORT $LL3@MakeNotice
  00028	2b f1		 sub	 esi, ecx
  0002a	83 c6 11	 add	 esi, 17			; 00000011H
  0002d	56		 push	 esi
  0002e	6a 0d		 push	 13			; 0000000dH
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi

; 26   : #endif
; 27   : }

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ENDP		; TNotice::MakeNoticeMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.h
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 9    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  00007	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  0000b	c1 e0 08	 shl	 eax, 8
  0000e	03 c1		 add	 eax, ecx
  00010	0f b6 4d 10	 movzx	 ecx, BYTE PTR _g$[ebp]
  00014	c1 e0 08	 shl	 eax, 8
  00017	03 c1		 add	 eax, ecx
  00019	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  0001d	c1 e0 08	 shl	 eax, 8
  00020	03 c1		 add	 eax, ecx
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char *>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _vsprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsprintf PROC						; COMDAT

; 1473 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	ff 75 10	 push	 DWORD PTR __ArgList$[ebp]
  00006	6a 00		 push	 0
  00008	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000b	6a ff		 push	 -1
  0000d	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00010	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	ff 70 04	 push	 DWORD PTR [eax+4]
  0001a	83 c9 01	 or	 ecx, 1
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00023	83 c9 ff	 or	 ecx, -1
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH
  00029	85 c0		 test	 eax, eax
  0002b	0f 48 c1	 cmovs	 eax, ecx

; 1474 :     #pragma warning(push)
; 1475 :     #pragma warning(disable: 4996) // Deprecation
; 1476 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);
; 1477 :     #pragma warning(pop)
; 1478 : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	ff 75 18	 push	 DWORD PTR __ArgList$[ebp]
  00006	ff 75 14	 push	 DWORD PTR __Locale$[ebp]
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1391 : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 251  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 251  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
