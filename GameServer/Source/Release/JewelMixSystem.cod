; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\JewelMixSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A DD 0aH	; g_JewelMixInfo
	DD	07a120H
	DD	01c0dH
	DD	0181eH
	DD	014H
	DD	0f4240H
	DD	01c0dH
	DD	0181eH
	DD	01eH
	DD	016e360H
	DD	01c0dH
	DD	0181eH
	DD	0aH
	DD	07a120H
	DD	01c0eH
	DD	0181fH
	DD	014H
	DD	0f4240H
	DD	01c0eH
	DD	0181fH
	DD	01eH
	DD	016e360H
	DD	01c0eH
	DD	0181fH
	DD	0aH
	DD	07a120H
	DD	01c10H
	DD	01888H
	DD	014H
	DD	0f4240H
	DD	01c10H
	DD	01888H
	DD	01eH
	DD	016e360H
	DD	01c10H
	DD	01888H
	DD	0aH
	DD	07a120H
	DD	01c16H
	DD	01889H
	DD	014H
	DD	0f4240H
	DD	01c16H
	DD	01889H
	DD	01eH
	DD	016e360H
	DD	01c16H
	DD	01889H
	DD	0aH
	DD	07a120H
	DD	01c1fH
	DD	0188aH
	DD	014H
	DD	0f4240H
	DD	01c1fH
	DD	0188aH
	DD	01eH
	DD	016e360H
	DD	01c1fH
	DD	0188aH
	DD	0aH
	DD	07a120H
	DD	01c29H
	DD	0188bH
	DD	014H
	DD	0f4240H
	DD	01c29H
	DD	0188bH
	DD	01eH
	DD	016e360H
	DD	01c29H
	DD	0188bH
	DD	0aH
	DD	07a120H
	DD	01c2aH
	DD	0188cH
	DD	014H
	DD	0f4240H
	DD	01c2aH
	DD	0188cH
	DD	01eH
	DD	016e360H
	DD	01c2aH
	DD	0188cH
	DD	0aH
	DD	07a120H
	DD	0180fH
	DD	0188dH
	DD	014H
	DD	0f4240H
	DD	0180fH
	DD	0188dH
	DD	01eH
	DD	016e360H
	DD	0180fH
	DD	0188dH
	DD	0aH
	DD	07a120H
	DD	01c2bH
	DD	0188eH
	DD	014H
	DD	0f4240H
	DD	01c2bH
	DD	0188eH
	DD	01eH
	DD	016e360H
	DD	01c2bH
	DD	0188eH
	DD	0aH
	DD	07a120H
	DD	01c2cH
	DD	0188fH
	DD	014H
	DD	0f4240H
	DD	01c2cH
	DD	0188fH
	DD	01eH
	DD	016e360H
	DD	01c2cH
	DD	0188fH
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CJewelMixSystem@@QAE@XZ			; CJewelMixSystem::CJewelMixSystem
PUBLIC	??1CJewelMixSystem@@UAE@XZ			; CJewelMixSystem::~CJewelMixSystem
PUBLIC	?GetJewelCount@CJewelMixSystem@@SAHHH@Z		; CJewelMixSystem::GetJewelCount
PUBLIC	?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z	; CJewelMixSystem::GetJewelCountPerLevel
PUBLIC	?MixJewel@CJewelMixSystem@@SAHHHH@Z		; CJewelMixSystem::MixJewel
PUBLIC	?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z		; CJewelMixSystem::UnMixJewel
PUBLIC	??_GCJewelMixSystem@@UAEPAXI@Z			; CJewelMixSystem::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_7CJewelMixSystem@@6B@			; CJewelMixSystem::`vftable'
PUBLIC	??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ ; `string'
PUBLIC	??_C@_0DK@IAKPHCNG@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Attempted?5It@ ; `string'
PUBLIC	??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ ; `string'
PUBLIC	??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ ; `string'
PUBLIC	??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ ; `string'
PUBLIC	??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ ; `string'
PUBLIC	??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ ; `string'
PUBLIC	??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ ; `string'
PUBLIC	??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ ; `string'
PUBLIC	??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ ; `string'
PUBLIC	??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ ; `string'
PUBLIC	??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ ; `string'
PUBLIC	??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ ; `string'
PUBLIC	??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ ; `string'
PUBLIC	??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ ; `string'
PUBLIC	??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ ; `string'
PUBLIC	??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_R4CJewelMixSystem@@6B@			; CJewelMixSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCJewelMixSystem@@@8			; CJewelMixSystem `RTTI Type Descriptor'
PUBLIC	??_R3CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CJewelMixSystem@@8		; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??_ECJewelMixSystem@@UAEPAXI@Z:PROC		; CJewelMixSystem::`vector deleting destructor'
EXTRN	?Clear@CItem@@QAEXXZ:PROC			; CItem::Clear
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?GCInventoryItemDeleteSend@@YAXHEE@Z:PROC	; GCInventoryItemDeleteSend
EXTRN	?GCAnsJewelMix@@YAXHH@Z:PROC			; GCAnsJewelMix
EXTRN	?GCAnsJewelUnMix@@YAXHH@Z:PROC			; GCAnsJewelUnMix
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObjInventoryItemSet@@YAXHHE@Z:PROC		; gObjInventoryItemSet
EXTRN	?gObjInventoryDeleteItem@@YAEHH@Z:PROC		; gObjInventoryDeleteItem
EXTRN	?gObjGetItemCountInIventory@@YAHHH@Z:PROC	; gObjGetItemCountInIventory
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjCheckInventorySerial0Item
EXTRN	?GCItemListSend@@YAXH@Z:PROC			; GCItemListSend
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEEEPAE@Z:PROC ; ItemSerialCreateSend
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CJewelMixSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CJewelMixSystem@@8 DD FLAT:??_R0?AVCJewelMixSystem@@@8 ; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2CJewelMixSystem@@8
rdata$r	SEGMENT
??_R2CJewelMixSystem@@8 DD FLAT:??_R1A@?0A@EA@CJewelMixSystem@@8 ; CJewelMixSystem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CJewelMixSystem@@8
rdata$r	SEGMENT
??_R3CJewelMixSystem@@8 DD 00H				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCJewelMixSystem@@@8
data$r	SEGMENT
??_R0?AVCJewelMixSystem@@@8 DD FLAT:??_7type_info@@6B@	; CJewelMixSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCJewelMixSystem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CJewelMixSystem@@6B@
rdata$r	SEGMENT
??_R4CJewelMixSystem@@6B@ DD 00H			; CJewelMixSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCJewelMixSystem@@@8
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCou'
	DB	'nt:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCo'
	DB	'unt:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
CONST	SEGMENT
??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ DB '['
	DB	'JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, S'
	DB	'erial:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
CONST	SEGMENT
??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ DB '['
	DB	'JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
CONST	SEGMENT
??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ DB '['
	DB	'JewelMix] [%s][%s] iItemType is different from request : %d /'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
CONST	SEGMENT
??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
CONST	SEGMENT
??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ DB '['
	DB	'JewelMix] [%s][%s] Item to unmix is not exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
CONST	SEGMENT
??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ DB '['
	DB	'JewelMix] [%s][%s] iJewelLevel is different from request : %d'
	DB	' / %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
CONST	SEGMENT
??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryPos is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
CONST	SEGMENT
??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ DB '['
	DB	'JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
CONST	SEGMENT
??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
CONST	SEGMENT
??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ DB '['
	DB	'JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCoun'
	DB	't:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
CONST	SEGMENT
??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ DB '['
	DB	'JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Ser'
	DB	'ial:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
CONST	SEGMENT
??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ DB '['
	DB	'JewelMix] [%s][%s] iMixType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
CONST	SEGMENT
??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ DB '['
	DB	'JewelMix] [%s][%s] Mix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
CONST	SEGMENT
??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ DB '['
	DB	'JewelMix] [%s][%s] Chaos Mix is already working', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@IAKPHCNG@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Attempted?5It@
CONST	SEGMENT
??_C@_0DK@IAKPHCNG@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Attempted?5It@ DB '['
	DB	'JewelMix] [%s][%s] Attempted ItemCopy using Trade Window', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
CONST	SEGMENT
??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CJewelMixSystem@@6B@
CONST	SEGMENT
??_7CJewelMixSystem@@6B@ DD FLAT:??_R4CJewelMixSystem@@6B@ ; CJewelMixSystem::`vftable'
	DD	FLAT:??_ECJewelMixSystem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCJewelMixSystem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCJewelMixSystem@@UAEPAXI@Z PROC			; CJewelMixSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CJewelMixSystem@@UAE@XZ ; CJewelMixSystem::~CJewelMixSystem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 04		 push	 4
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCJewelMixSystem@@UAEPAXI@Z ENDP			; CJewelMixSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z
_TEXT	SEGMENT
_iChangeType$1$ = -24					; size = 4
tv853 = -20						; size = 4
tv843 = -16						; size = 4
_iItemType$1$ = -16					; size = 4
tv842 = -12						; size = 4
_iCrtJewelCount$1$ = -12				; size = 4
_invSize$1$ = -8					; size = 4
_iInventoryItemType$1$ = -8				; size = 4
_iJewelCount$1$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iJewelLevel$ = 16					; size = 4
_iInventoryPos$ = 20					; size = 4
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z PROC		; CJewelMixSystem::UnMixJewel, COMDAT

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	57		 push	 edi

; 296  : 	if ( !gObjIsConnected(iIndex))

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $LN8@UnMixJewel
  00017	5f		 pop	 edi

; 497  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN8@UnMixJewel:

; 297  : 		return FALSE;
; 298  : 
; 299  : 	if ( gObjCheckInventorySerial0Item(&gObj[iIndex]))

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00021	56		 push	 esi
  00022	69 f7 40 27 00
	00		 imul	 esi, edi, 10048
  00028	03 c6		 add	 eax, esi
  0002a	89 75 ec	 mov	 DWORD PTR tv853[ebp], esi
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  00033	83 c4 04	 add	 esp, 4
  00036	85 c0		 test	 eax, eax
  00038	74 46		 je	 SHORT $LN9@UnMixJewel

; 300  : 	{
; 301  : 		MsgOutput(iIndex, lMsg.Get(MSGGET(13,26)));

  0003a	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  0003f	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00044	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00049	50		 push	 eax
  0004a	57		 push	 edi
  0004b	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput

; 302  : 		GCAnsJewelUnMix(iIndex, 0);

  00050	6a 00		 push	 0
  00052	57		 push	 edi
  00053	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix

; 303  : 
; 304  : 		LogAddTD("[ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)",

  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005e	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00061	03 c6		 add	 eax, esi
  00063	50		 push	 eax
  00064	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00067	03 c6		 add	 eax, esi
  00069	50		 push	 eax
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00075	83 c4 1c	 add	 esp, 28			; 0000001cH

; 305  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);
; 306  : 
; 307  : 		return FALSE;

  00078	33 c0		 xor	 eax, eax
  0007a	5e		 pop	 esi
  0007b	5f		 pop	 edi

; 497  : }

  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN9@UnMixJewel:

; 308  : 	}
; 309  : 
; 310  : 	if ( gObj[iIndex].m_IfState.type == 1 )

  00080	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00086	03 ce		 add	 ecx, esi
  00088	8b 81 b8 11 00
	00		 mov	 eax, DWORD PTR [ecx+4536]
  0008e	25 c0 ff 00 00	 and	 eax, 65472		; 0000ffc0H
  00093	83 f8 40	 cmp	 eax, 64			; 00000040H
  00096	75 1e		 jne	 SHORT $LN10@UnMixJewel

; 311  : 	{
; 312  : 		LogAddTD("[JewelMix] [%s][%s] Attempted ItemCopy using Trade Window",

  00098	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0009b	50		 push	 eax
  0009c	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  0009f	50		 push	 eax
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@IAKPHCNG@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Attempted?5It@
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 313  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);
; 314  : 		return FALSE;

  000ae	33 c0		 xor	 eax, eax
  000b0	5e		 pop	 esi
  000b1	5f		 pop	 edi

; 497  : }

  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c3		 ret	 0
$LN10@UnMixJewel:

; 315  : 	}
; 316  : 
; 317  : 	if ( gObj[iIndex].ChaosLock == TRUE )

  000b6	83 b9 20 12 00
	00 01		 cmp	 DWORD PTR [ecx+4640], 1
  000bd	75 26		 jne	 SHORT $LN11@UnMixJewel

; 318  : 	{
; 319  : 		LogAddTD("[JewelMix] [%s][%s] Chaos Mix is already working",

  000bf	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  000c2	50		 push	 eax
  000c3	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  000c6	50		 push	 eax
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 320  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);
; 321  : 
; 322  : 		GCAnsJewelUnMix(iIndex, 0);

  000d2	6a 00		 push	 0
  000d4	57		 push	 edi
  000d5	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  000da	83 c4 14	 add	 esp, 20			; 00000014H

; 323  : 		return FALSE;

  000dd	33 c0		 xor	 eax, eax
  000df	5e		 pop	 esi
  000e0	5f		 pop	 edi

; 497  : }

  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c3		 ret	 0
$LN11@UnMixJewel:
  000e5	53		 push	 ebx

; 324  : 	}
; 325  : 
; 326  : 	gObj[iIndex].ChaosLock = TRUE;
; 327  : 
; 328  : 	if ( !CHECK_LIMIT(iJewelType, 10) )

  000e6	8b 5d 0c	 mov	 ebx, DWORD PTR _iJewelType$[ebp]
  000e9	c7 81 20 12 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+4640], 1
  000f3	85 db		 test	 ebx, ebx
  000f5	0f 88 d1 03 00
	00		 js	 $LN47@UnMixJewel
  000fb	33 c0		 xor	 eax, eax
  000fd	83 fb 09	 cmp	 ebx, 9
  00100	0f 9e c0	 setle	 al
  00103	85 c0		 test	 eax, eax
  00105	0f 84 c1 03 00
	00		 je	 $LN47@UnMixJewel

; 336  : 	}
; 337  : 
; 338  : 	if ( !CHECK_LIMIT(iInventoryPos, MAIN_INVENTORY_SIZE))

  0010b	8b 55 14	 mov	 edx, DWORD PTR _iInventoryPos$[ebp]
  0010e	85 d2		 test	 edx, edx
  00110	0f 88 94 03 00
	00		 js	 $LN48@UnMixJewel
  00116	33 c0		 xor	 eax, eax
  00118	81 fa cb 00 00
	00		 cmp	 edx, 203		; 000000cbH
  0011e	0f 9e c0	 setle	 al
  00121	85 c0		 test	 eax, eax
  00123	0f 84 81 03 00
	00		 je	 $LN48@UnMixJewel

; 346  : 	}
; 347  : 
; 348  : 	int iInventoryItemType;
; 349  : 	int iInventoryItemLevel;
; 350  : 
; 351  : 	if ( gObj[iIndex].pInventory[iInventoryPos].IsItem() == TRUE )

  00129	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0012e	69 d2 d4 00 00
	00		 imul	 edx, edx, 212
  00134	8b 8c 06 c0 11
	00 00		 mov	 ecx, DWORD PTR [esi+eax+4544]
  0013b	03 ca		 add	 ecx, edx
  0013d	89 55 f0	 mov	 DWORD PTR tv843[ebp], edx
  00140	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem

; 352  : 	{
; 353  : 		if ( gObj[iIndex].pInventory[iInventoryPos].m_Level == iJewelLevel )

  00145	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0014b	83 f8 01	 cmp	 eax, 1
  0014e	0f 85 1b 03 00
	00		 jne	 $LN14@UnMixJewel
  00154	8b 84 31 c0 11
	00 00		 mov	 eax, DWORD PTR [ecx+esi+4544]
  0015b	03 ce		 add	 ecx, esi
  0015d	03 45 f0	 add	 eax, DWORD PTR tv843[ebp]
  00160	89 45 f4	 mov	 DWORD PTR tv842[ebp], eax
  00163	0f bf 50 08	 movsx	 edx, WORD PTR [eax+8]
  00167	8b 45 10	 mov	 eax, DWORD PTR _iJewelLevel$[ebp]
  0016a	3b d0		 cmp	 edx, eax
  0016c	0f 85 c4 02 00
	00		 jne	 $LN16@UnMixJewel

; 354  : 		{
; 355  : 			iInventoryItemType = gObj[iIndex].pInventory[iInventoryPos].m_Type;

  00172	8b 45 f4	 mov	 eax, DWORD PTR tv842[ebp]
  00175	0f bf 40 06	 movsx	 eax, WORD PTR [eax+6]
  00179	89 45 f8	 mov	 DWORD PTR _iInventoryItemType$1$[ebp], eax

; 376  : 		return FALSE;
; 377  : 	}
; 378  : 
; 379  : 	if ( !CHECK_LIMIT(iInventoryItemLevel, 3))

  0017c	85 d2		 test	 edx, edx
  0017e	0f 88 97 02 00
	00		 js	 $LN49@UnMixJewel
  00184	33 c0		 xor	 eax, eax
  00186	83 fa 02	 cmp	 edx, 2
  00189	0f 9e c0	 setle	 al
  0018c	85 c0		 test	 eax, eax
  0018e	0f 84 87 02 00
	00		 je	 $LN49@UnMixJewel

; 387  : 	}
; 388  : 
; 389  : 	int iItemType = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iChangeType;

  00194	8d 04 5a	 lea	 eax, DWORD PTR [edx+ebx*2]
  00197	03 c3		 add	 eax, ebx
  00199	c1 e0 04	 shl	 eax, 4
  0019c	8b 98 0c 00 00
	00		 mov	 ebx, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax+12]

; 390  : 	int iJewelCount = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iJewelCount;

  001a2	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax]

; 391  : 	int iChangeType = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iSourceType;

  001a8	8b 80 08 00 00
	00		 mov	 eax, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax+8]
  001ae	89 45 e8	 mov	 DWORD PTR _iChangeType$1$[ebp], eax

; 392  : 	int iMixMoney = 1000000;
; 393  : 
; 394  : 	if ( iInventoryItemType != iItemType )

  001b1	8b 45 f8	 mov	 eax, DWORD PTR _iInventoryItemType$1$[ebp]
  001b4	89 5d f0	 mov	 DWORD PTR _iItemType$1$[ebp], ebx
  001b7	89 55 fc	 mov	 DWORD PTR _iJewelCount$1$[ebp], edx
  001ba	3b c3		 cmp	 eax, ebx
  001bc	74 39		 je	 SHORT $LN19@UnMixJewel

; 395  : 	{
; 396  : 		LogAddTD("[JewelMix] [%s][%s] iItemType is different from request : %d / %d",

  001be	53		 push	 ebx
  001bf	50		 push	 eax
  001c0	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  001c3	50		 push	 eax
  001c4	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  001c7	50		 push	 eax
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
  001cd	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 397  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 398  : 			iInventoryItemType, iItemType);
; 399  : 
; 400  : 		gObj[iIndex].ChaosLock = FALSE;

  001d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 401  : 		GCAnsJewelUnMix(iIndex, 6);

  001d8	6a 06		 push	 6
  001da	57		 push	 edi
  001db	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  001e6	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  001eb	83 c4 1c	 add	 esp, 28			; 0000001cH
  001ee	33 c0		 xor	 eax, eax
  001f0	5b		 pop	 ebx
  001f1	5e		 pop	 esi
  001f2	5f		 pop	 edi

; 497  : }

  001f3	8b e5		 mov	 esp, ebp
  001f5	5d		 pop	 ebp
  001f6	c3		 ret	 0
$LN19@UnMixJewel:

; 402  : 		return FALSE;
; 403  : 	}
; 404  : 
; 405  : 	if ( iMixMoney > gObj[iIndex].Money )

  001f7	8b 81 cc 00 00
	00		 mov	 eax, DWORD PTR [ecx+204]
  001fd	3d 40 42 0f 00	 cmp	 eax, 1000000		; 000f4240H
  00202	7d 3d		 jge	 SHORT $LN20@UnMixJewel

; 406  : 	{
; 407  : 		LogAddTD("[JewelMix] [%s][%s] lack of money to unmix : %d / %d",

  00204	68 40 42 0f 00	 push	 1000000			; 000f4240H
  00209	50		 push	 eax
  0020a	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0020d	50		 push	 eax
  0020e	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00211	50		 push	 eax
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  00217	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 408  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 409  : 			gObj[iIndex].Money, iMixMoney);
; 410  : 
; 411  : 		gObj[iIndex].ChaosLock = FALSE;

  0021d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 412  : 		GCAnsJewelUnMix(iIndex, 8);

  00222	6a 08		 push	 8
  00224	57		 push	 edi
  00225	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  00230	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00235	83 c4 1c	 add	 esp, 28			; 0000001cH
  00238	33 c0		 xor	 eax, eax
  0023a	5b		 pop	 ebx
  0023b	5e		 pop	 esi
  0023c	5f		 pop	 edi

; 497  : }

  0023d	8b e5		 mov	 esp, ebp
  0023f	5d		 pop	 ebp
  00240	c3		 ret	 0
$LN20@UnMixJewel:

; 413  : 		return FALSE;
; 414  : 	}
; 415  : 
; 416  : 	int invSize = INVENTORY_MAP_SIZE-PSHOP_MAP_SIZE;
; 417  : 
; 418  : 	if( gObj[iIndex].pInventoryExtend <= 4 )	{

  00241	8a 81 cd 11 00
	00		 mov	 al, BYTE PTR [ecx+4557]
  00247	ba c0 00 00 00	 mov	 edx, 192		; 000000c0H
  0024c	89 55 f8	 mov	 DWORD PTR _invSize$1$[ebp], edx
  0024f	3c 04		 cmp	 al, 4
  00251	77 0c		 ja	 SHORT $LN21@UnMixJewel

; 419  : 		invSize = (INVENTORY_MAP_SIZE-PSHOP_MAP_SIZE)-(32*(4-gObj[iIndex].pInventoryExtend));

  00253	0f b6 d0	 movzx	 edx, al
  00256	83 c2 02	 add	 edx, 2
  00259	c1 e2 05	 shl	 edx, 5
  0025c	89 55 f8	 mov	 DWORD PTR _invSize$1$[ebp], edx
$LN21@UnMixJewel:

; 420  : 	}
; 421  : 
; 422  : 	int iEmptyCount = 0;

  0025f	33 db		 xor	 ebx, ebx

; 423  : 
; 424  : 	int x;
; 425  : 	for ( x=0;x<invSize;x++)

  00261	33 c0		 xor	 eax, eax
  00263	85 d2		 test	 edx, edx
  00265	7e 18		 jle	 SHORT $LN3@UnMixJewel
  00267	8b b1 c8 11 00
	00		 mov	 esi, DWORD PTR [ecx+4552]
  0026d	0f 1f 00	 npad	 3
$LL40@UnMixJewel:

; 426  : 	{
; 427  : 		if ( gObj[iIndex].pInventoryMap[x] == 0xFF )

  00270	80 3c 06 ff	 cmp	 BYTE PTR [esi+eax], 255	; 000000ffH
  00274	75 01		 jne	 SHORT $LN41@UnMixJewel

; 428  : 		{
; 429  : 			iEmptyCount++;

  00276	43		 inc	 ebx
$LN41@UnMixJewel:

; 423  : 
; 424  : 	int x;
; 425  : 	for ( x=0;x<invSize;x++)

  00277	40		 inc	 eax
  00278	3b c2		 cmp	 eax, edx
  0027a	7c f4		 jl	 SHORT $LL40@UnMixJewel
  0027c	8b 75 ec	 mov	 esi, DWORD PTR tv853[ebp]
$LN3@UnMixJewel:

; 430  : 		}
; 431  : 	}
; 432  : 
; 433  : 	if ( iEmptyCount < iJewelCount )

  0027f	8b 45 fc	 mov	 eax, DWORD PTR _iJewelCount$1$[ebp]
  00282	3b d8		 cmp	 ebx, eax
  00284	7d 39		 jge	 SHORT $LN23@UnMixJewel

; 434  : 	{
; 435  : 		LogAddTD("[JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d",

  00286	50		 push	 eax
  00287	53		 push	 ebx
  00288	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0028b	50		 push	 eax
  0028c	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  0028f	50		 push	 eax
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
  00295	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 436  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 437  : 			iEmptyCount, iJewelCount);
; 438  : 
; 439  : 		gObj[iIndex].ChaosLock = FALSE;

  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 440  : 		GCAnsJewelUnMix(iIndex, 7);

  002a0	6a 07		 push	 7
  002a2	57		 push	 edi
  002a3	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  002ae	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  002b3	83 c4 1c	 add	 esp, 28			; 0000001cH
  002b6	33 c0		 xor	 eax, eax
  002b8	5b		 pop	 ebx
  002b9	5e		 pop	 esi
  002ba	5f		 pop	 edi

; 497  : }

  002bb	8b e5		 mov	 esp, ebp
  002bd	5d		 pop	 ebp
  002be	c3		 ret	 0
$LN23@UnMixJewel:

; 441  : 		return FALSE;
; 442  : 	}
; 443  : 
; 444  : 	LogAddTD("[JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, Serial:%d",

  002bf	8b 55 f4	 mov	 edx, DWORD PTR tv842[ebp]
  002c2	ff 32		 push	 DWORD PTR [edx]
  002c4	0f bf 42 08	 movsx	 eax, WORD PTR [edx+8]
  002c8	50		 push	 eax
  002c9	0f bf 42 06	 movsx	 eax, WORD PTR [edx+6]
  002cd	50		 push	 eax
  002ce	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  002d1	50		 push	 eax
  002d2	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  002d5	50		 push	 eax
  002d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
  002db	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 445  : 		gObj[iIndex].AccountID, gObj[iIndex].Name,
; 446  : 		gObj[iIndex].pInventory[iInventoryPos].m_Type,
; 447  : 		gObj[iIndex].pInventory[iInventoryPos].m_Level,
; 448  : 		gObj[iIndex].pInventory[iInventoryPos].m_Number);
; 449  : 
; 450  : 	gObjInventoryItemSet(iIndex, iInventoryPos, 0xFF);

  002e1	8b 5d 14	 mov	 ebx, DWORD PTR _iInventoryPos$[ebp]
  002e4	68 ff 00 00 00	 push	 255			; 000000ffH
  002e9	53		 push	 ebx
  002ea	57		 push	 edi
  002eb	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet

; 451  : 	gObjInventoryDeleteItem(iIndex, iInventoryPos);

  002f0	53		 push	 ebx
  002f1	57		 push	 edi
  002f2	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem

; 452  : 	GCInventoryItemDeleteSend(iIndex, iInventoryPos, 1);

  002f7	6a 01		 push	 1
  002f9	53		 push	 ebx
  002fa	57		 push	 edi
  002fb	e8 00 00 00 00	 call	 ?GCInventoryItemDeleteSend@@YAXHEE@Z ; GCInventoryItemDeleteSend

; 453  : 
; 454  : 	int iCrtJewelCount = 0;
; 455  : 	BOOL bItemCrtOK = FALSE;
; 456  : 
; 457  : 	for ( x=0;x<invSize;x++)

  00300	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00306	33 c0		 xor	 eax, eax
  00308	83 c4 38	 add	 esp, 56			; 00000038H
  0030b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iCrtJewelCount$1$[ebp], 0
  00312	33 db		 xor	 ebx, ebx
  00314	39 45 f8	 cmp	 DWORD PTR _invSize$1$[ebp], eax
  00317	7e 64		 jle	 SHORT $LN50@UnMixJewel
  00319	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@UnMixJewel:

; 458  : 	{
; 459  : 		if ( gObj[iIndex].pInventoryMap[x] == 0xFF )

  00320	8b 84 0e c8 11
	00 00		 mov	 eax, DWORD PTR [esi+ecx+4552]
  00327	80 3c 03 ff	 cmp	 BYTE PTR [ebx+eax], 255	; 000000ffH
  0032b	75 48		 jne	 SHORT $LN5@UnMixJewel

; 460  : 		{
; 461  : 			ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X, gObj[iIndex].Y,

  0032d	6a 00		 push	 0
  0032f	0f b6 84 0e 21
	01 00 00	 movzx	 eax, BYTE PTR [esi+ecx+289]
  00337	6a 00		 push	 0
  00339	6a 00		 push	 0
  0033b	6a 00		 push	 0
  0033d	57		 push	 edi
  0033e	6a 00		 push	 0
  00340	6a 00		 push	 0
  00342	6a 00		 push	 0
  00344	6a 00		 push	 0
  00346	6a 00		 push	 0
  00348	ff 75 e8	 push	 DWORD PTR _iChangeType$1$[ebp]
  0034b	50		 push	 eax
  0034c	0f b6 84 0e 20
	01 00 00	 movzx	 eax, BYTE PTR [esi+ecx+288]
  00354	50		 push	 eax
  00355	68 eb 00 00 00	 push	 235			; 000000ebH
  0035a	57		 push	 edi
  0035b	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEEEPAE@Z ; ItemSerialCreateSend

; 462  : 								iChangeType, 0, 0, 0, 0, 0,
; 463  : 								iIndex, 0, 0);
; 464  : 
; 465  : 			iCrtJewelCount++;

  00360	8b 55 f4	 mov	 edx, DWORD PTR _iCrtJewelCount$1$[ebp]
  00363	83 c4 3c	 add	 esp, 60			; 0000003cH

; 466  : 
; 467  : 			if ( iJewelCount <= iCrtJewelCount )

  00366	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0036c	42		 inc	 edx
  0036d	89 55 f4	 mov	 DWORD PTR _iCrtJewelCount$1$[ebp], edx
  00370	39 55 fc	 cmp	 DWORD PTR _iJewelCount$1$[ebp], edx
  00373	7e 74		 jle	 SHORT $LN37@UnMixJewel
$LN5@UnMixJewel:

; 453  : 
; 454  : 	int iCrtJewelCount = 0;
; 455  : 	BOOL bItemCrtOK = FALSE;
; 456  : 
; 457  : 	for ( x=0;x<invSize;x++)

  00375	43		 inc	 ebx
  00376	3b 5d f8	 cmp	 ebx, DWORD PTR _invSize$1$[ebp]
  00379	7c a5		 jl	 SHORT $LL7@UnMixJewel
  0037b	33 c0		 xor	 eax, eax
$LN50@UnMixJewel:

; 470  : 				break;
; 471  : 			}
; 472  : 		}
; 473  : 	}
; 474  : 
; 475  : 	gObj[iIndex].ChaosLock = FALSE;
; 476  : 
; 477  : 	if ( bItemCrtOK == TRUE )
; 478  : 	{
; 479  : 		LogAddTD("[JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCount:%d",

  0037d	ff 75 fc	 push	 DWORD PTR _iJewelCount$1$[ebp]
  00380	c7 84 0e 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx+4640], 0
  0038b	83 f8 01	 cmp	 eax, 1
  0038e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00394	ff 75 f0	 push	 DWORD PTR _iItemType$1$[ebp]
  00397	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0039a	75 54		 jne	 SHORT $LN26@UnMixJewel
  0039c	03 c6		 add	 eax, esi
  0039e	50		 push	 eax
  0039f	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  003a2	03 c6		 add	 eax, esi
  003a4	50		 push	 eax
  003a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  003aa	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 480  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 481  : 			iItemType, iJewelCount);
; 482  : 
; 483  : 		gObj[iIndex].Money -= iMixMoney;

  003b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003b5	81 84 06 cc 00
	00 00 c0 bd f0
	ff		 add	 DWORD PTR [esi+eax+204], -1000000 ; fff0bdc0H

; 484  : 		GCMoneySend(iIndex, gObj[iIndex].Money);

  003c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003c5	ff b4 06 cc 00
	00 00		 push	 DWORD PTR [esi+eax+204]
  003cc	57		 push	 edi
  003cd	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 485  : 		GCAnsJewelUnMix(iIndex, 1);

  003d2	6a 01		 push	 1
  003d4	57		 push	 edi
  003d5	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  003da	83 c4 24	 add	 esp, 36			; 00000024H

; 494  : 	}
; 495  : 
; 496  : 	return TRUE;

  003dd	b8 01 00 00 00	 mov	 eax, 1
  003e2	5b		 pop	 ebx
  003e3	5e		 pop	 esi
  003e4	5f		 pop	 edi

; 497  : }

  003e5	8b e5		 mov	 esp, ebp
  003e7	5d		 pop	 ebp
  003e8	c3		 ret	 0
$LN37@UnMixJewel:

; 468  : 			{
; 469  : 				bItemCrtOK = TRUE;

  003e9	b8 01 00 00 00	 mov	 eax, 1
  003ee	eb 8d		 jmp	 SHORT $LN50@UnMixJewel
$LN26@UnMixJewel:

; 486  : 	}
; 487  : 	else
; 488  : 	{
; 489  : 		LogAddTD("[JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCount:%d",

  003f0	03 c6		 add	 eax, esi
  003f2	50		 push	 eax
  003f3	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  003f6	03 c6		 add	 eax, esi
  003f8	50		 push	 eax
  003f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  003fe	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 490  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 491  : 			iItemType, iJewelCount);
; 492  : 
; 493  : 		GCAnsJewelUnMix(iIndex, 0);

  00404	6a 00		 push	 0
  00406	57		 push	 edi
  00407	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0040c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 494  : 	}
; 495  : 
; 496  : 	return TRUE;

  0040f	b8 01 00 00 00	 mov	 eax, 1
  00414	5b		 pop	 ebx
  00415	5e		 pop	 esi
  00416	5f		 pop	 edi

; 497  : }

  00417	8b e5		 mov	 esp, ebp
  00419	5d		 pop	 ebp
  0041a	c3		 ret	 0
$LN49@UnMixJewel:

; 380  : 	{
; 381  : 		LogAddTD("[JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d",

  0041b	52		 push	 edx
  0041c	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0041f	50		 push	 eax
  00420	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00423	50		 push	 eax
  00424	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
  00429	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 382  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryItemLevel);
; 383  : 
; 384  : 		gObj[iIndex].ChaosLock = FALSE;
; 385  : 		GCAnsJewelUnMix(iIndex, 3);

  0042f	6a 03		 push	 3

; 386  : 		return FALSE;

  00431	e9 b6 00 00 00	 jmp	 $LN56@UnMixJewel
$LN16@UnMixJewel:

; 356  : 			iInventoryItemLevel = gObj[iIndex].pInventory[iInventoryPos].m_Level;
; 357  : 		}
; 358  : 		else
; 359  : 		{
; 360  : 			LogAddTD("[JewelMix] [%s][%s] iJewelLevel is different from request : %d / %d",

  00436	50		 push	 eax
  00437	52		 push	 edx
  00438	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0043b	50		 push	 eax
  0043c	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  0043f	50		 push	 eax
  00440	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
  00445	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 361  : 				gObj[iIndex].AccountID, gObj[iIndex].Name,
; 362  : 				gObj[iIndex].pInventory[iInventoryPos].m_Level, iJewelLevel);
; 363  : 
; 364  : 			gObj[iIndex].ChaosLock = FALSE;

  0044b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 365  : 			GCAnsJewelUnMix(iIndex, 3);

  00450	6a 03		 push	 3
  00452	57		 push	 edi
  00453	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  0045e	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00463	83 c4 1c	 add	 esp, 28			; 0000001cH
  00466	33 c0		 xor	 eax, eax
  00468	5b		 pop	 ebx
  00469	5e		 pop	 esi
  0046a	5f		 pop	 edi

; 497  : }

  0046b	8b e5		 mov	 esp, ebp
  0046d	5d		 pop	 ebp
  0046e	c3		 ret	 0
$LN14@UnMixJewel:

; 366  : 			return FALSE;
; 367  : 		}
; 368  : 	}
; 369  : 	else
; 370  : 	{
; 371  : 		LogAddTD("[JewelMix] [%s][%s] Item to unmix is not exist",

  0046f	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00472	03 c6		 add	 eax, esi
  00474	50		 push	 eax
  00475	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00478	03 c6		 add	 eax, esi
  0047a	50		 push	 eax
  0047b	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
  00480	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 372  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);
; 373  : 	
; 374  : 		gObj[iIndex].ChaosLock = FALSE;

  00486	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 375  : 		GCAnsJewelUnMix(iIndex, 4);

  0048b	6a 04		 push	 4
  0048d	57		 push	 edi
  0048e	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  00499	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0049e	83 c4 14	 add	 esp, 20			; 00000014H
  004a1	33 c0		 xor	 eax, eax
  004a3	5b		 pop	 ebx
  004a4	5e		 pop	 esi
  004a5	5f		 pop	 edi

; 497  : }

  004a6	8b e5		 mov	 esp, ebp
  004a8	5d		 pop	 ebp
  004a9	c3		 ret	 0
$LN48@UnMixJewel:

; 339  : 	{
; 340  : 		LogAddTD("[JewelMix] [%s][%s] iInventoryPos is out of bound : %d",

  004aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004b0	52		 push	 edx
  004b1	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  004b4	03 c6		 add	 eax, esi
  004b6	50		 push	 eax
  004b7	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  004ba	03 c6		 add	 eax, esi
  004bc	50		 push	 eax
  004bd	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
  004c2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 341  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryPos);
; 342  : 
; 343  : 		gObj[iIndex].ChaosLock = FALSE;
; 344  : 		GCAnsJewelUnMix(iIndex, 5);

  004c8	6a 05		 push	 5

; 345  : 		return FALSE;

  004ca	eb 20		 jmp	 SHORT $LN56@UnMixJewel
$LN47@UnMixJewel:

; 329  : 	{
; 330  : 		LogAddTD("[JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d",

  004cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004d2	53		 push	 ebx
  004d3	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  004d6	03 c6		 add	 eax, esi
  004d8	50		 push	 eax
  004d9	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  004dc	03 c6		 add	 eax, esi
  004de	50		 push	 eax
  004df	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
  004e4	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 331  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);
; 332  : 
; 333  : 		gObj[iIndex].ChaosLock = FALSE;
; 334  : 		GCAnsJewelUnMix(iIndex, 2);

  004ea	6a 02		 push	 2
$LN56@UnMixJewel:
  004ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  004f1	57		 push	 edi
  004f2	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  004fd	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00502	83 c4 18	 add	 esp, 24			; 00000018H

; 335  : 		return FALSE;

  00505	33 c0		 xor	 eax, eax
  00507	5b		 pop	 ebx
  00508	5e		 pop	 esi
  00509	5f		 pop	 edi

; 497  : }

  0050a	8b e5		 mov	 esp, ebp
  0050c	5d		 pop	 ebp
  0050d	c3		 ret	 0
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z ENDP		; CJewelMixSystem::UnMixJewel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ?MixJewel@CJewelMixSystem@@SAHHHH@Z
_TEXT	SEGMENT
_iChangeType$1$ = -32					; size = 4
_iItemType$1$ = -28					; size = 4
_bItemDelOK$1$ = -24					; size = 4
_invSize$1$ = -20					; size = 4
_iMixMoney$1$ = -16					; size = 4
_iDelJewelCount$1$ = -12				; size = 4
_iJewelCount$1$ = -8					; size = 4
_x$1$ = -4						; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iMixType$ = 16						; size = 4
?MixJewel@CJewelMixSystem@@SAHHHH@Z PROC		; CJewelMixSystem::MixJewel, COMDAT

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	57		 push	 edi

; 140  : 	if ( !gObjIsConnected(iIndex))

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $LN5@MixJewel
  00017	5f		 pop	 edi

; 291  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN5@MixJewel:

; 141  : 		return FALSE;
; 142  : 
; 143  : 	if ( gObjCheckInventorySerial0Item(&gObj[iIndex]))

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00021	56		 push	 esi
  00022	69 f7 40 27 00
	00		 imul	 esi, edi, 10048
  00028	03 c6		 add	 eax, esi
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  00030	83 c4 04	 add	 esp, 4
  00033	85 c0		 test	 eax, eax
  00035	74 46		 je	 SHORT $LN6@MixJewel

; 144  : 	{
; 145  : 		MsgOutput(iIndex, lMsg.Get(MSGGET(13,26)));

  00037	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00041	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00046	50		 push	 eax
  00047	57		 push	 edi
  00048	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput

; 146  : 		GCAnsJewelMix(iIndex, 4);

  0004d	6a 04		 push	 4
  0004f	57		 push	 edi
  00050	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix

; 147  : 
; 148  : 		LogAddTD("[ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)",

  00055	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005b	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0005e	03 c6		 add	 eax, esi
  00060	50		 push	 eax
  00061	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00064	03 c6		 add	 eax, esi
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00072	83 c4 1c	 add	 esp, 28			; 0000001cH

; 149  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);
; 150  : 
; 151  : 		return FALSE;

  00075	33 c0		 xor	 eax, eax
  00077	5e		 pop	 esi
  00078	5f		 pop	 edi

; 291  : }

  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
$LN6@MixJewel:

; 152  : 	}
; 153  : 
; 154  : 	if ( gObj[iIndex].m_IfState.type == 1 )

  0007d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00083	03 ce		 add	 ecx, esi
  00085	8b 81 b8 11 00
	00		 mov	 eax, DWORD PTR [ecx+4536]
  0008b	25 c0 ff 00 00	 and	 eax, 65472		; 0000ffc0H
  00090	83 f8 40	 cmp	 eax, 64			; 00000040H
  00093	75 1e		 jne	 SHORT $LN7@MixJewel

; 155  : 	{
; 156  : 		LogAddTD("[JewelMix] [%s][%s] Attempted ItemCopy using Trade Window",

  00095	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00098	50		 push	 eax
  00099	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  0009c	50		 push	 eax
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@IAKPHCNG@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Attempted?5It@
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);
; 158  : 		return FALSE;

  000ab	33 c0		 xor	 eax, eax
  000ad	5e		 pop	 esi
  000ae	5f		 pop	 edi

; 291  : }

  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
$LN7@MixJewel:

; 159  : 	}
; 160  : 
; 161  : 	if ( gObj[iIndex].ChaosLock == TRUE )

  000b3	83 b9 20 12 00
	00 01		 cmp	 DWORD PTR [ecx+4640], 1
  000ba	75 26		 jne	 SHORT $LN8@MixJewel

; 162  : 	{
; 163  : 		LogAddTD("[JewelMix] [%s][%s] Chaos Mix is already working",

  000bc	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  000bf	50		 push	 eax
  000c0	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  000c3	50		 push	 eax
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  000c9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 164  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);
; 165  : 
; 166  : 		GCAnsJewelMix(iIndex, 0);

  000cf	6a 00		 push	 0
  000d1	57		 push	 edi
  000d2	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  000d7	83 c4 14	 add	 esp, 20			; 00000014H

; 167  : 		return FALSE;

  000da	33 c0		 xor	 eax, eax
  000dc	5e		 pop	 esi
  000dd	5f		 pop	 edi

; 291  : }

  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
$LN8@MixJewel:

; 168  : 	}
; 169  : 
; 170  : 	gObj[iIndex].ChaosLock = TRUE;
; 171  : 
; 172  : 	if ( !CHECK_LIMIT(iJewelType, 10) )

  000e2	8b 55 0c	 mov	 edx, DWORD PTR _iJewelType$[ebp]
  000e5	c7 81 20 12 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+4640], 1
  000ef	85 d2		 test	 edx, edx
  000f1	0f 88 42 03 00
	00		 js	 $LN29@MixJewel
  000f7	33 c0		 xor	 eax, eax
  000f9	83 fa 09	 cmp	 edx, 9
  000fc	0f 9e c0	 setle	 al
  000ff	85 c0		 test	 eax, eax
  00101	0f 84 32 03 00
	00		 je	 $LN29@MixJewel

; 180  : 	}
; 181  : 
; 182  : 	if ( !CHECK_LIMIT(iMixType, 3))

  00107	53		 push	 ebx
  00108	8b 5d 10	 mov	 ebx, DWORD PTR _iMixType$[ebp]
  0010b	85 db		 test	 ebx, ebx
  0010d	0f 88 e4 02 00
	00		 js	 $LN30@MixJewel
  00113	33 c0		 xor	 eax, eax
  00115	83 fb 02	 cmp	 ebx, 2
  00118	0f 9e c0	 setle	 al
  0011b	85 c0		 test	 eax, eax
  0011d	0f 84 d4 02 00
	00		 je	 $LN30@MixJewel

; 189  : 		return FALSE;
; 190  : 	}
; 191  : 
; 192  : 	int iItemType = g_JewelMixInfo[iJewelType][iMixType].m_iSourceType;

  00123	8d 04 53	 lea	 eax, DWORD PTR [ebx+edx*2]
  00126	03 c2		 add	 eax, edx
  00128	c1 e0 04	 shl	 eax, 4

; 193  : 	int iJewelCount = g_JewelMixInfo[iJewelType][iMixType].m_iJewelCount;

  0012b	8b 98 00 00 00
	00		 mov	 ebx, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax]
  00131	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax+8]

; 194  : 	int iMixMoney = g_JewelMixInfo[iJewelType][iMixType].m_iMixMoney;

  00137	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax+4]

; 195  : 	int iChangeType = g_JewelMixInfo[iJewelType][iMixType].m_iChangeType;

  0013d	8b 80 0c 00 00
	00		 mov	 eax, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax+12]
  00143	89 4d e4	 mov	 DWORD PTR _iItemType$1$[ebp], ecx
  00146	89 5d f8	 mov	 DWORD PTR _iJewelCount$1$[ebp], ebx
  00149	89 55 f0	 mov	 DWORD PTR _iMixMoney$1$[ebp], edx
  0014c	89 45 e0	 mov	 DWORD PTR _iChangeType$1$[ebp], eax

; 196  : 
; 197  : 	if ( iJewelCount <= 0 )

  0014f	85 db		 test	 ebx, ebx
  00151	7f 24		 jg	 SHORT $LN11@MixJewel

; 198  : 	{
; 199  : 		gObj[iIndex].ChaosLock = FALSE;

  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 200  : 		GCAnsJewelMix(iIndex, 0);

  00158	6a 00		 push	 0
  0015a	57		 push	 edi
  0015b	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  00166	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0016b	83 c4 08	 add	 esp, 8

; 273  : 		return FALSE;

  0016e	33 c0		 xor	 eax, eax
  00170	5b		 pop	 ebx
  00171	5e		 pop	 esi
  00172	5f		 pop	 edi

; 291  : }

  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c3		 ret	 0
$LN11@MixJewel:

; 201  : 		return FALSE;
; 202  : 	}
; 203  : 
; 204  : 	int iUserJewelCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00177	51		 push	 ecx
  00178	57		 push	 edi
  00179	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory

; 205  : 
; 206  : 	if ( iJewelCount > iUserJewelCount )
; 207  : 	{
; 208  : 		LogAddTD("[JewelMix] [%s][%s] lack of jewel to mix : %d / %d",

  0017e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00184	83 c4 08	 add	 esp, 8
  00187	3b d8		 cmp	 ebx, eax
  00189	7e 3d		 jle	 SHORT $LN12@MixJewel
  0018b	53		 push	 ebx
  0018c	50		 push	 eax
  0018d	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00190	03 c6		 add	 eax, esi
  00192	50		 push	 eax
  00193	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00196	03 c6		 add	 eax, esi
  00198	50		 push	 eax
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  0019e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 209  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 210  : 			iUserJewelCount, iJewelCount);
; 211  : 
; 212  : 		gObj[iIndex].ChaosLock = FALSE;

  001a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 213  : 		GCAnsJewelMix(iIndex, 4);

  001a9	6a 04		 push	 4
  001ab	57		 push	 edi
  001ac	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  001b7	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  001bc	83 c4 1c	 add	 esp, 28			; 0000001cH

; 273  : 		return FALSE;

  001bf	33 c0		 xor	 eax, eax
  001c1	5b		 pop	 ebx
  001c2	5e		 pop	 esi
  001c3	5f		 pop	 edi

; 291  : }

  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c3		 ret	 0
$LN12@MixJewel:

; 214  : 		return FALSE;
; 215  : 	}
; 216  : 
; 217  : 	if ( iMixMoney > gObj[iIndex].Money )

  001c8	8b 84 0e cc 00
	00 00		 mov	 eax, DWORD PTR [esi+ecx+204]
  001cf	8d 14 0e	 lea	 edx, DWORD PTR [esi+ecx]
  001d2	39 45 f0	 cmp	 DWORD PTR _iMixMoney$1$[ebp], eax
  001d5	7e 3b		 jle	 SHORT $LN13@MixJewel

; 218  : 	{
; 219  : 		LogAddTD("[JewelMix] [%s][%s] lack of money to mix : %d / %d",

  001d7	ff 75 f0	 push	 DWORD PTR _iMixMoney$1$[ebp]
  001da	50		 push	 eax
  001db	8d 42 5d	 lea	 eax, DWORD PTR [edx+93]
  001de	50		 push	 eax
  001df	8d 42 52	 lea	 eax, DWORD PTR [edx+82]
  001e2	50		 push	 eax
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 220  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 221  : 			gObj[iIndex].Money, iMixMoney);
; 222  : 
; 223  : 		gObj[iIndex].ChaosLock = FALSE;

  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 224  : 		GCAnsJewelMix(iIndex, 5);

  001f3	6a 05		 push	 5
  001f5	57		 push	 edi
  001f6	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  00201	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  00206	83 c4 1c	 add	 esp, 28			; 0000001cH

; 273  : 		return FALSE;

  00209	33 c0		 xor	 eax, eax
  0020b	5b		 pop	 ebx
  0020c	5e		 pop	 esi
  0020d	5f		 pop	 edi

; 291  : }

  0020e	8b e5		 mov	 esp, ebp
  00210	5d		 pop	 ebp
  00211	c3		 ret	 0
$LN13@MixJewel:

; 225  : 		return FALSE;
; 226  : 	}
; 227  : 
; 228  : 	int iDelJewelCount = 0;
; 229  : 	BOOL bItemDelOK = FALSE;
; 230  : 
; 231  : 
; 232  : 	int invSize = MAIN_INVENTORY_SIZE;
; 233  : 
; 234  : 	if( gObj[iIndex].pInventoryExtend <= 4 )	{

  00212	8a 92 cd 11 00
	00		 mov	 dl, BYTE PTR [edx+4557]
  00218	b8 cc 00 00 00	 mov	 eax, 204		; 000000ccH
  0021d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iDelJewelCount$1$[ebp], 0
  00224	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _bItemDelOK$1$[ebp], 0
  0022b	89 45 ec	 mov	 DWORD PTR _invSize$1$[ebp], eax
  0022e	80 fa 04	 cmp	 dl, 4
  00231	77 0c		 ja	 SHORT $LN14@MixJewel

; 235  : 		invSize = (MAIN_INVENTORY_SIZE)-(32*(4-gObj[iIndex].pInventoryExtend));

  00233	0f b6 c2	 movzx	 eax, dl
  00236	c1 e0 05	 shl	 eax, 5
  00239	83 c0 4c	 add	 eax, 76			; 0000004cH
  0023c	89 45 ec	 mov	 DWORD PTR _invSize$1$[ebp], eax
$LN14@MixJewel:

; 236  : 	}
; 237  : 
; 238  : 	for ( int x= INVETORY_WEAR_SIZE ; x< invSize; x++)

  0023f	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR _x$1$[ebp], 12 ; 0000000cH
  00246	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00249	0f 8e b4 00 00
	00		 jle	 $LN31@MixJewel
  0024f	bb f0 09 00 00	 mov	 ebx, 2544		; 000009f0H
  00254	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL4@MixJewel:

; 239  : 	{
; 240  : 		if ( gObj[iIndex].pInventory[x].IsItem() == TRUE )

  00260	8b 8c 0e c0 11
	00 00		 mov	 ecx, DWORD PTR [esi+ecx+4544]
  00267	03 cb		 add	 ecx, ebx
  00269	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0026e	83 f8 01	 cmp	 eax, 1
  00271	75 68		 jne	 SHORT $LN32@MixJewel

; 241  : 		{
; 242  : 			if ( gObj[iIndex].pInventory[x].m_Type == iItemType )

  00273	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00279	8b 84 0e c0 11
	00 00		 mov	 eax, DWORD PTR [esi+ecx+4544]
  00280	0f bf 54 18 06	 movsx	 edx, WORD PTR [eax+ebx+6]
  00285	3b 55 e4	 cmp	 edx, DWORD PTR _iItemType$1$[ebp]
  00288	75 57		 jne	 SHORT $LN2@MixJewel

; 243  : 			{
; 244  : 				LogAddTD("[JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Serial:%d",

  0028a	ff 34 18	 push	 DWORD PTR [eax+ebx]
  0028d	0f bf 44 18 08	 movsx	 eax, WORD PTR [eax+ebx+8]
  00292	50		 push	 eax
  00293	52		 push	 edx
  00294	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00297	03 c6		 add	 eax, esi
  00299	50		 push	 eax
  0029a	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  0029d	03 c6		 add	 eax, esi
  0029f	50		 push	 eax
  002a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
  002a5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 245  : 					gObj[iIndex].AccountID, gObj[iIndex].Name,
; 246  : 					gObj[iIndex].pInventory[x].m_Type,
; 247  : 					gObj[iIndex].pInventory[x].m_Level,
; 248  : 					gObj[iIndex].pInventory[x].m_Number);
; 249  : 
; 250  : 				gObjInventoryItemSet(iIndex, x, 0xFF);

  002ab	68 ff 00 00 00	 push	 255			; 000000ffH
  002b0	ff 75 fc	 push	 DWORD PTR _x$1$[ebp]
  002b3	57		 push	 edi
  002b4	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet

; 251  : 				gObj[iIndex].pInventory[x].Clear();

  002b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002be	83 c4 24	 add	 esp, 36			; 00000024H
  002c1	8b 8c 06 c0 11
	00 00		 mov	 ecx, DWORD PTR [esi+eax+4544]
  002c8	03 cb		 add	 ecx, ebx
  002ca	e8 00 00 00 00	 call	 ?Clear@CItem@@QAEXXZ	; CItem::Clear

; 252  : 				iDelJewelCount++;

  002cf	8b 45 f4	 mov	 eax, DWORD PTR _iDelJewelCount$1$[ebp]
  002d2	40		 inc	 eax
  002d3	89 45 f4	 mov	 DWORD PTR _iDelJewelCount$1$[ebp], eax

; 253  : 
; 254  : 				if ( iJewelCount <= iDelJewelCount )

  002d6	39 45 f8	 cmp	 DWORD PTR _iJewelCount$1$[ebp], eax
  002d9	7e 1e		 jle	 SHORT $LN25@MixJewel
$LN32@MixJewel:
  002db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
$LN2@MixJewel:

; 236  : 	}
; 237  : 
; 238  : 	for ( int x= INVETORY_WEAR_SIZE ; x< invSize; x++)

  002e1	8b 45 fc	 mov	 eax, DWORD PTR _x$1$[ebp]
  002e4	81 c3 d4 00 00
	00		 add	 ebx, 212		; 000000d4H
  002ea	40		 inc	 eax
  002eb	89 45 fc	 mov	 DWORD PTR _x$1$[ebp], eax
  002ee	3b 45 ec	 cmp	 eax, DWORD PTR _invSize$1$[ebp]
  002f1	0f 8c 69 ff ff
	ff		 jl	 $LL4@MixJewel
  002f7	eb 07		 jmp	 SHORT $LN33@MixJewel
$LN25@MixJewel:

; 255  : 				{
; 256  : 					bItemDelOK = TRUE;

  002f9	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _bItemDelOK$1$[ebp], 1
$LN33@MixJewel:
  00300	8b 5d f8	 mov	 ebx, DWORD PTR _iJewelCount$1$[ebp]
$LN31@MixJewel:

; 257  : 					break;
; 258  : 				}
; 259  : 			}
; 260  : 		}
; 261  : 	}
; 262  : 
; 263  : 	GCItemListSend(iIndex);

  00303	57		 push	 edi
  00304	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend

; 264  : 
; 265  : 	if ( bItemDelOK == FALSE )
; 266  : 	{
; 267  : 		LogAddTD("[JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / %d",

  00309	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0030f	83 c4 04	 add	 esp, 4
  00312	83 7d e8 00	 cmp	 DWORD PTR _bItemDelOK$1$[ebp], 0
  00316	75 3f		 jne	 SHORT $LN18@MixJewel
  00318	53		 push	 ebx
  00319	ff 75 f4	 push	 DWORD PTR _iDelJewelCount$1$[ebp]
  0031c	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  0031f	03 c6		 add	 eax, esi
  00321	50		 push	 eax
  00322	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00325	03 c6		 add	 eax, esi
  00327	50		 push	 eax
  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  0032d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 268  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 269  : 			iDelJewelCount, iJewelCount);
; 270  : 
; 271  : 		gObj[iIndex].ChaosLock = FALSE;

  00333	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 272  : 		GCAnsJewelMix(iIndex, 0);

  00338	6a 00		 push	 0
  0033a	57		 push	 edi
  0033b	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  00346	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0034b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 273  : 		return FALSE;

  0034e	33 c0		 xor	 eax, eax
  00350	5b		 pop	 ebx
  00351	5e		 pop	 esi
  00352	5f		 pop	 edi

; 291  : }

  00353	8b e5		 mov	 esp, ebp
  00355	5d		 pop	 ebp
  00356	c3		 ret	 0
$LN18@MixJewel:

; 274  : 	}
; 275  : 
; 276  : 	ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X,

  00357	6a 00		 push	 0
  00359	0f b6 84 31 21
	01 00 00	 movzx	 eax, BYTE PTR [ecx+esi+289]
  00361	6a 00		 push	 0
  00363	6a 00		 push	 0
  00365	6a 00		 push	 0
  00367	57		 push	 edi
  00368	6a 00		 push	 0
  0036a	6a 00		 push	 0
  0036c	6a 00		 push	 0
  0036e	6a 00		 push	 0
  00370	ff 75 10	 push	 DWORD PTR _iMixType$[ebp]
  00373	ff 75 e0	 push	 DWORD PTR _iChangeType$1$[ebp]
  00376	50		 push	 eax
  00377	0f b6 84 31 20
	01 00 00	 movzx	 eax, BYTE PTR [ecx+esi+288]
  0037f	50		 push	 eax
  00380	68 eb 00 00 00	 push	 235			; 000000ebH
  00385	57		 push	 edi
  00386	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEEEPAE@Z ; ItemSerialCreateSend

; 277  : 						gObj[iIndex].Y, iChangeType,
; 278  : 						iMixType, 0, 0, 0, 0,
; 279  : 						iIndex, 0, 0);
; 280  : 
; 281  : 	gObj[iIndex].ChaosLock = FALSE;

  0038b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 282  : 	gObj[iIndex].Money -= iMixMoney;

  00390	8b 4d f0	 mov	 ecx, DWORD PTR _iMixMoney$1$[ebp]
  00393	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  0039e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003a3	29 8c 06 cc 00
	00 00		 sub	 DWORD PTR [esi+eax+204], ecx

; 283  : 	GCMoneySend(iIndex, gObj[iIndex].Money);

  003aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003af	ff b4 06 cc 00
	00 00		 push	 DWORD PTR [esi+eax+204]
  003b6	57		 push	 edi
  003b7	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  003bc	83 c4 44	 add	 esp, 68			; 00000044H

; 284  : 	GCAnsJewelMix(iIndex, 1);

  003bf	6a 01		 push	 1
  003c1	57		 push	 edi
  003c2	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix

; 285  : 
; 286  : 	LogAddTD("[JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCount:%d",

  003c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003cd	53		 push	 ebx
  003ce	ff 75 e4	 push	 DWORD PTR _iItemType$1$[ebp]
  003d1	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  003d4	03 c6		 add	 eax, esi
  003d6	50		 push	 eax
  003d7	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  003da	03 c6		 add	 eax, esi
  003dc	50		 push	 eax
  003dd	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
  003e2	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  003e8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 287  : 		gObj[iIndex].AccountID, gObj[iIndex].Name,
; 288  : 		iItemType, iJewelCount);
; 289  : 
; 290  : 	return TRUE;

  003eb	b8 01 00 00 00	 mov	 eax, 1
  003f0	5b		 pop	 ebx
  003f1	5e		 pop	 esi
  003f2	5f		 pop	 edi

; 291  : }

  003f3	8b e5		 mov	 esp, ebp
  003f5	5d		 pop	 ebp
  003f6	c3		 ret	 0
$LN30@MixJewel:

; 183  : 	{
; 184  : 		LogAddTD("[JewelMix] [%s][%s] iMixType is out of bound : %d",

  003f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  003fd	53		 push	 ebx
  003fe	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00401	03 c6		 add	 eax, esi
  00403	50		 push	 eax
  00404	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00407	03 c6		 add	 eax, esi
  00409	50		 push	 eax
  0040a	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
  0040f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 185  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMixType);
; 186  : 
; 187  : 		gObj[iIndex].ChaosLock = FALSE;

  00415	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 188  : 		GCAnsJewelMix(iIndex, 3);

  0041a	6a 03		 push	 3
  0041c	57		 push	 edi
  0041d	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  00428	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0042d	83 c4 18	 add	 esp, 24			; 00000018H

; 273  : 		return FALSE;

  00430	33 c0		 xor	 eax, eax
  00432	5b		 pop	 ebx
  00433	5e		 pop	 esi
  00434	5f		 pop	 edi

; 291  : }

  00435	8b e5		 mov	 esp, ebp
  00437	5d		 pop	 ebp
  00438	c3		 ret	 0
$LN29@MixJewel:

; 173  : 	{
; 174  : 		LogAddTD("[JewelMix] [%s][%s] Mix iJewelType is out of bound : %d",

  00439	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0043f	52		 push	 edx
  00440	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00443	03 c6		 add	 eax, esi
  00445	50		 push	 eax
  00446	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00449	03 c6		 add	 eax, esi
  0044b	50		 push	 eax
  0044c	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
  00451	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 175  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);
; 176  : 
; 177  : 		gObj[iIndex].ChaosLock = FALSE;

  00457	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 178  : 		GCAnsJewelMix(iIndex, 2);

  0045c	6a 02		 push	 2
  0045e	57		 push	 edi
  0045f	c7 84 06 20 12
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+eax+4640], 0
  0046a	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0046f	83 c4 18	 add	 esp, 24			; 00000018H

; 179  : 		return FALSE;

  00472	33 c0		 xor	 eax, eax
  00474	5e		 pop	 esi
  00475	5f		 pop	 edi

; 291  : }

  00476	8b e5		 mov	 esp, ebp
  00478	5d		 pop	 ebp
  00479	c3		 ret	 0
?MixJewel@CJewelMixSystem@@SAHHHH@Z ENDP		; CJewelMixSystem::MixJewel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z
_TEXT	SEGMENT
_iJewelType$ = 8					; size = 4
_iJewelLevel$ = 12					; size = 4
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z PROC	; CJewelMixSystem::GetJewelCountPerLevel, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 128  : 	if ( !CHECK_LIMIT(iJewelLevel, 3) )

  00003	8b 55 0c	 mov	 edx, DWORD PTR _iJewelLevel$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	78 2f		 js	 SHORT $LN9@GetJewelCo
  0000a	33 c0		 xor	 eax, eax
  0000c	83 fa 02	 cmp	 edx, 2
  0000f	0f 9e c0	 setle	 al
  00012	85 c0		 test	 eax, eax
  00014	74 23		 je	 SHORT $LN9@GetJewelCo

; 130  : 
; 131  : 	if ( !CHECK_LIMIT(iJewelType, 10) )

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _iJewelType$[ebp]
  00019	85 c9		 test	 ecx, ecx
  0001b	78 1c		 js	 SHORT $LN9@GetJewelCo
  0001d	33 c0		 xor	 eax, eax
  0001f	83 f9 09	 cmp	 ecx, 9
  00022	0f 9e c0	 setle	 al
  00025	85 c0		 test	 eax, eax
  00027	74 10		 je	 SHORT $LN9@GetJewelCo

; 132  : 		return -1;
; 133  : 
; 134  : 	return g_JewelMixInfo[iJewelType][iJewelLevel].m_iJewelCount;

  00029	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  0002c	03 c1		 add	 eax, ecx
  0002e	c1 e0 04	 shl	 eax, 4
  00031	8b 80 00 00 00
	00		 mov	 eax, DWORD PTR ?g_JewelMixInfo@@3QAY02$$CBUJEWELMIX_INFO@@A[eax]

; 135  : }

  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
$LN9@GetJewelCo:

; 129  : 		return -1;

  00039	83 c8 ff	 or	 eax, -1

; 135  : }

  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z ENDP	; CJewelMixSystem::GetJewelCountPerLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ?GetJewelCount@CJewelMixSystem@@SAHHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
?GetJewelCount@CJewelMixSystem@@SAHHH@Z PROC		; CJewelMixSystem::GetJewelCount, COMDAT

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 27   : 	if ( !gObjIsConnected(iIndex) )

  00003	ff 75 08	 push	 DWORD PTR _iIndex$[ebp]
  00006	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000b	83 c4 04	 add	 esp, 4
  0000e	85 c0		 test	 eax, eax
  00010	0f 84 9f 00 00
	00		 je	 $LN15@GetJewelCo

; 28   : 		return -1;
; 29   : 
; 30   : 	int iItemType;
; 31   : 
; 32   : 	switch ( iJewelType )

  00016	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  00019	83 f8 09	 cmp	 eax, 9
  0001c	0f 87 93 00 00
	00		 ja	 $LN15@GetJewelCo
  00022	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN20@GetJewelCo[eax*4]
$LN5@GetJewelCo:

; 33   : 	{
; 34   : 		case 0:
; 35   : 			iItemType = ITEMGET(14,13);

  00029	b8 0d 1c 00 00	 mov	 eax, 7181		; 00001c0dH

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0002e	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  00031	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00032	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN6@GetJewelCo:

; 36   : 			break;
; 37   : 		case 1:
; 38   : 			iItemType = ITEMGET(14,14);

  00037	b8 0e 1c 00 00	 mov	 eax, 7182		; 00001c0eH

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0003c	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  0003f	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00040	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN7@GetJewelCo:

; 39   : 			break;
; 40   : 		case 2:
; 41   : 			iItemType = ITEMGET(14,16);

  00045	b8 10 1c 00 00	 mov	 eax, 7184		; 00001c10H

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0004a	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  0004d	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0004e	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN8@GetJewelCo:

; 42   : 			break;
; 43   : 		case 3:
; 44   : 			iItemType = ITEMGET(14,22);

  00053	b8 16 1c 00 00	 mov	 eax, 7190		; 00001c16H

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00058	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  0005b	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0005c	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN9@GetJewelCo:

; 45   : 			break;
; 46   : 		case 4:
; 47   : 			iItemType = ITEMGET(14,31);

  00061	b8 1f 1c 00 00	 mov	 eax, 7199		; 00001c1fH

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00066	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  00069	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0006a	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN10@GetJewelCo:

; 48   : 			break;
; 49   : 		case 5:
; 50   : 			iItemType = ITEMGET(14,41);

  0006f	b8 29 1c 00 00	 mov	 eax, 7209		; 00001c29H

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00074	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  00077	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00078	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN11@GetJewelCo:

; 51   : 			break;
; 52   : 		case 6:
; 53   : 			iItemType = ITEMGET(14,42);

  0007d	b8 2a 1c 00 00	 mov	 eax, 7210		; 00001c2aH

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00082	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  00085	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00086	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN12@GetJewelCo:

; 54   : 			break;
; 55   : 		case 7:
; 56   : 			iItemType = ITEMGET(12,15);

  0008b	b8 0f 18 00 00	 mov	 eax, 6159		; 0000180fH

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00090	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  00093	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00094	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN13@GetJewelCo:

; 57   : 			break;
; 58   : 		case 8:
; 59   : 			iItemType = ITEMGET(14,43);

  00099	b8 2b 1c 00 00	 mov	 eax, 7211		; 00001c2bH

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0009e	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  000a1	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  000a2	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN14@GetJewelCo:

; 60   : 			break;
; 61   : 		case 9:
; 62   : 			iItemType = ITEMGET(14,44);

  000a7	b8 2c 1c 00 00	 mov	 eax, 7212		; 00001c2cH

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  000ac	89 45 0c	 mov	 DWORD PTR _iJewelType$[ebp], eax

; 69   : 	return iItemCount;
; 70   : }

  000af	5d		 pop	 ebp

; 66   : 	}	
; 67   : 	
; 68   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  000b0	e9 00 00 00 00	 jmp	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
$LN15@GetJewelCo:

; 63   : 			break;
; 64   : 		default:
; 65   : 			return -1;

  000b5	83 c8 ff	 or	 eax, -1

; 69   : 	return iItemCount;
; 70   : }

  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
  000ba	66 90		 npad	 2
$LN20@GetJewelCo:
  000bc	00 00 00 00	 DD	 $LN5@GetJewelCo
  000c0	00 00 00 00	 DD	 $LN6@GetJewelCo
  000c4	00 00 00 00	 DD	 $LN7@GetJewelCo
  000c8	00 00 00 00	 DD	 $LN8@GetJewelCo
  000cc	00 00 00 00	 DD	 $LN9@GetJewelCo
  000d0	00 00 00 00	 DD	 $LN10@GetJewelCo
  000d4	00 00 00 00	 DD	 $LN11@GetJewelCo
  000d8	00 00 00 00	 DD	 $LN12@GetJewelCo
  000dc	00 00 00 00	 DD	 $LN13@GetJewelCo
  000e0	00 00 00 00	 DD	 $LN14@GetJewelCo
?GetJewelCount@CJewelMixSystem@@SAHHH@Z ENDP		; CJewelMixSystem::GetJewelCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ??1CJewelMixSystem@@UAE@XZ
_TEXT	SEGMENT
??1CJewelMixSystem@@UAE@XZ PROC				; CJewelMixSystem::~CJewelMixSystem, COMDAT
; _this$ = ecx

; 21   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CJewelMixSystem@@6B@

; 22   : 	return;
; 23   : }

  00006	c3		 ret	 0
??1CJewelMixSystem@@UAE@XZ ENDP				; CJewelMixSystem::~CJewelMixSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ??0CJewelMixSystem@@QAE@XZ
_TEXT	SEGMENT
??0CJewelMixSystem@@QAE@XZ PROC				; CJewelMixSystem::CJewelMixSystem, COMDAT
; _this$ = ecx

; 16   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CJewelMixSystem@@6B@

; 17   : 	return;
; 18   : }

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0CJewelMixSystem@@QAE@XZ ENDP				; CJewelMixSystem::CJewelMixSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\jewelmixsystem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 498  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
