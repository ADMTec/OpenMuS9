; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\common\classdef.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0DEFAULTCLASSTYPE@@QAE@XZ			; DEFAULTCLASSTYPE::DEFAULTCLASSTYPE
PUBLIC	??0classdef@@QAE@XZ				; classdef::classdef
PUBLIC	??1classdef@@UAE@XZ				; classdef::~classdef
PUBLIC	?Init@classdef@@QAEXXZ				; classdef::Init
PUBLIC	?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z	; classdef::SetCharacter
PUBLIC	?SetEquipment@classdef@@QAEXH@Z			; classdef::SetEquipment
PUBLIC	?GetDefPoint@classdef@@QAEHH@Z			; classdef::GetDefPoint
PUBLIC	??_Gclassdef@@UAEPAXI@Z				; classdef::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_7classdef@@6B@				; classdef::`vftable'
PUBLIC	??_R4classdef@@6B@				; classdef::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVclassdef@@@8				; classdef `RTTI Type Descriptor'
PUBLIC	??_R3classdef@@8				; classdef::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2classdef@@8				; classdef::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@classdef@@8			; classdef::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	??0CItem@@QAE@XZ:PROC				; CItem::CItem
EXTRN	?Convert@CItem@@QAEXHEEEEEEPAEEE@Z:PROC		; CItem::Convert
EXTRN	?Clear@CItem@@QAEXXZ:PROC			; CItem::Clear
EXTRN	?ItemGetNumberMake@@YAHHH@Z:PROC		; ItemGetNumberMake
EXTRN	??_Eclassdef@@UAEPAXI@Z:PROC			; classdef::`vector deleting destructor'
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@classdef@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@classdef@@8 DD FLAT:??_R0?AVclassdef@@@8	; classdef::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3classdef@@8
rdata$r	ENDS
;	COMDAT ??_R2classdef@@8
rdata$r	SEGMENT
??_R2classdef@@8 DD FLAT:??_R1A@?0A@EA@classdef@@8	; classdef::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3classdef@@8
rdata$r	SEGMENT
??_R3classdef@@8 DD 00H					; classdef::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2classdef@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVclassdef@@@8
data$r	SEGMENT
??_R0?AVclassdef@@@8 DD FLAT:??_7type_info@@6B@		; classdef `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVclassdef@@', 00H
data$r	ENDS
;	COMDAT ??_R4classdef@@6B@
rdata$r	SEGMENT
??_R4classdef@@6B@ DD 00H				; classdef::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVclassdef@@@8
	DD	FLAT:??_R3classdef@@8
rdata$r	ENDS
;	COMDAT ??_7classdef@@6B@
CONST	SEGMENT
??_7classdef@@6B@ DD FLAT:??_R4classdef@@6B@		; classdef::`vftable'
	DD	FLAT:??_Eclassdef@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_Gclassdef@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gclassdef@@UAEPAXI@Z PROC				; classdef::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1classdef@@UAE@XZ	; classdef::~classdef
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 7c 52 00 00	 push	 21116			; 0000527cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_Gclassdef@@UAEPAXI@Z ENDP				; classdef::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ?GetDefPoint@classdef@@QAEHH@Z
_TEXT	SEGMENT
_char_class$ = 8					; size = 4
?GetDefPoint@classdef@@QAEHH@Z PROC			; classdef::GetDefPoint, COMDAT
; _this$ = ecx

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 133  : 	if ( char_class < 0 || char_class > MAX_TYPE_PLAYER-1 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _char_class$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	83 f8 06	 cmp	 eax, 6
  0000c	77 2f		 ja	 SHORT $LN3@GetDefPoin

; 136  : 	}
; 137  : 
; 138  : 	return this->DefClass[char_class].Strength + this->DefClass[char_class].Dexterity + this->DefClass[char_class].Vitality + this->DefClass[char_class].Energy + this->DefClass[char_class].Leadership;

  0000e	69 c0 c8 0b 00
	00		 imul	 eax, eax, 3016
  00014	0f b7 4c 30 0e	 movzx	 ecx, WORD PTR [eax+esi+14]
  00019	0f b7 94 30 c8
	0b 00 00	 movzx	 edx, WORD PTR [eax+esi+3016]
  00021	03 d1		 add	 edx, ecx
  00023	0f b7 4c 30 0c	 movzx	 ecx, WORD PTR [eax+esi+12]
  00028	03 d1		 add	 edx, ecx
  0002a	0f b7 4c 30 0a	 movzx	 ecx, WORD PTR [eax+esi+10]
  0002f	0f b7 44 30 08	 movzx	 eax, WORD PTR [eax+esi+8]
  00034	03 d1		 add	 edx, ecx
  00036	03 c2		 add	 eax, edx
  00038	5e		 pop	 esi

; 139  : }

  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
$LN3@GetDefPoin:

; 134  : 	{
; 135  : 		return 0;

  0003d	33 c0		 xor	 eax, eax
  0003f	5e		 pop	 esi

; 139  : }

  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?GetDefPoint@classdef@@QAEHH@Z ENDP			; classdef::GetDefPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ?SetEquipment@classdef@@QAEXH@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
tv361 = 8						; size = 4
_Class$ = 8						; size = 4
?SetEquipment@classdef@@QAEXH@Z PROC			; classdef::SetEquipment, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 76   : 	int def_type=0;

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _Class$[ebp]
  00008	69 c3 c8 0b 00
	00		 imul	 eax, ebx, 3016
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  00013	bf 0d 00 00 00	 mov	 edi, 13			; 0000000dH
  00018	03 c1		 add	 eax, ecx
  0001a	89 45 08	 mov	 DWORD PTR tv361[ebp], eax
  0001d	8d 70 30	 lea	 esi, DWORD PTR [eax+48]
$LL4@SetEquipme:

; 77   : 	int right_type=0;
; 78   : 	int n;
; 79   : 
; 80   : 	for (n=0;n<MAX_PLAYER_EQUIPMENT+1;n++)
; 81   : 	{
; 82   : 		this->DefClass[Class].Equipment[n].Clear();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?Clear@CItem@@QAEXXZ	; CItem::Clear
  00027	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  0002d	83 ef 01	 sub	 edi, 1
  00030	75 ee		 jne	 SHORT $LL4@SetEquipme

; 83   : 	}
; 84   : 
; 85   : 	switch (Class)

  00032	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  00035	83 f8 03	 cmp	 eax, 3
  00038	77 49		 ja	 SHORT $LN23@SetEquipme
  0003a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN27@SetEquipme[eax*4]
$LN7@SetEquipme:

; 86   : 	{
; 87   : 		case CLASS_KNIGHT:
; 88   : 			def_type = ItemGetNumberMake(1, 0);

  00041	6a 00		 push	 0
  00043	6a 01		 push	 1
  00045	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  0004a	83 c4 08	 add	 esp, 8
  0004d	8b f0		 mov	 esi, eax

; 89   : 			break;

  0004f	eb 34		 jmp	 SHORT $LN24@SetEquipme
$LN8@SetEquipme:

; 90   : 
; 91   : 		case CLASS_ELF:
; 92   : 			def_type = ItemGetNumberMake(4, 0);

  00051	6a 00		 push	 0
  00053	6a 04		 push	 4
  00055	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake

; 93   : 			right_type = ItemGetNumberMake(4, 15);

  0005a	6a 0f		 push	 15			; 0000000fH
  0005c	6a 04		 push	 4
  0005e	8b f0		 mov	 esi, eax
  00060	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  00065	83 c4 10	 add	 esp, 16			; 00000010H

; 94   : 			break;

  00068	eb 1d		 jmp	 SHORT $LN5@SetEquipme
$LN9@SetEquipme:

; 95   : 
; 96   : 		case CLASS_DARKLORD:
; 97   : 			def_type = ItemGetNumberMake(6, 0);

  0006a	6a 00		 push	 0
  0006c	6a 06		 push	 6
  0006e	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake

; 98   : 			right_type = ItemGetNumberMake(0, 1);

  00073	6a 01		 push	 1
  00075	6a 00		 push	 0
  00077	8b f0		 mov	 esi, eax
  00079	e8 00 00 00 00	 call	 ?ItemGetNumberMake@@YAHHH@Z ; ItemGetNumberMake
  0007e	83 c4 10	 add	 esp, 16			; 00000010H

; 99   : 			break;

  00081	eb 04		 jmp	 SHORT $LN5@SetEquipme
$LN23@SetEquipme:
  00083	33 f6		 xor	 esi, esi
$LN24@SetEquipme:
  00085	33 c0		 xor	 eax, eax
$LN5@SetEquipme:

; 100  : 
; 101  : 		case CLASS_MAGUMSA:
; 102  : 			def_type = ItemGetNumberMake(6, 0);
; 103  : 			right_type = ItemGetNumberMake(0, 1);
; 104  : 			break;
; 105  : 	}
; 106  : 
; 107  : 	if ( Class != 0 )

  00087	85 db		 test	 ebx, ebx
  00089	0f 84 9a 00 00
	00		 je	 $LN15@SetEquipme

; 108  : 	{
; 109  : 		if ( Class == CLASS_DARKLORD )

  0008f	83 fb 04	 cmp	 ebx, 4
  00092	75 35		 jne	 SHORT $LN12@SetEquipme

; 110  : 		{
; 111  : 			this->DefClass[Class].Equipment[0].m_Level = 0;

  00094	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  00097	33 c9		 xor	 ecx, ecx

; 112  : 			this->DefClass[Class].Equipment[1].m_Level = 0;
; 113  : 			this->DefClass[Class].Equipment[0].Convert(right_type, 0,0,0,0,0,0,0,-1,CURRENT_DB_VERSION);

  00099	6a 03		 push	 3
  0009b	68 ff 00 00 00	 push	 255			; 000000ffH
  000a0	51		 push	 ecx
  000a1	51		 push	 ecx
  000a2	51		 push	 ecx
  000a3	51		 push	 ecx
  000a4	51		 push	 ecx
  000a5	51		 push	 ecx
  000a6	51		 push	 ecx
  000a7	66 89 8b 58 2f
	00 00		 mov	 WORD PTR [ebx+12120], cx
  000ae	66 89 8b 2c 30
	00 00		 mov	 WORD PTR [ebx+12332], cx
  000b5	8d 8b 50 2f 00
	00		 lea	 ecx, DWORD PTR [ebx+12112]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEE@Z ; CItem::Convert

; 114  : 			this->DefClass[Class].Equipment[1].Convert(def_type, 0,0,0,0,0,0,0,-1,CURRENT_DB_VERSION);

  000c1	8d 8b 24 30 00
	00		 lea	 ecx, DWORD PTR [ebx+12324]
  000c7	eb 45		 jmp	 SHORT $LN25@SetEquipme
$LN12@SetEquipme:

; 115  : 		}
; 116  : 		else if ( Class == CLASS_ELF || Class == CLASS_MAGUMSA )

  000c9	83 fb 02	 cmp	 ebx, 2
  000cc	74 13		 je	 SHORT $LN16@SetEquipme
  000ce	83 fb 03	 cmp	 ebx, 3
  000d1	74 0e		 je	 SHORT $LN16@SetEquipme

; 122  : 		}
; 123  : 		else
; 124  : 		{
; 125  : 			this->DefClass[Class].Equipment[0].m_Level = 0;

  000d3	8b 7d 08	 mov	 edi, DWORD PTR tv361[ebp]
  000d6	33 c0		 xor	 eax, eax
  000d8	66 89 47 38	 mov	 WORD PTR [edi+56], ax

; 126  : 			this->DefClass[Class].Equipment[0].Convert(def_type, 0,0,0,0,0,0,0,-1,CURRENT_DB_VERSION);

  000dc	8d 4f 30	 lea	 ecx, DWORD PTR [edi+48]
  000df	eb 2d		 jmp	 SHORT $LN25@SetEquipme
$LN16@SetEquipme:

; 117  : 		{
; 118  : 			this->DefClass[Class].Equipment[0].m_Level = 0;

  000e1	8b 7d 08	 mov	 edi, DWORD PTR tv361[ebp]
  000e4	33 c9		 xor	 ecx, ecx

; 119  : 			this->DefClass[Class].Equipment[1].m_Level = 0;
; 120  : 			this->DefClass[Class].Equipment[0].Convert(right_type, 0,0,0,0,0,0,0,-1,CURRENT_DB_VERSION);

  000e6	6a 03		 push	 3
  000e8	68 ff 00 00 00	 push	 255			; 000000ffH
  000ed	51		 push	 ecx
  000ee	51		 push	 ecx
  000ef	51		 push	 ecx
  000f0	51		 push	 ecx
  000f1	51		 push	 ecx
  000f2	51		 push	 ecx
  000f3	51		 push	 ecx
  000f4	66 89 4f 38	 mov	 WORD PTR [edi+56], cx
  000f8	66 89 8f 0c 01
	00 00		 mov	 WORD PTR [edi+268], cx
  000ff	8d 4f 30	 lea	 ecx, DWORD PTR [edi+48]
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEE@Z ; CItem::Convert

; 121  : 			this->DefClass[Class].Equipment[1].Convert(def_type, 0,0,0,0,0,0,0,-1,CURRENT_DB_VERSION);

  00108	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
$LN25@SetEquipme:
  0010e	6a 03		 push	 3
  00110	68 ff 00 00 00	 push	 255			; 000000ffH
  00115	6a 00		 push	 0
  00117	6a 00		 push	 0
  00119	6a 00		 push	 0
  0011b	6a 00		 push	 0
  0011d	6a 00		 push	 0
  0011f	6a 00		 push	 0
  00121	6a 00		 push	 0
  00123	56		 push	 esi
  00124	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEPAEEE@Z ; CItem::Convert
$LN15@SetEquipme:
  00129	5f		 pop	 edi
  0012a	5e		 pop	 esi
  0012b	5b		 pop	 ebx

; 127  : 		}
; 128  : 	}
; 129  : }

  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 04 00	 ret	 4
  00132	66 90		 npad	 2
$LN27@SetEquipme:
  00134	00 00 00 00	 DD	 $LN7@SetEquipme
  00138	00 00 00 00	 DD	 $LN8@SetEquipme
  0013c	00 00 00 00	 DD	 $LN9@SetEquipme
  00140	00 00 00 00	 DD	 $LN9@SetEquipme
?SetEquipment@classdef@@QAEXH@Z ENDP			; classdef::SetEquipment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z
_TEXT	SEGMENT
_Class$ = 8						; size = 4
_Str$ = 12						; size = 4
_Dex$ = 16						; size = 4
_Vit$ = 20						; size = 4
_Energy$ = 24						; size = 4
_Life$ = 28						; size = 4
_Mana$ = 32						; size = 4
_LevelLife$ = 36					; size = 4
_LevelMana$ = 40					; size = 4
_VitalityToLife$ = 44					; size = 4
_EnergyToMana$ = 48					; size = 4
_Leadership$ = 52					; size = 4
?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z PROC		; classdef::SetCharacter, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 	this->DefClass[Class].Experience = 0;
; 52   : 
; 53   : 	this->DefClass[Class].Strength = Str;
; 54   : 	this->DefClass[Class].Dexterity = Dex;
; 55   : 	this->DefClass[Class].Vitality = Vit;
; 56   : 	this->DefClass[Class].Energy = Energy;
; 57   : 
; 58   : 	this->DefClass[Class].Life = Life;

  00003	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _Life$[ebp]
  00008	66 8b 45 0c	 mov	 ax, WORD PTR _Str$[ebp]
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _Class$[ebp]
  00010	69 d6 c8 0b 00
	00		 imul	 edx, esi, 3016

; 59   : 	this->DefClass[Class].MaxLife = Life;
; 60   : 	this->DefClass[Class].LevelLife = LevelLife;
; 61   : 	this->DefClass[Class].Mana = Mana;
; 62   : 	this->DefClass[Class].MaxMana = Mana;
; 63   : 	this->DefClass[Class].LevelMana = LevelMana;
; 64   : 
; 65   : 	this->DefClass[Class].VitalityToLife = VitalityToLife;
; 66   : 	this->DefClass[Class].EnergyToMana = EnergyToMana;
; 67   : 
; 68   : 	this->DefClass[Class].Leadership = Leadership;
; 69   : 
; 70   : 	this->SetEquipment(Class);

  00016	56		 push	 esi
  00017	f3 0f 11 44 0a
	14		 movss	 DWORD PTR [edx+ecx+20], xmm0
  0001d	f3 0f 11 44 0a
	18		 movss	 DWORD PTR [edx+ecx+24], xmm0
  00023	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _LevelLife$[ebp]
  00028	66 89 44 0a 08	 mov	 WORD PTR [edx+ecx+8], ax
  0002d	66 8b 45 10	 mov	 ax, WORD PTR _Dex$[ebp]
  00031	f3 0f 11 44 0a
	10		 movss	 DWORD PTR [edx+ecx+16], xmm0
  00037	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _Mana$[ebp]
  0003c	66 89 44 0a 0a	 mov	 WORD PTR [edx+ecx+10], ax
  00041	66 8b 45 14	 mov	 ax, WORD PTR _Vit$[ebp]
  00045	f3 0f 11 44 0a
	20		 movss	 DWORD PTR [edx+ecx+32], xmm0
  0004b	f3 0f 11 44 0a
	24		 movss	 DWORD PTR [edx+ecx+36], xmm0
  00051	f3 0f 10 45 28	 movss	 xmm0, DWORD PTR _LevelMana$[ebp]
  00056	66 89 44 0a 0c	 mov	 WORD PTR [edx+ecx+12], ax
  0005b	66 8b 45 18	 mov	 ax, WORD PTR _Energy$[ebp]
  0005f	f3 0f 11 44 0a
	1c		 movss	 DWORD PTR [edx+ecx+28], xmm0
  00065	f3 0f 10 45 2c	 movss	 xmm0, DWORD PTR _VitalityToLife$[ebp]
  0006a	66 89 44 0a 0e	 mov	 WORD PTR [edx+ecx+14], ax
  0006f	66 8b 45 34	 mov	 ax, WORD PTR _Leadership$[ebp]
  00073	f3 0f 11 44 0a
	28		 movss	 DWORD PTR [edx+ecx+40], xmm0
  00079	f3 0f 10 45 30	 movss	 xmm0, DWORD PTR _EnergyToMana$[ebp]
  0007e	c7 44 0a 04 00
	00 00 00	 mov	 DWORD PTR [edx+ecx+4], 0
  00086	f3 0f 11 44 0a
	2c		 movss	 DWORD PTR [edx+ecx+44], xmm0
  0008c	66 89 84 0a c8
	0b 00 00	 mov	 WORD PTR [edx+ecx+3016], ax
  00094	e8 00 00 00 00	 call	 ?SetEquipment@classdef@@QAEXH@Z ; classdef::SetEquipment
  00099	5e		 pop	 esi

; 71   : }

  0009a	5d		 pop	 ebp
  0009b	c2 30 00	 ret	 48			; 00000030H
?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ENDP		; classdef::SetCharacter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ?Init@classdef@@QAEXXZ
_TEXT	SEGMENT
?Init@classdef@@QAEXXZ PROC				; classdef::Init, COMDAT
; _this$ = ecx

; 26   : {

  00000	56		 push	 esi

; 27   : #if (ENABLETEST_ZTLUA == 1)
; 28   : 	ZTLuaManager* LuaMng = new ZTLuaManager(FILE_LUA_CHARACTERBASICS);
; 29   : 	LuaMng->Read("DefaultClassInformation");
; 30   : 	for (int Class = 0; Class < MAX_TYPE_PLAYER; Class++) {
; 31   : 		luabridge::LuaRef ClassInfo = (*LuaMng->getRef())[Class];
; 32   : 		this->SetCharacter(Class, ClassInfo["Strength"].cast<int>(), ClassInfo["Dexterity"].cast<int>(), 
; 33   : 			ClassInfo["Vitality"].cast<int>(), ClassInfo["Energy"].cast<int>(), ClassInfo["Life"].cast<float>(), 
; 34   : 			ClassInfo["Mana"].cast<float>(), ClassInfo["LifePerLevel"].cast<float>(), ClassInfo["ManaPerLevel"].cast<float>(), 
; 35   : 			ClassInfo["VitalityToLife"].cast<float>(), ClassInfo["EnergyToMana"].cast<float>(), ClassInfo["Command"].cast<int>());
; 36   : 	}
; 37   : 	ZTLuaManager::Delete(LuaMng);
; 38   : #else
; 39   : 	this->SetCharacter( 0, 18, 18, 15, 30, 60.0, 60.0, 1.0, 2.0, 2.0, 2.0, 0);

  00001	6a 00		 push	 0
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	8b f1		 mov	 esi, ecx
  00008	c7 44 24 14 00
	00 00 40	 mov	 DWORD PTR [esp+20], 1073741824 ; 40000000H
  00010	c7 44 24 10 00
	00 00 40	 mov	 DWORD PTR [esp+16], 1073741824 ; 40000000H
  00018	c7 44 24 0c 00
	00 00 40	 mov	 DWORD PTR [esp+12], 1073741824 ; 40000000H
  00020	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  00028	c7 44 24 04 00
	00 70 42	 mov	 DWORD PTR [esp+4], 1114636288 ; 42700000H
  00030	c7 04 24 00 00
	70 42		 mov	 DWORD PTR [esp], 1114636288 ; 42700000H
  00037	6a 1e		 push	 30			; 0000001eH
  00039	6a 0f		 push	 15			; 0000000fH
  0003b	6a 12		 push	 18			; 00000012H
  0003d	6a 12		 push	 18			; 00000012H
  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 40   : 	this->SetCharacter( 1, 28, 20, 25, 10, 110.0, 20.0, 2.0, 0.5, 3.0, 1.0, 0);

  00046	6a 00		 push	 0
  00048	83 ec 18	 sub	 esp, 24			; 00000018H
  0004b	8b ce		 mov	 ecx, esi
  0004d	c7 44 24 14 00
	00 80 3f	 mov	 DWORD PTR [esp+20], 1065353216 ; 3f800000H
  00055	c7 44 24 10 00
	00 40 40	 mov	 DWORD PTR [esp+16], 1077936128 ; 40400000H
  0005d	c7 44 24 0c 00
	00 00 3f	 mov	 DWORD PTR [esp+12], 1056964608 ; 3f000000H
  00065	c7 44 24 08 00
	00 00 40	 mov	 DWORD PTR [esp+8], 1073741824 ; 40000000H
  0006d	c7 44 24 04 00
	00 a0 41	 mov	 DWORD PTR [esp+4], 1101004800 ; 41a00000H
  00075	c7 04 24 00 00
	dc 42		 mov	 DWORD PTR [esp], 1121714176 ; 42dc0000H
  0007c	6a 0a		 push	 10			; 0000000aH
  0007e	6a 19		 push	 25			; 00000019H
  00080	6a 14		 push	 20			; 00000014H
  00082	6a 1c		 push	 28			; 0000001cH
  00084	6a 01		 push	 1
  00086	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 41   : 	this->SetCharacter( 2, 22, 25, 20, 15, 80.0, 30.0, 1.0, 1.5, 2.0, 1.5, 0);

  0008b	6a 00		 push	 0
  0008d	83 ec 18	 sub	 esp, 24			; 00000018H
  00090	8b ce		 mov	 ecx, esi
  00092	c7 44 24 14 00
	00 c0 3f	 mov	 DWORD PTR [esp+20], 1069547520 ; 3fc00000H
  0009a	c7 44 24 10 00
	00 00 40	 mov	 DWORD PTR [esp+16], 1073741824 ; 40000000H
  000a2	c7 44 24 0c 00
	00 c0 3f	 mov	 DWORD PTR [esp+12], 1069547520 ; 3fc00000H
  000aa	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000b2	c7 44 24 04 00
	00 f0 41	 mov	 DWORD PTR [esp+4], 1106247680 ; 41f00000H
  000ba	c7 04 24 00 00
	a0 42		 mov	 DWORD PTR [esp], 1117782016 ; 42a00000H
  000c1	6a 0f		 push	 15			; 0000000fH
  000c3	6a 14		 push	 20			; 00000014H
  000c5	6a 19		 push	 25			; 00000019H
  000c7	6a 16		 push	 22			; 00000016H
  000c9	6a 02		 push	 2
  000cb	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 42   : 	this->SetCharacter( 3, 26, 26, 26, 26, 110.0, 60.0, 1.0, 1.0, 2.0, 2.0, 0);

  000d0	6a 00		 push	 0
  000d2	83 ec 18	 sub	 esp, 24			; 00000018H
  000d5	8b ce		 mov	 ecx, esi
  000d7	c7 44 24 14 00
	00 00 40	 mov	 DWORD PTR [esp+20], 1073741824 ; 40000000H
  000df	c7 44 24 10 00
	00 00 40	 mov	 DWORD PTR [esp+16], 1073741824 ; 40000000H
  000e7	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  000ef	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  000f7	c7 44 24 04 00
	00 70 42	 mov	 DWORD PTR [esp+4], 1114636288 ; 42700000H
  000ff	c7 04 24 00 00
	dc 42		 mov	 DWORD PTR [esp], 1121714176 ; 42dc0000H
  00106	6a 1a		 push	 26			; 0000001aH
  00108	6a 1a		 push	 26			; 0000001aH
  0010a	6a 1a		 push	 26			; 0000001aH
  0010c	6a 1a		 push	 26			; 0000001aH
  0010e	6a 03		 push	 3
  00110	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 43   : 	this->SetCharacter( 4, 26, 20, 20, 15, 90.0, 40.0, 1.5, 1.0, 2.0, 1.5, 25);

  00115	6a 19		 push	 25			; 00000019H
  00117	83 ec 18	 sub	 esp, 24			; 00000018H
  0011a	8b ce		 mov	 ecx, esi
  0011c	c7 44 24 14 00
	00 c0 3f	 mov	 DWORD PTR [esp+20], 1069547520 ; 3fc00000H
  00124	c7 44 24 10 00
	00 00 40	 mov	 DWORD PTR [esp+16], 1073741824 ; 40000000H
  0012c	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  00134	c7 44 24 08 00
	00 c0 3f	 mov	 DWORD PTR [esp+8], 1069547520 ; 3fc00000H
  0013c	c7 44 24 04 00
	00 20 42	 mov	 DWORD PTR [esp+4], 1109393408 ; 42200000H
  00144	c7 04 24 00 00
	b4 42		 mov	 DWORD PTR [esp], 1119092736 ; 42b40000H
  0014b	6a 0f		 push	 15			; 0000000fH
  0014d	6a 14		 push	 20			; 00000014H
  0014f	6a 14		 push	 20			; 00000014H
  00151	6a 1a		 push	 26			; 0000001aH
  00153	6a 04		 push	 4
  00155	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 44   : 	this->SetCharacter( 5, 21, 21, 18, 23, 70.0f, 40.0f, 1.0f, 1.5f, 2.0f, 1.7f, 0);

  0015a	6a 00		 push	 0
  0015c	83 ec 18	 sub	 esp, 24			; 00000018H
  0015f	c7 44 24 14 9a
	99 d9 3f	 mov	 DWORD PTR [esp+20], 1071225242 ; 3fd9999aH
  00167	c7 44 24 10 00
	00 00 40	 mov	 DWORD PTR [esp+16], 1073741824 ; 40000000H
  0016f	c7 44 24 0c 00
	00 c0 3f	 mov	 DWORD PTR [esp+12], 1069547520 ; 3fc00000H
  00177	c7 44 24 08 00
	00 80 3f	 mov	 DWORD PTR [esp+8], 1065353216 ; 3f800000H
  0017f	8b ce		 mov	 ecx, esi
  00181	c7 44 24 04 00
	00 20 42	 mov	 DWORD PTR [esp+4], 1109393408 ; 42200000H
  00189	c7 04 24 00 00
	8c 42		 mov	 DWORD PTR [esp], 1116471296 ; 428c0000H
  00190	6a 17		 push	 23			; 00000017H
  00192	6a 12		 push	 18			; 00000012H
  00194	6a 15		 push	 21			; 00000015H
  00196	6a 15		 push	 21			; 00000015H
  00198	6a 05		 push	 5
  0019a	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter

; 45   : 	this->SetCharacter( 6, 32, 27, 25, 20, 100.0f, 40.0f, 1.3f, 1.0f, 2.0f, 1.3f, 0);

  0019f	6a 00		 push	 0
  001a1	83 ec 18	 sub	 esp, 24			; 00000018H
  001a4	8b ce		 mov	 ecx, esi
  001a6	c7 44 24 14 66
	66 a6 3f	 mov	 DWORD PTR [esp+20], 1067869798 ; 3fa66666H
  001ae	c7 44 24 10 00
	00 00 40	 mov	 DWORD PTR [esp+16], 1073741824 ; 40000000H
  001b6	c7 44 24 0c 00
	00 80 3f	 mov	 DWORD PTR [esp+12], 1065353216 ; 3f800000H
  001be	c7 44 24 08 66
	66 a6 3f	 mov	 DWORD PTR [esp+8], 1067869798 ; 3fa66666H
  001c6	c7 44 24 04 00
	00 20 42	 mov	 DWORD PTR [esp+4], 1109393408 ; 42200000H
  001ce	c7 04 24 00 00
	c8 42		 mov	 DWORD PTR [esp], 1120403456 ; 42c80000H
  001d5	6a 14		 push	 20			; 00000014H
  001d7	6a 19		 push	 25			; 00000019H
  001d9	6a 1b		 push	 27			; 0000001bH
  001db	6a 20		 push	 32			; 00000020H
  001dd	6a 06		 push	 6
  001df	e8 00 00 00 00	 call	 ?SetCharacter@classdef@@QAEXHHHHHMMMMMMH@Z ; classdef::SetCharacter
  001e4	5e		 pop	 esi

; 46   : #endif
; 47   : }

  001e5	c3		 ret	 0
?Init@classdef@@QAEXXZ ENDP				; classdef::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ??1classdef@@UAE@XZ
_TEXT	SEGMENT
??1classdef@@UAE@XZ PROC				; classdef::~classdef, COMDAT
; _this$ = ecx

; 20   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7classdef@@6B@

; 21   : 	return;
; 22   : }

  00006	c3		 ret	 0
??1classdef@@UAE@XZ ENDP				; classdef::~classdef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ??0classdef@@QAE@XZ
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
___n$1$ = -4						; size = 4
??0classdef@@QAE@XZ PROC				; classdef::classdef, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d f8	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000c	8d 59 30	 lea	 ebx, DWORD PTR [ecx+48]
  0000f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7classdef@@6B@
  00015	b8 07 00 00 00	 mov	 eax, 7
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@classdef:
  00020	48		 dec	 eax
  00021	8b fb		 mov	 edi, ebx
  00023	89 45 fc	 mov	 DWORD PTR ___n$1$[ebp], eax
  00026	be 0e 00 00 00	 mov	 esi, 14			; 0000000eH
  0002b	0f 1f 44 00 00	 npad	 5
$LL10@classdef:
  00030	8b cf		 mov	 ecx, edi
  00032	e8 00 00 00 00	 call	 ??0CItem@@QAE@XZ	; CItem::CItem
  00037	81 c7 d4 00 00
	00		 add	 edi, 212		; 000000d4H
  0003d	83 ee 01	 sub	 esi, 1
  00040	75 ee		 jne	 SHORT $LL10@classdef
  00042	8b 45 fc	 mov	 eax, DWORD PTR ___n$1$[ebp]
  00045	81 c3 c8 0b 00
	00		 add	 ebx, 3016		; 00000bc8H
  0004b	85 c0		 test	 eax, eax
  0004d	75 d1		 jne	 SHORT $LL4@classdef

; 16   : 
; 17   : }

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$1$[ebp]
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
??0classdef@@QAE@XZ ENDP				; classdef::classdef
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0DEFAULTCLASSTYPE@@QAE@XZ
_TEXT	SEGMENT
??0DEFAULTCLASSTYPE@@QAE@XZ PROC			; DEFAULTCLASSTYPE::DEFAULTCLASSTYPE, COMDAT
; _this$ = ecx
  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	be 0e 00 00 00	 mov	 esi, 14			; 0000000eH
  0000a	8d 7b 2c	 lea	 edi, DWORD PTR [ebx+44]
  0000d	0f 1f 00	 npad	 3
$LL4@DEFAULTCLA:
  00010	8b cf		 mov	 ecx, edi
  00012	e8 00 00 00 00	 call	 ??0CItem@@QAE@XZ	; CItem::CItem
  00017	81 c7 d4 00 00
	00		 add	 edi, 212		; 000000d4H
  0001d	83 ee 01	 sub	 esi, 1
  00020	75 ee		 jne	 SHORT $LL4@DEFAULTCLA
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	8b c3		 mov	 eax, ebx
  00026	5b		 pop	 ebx
  00027	c3		 ret	 0
??0DEFAULTCLASSTYPE@@QAE@XZ ENDP			; DEFAULTCLASSTYPE::DEFAULTCLASSTYPE
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\common\classdef.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
