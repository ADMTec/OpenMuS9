; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\PCBangUserSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1_PCBANG_TIME_CLASS@@UAE@XZ			; _PCBANG_TIME_CLASS::~_PCBANG_TIME_CLASS
PUBLIC	?GetDayOfTheWeek@_PCBANG_TIME_CLASS@@QAEHHHH@Z	; _PCBANG_TIME_CLASS::GetDayOfTheWeek
PUBLIC	?GetEnable@_PCBANG_TIME_CLASS@@QAEEH@Z		; _PCBANG_TIME_CLASS::GetEnable
PUBLIC	?GetDayCount@_PCBANG_TIME_CLASS@@QAEHHH@Z	; _PCBANG_TIME_CLASS::GetDayCount
PUBLIC	?CalcChangeDate@_PCBANG_TIME_CLASS@@QAEXHAAH00@Z ; _PCBANG_TIME_CLASS::CalcChangeDate
PUBLIC	?CompareDate@_PCBANG_TIME_CLASS@@QAEHHHHHHHHH@Z	; _PCBANG_TIME_CLASS::CompareDate
PUBLIC	??_G_PCBANG_TIME_CLASS@@UAEPAXI@Z		; _PCBANG_TIME_CLASS::`scalar deleting destructor'
PUBLIC	??0CPCBangPointUserSystem@@QAE@XZ		; CPCBangPointUserSystem::CPCBangPointUserSystem
PUBLIC	??1CPCBangPointUserSystem@@UAE@XZ		; CPCBangPointUserSystem::~CPCBangPointUserSystem
PUBLIC	?Set@CPCBangPointUserSystem@@QAEXHHHHHHHH@Z	; CPCBangPointUserSystem::Set
PUBLIC	?SetSwitch0@CPCBangPointUserSystem@@QAEXXZ	; CPCBangPointUserSystem::SetSwitch0
PUBLIC	?SetChange@CPCBangPointUserSystem@@QAEHXZ	; CPCBangPointUserSystem::SetChange
PUBLIC	??_GCPCBangPointUserSystem@@UAEPAXI@Z		; CPCBangPointUserSystem::`scalar deleting destructor'
PUBLIC	??_7_PCBANG_TIME_CLASS@@6B@			; _PCBANG_TIME_CLASS::`vftable'
PUBLIC	??_7CPCBangPointUserSystem@@6B@			; CPCBangPointUserSystem::`vftable'
PUBLIC	??_R4_PCBANG_TIME_CLASS@@6B@			; _PCBANG_TIME_CLASS::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_PCBANG_TIME_CLASS@@@8			; _PCBANG_TIME_CLASS `RTTI Type Descriptor'
PUBLIC	??_R3_PCBANG_TIME_CLASS@@8			; _PCBANG_TIME_CLASS::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_PCBANG_TIME_CLASS@@8			; _PCBANG_TIME_CLASS::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_PCBANG_TIME_CLASS@@8		; _PCBANG_TIME_CLASS::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CPCBangPointUserSystem@@6B@		; CPCBangPointUserSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPCBangPointUserSystem@@@8		; CPCBangPointUserSystem `RTTI Type Descriptor'
PUBLIC	??_R3CPCBangPointUserSystem@@8			; CPCBangPointUserSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPCBangPointUserSystem@@8			; CPCBangPointUserSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPCBangPointUserSystem@@8		; CPCBangPointUserSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	??_E_PCBANG_TIME_CLASS@@UAEPAXI@Z:PROC		; _PCBANG_TIME_CLASS::`vector deleting destructor'
EXTRN	??_ECPCBangPointUserSystem@@UAEPAXI@Z:PROC	; CPCBangPointUserSystem::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CPCBangPointUserSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPCBangPointUserSystem@@8 DD FLAT:??_R0?AVCPCBangPointUserSystem@@@8 ; CPCBangPointUserSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPCBangPointUserSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2CPCBangPointUserSystem@@8
rdata$r	SEGMENT
??_R2CPCBangPointUserSystem@@8 DD FLAT:??_R1A@?0A@EA@CPCBangPointUserSystem@@8 ; CPCBangPointUserSystem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_PCBANG_TIME_CLASS@@8
rdata$r	ENDS
;	COMDAT ??_R3CPCBangPointUserSystem@@8
rdata$r	SEGMENT
??_R3CPCBangPointUserSystem@@8 DD 00H			; CPCBangPointUserSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CPCBangPointUserSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPCBangPointUserSystem@@@8
data$r	SEGMENT
??_R0?AVCPCBangPointUserSystem@@@8 DD FLAT:??_7type_info@@6B@ ; CPCBangPointUserSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPCBangPointUserSystem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CPCBangPointUserSystem@@6B@
rdata$r	SEGMENT
??_R4CPCBangPointUserSystem@@6B@ DD 00H			; CPCBangPointUserSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPCBangPointUserSystem@@@8
	DD	FLAT:??_R3CPCBangPointUserSystem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_PCBANG_TIME_CLASS@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_PCBANG_TIME_CLASS@@8 DD FLAT:??_R0?AV_PCBANG_TIME_CLASS@@@8 ; _PCBANG_TIME_CLASS::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_PCBANG_TIME_CLASS@@8
rdata$r	ENDS
;	COMDAT ??_R2_PCBANG_TIME_CLASS@@8
rdata$r	SEGMENT
??_R2_PCBANG_TIME_CLASS@@8 DD FLAT:??_R1A@?0A@EA@_PCBANG_TIME_CLASS@@8 ; _PCBANG_TIME_CLASS::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_PCBANG_TIME_CLASS@@8
rdata$r	SEGMENT
??_R3_PCBANG_TIME_CLASS@@8 DD 00H			; _PCBANG_TIME_CLASS::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_PCBANG_TIME_CLASS@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_PCBANG_TIME_CLASS@@@8
data$r	SEGMENT
??_R0?AV_PCBANG_TIME_CLASS@@@8 DD FLAT:??_7type_info@@6B@ ; _PCBANG_TIME_CLASS `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_PCBANG_TIME_CLASS@@', 00H
data$r	ENDS
;	COMDAT ??_R4_PCBANG_TIME_CLASS@@6B@
rdata$r	SEGMENT
??_R4_PCBANG_TIME_CLASS@@6B@ DD 00H			; _PCBANG_TIME_CLASS::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_PCBANG_TIME_CLASS@@@8
	DD	FLAT:??_R3_PCBANG_TIME_CLASS@@8
rdata$r	ENDS
;	COMDAT ??_7CPCBangPointUserSystem@@6B@
CONST	SEGMENT
??_7CPCBangPointUserSystem@@6B@ DD FLAT:??_R4CPCBangPointUserSystem@@6B@ ; CPCBangPointUserSystem::`vftable'
	DD	FLAT:??_ECPCBangPointUserSystem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7_PCBANG_TIME_CLASS@@6B@
CONST	SEGMENT
??_7_PCBANG_TIME_CLASS@@6B@ DD FLAT:??_R4_PCBANG_TIME_CLASS@@6B@ ; _PCBANG_TIME_CLASS::`vftable'
	DD	FLAT:??_E_PCBANG_TIME_CLASS@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCPCBangPointUserSystem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPCBangPointUserSystem@@UAEPAXI@Z PROC		; CPCBangPointUserSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CPCBangPointUserSystem@@UAE@XZ ; CPCBangPointUserSystem::~CPCBangPointUserSystem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 38		 push	 56			; 00000038H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCPCBangPointUserSystem@@UAEPAXI@Z ENDP		; CPCBangPointUserSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?SetChange@CPCBangPointUserSystem@@QAEHXZ
_TEXT	SEGMENT
tv224 = -40						; size = 4
tv227 = -36						; size = 4
_iYear$ = -32						; size = 4
_iMonth$ = -28						; size = 4
_iDay$ = -24						; size = 4
_pTime$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?SetChange@CPCBangPointUserSystem@@QAEHXZ PROC		; CPCBangPointUserSystem::SetChange, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 140  : 	int iYear;
; 141  : 	int iMonth;
; 142  : 	int iDay;
; 143  : 	int iHour;
; 144  : 
; 145  : 	if( m_bSwitch == 0 )

  00013	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  00017	75 14		 jne	 SHORT $LN2@SetChange

; 146  : 	{
; 147  : 		return true;

  00019	b8 01 00 00 00	 mov	 eax, 1
  0001e	5e		 pop	 esi

; 182  : 	}
; 183  : 	else
; 184  : 	{
; 185  : 		return 1;
; 186  : 	}
; 187  : 
; 188  : }

  0001f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00022	33 cd		 xor	 ecx, ebp
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN2@SetChange:
  0002d	57		 push	 edi

; 148  : 	}
; 149  : 
; 150  : 	SYSTEMTIME pTime;
; 151  : 	GetLocalTime(&pTime);

  0002e	8d 45 ec	 lea	 eax, DWORD PTR _pTime$[ebp]
  00031	50		 push	 eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 152  : 
; 153  : 	if( pSystime.wYear == pTime.wYear &&
; 154  : 		pSystime.wMonth == pTime.wMonth &&
; 155  : 		pSystime.wDay == pTime.wDay &&

  00038	66 8b 7d ec	 mov	 di, WORD PTR _pTime$[ebp]
  0003c	66 8b 4d f4	 mov	 cx, WORD PTR _pTime$[ebp+8]
  00040	66 8b 45 f2	 mov	 ax, WORD PTR _pTime$[ebp+6]
  00044	66 8b 55 ee	 mov	 dx, WORD PTR _pTime$[ebp+2]
  00048	66 39 7e 24	 cmp	 WORD PTR [esi+36], di
  0004c	75 27		 jne	 SHORT $LN3@SetChange
  0004e	66 39 56 26	 cmp	 WORD PTR [esi+38], dx
  00052	75 21		 jne	 SHORT $LN3@SetChange
  00054	66 39 46 2a	 cmp	 WORD PTR [esi+42], ax
  00058	75 1b		 jne	 SHORT $LN3@SetChange
  0005a	66 39 4e 2c	 cmp	 WORD PTR [esi+44], cx
  0005e	75 15		 jne	 SHORT $LN3@SetChange

; 156  : 		pSystime.wHour == pTime.wHour )
; 157  : 	{
; 158  : 		return true;

  00060	5f		 pop	 edi
  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	5e		 pop	 esi

; 182  : 	}
; 183  : 	else
; 184  : 	{
; 185  : 		return 1;
; 186  : 	}
; 187  : 
; 188  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	33 cd		 xor	 ecx, ebp
  0006c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
$LN3@SetChange:

; 159  : 	}
; 160  : 
; 161  : 	pSystime = pTime;

  00075	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _pTime$[ebp]

; 162  : 
; 163  : 	iYear = pTime.wYear;
; 164  : 	iMonth = pTime.wMonth;
; 165  : 	iDay = pTime.wDay;
; 166  : 	iHour = m_iResetHour;
; 167  : 
; 168  : 	if( m_iResetHour > pTime.wHour )

  00079	0f b7 c9	 movzx	 ecx, cx
  0007c	53		 push	 ebx
  0007d	0f b7 c0	 movzx	 eax, ax
  00080	0f b7 ff	 movzx	 edi, di
  00083	0f b7 da	 movzx	 ebx, dx
  00086	0f 11 46 24	 movups	 XMMWORD PTR [esi+36], xmm0
  0008a	89 7d e0	 mov	 DWORD PTR _iYear$[ebp], edi
  0008d	89 5d e4	 mov	 DWORD PTR _iMonth$[ebp], ebx
  00090	89 45 dc	 mov	 DWORD PTR tv227[ebp], eax
  00093	89 45 e8	 mov	 DWORD PTR _iDay$[ebp], eax
  00096	89 4d d8	 mov	 DWORD PTR tv224[ebp], ecx
  00099	39 4e 18	 cmp	 DWORD PTR [esi+24], ecx
  0009c	7e 04		 jle	 SHORT $LN4@SetChange

; 169  : 	{
; 170  : 		iDay--;

  0009e	48		 dec	 eax
  0009f	89 45 e8	 mov	 DWORD PTR _iDay$[ebp], eax
$LN4@SetChange:

; 171  : 	}
; 172  : 
; 173  : 	this->CalcChangeDate(this->m_iResetDayOfWeek,iYear,iMonth,iDay);

  000a2	8d 45 e8	 lea	 eax, DWORD PTR _iDay$[ebp]
  000a5	8b ce		 mov	 ecx, esi
  000a7	50		 push	 eax
  000a8	8d 45 e4	 lea	 eax, DWORD PTR _iMonth$[ebp]
  000ab	50		 push	 eax
  000ac	8d 45 e0	 lea	 eax, DWORD PTR _iYear$[ebp]
  000af	50		 push	 eax
  000b0	ff 76 14	 push	 DWORD PTR [esi+20]
  000b3	e8 00 00 00 00	 call	 ?CalcChangeDate@_PCBANG_TIME_CLASS@@QAEXHAAH00@Z ; _PCBANG_TIME_CLASS::CalcChangeDate

; 174  : 
; 175  : 	if( this->CompareDate(this->m_iYear,this->m_iMonth,this->m_iDay,this->m_iHour,iYear,iMonth,iDay,iHour) < 0 )

  000b8	ff 76 18	 push	 DWORD PTR [esi+24]
  000bb	8b ce		 mov	 ecx, esi
  000bd	ff 75 e8	 push	 DWORD PTR _iDay$[ebp]
  000c0	ff 75 e4	 push	 DWORD PTR _iMonth$[ebp]
  000c3	ff 75 e0	 push	 DWORD PTR _iYear$[ebp]
  000c6	ff 76 10	 push	 DWORD PTR [esi+16]
  000c9	ff 76 0c	 push	 DWORD PTR [esi+12]
  000cc	ff 76 08	 push	 DWORD PTR [esi+8]
  000cf	ff 76 04	 push	 DWORD PTR [esi+4]
  000d2	e8 00 00 00 00	 call	 ?CompareDate@_PCBANG_TIME_CLASS@@QAEHHHHHHHHH@Z ; _PCBANG_TIME_CLASS::CompareDate
  000d7	85 c0		 test	 eax, eax
  000d9	79 28		 jns	 SHORT $LN5@SetChange

; 176  : 	{
; 177  : 		m_iYear = pTime.wYear;
; 178  : 		m_iMonth = pTime.wMonth;
; 179  : 		m_iDay = pTime.wDay;

  000db	8b 45 dc	 mov	 eax, DWORD PTR tv227[ebp]
  000de	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  000e1	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 180  : 		m_iHour = pTime.wHour;

  000e4	8b 45 d8	 mov	 eax, DWORD PTR tv224[ebp]
  000e7	5b		 pop	 ebx
  000e8	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  000eb	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 181  : 		return 2;

  000ee	b8 02 00 00 00	 mov	 eax, 2
  000f3	5f		 pop	 edi
  000f4	5e		 pop	 esi

; 182  : 	}
; 183  : 	else
; 184  : 	{
; 185  : 		return 1;
; 186  : 	}
; 187  : 
; 188  : }

  000f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
$LN5@SetChange:
  00103	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00106	b8 01 00 00 00	 mov	 eax, 1
  0010b	5b		 pop	 ebx
  0010c	5f		 pop	 edi
  0010d	33 cd		 xor	 ecx, ebp
  0010f	5e		 pop	 esi
  00110	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
?SetChange@CPCBangPointUserSystem@@QAEHXZ ENDP		; CPCBangPointUserSystem::SetChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?SetSwitch0@CPCBangPointUserSystem@@QAEXXZ
_TEXT	SEGMENT
?SetSwitch0@CPCBangPointUserSystem@@QAEXXZ PROC		; CPCBangPointUserSystem::SetSwitch0, COMDAT
; _this$ = ecx
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h

; 25   : 	void SetSwitch(BOOL bEnable) { m_bSwitch = bEnable;}

  00000	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp

; 136  : }

  00007	c3		 ret	 0
?SetSwitch0@CPCBangPointUserSystem@@QAEXXZ ENDP		; CPCBangPointUserSystem::SetSwitch0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h
;	COMDAT ?SetSwitch@CPCBangPointUserSystem@@QAEXH@Z
_TEXT	SEGMENT
_bEnable$ = 8						; size = 4
?SetSwitch@CPCBangPointUserSystem@@QAEXH@Z PROC		; CPCBangPointUserSystem::SetSwitch, COMDAT
; _this$ = ecx

; 25   : 	void SetSwitch(BOOL bEnable) { m_bSwitch = bEnable;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _bEnable$[ebp]
  00006	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetSwitch@CPCBangPointUserSystem@@QAEXH@Z ENDP		; CPCBangPointUserSystem::SetSwitch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?Set@CPCBangPointUserSystem@@QAEXHHHHHHHH@Z
_TEXT	SEGMENT
_iYear$ = 8						; size = 4
_iMonth$ = 12						; size = 4
_iDay$ = 16						; size = 4
_iHour$ = 20						; size = 4
_iResetDayOfWeek$ = 24					; size = 4
_iResetHour$ = 28					; size = 4
_Function$ = 32						; size = 4
_aIndex$ = 36						; size = 4
?Set@CPCBangPointUserSystem@@QAEXHHHHHHHH@Z PROC	; CPCBangPointUserSystem::Set, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 121  : 	m_iYear = iYear;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iYear$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 122  : 	m_iMonth = iMonth;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _iMonth$[ebp]
  0000c	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 123  : 	m_iDay = iDay;

  0000f	8b 45 10	 mov	 eax, DWORD PTR _iDay$[ebp]
  00012	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 124  : 	m_iHour = iHour;

  00015	8b 45 14	 mov	 eax, DWORD PTR _iHour$[ebp]
  00018	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 125  : 
; 126  : 	m_iResetDayOfWeek = iResetDayOfWeek;

  0001b	8b 45 18	 mov	 eax, DWORD PTR _iResetDayOfWeek$[ebp]
  0001e	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 127  : 	m_iResetHour = iResetHour;

  00021	8b 45 1c	 mov	 eax, DWORD PTR _iResetHour$[ebp]
  00024	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 128  : 
; 129  : 	pFunction = (void(*)(int))Function;

  00027	8b 45 20	 mov	 eax, DWORD PTR _Function$[ebp]
  0002a	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 130  : 	m_iIndex = aIndex;

  0002d	8b 45 24	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00030	89 41 34	 mov	 DWORD PTR [ecx+52], eax

; 131  : }

  00033	5d		 pop	 ebp
  00034	c2 20 00	 ret	 32			; 00000020H
?Set@CPCBangPointUserSystem@@QAEXHHHHHHHH@Z ENDP	; CPCBangPointUserSystem::Set
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ??1CPCBangPointUserSystem@@UAE@XZ
_TEXT	SEGMENT
??1CPCBangPointUserSystem@@UAE@XZ PROC			; CPCBangPointUserSystem::~CPCBangPointUserSystem, COMDAT
; _this$ = ecx
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h

; 8    : 	virtual ~_PCBANG_TIME_CLASS() {};

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7_PCBANG_TIME_CLASS@@6B@
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp

; 116  : }

  00006	c3		 ret	 0
??1CPCBangPointUserSystem@@UAE@XZ ENDP			; CPCBangPointUserSystem::~CPCBangPointUserSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ??0CPCBangPointUserSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPCBangPointUserSystem@@QAE@XZ PROC			; CPCBangPointUserSystem::CPCBangPointUserSystem, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 110  : 
; 111  : }

  00007	8b c1		 mov	 eax, ecx
  00009	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CPCBangPointUserSystem@@6B@
  0000f	c7 41 04 d0 07
	00 00		 mov	 DWORD PTR [ecx+4], 2000	; 000007d0H
  00016	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
  0001d	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [ecx+12], 1
  00024	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  0002b	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00032	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00039	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0CPCBangPointUserSystem@@QAE@XZ ENDP			; CPCBangPointUserSystem::CPCBangPointUserSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h
;	COMDAT ??_G_PCBANG_TIME_CLASS@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_PCBANG_TIME_CLASS@@UAEPAXI@Z PROC			; _PCBANG_TIME_CLASS::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx

; 8    : 	virtual ~_PCBANG_TIME_CLASS() {};

  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7_PCBANG_TIME_CLASS@@6B@
  00010	74 0b		 je	 SHORT $LN7@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN7@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G_PCBANG_TIME_CLASS@@UAEPAXI@Z ENDP			; _PCBANG_TIME_CLASS::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?CompareDate@_PCBANG_TIME_CLASS@@QAEHHHHHHHHH@Z
_TEXT	SEGMENT
_Year1$ = 8						; size = 4
_Month1$ = 12						; size = 4
_Day1$ = 16						; size = 4
_Hour1$ = 20						; size = 4
_Year2$ = 24						; size = 4
_Month2$ = 28						; size = 4
_Day2$ = 32						; size = 4
_Hour2$ = 36						; size = 4
?CompareDate@_PCBANG_TIME_CLASS@@QAEHHHHHHHHH@Z PROC	; _PCBANG_TIME_CLASS::CompareDate, COMDAT
; _this$ = ecx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 85   : 	if( Year1 == Year2 &&
; 86   : 		Month1 == Month2 &&
; 87   : 		Day1 == Day2 &&

  00003	8b 45 08	 mov	 eax, DWORD PTR _Year1$[ebp]
  00006	8b 4d 18	 mov	 ecx, DWORD PTR _Year2$[ebp]
  00009	53		 push	 ebx
  0000a	57		 push	 edi
  0000b	3b c1		 cmp	 eax, ecx
  0000d	75 3f		 jne	 SHORT $LN10@CompareDat
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _Month1$[ebp]
  00012	3b 55 1c	 cmp	 edx, DWORD PTR _Month2$[ebp]
  00015	75 33		 jne	 SHORT $LN11@CompareDat
  00017	8b 7d 10	 mov	 edi, DWORD PTR _Day1$[ebp]
  0001a	8b 5d 20	 mov	 ebx, DWORD PTR _Day2$[ebp]
  0001d	3b fb		 cmp	 edi, ebx
  0001f	75 24		 jne	 SHORT $LN13@CompareDat
  00021	8b 45 14	 mov	 eax, DWORD PTR _Hour1$[ebp]
  00024	3b 45 24	 cmp	 eax, DWORD PTR _Hour2$[ebp]
  00027	8b 45 08	 mov	 eax, DWORD PTR _Year1$[ebp]
  0002a	75 08		 jne	 SHORT $LN2@CompareDat

; 88   : 		Hour1 == Hour2 )
; 89   : 	{
; 90   : 		return false;

  0002c	5f		 pop	 edi
  0002d	33 c0		 xor	 eax, eax
  0002f	5b		 pop	 ebx

; 103  : 	}
; 104  : }

  00030	5d		 pop	 ebp
  00031	c2 20 00	 ret	 32			; 00000020H
$LN2@CompareDat:

; 91   : 	}
; 92   : 
; 93   : 	if( (Year1 == Year2 && Month1 == Month2 && Day1 == Day2 && Hour1 > Hour2) ||
; 94   : 		(Year1 == Year2 && Month1 == Month2 && Day1 > Day2) ||
; 95   : 		(Year1 == Year2 && Month1 > Month2) ||

  00034	3b fb		 cmp	 edi, ebx
  00036	75 0d		 jne	 SHORT $LN13@CompareDat
  00038	8b 45 14	 mov	 eax, DWORD PTR _Hour1$[ebp]
  0003b	3b 45 24	 cmp	 eax, DWORD PTR _Hour2$[ebp]
  0003e	8b 45 08	 mov	 eax, DWORD PTR _Year1$[ebp]
  00041	7f 0d		 jg	 SHORT $LN5@CompareDat
  00043	3b fb		 cmp	 edi, ebx
$LN13@CompareDat:
  00045	7f 09		 jg	 SHORT $LN5@CompareDat
  00047	3b 55 1c	 cmp	 edx, DWORD PTR _Month2$[ebp]
$LN11@CompareDat:
  0004a	7f 04		 jg	 SHORT $LN5@CompareDat
  0004c	3b c1		 cmp	 eax, ecx
$LN10@CompareDat:
  0004e	7e 0b		 jle	 SHORT $LN3@CompareDat
$LN5@CompareDat:
  00050	5f		 pop	 edi

; 96   : 		(Year1 > Year2) )
; 97   : 	{
; 98   : 		return true;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	5b		 pop	 ebx

; 103  : 	}
; 104  : }

  00057	5d		 pop	 ebp
  00058	c2 20 00	 ret	 32			; 00000020H
$LN3@CompareDat:
  0005b	5f		 pop	 edi

; 99   : 	}
; 100  : 	else
; 101  : 	{
; 102  : 		return -1;

  0005c	83 c8 ff	 or	 eax, -1
  0005f	5b		 pop	 ebx

; 103  : 	}
; 104  : }

  00060	5d		 pop	 ebp
  00061	c2 20 00	 ret	 32			; 00000020H
?CompareDate@_PCBANG_TIME_CLASS@@QAEHHHHHHHHH@Z ENDP	; _PCBANG_TIME_CLASS::CompareDate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?CalcChangeDate@_PCBANG_TIME_CLASS@@QAEXHAAH00@Z
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
tv169 = -4						; size = 4
_iResetDayOfWeek$ = 8					; size = 4
_iYear$ = 12						; size = 4
_iMonth$ = 16						; size = 4
_iDay$ = 20						; size = 4
?CalcChangeDate@_PCBANG_TIME_CLASS@@QAEXHAAH00@Z PROC	; _PCBANG_TIME_CLASS::CalcChangeDate, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 59   : 	int iDayOfTheWeek = GetDayOfTheWeek(iYear,iMonth,iDay);

  00006	8b 45 14	 mov	 eax, DWORD PTR _iDay$[ebp]
  00009	53		 push	 ebx
  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR _iYear$[ebp]
  0000d	56		 push	 esi
  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8b 45 10	 mov	 eax, DWORD PTR _iMonth$[ebp]
  00013	57		 push	 edi
  00014	56		 push	 esi
  00015	89 4d f8	 mov	 DWORD PTR _this$1$[ebp], ecx
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	50		 push	 eax
  0001b	ff 33		 push	 DWORD PTR [ebx]
  0001d	89 45 fc	 mov	 DWORD PTR tv169[ebp], eax
  00020	e8 00 00 00 00	 call	 ?GetDayOfTheWeek@_PCBANG_TIME_CLASS@@QAEHHHH@Z ; _PCBANG_TIME_CLASS::GetDayOfTheWeek

; 60   : 	int iNewDayOfTheWeek = (iDayOfTheWeek+7-iResetDayOfWeek)%7;

  00025	bf 07 00 00 00	 mov	 edi, 7
  0002a	8b cf		 mov	 ecx, edi
  0002c	2b 4d 08	 sub	 ecx, DWORD PTR _iResetDayOfWeek$[ebp]
  0002f	03 c1		 add	 eax, ecx
  00031	99		 cdq
  00032	f7 ff		 idiv	 edi
  00034	8b fa		 mov	 edi, edx

; 61   : 
; 62   : 	if( iDay > iNewDayOfTheWeek )

  00036	3b f7		 cmp	 esi, edi
  00038	7e 10		 jle	 SHORT $LN2@CalcChange

; 63   : 	{
; 64   : 		iDay-= iNewDayOfTheWeek;

  0003a	8b 45 14	 mov	 eax, DWORD PTR _iDay$[ebp]
  0003d	2b f7		 sub	 esi, edi
  0003f	5f		 pop	 edi
  00040	89 30		 mov	 DWORD PTR [eax], esi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx

; 81   : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 10 00	 ret	 16			; 00000010H
$LN2@CalcChange:

; 65   : 		return;
; 66   : 	}
; 67   : 
; 68   : 	iNewDayOfTheWeek -= iDay;
; 69   : 
; 70   : 	if( iMonth == 1 )

  0004a	8b 45 fc	 mov	 eax, DWORD PTR tv169[ebp]
  0004d	2b fe		 sub	 edi, esi
  0004f	83 f8 01	 cmp	 eax, 1
  00052	75 0d		 jne	 SHORT $LN3@CalcChange

; 71   : 	{
; 72   : 		iMonth = 12;

  00054	8b 45 10	 mov	 eax, DWORD PTR _iMonth$[ebp]
  00057	c7 00 0c 00 00
	00		 mov	 DWORD PTR [eax], 12	; 0000000cH

; 73   : 		iYear -= 1;

  0005d	ff 0b		 dec	 DWORD PTR [ebx]

; 74   : 	}
; 75   : 	else

  0005f	eb 08		 jmp	 SHORT $LN4@CalcChange
$LN3@CalcChange:

; 76   : 	{
; 77   : 		iMonth -= 1;

  00061	8b 4d 10	 mov	 ecx, DWORD PTR _iMonth$[ebp]
  00064	48		 dec	 eax
  00065	89 01		 mov	 DWORD PTR [ecx], eax
  00067	8b c1		 mov	 eax, ecx
$LN4@CalcChange:

; 78   : 	}
; 79   : 
; 80   : 	iDay = GetDayCount(iYear,iMonth)-iNewDayOfTheWeek;

  00069	ff 30		 push	 DWORD PTR [eax]
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  0006e	ff 33		 push	 DWORD PTR [ebx]
  00070	e8 00 00 00 00	 call	 ?GetDayCount@_PCBANG_TIME_CLASS@@QAEHHH@Z ; _PCBANG_TIME_CLASS::GetDayCount
  00075	8b 4d 14	 mov	 ecx, DWORD PTR _iDay$[ebp]
  00078	2b c7		 sub	 eax, edi
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	89 01		 mov	 DWORD PTR [ecx], eax

; 81   : }

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 10 00	 ret	 16			; 00000010H
?CalcChangeDate@_PCBANG_TIME_CLASS@@QAEXHAAH00@Z ENDP	; _PCBANG_TIME_CLASS::CalcChangeDate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?GetDayCount@_PCBANG_TIME_CLASS@@QAEHHH@Z
_TEXT	SEGMENT
_iYear$ = 8						; size = 4
_iMonth$ = 12						; size = 4
?GetDayCount@_PCBANG_TIME_CLASS@@QAEHHH@Z PROC		; _PCBANG_TIME_CLASS::GetDayCount, COMDAT
; _this$ = ecx

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 38   : 	switch(iMonth)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iMonth$[ebp]
  00006	83 c0 fe	 add	 eax, -2			; fffffffeH
  00009	83 f8 09	 cmp	 eax, 9
  0000c	77 2d		 ja	 SHORT $LN6@GetDayCoun
  0000e	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN8@GetDayCoun[eax]
  00015	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN10@GetDayCoun[eax*4]
$LN4@GetDayCoun:

; 39   : 	{
; 40   : 	case 2:
; 41   : 		return !(!GetEnable(iYear))+28;

  0001c	ff 75 08	 push	 DWORD PTR _iYear$[ebp]
  0001f	e8 00 00 00 00	 call	 ?GetEnable@_PCBANG_TIME_CLASS@@QAEEH@Z ; _PCBANG_TIME_CLASS::GetEnable
  00024	33 c9		 xor	 ecx, ecx
  00026	84 c0		 test	 al, al
  00028	0f 95 c1	 setne	 cl
  0002b	8d 41 1c	 lea	 eax, DWORD PTR [ecx+28]

; 54   : 	}
; 55   : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
$LN5@GetDayCoun:

; 42   : 	case 4:
; 43   : 	case 6:
; 44   : 	case 9:
; 45   : 	case 11:
; 46   : 		return 30;

  00032	b8 1e 00 00 00	 mov	 eax, 30			; 0000001eH

; 54   : 	}
; 55   : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN6@GetDayCoun:

; 47   : 	case 3:
; 48   : 	case 5:
; 49   : 	case 7:
; 50   : 	case 8:
; 51   : 	case 10:
; 52   : 	default:
; 53   : 		return 31;

  0003b	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH

; 54   : 	}
; 55   : }

  00040	5d		 pop	 ebp
  00041	c2 08 00	 ret	 8
$LN10@GetDayCoun:
  00044	00 00 00 00	 DD	 $LN4@GetDayCoun
  00048	00 00 00 00	 DD	 $LN5@GetDayCoun
  0004c	00 00 00 00	 DD	 $LN6@GetDayCoun
$LN8@GetDayCoun:
  00050	00		 DB	 0
  00051	02		 DB	 2
  00052	01		 DB	 1
  00053	02		 DB	 2
  00054	01		 DB	 1
  00055	02		 DB	 2
  00056	02		 DB	 2
  00057	01		 DB	 1
  00058	02		 DB	 2
  00059	01		 DB	 1
?GetDayCount@_PCBANG_TIME_CLASS@@QAEHHH@Z ENDP		; _PCBANG_TIME_CLASS::GetDayCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?GetEnable@_PCBANG_TIME_CLASS@@QAEEH@Z
_TEXT	SEGMENT
_Level$ = 8						; size = 4
?GetEnable@_PCBANG_TIME_CLASS@@QAEEH@Z PROC		; _PCBANG_TIME_CLASS::GetEnable, COMDAT
; _this$ = ecx

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 24   : 	BOOL bRet;
; 25   : 	if( Level%400 != 0 && ( (Level%4)!= 0 || (Level%100) == 0) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _Level$[ebp]
  00007	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0000c	f7 ee		 imul	 esi
  0000e	8b ce		 mov	 ecx, esi
  00010	c1 fa 07	 sar	 edx, 7
  00013	8b c2		 mov	 eax, edx
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	03 c2		 add	 eax, edx
  0001a	69 c0 90 01 00
	00		 imul	 eax, eax, 400
  00020	2b c8		 sub	 ecx, eax
  00022	74 30		 je	 SHORT $LN2@GetEnable
  00024	8b ce		 mov	 ecx, esi
  00026	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0002c	79 05		 jns	 SHORT $LN6@GetEnable
  0002e	49		 dec	 ecx
  0002f	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00032	41		 inc	 ecx
$LN6@GetEnable:
  00033	75 18		 jne	 SHORT $LN4@GetEnable
  00035	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0003a	f7 ee		 imul	 esi
  0003c	c1 fa 05	 sar	 edx, 5
  0003f	8b c2		 mov	 eax, edx
  00041	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00044	03 c2		 add	 eax, edx
  00046	6b c0 64	 imul	 eax, eax, 100
  00049	2b f0		 sub	 esi, eax
  0004b	75 07		 jne	 SHORT $LN2@GetEnable
$LN4@GetEnable:

; 26   : 	{
; 27   : 		bRet = FALSE;
; 28   : 	}
; 29   : 	else
; 30   : 	{
; 31   : 		bRet = TRUE;
; 32   : 	}
; 33   : return bRet;

  0004d	32 c0		 xor	 al, al
  0004f	5e		 pop	 esi

; 34   : }

  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN2@GetEnable:

; 26   : 	{
; 27   : 		bRet = FALSE;
; 28   : 	}
; 29   : 	else
; 30   : 	{
; 31   : 		bRet = TRUE;
; 32   : 	}
; 33   : return bRet;

  00054	b0 01		 mov	 al, 1
  00056	5e		 pop	 esi

; 34   : }

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?GetEnable@_PCBANG_TIME_CLASS@@QAEEH@Z ENDP		; _PCBANG_TIME_CLASS::GetEnable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?GetDayOfTheWeek@_PCBANG_TIME_CLASS@@QAEHHHH@Z
_TEXT	SEGMENT
_iYear$ = 8						; size = 4
_iMonth$ = 12						; size = 4
_iDay$ = 16						; size = 4
?GetDayOfTheWeek@_PCBANG_TIME_CLASS@@QAEHHHH@Z PROC	; _PCBANG_TIME_CLASS::GetDayOfTheWeek, COMDAT
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7    : 	if( iMonth < 3 )
; 8    : 	{
; 9    : 		iYear--;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _iYear$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _iMonth$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	83 fb 03	 cmp	 ebx, 3
  0000f	7d 04		 jge	 SHORT $LN2@GetDayOfTh
  00011	49		 dec	 ecx

; 10   : 		iMonth += 12;

  00012	83 c3 0c	 add	 ebx, 12			; 0000000cH
$LN2@GetDayOfTh:

; 11   : 	}
; 12   : 
; 13   : 	int YEAR_HIGH = iYear / 100;
; 14   : 	int YEAR_LOW = iYear % 100;

  00015	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0001a	f7 e9		 imul	 ecx
  0001c	c1 fa 05	 sar	 edx, 5
  0001f	8b fa		 mov	 edi, edx
  00021	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  00024	03 fa		 add	 edi, edx

; 15   : 
; 16   : 
; 17   : 	int DayOfTheWeek = -1 + ( ((YEAR_HIGH*21)/4) + ((YEAR_LOW*5)/4) + iDay  + ((iMonth+1)*26)/10 );

  00026	6b c7 64	 imul	 eax, edi, 100
  00029	2b c8		 sub	 ecx, eax
  0002b	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]
  0002e	99		 cdq
  0002f	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  00032	83 e2 03	 and	 edx, 3
  00035	6b c9 1a	 imul	 ecx, ecx, 26
  00038	8d 34 02	 lea	 esi, DWORD PTR [edx+eax]
  0003b	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00040	f7 e9		 imul	 ecx
  00042	6b c7 15	 imul	 eax, edi, 21
  00045	c1 fe 02	 sar	 esi, 2
  00048	c1 fa 02	 sar	 edx, 2
  0004b	8b ca		 mov	 ecx, edx
  0004d	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00050	03 ca		 add	 ecx, edx
  00052	03 4d 10	 add	 ecx, DWORD PTR _iDay$[ebp]
  00055	99		 cdq
  00056	83 e2 03	 and	 edx, 3
  00059	03 c2		 add	 eax, edx
  0005b	c1 f8 02	 sar	 eax, 2
  0005e	8d 3c 0e	 lea	 edi, DWORD PTR [esi+ecx]
  00061	48		 dec	 eax
  00062	03 f8		 add	 edi, eax

; 18   : 	DayOfTheWeek = DayOfTheWeek%7;

  00064	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00069	f7 ef		 imul	 edi
  0006b	03 d7		 add	 edx, edi
  0006d	c1 fa 02	 sar	 edx, 2
  00070	8b f2		 mov	 esi, edx
  00072	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00075	03 f2		 add	 esi, edx
  00077	8d 0c f5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*8]
  0007e	2b ce		 sub	 ecx, esi
  00080	2b f9		 sub	 edi, ecx

; 19   : return DayOfTheWeek;

  00082	8b c7		 mov	 eax, edi
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx

; 20   : }

  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetDayOfTheWeek@_PCBANG_TIME_CLASS@@QAEHHHH@Z ENDP	; _PCBANG_TIME_CLASS::GetDayOfTheWeek
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h
;	COMDAT ??1_PCBANG_TIME_CLASS@@UAE@XZ
_TEXT	SEGMENT
??1_PCBANG_TIME_CLASS@@UAE@XZ PROC			; _PCBANG_TIME_CLASS::~_PCBANG_TIME_CLASS, COMDAT
; _this$ = ecx

; 8    : 	virtual ~_PCBANG_TIME_CLASS() {};

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7_PCBANG_TIME_CLASS@@6B@
  00006	c3		 ret	 0
??1_PCBANG_TIME_CLASS@@UAE@XZ ENDP			; _PCBANG_TIME_CLASS::~_PCBANG_TIME_CLASS
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.h
;	COMDAT ??0_PCBANG_TIME_CLASS@@QAE@XZ
_TEXT	SEGMENT
??0_PCBANG_TIME_CLASS@@QAE@XZ PROC			; _PCBANG_TIME_CLASS::_PCBANG_TIME_CLASS, COMDAT
; _this$ = ecx

; 7    : 	_PCBANG_TIME_CLASS() { };

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7_PCBANG_TIME_CLASS@@6B@
  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0_PCBANG_TIME_CLASS@@QAE@XZ ENDP			; _PCBANG_TIME_CLASS::_PCBANG_TIME_CLASS
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\pcbangusersystem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
