; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\StatMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CStatMng@@QAE@XZ				; CStatMng::CStatMng
PUBLIC	??1CStatMng@@UAE@XZ				; CStatMng::~CStatMng
PUBLIC	?Init@CStatMng@@QAEXXZ				; CStatMng::Init
PUBLIC	?GetMaxStat@CStatMng@@QAEHHH@Z			; CStatMng::GetMaxStat
PUBLIC	?GetMaxMinusStat@CStatMng@@QAEHHH@Z		; CStatMng::GetMaxMinusStat
PUBLIC	??_GCStatMng@@UAEPAXI@Z				; CStatMng::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_7CStatMng@@6B@				; CStatMng::`vftable'
PUBLIC	?gStatMng@@3VCStatMng@@A			; gStatMng
PUBLIC	??_R4CStatMng@@6B@				; CStatMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCStatMng@@@8				; CStatMng `RTTI Type Descriptor'
PUBLIC	??_R3CStatMng@@8				; CStatMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CStatMng@@8				; CStatMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CStatMng@@8			; CStatMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	??_ECStatMng@@UAEPAXI@Z:PROC			; CStatMng::`vector deleting destructor'
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?gStatMng@@3VCStatMng@@A DB 02ee4H DUP (?)		; gStatMng
_BSS	ENDS
CRT$XCU	SEGMENT
?gStatMng$initializer$@@3P6AXXZA DD FLAT:??__EgStatMng@@YAXXZ ; gStatMng$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CStatMng@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CStatMng@@8 DD FLAT:??_R0?AVCStatMng@@@8	; CStatMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CStatMng@@8
rdata$r	ENDS
;	COMDAT ??_R2CStatMng@@8
rdata$r	SEGMENT
??_R2CStatMng@@8 DD FLAT:??_R1A@?0A@EA@CStatMng@@8	; CStatMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CStatMng@@8
rdata$r	SEGMENT
??_R3CStatMng@@8 DD 00H					; CStatMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CStatMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCStatMng@@@8
data$r	SEGMENT
??_R0?AVCStatMng@@@8 DD FLAT:??_7type_info@@6B@		; CStatMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStatMng@@', 00H
data$r	ENDS
;	COMDAT ??_R4CStatMng@@6B@
rdata$r	SEGMENT
??_R4CStatMng@@6B@ DD 00H				; CStatMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCStatMng@@@8
	DD	FLAT:??_R3CStatMng@@8
rdata$r	ENDS
;	COMDAT ??_7CStatMng@@6B@
CONST	SEGMENT
??_7CStatMng@@6B@ DD FLAT:??_R4CStatMng@@6B@		; CStatMng::`vftable'
	DD	FLAT:??_ECStatMng@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FgStatMng@@YAXXZ
text$yd	SEGMENT
??__FgStatMng@@YAXXZ PROC				; `dynamic atexit destructor for 'gStatMng'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gStatMng@@3VCStatMng@@A ; gStatMng
  00005	e9 00 00 00 00	 jmp	 ??1CStatMng@@UAE@XZ	; CStatMng::~CStatMng
??__FgStatMng@@YAXXZ ENDP				; `dynamic atexit destructor for 'gStatMng''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ??__EgStatMng@@YAXXZ
text$di	SEGMENT
??__EgStatMng@@YAXXZ PROC				; `dynamic initializer for 'gStatMng'', COMDAT

; 12   : CStatMng gStatMng;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gStatMng@@3VCStatMng@@A ; gStatMng
  00005	e8 00 00 00 00	 call	 ??0CStatMng@@QAE@XZ	; CStatMng::CStatMng
  0000a	68 00 00 00 00	 push	 OFFSET ??__FgStatMng@@YAXXZ ; `dynamic atexit destructor for 'gStatMng''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EgStatMng@@YAXXZ ENDP				; `dynamic initializer for 'gStatMng''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCStatMng@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCStatMng@@UAEPAXI@Z PROC				; CStatMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CStatMng@@UAE@XZ	; CStatMng::~CStatMng
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 e4 2e 00 00	 push	 12004			; 00002ee4H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCStatMng@@UAEPAXI@Z ENDP				; CStatMng::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ?GetMaxMinusStat@CStatMng@@QAEHHH@Z
_TEXT	SEGMENT
_iLevel$ = 8						; size = 4
_iClass$ = 12						; size = 4
?GetMaxMinusStat@CStatMng@@QAEHHH@Z PROC		; CStatMng::GetMaxMinusStat, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 88   : 	if ( (iLevel < 1) || (iLevel> MAX_CHAR_LEVEL) )

  00003	8b 45 08	 mov	 eax, DWORD PTR _iLevel$[ebp]
  00006	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  00009	81 fa 8f 01 00
	00		 cmp	 edx, 399		; 0000018fH
  0000f	77 2e		 ja	 SHORT $LN3@GetMaxMinu

; 91   : 	}
; 92   : 
; 93   : 	if ( iClass == CLASS_MAGUMSA)

  00011	8b 55 0c	 mov	 edx, DWORD PTR _iClass$[ebp]
  00014	83 fa 03	 cmp	 edx, 3
  00017	75 0b		 jne	 SHORT $LN4@GetMaxMinu

; 94   : 	{
; 95   : 		return this->gObjMagumMinusStatTable[iLevel-1];

  00019	8b 84 81 40 1f
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+8000]

; 104  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
$LN4@GetMaxMinu:

; 96   : 	}
; 97   : 	
; 98   : 	if ( iClass == CLASS_DARKLORD )

  00024	83 fa 04	 cmp	 edx, 4
  00027	75 0b		 jne	 SHORT $LN5@GetMaxMinu

; 99   : 	{
; 100  : 		return this->gObjDarkLordMinusStatTable[iLevel-1];

  00029	8b 84 81 10 27
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+10000]

; 104  : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN5@GetMaxMinu:

; 101  : 	}
; 102  : 	
; 103  : 	return this->gObjNormalMinusStatTable[iLevel-1];

  00034	8b 84 81 70 17
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+6000]

; 104  : }

  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
$LN3@GetMaxMinu:

; 89   : 	{
; 90   : 		return 0;

  0003f	33 c0		 xor	 eax, eax

; 104  : }

  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?GetMaxMinusStat@CStatMng@@QAEHHH@Z ENDP		; CStatMng::GetMaxMinusStat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ?GetMaxStat@CStatMng@@QAEHHH@Z
_TEXT	SEGMENT
_level$ = 8						; size = 4
_Class$ = 12						; size = 4
?GetMaxStat@CStatMng@@QAEHHH@Z PROC			; CStatMng::GetMaxStat, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	if ( (level < 1) || (level> MAX_CHAR_LEVEL) )

  00003	8b 45 08	 mov	 eax, DWORD PTR _level$[ebp]
  00006	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  00009	81 fa 8f 01 00
	00		 cmp	 edx, 399		; 0000018fH
  0000f	77 2a		 ja	 SHORT $LN3@GetMaxStat

; 70   : 	}
; 71   : 
; 72   : 	if (Class == CLASS_MAGUMSA)

  00011	8b 55 0c	 mov	 edx, DWORD PTR _Class$[ebp]
  00014	83 fa 03	 cmp	 edx, 3
  00017	75 0b		 jne	 SHORT $LN4@GetMaxStat

; 73   : 	{
; 74   : 		return this->gObjMagumAddStatTable[level-1];

  00019	8b 84 81 d0 07
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+2000]

; 83   : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
$LN4@GetMaxStat:

; 75   : 	}
; 76   : 	
; 77   : 	if ( Class == CLASS_DARKLORD )

  00024	83 fa 04	 cmp	 edx, 4
  00027	75 0b		 jne	 SHORT $LN5@GetMaxStat

; 78   : 	{
; 79   : 		return this->gObjDarkLordAddStatTable[level-1];

  00029	8b 84 81 a0 0f
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+4000]

; 83   : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
$LN5@GetMaxStat:

; 80   : 	}
; 81   : 	
; 82   : 	return this->gObjNormalAddStatTable[level-1];

  00034	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]

; 83   : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN3@GetMaxStat:

; 68   : 	{
; 69   : 		return 0;

  0003b	33 c0		 xor	 eax, eax

; 83   : }

  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?GetMaxStat@CStatMng@@QAEHHH@Z ENDP			; CStatMng::GetMaxStat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ?Init@CStatMng@@QAEXXZ
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
tv530 = -12						; size = 4
_iDarkLordFirstState$2$ = -8				; size = 4
_MagunfirstState$1$ = -8				; size = 4
_iDarkLordFirstState$1$ = -4				; size = 4
_MagunfirstState$2$ = -4				; size = 4
?Init@CStatMng@@QAEXXZ PROC				; CStatMng::Init, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b c1		 mov	 eax, ecx

; 26   : 	int firstState = 2;

  00009	c7 45 f4 0a 00
	00 00		 mov	 DWORD PTR tv530[ebp], 10 ; 0000000aH
  00010	bb 02 00 00 00	 mov	 ebx, 2
  00015	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax
  00018	56		 push	 esi
  00019	57		 push	 edi

; 27   : 	int MagunfirstState = 2;

  0001a	89 5d f8	 mov	 DWORD PTR _MagunfirstState$1$[ebp], ebx
  0001d	8d b0 d4 07 00
	00		 lea	 esi, DWORD PTR [eax+2004]

; 28   : 	int iDarkLordFirstState = 2;

  00023	89 5d fc	 mov	 DWORD PTR _iDarkLordFirstState$1$[ebp], ebx
  00026	8d 7b 14	 lea	 edi, DWORD PTR [ebx+20]

; 29   : 
; 30   : 	int i;
; 31   : 	for (i=0;i<STAT_TABLE_SIZE;i++)

  00029	33 c9		 xor	 ecx, ecx
  0002b	0f 1f 44 00 00	 npad	 5
$LL4@Init:

; 32   : 	{
; 33   : 		if ( ( (i+1) % 10) == 0)

  00030	41		 inc	 ecx
  00031	8b c1		 mov	 eax, ecx
  00033	99		 cdq
  00034	f7 7d f4	 idiv	 DWORD PTR tv530[ebp]
  00037	85 d2		 test	 edx, edx
  00039	75 50		 jne	 SHORT $LN20@Init

; 34   : 		{
; 35   : 			firstState = firstState + ( i * 2 + 22 ) / 400 + 2;

  0003b	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00040	f7 ef		 imul	 edi
  00042	c1 fa 07	 sar	 edx, 7
  00045	8b c2		 mov	 eax, edx
  00047	83 c2 02	 add	 edx, 2
  0004a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004d	03 c2		 add	 eax, edx
  0004f	03 d8		 add	 ebx, eax

; 36   : 			MagunfirstState = MagunfirstState + ( i * 2+ 22 ) / 700 + 2;

  00051	b8 91 73 9f 5d	 mov	 eax, 1570730897		; 5d9f7391H
  00056	f7 ef		 imul	 edi
  00058	c1 fa 08	 sar	 edx, 8
  0005b	8b c2		 mov	 eax, edx
  0005d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00060	03 c2		 add	 eax, edx
  00062	8b 55 f8	 mov	 edx, DWORD PTR _MagunfirstState$1$[ebp]
  00065	83 c2 02	 add	 edx, 2
  00068	03 d0		 add	 edx, eax

; 37   : 			iDarkLordFirstState = iDarkLordFirstState + ( i * 2 + 22 ) / 500 + 2;

  0006a	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  0006f	89 55 f8	 mov	 DWORD PTR _MagunfirstState$1$[ebp], edx
  00072	f7 ef		 imul	 edi
  00074	c1 fa 05	 sar	 edx, 5
  00077	8b c2		 mov	 eax, edx
  00079	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0007c	03 c2		 add	 eax, edx
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _iDarkLordFirstState$1$[ebp]
  00081	83 c2 02	 add	 edx, 2
  00084	03 d0		 add	 edx, eax
  00086	89 55 fc	 mov	 DWORD PTR _iDarkLordFirstState$1$[ebp], edx
  00089	eb 03		 jmp	 SHORT $LN8@Init
$LN20@Init:
  0008b	8b 55 fc	 mov	 edx, DWORD PTR _iDarkLordFirstState$1$[ebp]
$LN8@Init:

; 38   : 		}
; 39   : 
; 40   : 		this->gObjNormalAddStatTable[i] = firstState;
; 41   : 		this->gObjMagumAddStatTable[i] = MagunfirstState;

  0008e	8b 45 f8	 mov	 eax, DWORD PTR _MagunfirstState$1$[ebp]
  00091	83 c7 02	 add	 edi, 2
  00094	89 9e 30 f8 ff
	ff		 mov	 DWORD PTR [esi-2000], ebx
  0009a	89 06		 mov	 DWORD PTR [esi], eax

; 42   : 		this->gObjDarkLordAddStatTable[i] = iDarkLordFirstState;

  0009c	89 96 d0 07 00
	00		 mov	 DWORD PTR [esi+2000], edx
  000a2	83 c6 04	 add	 esi, 4
  000a5	81 ff fe 03 00
	00		 cmp	 edi, 1022		; 000003feH
  000ab	7c 83		 jl	 SHORT $LL4@Init

; 43   : 	}
; 44   : 
; 45   : 	firstState = 2;

  000ad	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000b0	bb 02 00 00 00	 mov	 ebx, 2

; 46   : 	MagunfirstState = 2;
; 47   : 	iDarkLordFirstState = 2;
; 48   : 
; 49   : 	for (i=0;i<STAT_TABLE_SIZE;i++)

  000b5	33 ff		 xor	 edi, edi
  000b7	89 5d fc	 mov	 DWORD PTR _MagunfirstState$2$[ebp], ebx
  000ba	89 5d f8	 mov	 DWORD PTR _iDarkLordFirstState$2$[ebp], ebx
  000bd	81 c1 44 1f 00
	00		 add	 ecx, 8004		; 00001f44H
  000c3	8d 73 14	 lea	 esi, DWORD PTR [ebx+20]
$LL7@Init:

; 50   : 	{
; 51   : 		if ( ( (i+1) % 10) == 0)

  000c6	47		 inc	 edi
  000c7	8b c7		 mov	 eax, edi
  000c9	99		 cdq
  000ca	f7 7d f4	 idiv	 DWORD PTR tv530[ebp]
  000cd	85 d2		 test	 edx, edx
  000cf	75 50		 jne	 SHORT $LN19@Init

; 52   : 		{
; 53   : 			firstState = firstState + ( i * 2 + 22 ) / 400 + 2;

  000d1	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  000d6	f7 ee		 imul	 esi
  000d8	c1 fa 07	 sar	 edx, 7
  000db	8b c2		 mov	 eax, edx
  000dd	83 c2 02	 add	 edx, 2
  000e0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000e3	03 c2		 add	 eax, edx
  000e5	03 d8		 add	 ebx, eax

; 54   : 			MagunfirstState = MagunfirstState + ( i * 2+ 22 ) / 700 + 2;

  000e7	b8 91 73 9f 5d	 mov	 eax, 1570730897		; 5d9f7391H
  000ec	f7 ee		 imul	 esi
  000ee	c1 fa 08	 sar	 edx, 8
  000f1	8b c2		 mov	 eax, edx
  000f3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f6	03 c2		 add	 eax, edx
  000f8	8b 55 fc	 mov	 edx, DWORD PTR _MagunfirstState$2$[ebp]
  000fb	83 c2 02	 add	 edx, 2
  000fe	03 d0		 add	 edx, eax

; 55   : 			iDarkLordFirstState = iDarkLordFirstState + ( i * 2 + 22 ) / 500 + 2;

  00100	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00105	89 55 fc	 mov	 DWORD PTR _MagunfirstState$2$[ebp], edx
  00108	f7 ee		 imul	 esi
  0010a	c1 fa 05	 sar	 edx, 5
  0010d	8b c2		 mov	 eax, edx
  0010f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00112	03 c2		 add	 eax, edx
  00114	8b 55 f8	 mov	 edx, DWORD PTR _iDarkLordFirstState$2$[ebp]
  00117	83 c2 02	 add	 edx, 2
  0011a	03 d0		 add	 edx, eax
  0011c	89 55 f8	 mov	 DWORD PTR _iDarkLordFirstState$2$[ebp], edx
  0011f	eb 03		 jmp	 SHORT $LN9@Init
$LN19@Init:
  00121	8b 55 f8	 mov	 edx, DWORD PTR _iDarkLordFirstState$2$[ebp]
$LN9@Init:

; 56   : 		}
; 57   : 
; 58   : 		this->gObjNormalMinusStatTable[i] = firstState;
; 59   : 		this->gObjMagumMinusStatTable[i] = MagunfirstState;

  00124	8b 45 fc	 mov	 eax, DWORD PTR _MagunfirstState$2$[ebp]
  00127	83 c6 02	 add	 esi, 2
  0012a	89 99 30 f8 ff
	ff		 mov	 DWORD PTR [ecx-2000], ebx
  00130	89 01		 mov	 DWORD PTR [ecx], eax

; 60   : 		this->gObjDarkLordMinusStatTable[i] = iDarkLordFirstState;

  00132	89 91 d0 07 00
	00		 mov	 DWORD PTR [ecx+2000], edx
  00138	83 c1 04	 add	 ecx, 4
  0013b	81 fe fe 03 00
	00		 cmp	 esi, 1022		; 000003feH
  00141	7c 83		 jl	 SHORT $LL7@Init
  00143	5f		 pop	 edi
  00144	5e		 pop	 esi
  00145	5b		 pop	 ebx

; 61   : 	}
; 62   : }

  00146	8b e5		 mov	 esp, ebp
  00148	5d		 pop	 ebp
  00149	c3		 ret	 0
?Init@CStatMng@@QAEXXZ ENDP				; CStatMng::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ??1CStatMng@@UAE@XZ
_TEXT	SEGMENT
??1CStatMng@@UAE@XZ PROC				; CStatMng::~CStatMng, COMDAT
; _this$ = ecx

; 20   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CStatMng@@6B@

; 21   : 	return;
; 22   : }

  00006	c3		 ret	 0
??1CStatMng@@UAE@XZ ENDP				; CStatMng::~CStatMng
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ??0CStatMng@@QAE@XZ
_TEXT	SEGMENT
??0CStatMng@@QAE@XZ PROC				; CStatMng::CStatMng, COMDAT
; _this$ = ecx

; 15   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CStatMng@@6B@

; 16   : 	this->Init();

  00009	e8 00 00 00 00	 call	 ?Init@CStatMng@@QAEXXZ	; CStatMng::Init

; 17   : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CStatMng@@QAE@XZ ENDP				; CStatMng::CStatMng
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\statmng.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 105  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
