; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\CrywolfUtil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	_sprintf
PUBLIC	??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char *>
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??0CCrywolfUtil@@QAE@XZ				; CCrywolfUtil::CCrywolfUtil
PUBLIC	??1CCrywolfUtil@@UAE@XZ				; CCrywolfUtil::~CCrywolfUtil
PUBLIC	?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ	; CCrywolfUtil::SendMapServerGroupMsg
PUBLIC	?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z	; CCrywolfUtil::SendAllUserAnyData
PUBLIC	?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ	; CCrywolfUtil::SendAllUserAnyMsg
PUBLIC	?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ; CCrywolfUtil::SendCrywolfUserAnyData
PUBLIC	?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ	; CCrywolfUtil::SendCrywolfUserAnyMsg
PUBLIC	?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ ; CCrywolfUtil::SendCrywolfChattingMsg
PUBLIC	?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z	; CCrywolfUtil::CrywolfMVPLevelUp
PUBLIC	??_GCCrywolfUtil@@UAEPAXI@Z			; CCrywolfUtil::`scalar deleting destructor'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7CCrywolfUtil@@6B@				; CCrywolfUtil::`vftable'
PUBLIC	??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ ; `string'
PUBLIC	??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@ ; `string'
PUBLIC	??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@ ; `string'
PUBLIC	??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@ ; `string'
PUBLIC	??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@ ; `string'
PUBLIC	??_R4CCrywolfUtil@@6B@				; CCrywolfUtil::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCrywolfUtil@@@8			; CCrywolfUtil `RTTI Type Descriptor'
PUBLIC	??_R3CCrywolfUtil@@8				; CCrywolfUtil::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCrywolfUtil@@8				; CCrywolfUtil::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCrywolfUtil@@8			; CCrywolfUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?GCLevelUpMsgSend@@YAXHH@Z:PROC			; GCLevelUpMsgSend
EXTRN	?gObjSetBP@@YAXH@Z:PROC				; gObjSetBP
EXTRN	?gObjNextExpCal@@YAXPAUOBJECTSTRUCT@@@Z:PROC	; gObjNextExpCal
EXTRN	?gObjSetExpPetItem@@YAXHH@Z:PROC		; gObjSetExpPetItem
EXTRN	??_ECCrywolfUtil@@UAEPAXI@Z:PROC		; CCrywolfUtil::`vector deleting destructor'
EXTRN	?GS_GDReqMapSvrMsgMultiCast@@YAXHPAD@Z:PROC	; GS_GDReqMapSvrMsgMultiCast
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
EXTRN	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z:PROC	; TNotice::SetNoticeProperty
EXTRN	?SendNoticeToAllUser@TNotice@@SAXPAX@Z:PROC	; TNotice::SendNoticeToAllUser
EXTRN	?LevelUp@CMasterExperience@@QAEHPAUOBJECTSTRUCT@@_J@Z:PROC ; CMasterExperience::LevelUp
EXTRN	?GetLevelPoint@ClassCalc@@QAEGPAUOBJECTSTRUCT@@EE@Z:PROC ; ClassCalc::GetLevelPoint
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	?DCInfo@@3Vclassdef@@A:BYTE			; DCInfo
EXTRN	?gParty@@3VPartyClass@@A:BYTE			; gParty
EXTRN	?g_MasterExp@@3VCMasterExperience@@A:BYTE	; g_MasterExp
EXTRN	?g_ClassCalc@@3VClassCalc@@A:BYTE		; g_ClassCalc
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CCrywolfUtil@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCrywolfUtil@@8 DD FLAT:??_R0?AVCCrywolfUtil@@@8 ; CCrywolfUtil::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_R2CCrywolfUtil@@8
rdata$r	SEGMENT
??_R2CCrywolfUtil@@8 DD FLAT:??_R1A@?0A@EA@CCrywolfUtil@@8 ; CCrywolfUtil::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCrywolfUtil@@8
rdata$r	SEGMENT
??_R3CCrywolfUtil@@8 DD 00H				; CCrywolfUtil::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCrywolfUtil@@@8
data$r	SEGMENT
??_R0?AVCCrywolfUtil@@@8 DD FLAT:??_7type_info@@6B@	; CCrywolfUtil `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCrywolfUtil@@', 00H
data$r	ENDS
;	COMDAT ??_R4CCrywolfUtil@@6B@
rdata$r	SEGMENT
??_R4CCrywolfUtil@@6B@ DD 00H				; CCrywolfUtil::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCrywolfUtil@@@8
	DD	FLAT:??_R3CCrywolfUtil@@8
rdata$r	ENDS
;	COMDAT ??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@
CONST	SEGMENT
??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@ DB ',(%s)(%s) ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@
CONST	SEGMENT
??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@ DB '4'
	DB	'00 LevelUp (%s)(%s) Party ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@
CONST	SEGMENT
??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@ DB '['
	DB	' Crywolf ][MVP Exp.] [%s][%s] LevelUp PlusStatQuest Clear Add'
	DB	'Stat %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@
CONST	SEGMENT
??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@ DB 'E'
	DB	'xperience : Map[%d]-(%d,%d) [%s][%s](%d) %u %d MonsterIndex :'
	DB	' %d, EventType : %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@ DB '['
	DB	' Crywolf ][MVP Exp.] : [%s][%s](%d) %u %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CCrywolfUtil@@6B@
CONST	SEGMENT
??_7CCrywolfUtil@@6B@ DD FLAT:??_R4CCrywolfUtil@@6B@	; CCrywolfUtil::`vftable'
	DD	FLAT:??_ECCrywolfUtil@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.h
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 9    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  00007	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  0000b	c1 e0 08	 shl	 eax, 8
  0000e	03 c1		 add	 eax, ecx
  00010	0f b6 4d 10	 movzx	 ecx, BYTE PTR _g$[ebp]
  00014	c1 e0 08	 shl	 eax, 8
  00017	03 c1		 add	 eax, ecx
  00019	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  0001d	c1 e0 08	 shl	 eax, 8
  00020	03 c1		 add	 eax, ecx
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
;	COMDAT ?GetMapSvrGroup@CMapServerManager@@QAEHXZ
_TEXT	SEGMENT
?GetMapSvrGroup@CMapServerManager@@QAEHXZ PROC		; CMapServerManager::GetMapSvrGroup, COMDAT
; _this$ = ecx

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  00000	8b 81 f8 6a 01
	00		 mov	 eax, DWORD PTR [ecx+92920]
  00006	85 c0		 test	 eax, eax
  00008	74 05		 je	 SHORT $LN2@GetMapSvrG

; 56   : 		{
; 57   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  0000a	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]

; 60   : 	}

  0000e	c3		 ret	 0
$LN2@GetMapSvrG:

; 58   : 		}
; 59   : 		return -1;

  0000f	83 c8 ff	 or	 eax, -1

; 60   : 	}

  00012	c3		 ret	 0
?GetMapSvrGroup@CMapServerManager@@QAEHXZ ENDP		; CMapServerManager::GetMapSvrGroup
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCCrywolfUtil@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCrywolfUtil@@UAEPAXI@Z PROC			; CCrywolfUtil::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CCrywolfUtil@@UAE@XZ	; CCrywolfUtil::~CCrywolfUtil
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 04		 push	 4
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCCrywolfUtil@@UAEPAXI@Z ENDP			; CCrywolfUtil::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z
_TEXT	SEGMENT
_iLEFT_EXP$1$ = -264					; size = 4
_szTmp$1 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_iUserIndex$ = 8					; size = 4
_iAddExp$ = 12						; size = 4
?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z PROC		; CCrywolfUtil::CrywolfMVPLevelUp, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _iUserIndex$[ebp]

; 194  : 	if ( !OBJMAX_RANGE(iUserIndex ) )

  00017	85 db		 test	 ebx, ebx
  00019	0f 88 8b 03 00
	00		 js	 $LN20@CrywolfMVP
  0001f	33 c0		 xor	 eax, eax
  00021	81 fb eb 2c 00
	00		 cmp	 ebx, 11499		; 00002cebH
  00027	0f 9e c0	 setle	 al
  0002a	85 c0		 test	 eax, eax
  0002c	0f 84 78 03 00
	00		 je	 $LN20@CrywolfMVP

; 195  : 		return 0;
; 196  : 
; 197  : 	LogAddTD("[ Crywolf ][MVP Exp.] : [%s][%s](%d) %u %d",

  00032	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00038	56		 push	 esi
  00039	8b 75 0c	 mov	 esi, DWORD PTR _iAddExp$[ebp]
  0003c	57		 push	 edi
  0003d	69 fb 40 27 00
	00		 imul	 edi, ebx, 10048
  00043	56		 push	 esi
  00044	ff b4 0f a0 00
	00 00		 push	 DWORD PTR [edi+ecx+160]
  0004b	0f bf 84 0f 96
	00 00 00	 movsx	 eax, WORD PTR [edi+ecx+150]
  00053	50		 push	 eax
  00054	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00057	03 c7		 add	 eax, edi
  00059	50		 push	 eax
  0005a	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  0005d	03 c7		 add	 eax, edi
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@HMJDDJO@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?3?5?$FL?$CFs?$FN?$FL?$CFs?$FN@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006b	83 c4 18	 add	 esp, 24			; 00000018H

; 198  : 		gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 199  : 		gObj[iUserIndex].Level, gObj[iUserIndex].Experience,
; 200  : 		iAddExp);
; 201  : 
; 202  : 	if( g_MasterExp.LevelUp(&gObj[iUserIndex],iAddExp) )

  0006e	8b c6		 mov	 eax, esi
  00070	99		 cdq
  00071	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MasterExp@@3VCMasterExperience@@A ; g_MasterExp
  00076	52		 push	 edx
  00077	50		 push	 eax
  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0007d	03 c7		 add	 eax, edi
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?LevelUp@CMasterExperience@@QAEHPAUOBJECTSTRUCT@@_J@Z ; CMasterExperience::LevelUp
  00085	85 c0		 test	 eax, eax
  00087	0f 85 89 00 00
	00		 jne	 $LN26@CrywolfMVP

; 203  : 	{
; 204  : 		return FALSE;
; 205  : 	}
; 206  : 
; 207  : 	gObjSetExpPetItem(iUserIndex, iAddExp);

  0008d	56		 push	 esi
  0008e	53		 push	 ebx
  0008f	e8 00 00 00 00	 call	 ?gObjSetExpPetItem@@YAXHH@Z ; gObjSetExpPetItem

; 208  : 	int iLEFT_EXP = 0;
; 209  : 
; 210  : 	LogAddTD("Experience : Map[%d]-(%d,%d) [%s][%s](%d) %u %d MonsterIndex : %d, EventType : %d",

  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009a	33 db		 xor	 ebx, ebx
  0009c	6a 05		 push	 5
  0009e	53		 push	 ebx
  0009f	56		 push	 esi
  000a0	ff b4 0f a0 00
	00 00		 push	 DWORD PTR [edi+ecx+160]
  000a7	0f bf 84 0f 96
	00 00 00	 movsx	 eax, WORD PTR [edi+ecx+150]
  000af	50		 push	 eax
  000b0	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  000b3	03 c7		 add	 eax, edi
  000b5	50		 push	 eax
  000b6	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  000b9	03 c7		 add	 eax, edi
  000bb	50		 push	 eax
  000bc	0f b6 84 0f 21
	01 00 00	 movzx	 eax, BYTE PTR [edi+ecx+289]
  000c4	50		 push	 eax
  000c5	0f b6 84 0f 20
	01 00 00	 movzx	 eax, BYTE PTR [edi+ecx+288]
  000cd	50		 push	 eax
  000ce	0f b6 84 0f 23
	01 00 00	 movzx	 eax, BYTE PTR [edi+ecx+291]
  000d6	50		 push	 eax
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@MCCJHJPM@Experience?5?3?5Map?$FL?$CFd?$FN?9?$CI?$CFd?0?$CFd?$CJ?5?$FL?$CFs@
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 211  : 		gObj[iUserIndex].MapNumber, gObj[iUserIndex].X, gObj[iUserIndex].Y,
; 212  : 		gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 213  : 		gObj[iUserIndex].Level, gObj[iUserIndex].Experience, iAddExp, 0, EVENT_TYPE_CRYWOLF);
; 214  : 
; 215  : 	if ( gObj[iUserIndex].Level >= MAX_CHAR_LEVEL )

  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e7	b9 90 01 00 00	 mov	 ecx, 400		; 00000190H
  000ec	83 c4 34	 add	 esp, 52			; 00000034H
  000ef	66 39 8c 07 96
	00 00 00	 cmp	 WORD PTR [edi+eax+150], cx
  000f7	7c 32		 jl	 SHORT $LN7@CrywolfMVP

; 216  : 	{
; 217  : 		GCServerMsgStringSend(lMsg.Get(MSGGET(4, 112)), gObj[iUserIndex].m_Index, 1);

  000f9	6a 01		 push	 1
  000fb	ff 34 07	 push	 DWORD PTR [edi+eax]
  000fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00103	68 70 04 00 00	 push	 1136			; 00000470H
  00108	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@CrywolfMVP:

; 218  : 		return 0;

  00116	5f		 pop	 edi
  00117	5e		 pop	 esi
  00118	33 c0		 xor	 eax, eax
  0011a	5b		 pop	 ebx

; 298  : }

  0011b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011e	33 cd		 xor	 ecx, ebp
  00120	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c2 08 00	 ret	 8
$LN7@CrywolfMVP:

; 219  : 	}
; 220  : 
; 221  : 	if ( (gObj[iUserIndex].Experience + iAddExp) < gObj[iUserIndex].NextExp )

  0012b	8b 8c 07 a0 00
	00 00		 mov	 ecx, DWORD PTR [edi+eax+160]
  00132	8b 94 07 a4 00
	00 00		 mov	 edx, DWORD PTR [edi+eax+164]
  00139	03 ce		 add	 ecx, esi
  0013b	3b ca		 cmp	 ecx, edx
  0013d	73 1c		 jae	 SHORT $LN8@CrywolfMVP

; 222  : 	{
; 223  : 		gObj[iUserIndex].Experience += iAddExp;

  0013f	89 8c 07 a0 00
	00 00		 mov	 DWORD PTR [edi+eax+160], ecx

; 294  : 		}
; 295  : 	}
; 296  : 
; 297  : 	return iLEFT_EXP;

  00146	8b c3		 mov	 eax, ebx
  00148	5f		 pop	 edi
  00149	5e		 pop	 esi
  0014a	5b		 pop	 ebx

; 298  : }

  0014b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014e	33 cd		 xor	 ecx, ebp
  00150	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 08 00	 ret	 8
$LN8@CrywolfMVP:

; 224  : 	}
; 225  : 	else
; 226  : 	{
; 227  : 		iLEFT_EXP = gObj[iUserIndex].Experience + iAddExp - gObj[iUserIndex].NextExp;

  0015b	8b 8c 07 a0 00
	00 00		 mov	 ecx, DWORD PTR [edi+eax+160]

; 228  : 		gObj[iUserIndex].Experience = gObj[iUserIndex].NextExp;

  00162	89 94 07 a0 00
	00 00		 mov	 DWORD PTR [edi+eax+160], edx
  00169	2b ca		 sub	 ecx, edx

; 229  : 		gObj[iUserIndex].Level++;

  0016b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00170	03 ce		 add	 ecx, esi

; 230  : #if (ENABLE_CUSTOM_CLASSCALC == 1)
; 231  : 		gObj[iUserIndex].LevelUpPoint += g_ClassCalc.GetLevelPoint(&gObj[iUserIndex], 0, 0);

  00172	6a 00		 push	 0
  00174	6a 00		 push	 0
  00176	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _iLEFT_EXP$1$[ebp], ecx
  0017c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ClassCalc@@3VClassCalc@@A ; g_ClassCalc
  00181	66 ff 84 07 96
	00 00 00	 inc	 WORD PTR [edi+eax+150]
  00189	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0018f	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 ?GetLevelPoint@ClassCalc@@QAEGPAUOBJECTSTRUCT@@EE@Z ; ClassCalc::GetLevelPoint
  00198	0f b7 c0	 movzx	 eax, ax
  0019b	01 84 37 98 00
	00 00		 add	 DWORD PTR [edi+esi+152], eax

; 232  : #else
; 233  : 		if( gObj[iUserIndex].Class == CLASS_DARKLORD )
; 234  : 		{
; 235  : 			gObj[iUserIndex].LevelUpPoint += 7;
; 236  : 		}
; 237  : 		else if( gObj[iUserIndex].Class == CLASS_MAGUMSA )
; 238  : 		{
; 239  : 			gObj[iUserIndex].LevelUpPoint += 7;
; 240  : 		}
; 241  : 		else if( gObj[iUserIndex].Class == CLASS_FIGHTER )
; 242  : 		{
; 243  : 			gObj[iUserIndex].LevelUpPoint += 7;
; 244  : 		}
; 245  : 		else
; 246  : 		{
; 247  : 			gObj[iUserIndex].LevelUpPoint += 5;
; 248  : 		}
; 249  : #endif
; 250  : 
; 251  : 		if( gObj[iUserIndex].PlusStatQuestClear != false )

  001a2	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001a8	38 5c 37 7c	 cmp	 BYTE PTR [edi+esi+124], bl
  001ac	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  001af	74 46		 je	 SHORT $LN10@CrywolfMVP

; 252  : 		{
; 253  : #if (ENABLE_CUSTOM_CLASSCALC == 1)
; 254  : 			gObj[iUserIndex].LevelUpPoint += g_ClassCalc.GetLevelPoint(&gObj[iUserIndex], 0, 1);

  001b1	6a 01		 push	 1
  001b3	6a 00		 push	 0
  001b5	50		 push	 eax
  001b6	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ClassCalc@@3VClassCalc@@A ; g_ClassCalc
  001bb	e8 00 00 00 00	 call	 ?GetLevelPoint@ClassCalc@@QAEGPAUOBJECTSTRUCT@@EE@Z ; ClassCalc::GetLevelPoint
  001c0	0f b7 c0	 movzx	 eax, ax
  001c3	01 84 37 98 00
	00 00		 add	 DWORD PTR [edi+esi+152], eax

; 255  : #else
; 256  : 			gObj[iUserIndex].LevelUpPoint += 1;
; 257  : #endif
; 258  : 			LogAddTD("[ Crywolf ][MVP Exp.] [%s][%s] LevelUp PlusStatQuest Clear AddStat %d",

  001ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d0	ff b4 0f 98 00
	00 00		 push	 DWORD PTR [edi+ecx+152]
  001d7	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  001da	03 c7		 add	 eax, edi
  001dc	50		 push	 eax
  001dd	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  001e0	03 c7		 add	 eax, edi
  001e2	50		 push	 eax
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@NEGEKGDM@?$FL?5Crywolf?5?$FN?$FLMVP?5Exp?4?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5L@
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001ee	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001f4	83 c4 10	 add	 esp, 16			; 00000010H
$LN10@CrywolfMVP:

; 259  : 				gObj[iUserIndex].AccountID, gObj[iUserIndex].Name,
; 260  : 				gObj[iUserIndex].LevelUpPoint);
; 261  : 		}
; 262  : 
; 263  : 		gObj[iUserIndex].MaxLife += DCInfo.DefClass[gObj[iUserIndex].Class].LevelLife;

  001f7	0f b7 84 37 90
	00 00 00	 movzx	 eax, WORD PTR [edi+esi+144]
  001ff	69 c0 c8 0b 00
	00		 imul	 eax, eax, 3016
  00205	f3 0f 10 80 10
	00 00 00	 movss	 xmm0, DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+16]
  0020d	f3 0f 58 84 37
	dc 00 00 00	 addss	 xmm0, DWORD PTR [edi+esi+220]
  00216	f3 0f 11 84 37
	dc 00 00 00	 movss	 DWORD PTR [edi+esi+220], xmm0

; 264  : 		gObj[iUserIndex].MaxMana += DCInfo.DefClass[gObj[iUserIndex].Class].LevelMana;

  0021f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00225	0f b7 84 0f 90
	00 00 00	 movzx	 eax, WORD PTR [edi+ecx+144]
  0022d	69 c0 c8 0b 00
	00		 imul	 eax, eax, 3016
  00233	f3 0f 10 80 1c
	00 00 00	 movss	 xmm0, DWORD PTR ?DCInfo@@3Vclassdef@@A[eax+28]
  0023b	f3 0f 58 84 0f
	f0 00 00 00	 addss	 xmm0, DWORD PTR [edi+ecx+240]
  00244	f3 0f 11 84 0f
	f0 00 00 00	 movss	 DWORD PTR [edi+ecx+240], xmm0

; 265  : 		gObj[iUserIndex].Life = gObj[iUserIndex].MaxLife;

  0024d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00253	8b 84 0f dc 00
	00 00		 mov	 eax, DWORD PTR [edi+ecx+220]
  0025a	89 84 0f d8 00
	00 00		 mov	 DWORD PTR [edi+ecx+216], eax

; 266  : 		gObj[iUserIndex].Mana = gObj[iUserIndex].MaxMana;

  00261	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00267	8b 84 0f f0 00
	00 00		 mov	 eax, DWORD PTR [edi+ecx+240]
  0026e	89 84 0f ec 00
	00 00		 mov	 DWORD PTR [edi+ecx+236], eax

; 267  : 		gObjNextExpCal(&gObj[iUserIndex]);

  00275	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0027a	03 c7		 add	 eax, edi
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?gObjNextExpCal@@YAXPAUOBJECTSTRUCT@@@Z ; gObjNextExpCal

; 268  : 		gObjSetBP(gObj[iUserIndex].m_Index);

  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00287	ff 34 07	 push	 DWORD PTR [edi+eax]
  0028a	e8 00 00 00 00	 call	 ?gObjSetBP@@YAXH@Z	; gObjSetBP

; 269  : 		GCLevelUpMsgSend(gObj[iUserIndex].m_Index, 1);

  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00294	6a 01		 push	 1
  00296	ff 34 07	 push	 DWORD PTR [edi+eax]
  00299	e8 00 00 00 00	 call	 ?GCLevelUpMsgSend@@YAXHH@Z ; GCLevelUpMsgSend

; 270  : 		LogAddTD(lMsg.Get(MSGGET(2, 8)), gObj[iUserIndex].AccountID,

  0029e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002a4	83 c4 10	 add	 esp, 16			; 00000010H
  002a7	0f bf 84 0f 96
	00 00 00	 movsx	 eax, WORD PTR [edi+ecx+150]
  002af	50		 push	 eax
  002b0	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  002b3	03 c7		 add	 eax, edi
  002b5	50		 push	 eax
  002b6	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  002b9	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  002be	03 c7		 add	 eax, edi
  002c0	50		 push	 eax
  002c1	68 08 02 00 00	 push	 520			; 00000208H
  002c6	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  002cb	50		 push	 eax
  002cc	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 271  : 			gObj[iUserIndex].Name, gObj[iUserIndex].Level);
; 272  : 
; 273  : 
; 274  : 		if( gObj[iUserIndex].Level == 400 && gObj[iUserIndex].PartyNumber >= 0 )

  002d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  002d8	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  002dd	83 c4 10	 add	 esp, 16			; 00000010H
  002e0	66 39 84 0f 96
	00 00 00	 cmp	 WORD PTR [edi+ecx+150], ax
  002e8	0f 85 a1 00 00
	00		 jne	 $LN23@CrywolfMVP
  002ee	8b b4 0f 0c 06
	00 00		 mov	 esi, DWORD PTR [edi+ecx+1548]
  002f5	85 f6		 test	 esi, esi
  002f7	0f 88 92 00 00
	00		 js	 $LN23@CrywolfMVP

; 275  : 		{
; 276  : 			int partynumber = gObj[iUserIndex].PartyNumber;
; 277  : 			char szTmp[256];
; 278  : 
; 279  : 			sprintf(szTmp,"400 LevelUp (%s)(%s) Party ",gObj[iUserIndex].AccountID,gObj[iUserIndex].Name);

  002fd	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00300	03 c7		 add	 eax, edi
  00302	50		 push	 eax
  00303	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  00306	03 c7		 add	 eax, edi
  00308	50		 push	 eax
  00309	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szTmp$1[ebp]
  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DJAOLMAF@400?5LevelUp?5?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5Party?5?$AA@
  00314	50		 push	 eax
  00315	e8 00 00 00 00	 call	 _sprintf
  0031a	8b c6		 mov	 eax, esi
  0031c	83 c4 10	 add	 esp, 16			; 00000010H
  0031f	c1 e0 04	 shl	 eax, 4
  00322	bb 05 00 00 00	 mov	 ebx, 5
  00327	2b c6		 sub	 eax, esi
  00329	8d 3c 85 0c 00
	00 00		 lea	 edi, DWORD PTR ?gParty@@3VPartyClass@@A[eax*4+12]
$LL4@CrywolfMVP:

; 284  : 			{
; 285  : 				tObjNum = gParty.m_PartyS[partynumber].Number[i];

  00330	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 286  : 				if( tObjNum >= 0 )

  00332	85 c9		 test	 ecx, ecx
  00334	78 41		 js	 SHORT $LN2@CrywolfMVP

; 287  : 				{
; 288  : 					int len = strlen(szTmp);

  00336	8d b5 fc fe ff
	ff		 lea	 esi, DWORD PTR _szTmp$1[ebp]
  0033c	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
  0033f	90		 npad	 1
$LL21@CrywolfMVP:
  00340	8a 06		 mov	 al, BYTE PTR [esi]
  00342	46		 inc	 esi
  00343	84 c0		 test	 al, al
  00345	75 f9		 jne	 SHORT $LL21@CrywolfMVP
  00347	2b f2		 sub	 esi, edx

; 289  : 					sprintf(&szTmp[len],",(%s)(%s) ",gObj[tObjNum].AccountID,gObj[tObjNum].Name);

  00349	69 d1 40 27 00
	00		 imul	 edx, ecx, 10048
  0034f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00355	8d 41 5d	 lea	 eax, DWORD PTR [ecx+93]
  00358	03 c2		 add	 eax, edx
  0035a	50		 push	 eax
  0035b	8d 41 52	 lea	 eax, DWORD PTR [ecx+82]
  0035e	03 c2		 add	 eax, edx
  00360	50		 push	 eax
  00361	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szTmp$1[ebp]
  00367	03 c6		 add	 eax, esi
  00369	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNKEEMGH@?0?$CI?$CFs?$CJ?$CI?$CFs?$CJ?5?$AA@
  0036e	50		 push	 eax
  0036f	e8 00 00 00 00	 call	 _sprintf
  00374	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@CrywolfMVP:

; 280  : 
; 281  : 			int tObjNum;
; 282  : 
; 283  : 			for(int i = 0; i < 5; i++)

  00377	83 c7 04	 add	 edi, 4
  0037a	83 eb 01	 sub	 ebx, 1
  0037d	75 b1		 jne	 SHORT $LL4@CrywolfMVP

; 290  : 				}
; 291  : 			}
; 292  : 
; 293  : 			LogAddTD(szTmp);

  0037f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szTmp$1[ebp]
  00385	50		 push	 eax
  00386	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0038c	83 c4 04	 add	 esp, 4
$LN23@CrywolfMVP:

; 294  : 		}
; 295  : 	}
; 296  : 
; 297  : 	return iLEFT_EXP;

  0038f	8b 9d f8 fe ff
	ff		 mov	 ebx, DWORD PTR _iLEFT_EXP$1$[ebp]
  00395	8b c3		 mov	 eax, ebx
  00397	5f		 pop	 edi
  00398	5e		 pop	 esi
  00399	5b		 pop	 ebx

; 298  : }

  0039a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0039d	33 cd		 xor	 ecx, ebp
  0039f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a4	8b e5		 mov	 esp, ebp
  003a6	5d		 pop	 ebp
  003a7	c2 08 00	 ret	 8
$LN20@CrywolfMVP:
  003aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003ad	33 c0		 xor	 eax, eax
  003af	33 cd		 xor	 ecx, ebp
  003b1	5b		 pop	 ebx
  003b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003b7	8b e5		 mov	 esp, ebp
  003b9	5d		 pop	 ebp
  003ba	c2 08 00	 ret	 8
?CrywolfMVPLevelUp@CCrywolfUtil@@QAEHHH@Z ENDP		; CCrywolfUtil::CrywolfMVPLevelUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iObjIndex$ = 12					; size = 4
_lpszMsg$ = 16						; size = 4
?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendCrywolfChattingMsg, COMDAT

; 158  : 	return;
; 159  : 
; 160  : 	if( !OBJMAX_RANGE(iObjIndex) )
; 161  : 		return;
; 162  : 
; 163  : 	LPOBJ lpObj = &gObj[iObjIndex];
; 164  : 	char szBuffer[512];
; 165  : 	va_list pArguments;
; 166  : 
; 167  : 	va_start(pArguments, lpszMsg);
; 168  : 	vsprintf(szBuffer, lpszMsg, pArguments);
; 169  : 	va_end(pArguments);
; 170  : 
; 171  : 	char szChat[60];
; 172  : 
; 173  : 	strncpy(szChat,szBuffer,59);
; 174  : 
; 175  : 	for (int i;i<MAX_VIEWPORT_MONSTER;i++)
; 176  : 	{
; 177  : 		if ( lpObj->VpPlayer2[i].state != FALSE )
; 178  : 		{
; 179  : 			int iTargetNumber = lpObj->VpPlayer2[i].number;
; 180  : 
; 181  : 			if ( OBJMAX_RANGE(iTargetNumber) != FALSE )
; 182  : 			{
; 183  : 				ChatTargetSend(lpObj, szChat, iTargetNumber);
; 184  : 			}
; 185  : 		}
; 186  : 	}
; 187  : }

  00000	c3		 ret	 0
?SendCrywolfChattingMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendCrywolfChattingMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iType$ = 12						; size = 4
_lpszMsg$ = 16						; size = 4
?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendCrywolfUserAnyMsg, COMDAT

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 115  : 	if ( !lpszMsg )

  00014	8b 75 10	 mov	 esi, DWORD PTR _lpszMsg$[ebp]
  00017	85 f6		 test	 esi, esi
  00019	0f 84 e6 00 00
	00		 je	 $LN5@SendCrywol
  0001f	68 00 02 00 00	 push	 512			; 00000200H
  00024	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0002a	6a 00		 push	 0
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00035	8d 45 14	 lea	 eax, DWORD PTR _lpszMsg$[ebp+4]
  00038	50		 push	 eax
  00039	6a 00		 push	 0
  0003b	56		 push	 esi
  0003c	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00042	6a ff		 push	 -1
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	ff 70 04	 push	 DWORD PTR [eax+4]
  0004f	83 c9 01	 or	 ecx, 1
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp

; 127  : 	switch ( iType )

  00058	8b 45 0c	 mov	 eax, DWORD PTR _iType$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  0005b	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp

; 127  : 	switch ( iType )

  0005e	83 e8 01	 sub	 eax, 1
  00061	74 1f		 je	 SHORT $LN8@SendCrywol
  00063	83 e8 01	 sub	 eax, 1
  00066	75 4b		 jne	 SHORT $LN2@SendCrywol

; 132  : 			break;
; 133  : 
; 134  : 		case 2:
; 135  : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00068	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0006e	50		 push	 eax
  0006f	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00075	6a 00		 push	 0
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00080	eb 31		 jmp	 SHORT $LN2@SendCrywol
$LN8@SendCrywol:

; 128  : 	{
; 129  : 		case 1:
; 130  : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00082	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00088	50		 push	 eax
  00089	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  0008f	6a 00		 push	 0
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 131  : 			TNotice::SetNoticeProperty(&pNotice, 10, _ARGB(255, 255, 200, 80), 1, 0, 20);

  00097	6a 14		 push	 20			; 00000014H
  00099	6a 00		 push	 0
  0009b	6a 01		 push	 1
  0009d	68 ff c8 50 ff	 push	 -11482881		; ff50c8ffH
  000a2	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  000a8	6a 0a		 push	 10			; 0000000aH
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty
  000b0	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@SendCrywol:

; 136  : 			break;
; 137  : 	}
; 138  : 
; 139  : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  000b3	57		 push	 edi
  000b4	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  000b9	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
  000be	66 90		 npad	 2
$LL6@SendCrywol:

; 140  : 	{
; 141  : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000c5	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  000ca	75 29		 jne	 SHORT $LN4@SendCrywol

; 142  : 		{
; 143  : 			if ( gObj[i].Type == OBJ_USER )

  000cc	80 7c 06 50 01	 cmp	 BYTE PTR [esi+eax+80], 1
  000d1	75 22		 jne	 SHORT $LN4@SendCrywol

; 144  : 			{
; 145  : 				if ( gObj[i].MapNumber == MAP_INDEX_CRYWOLF_FIRSTZONE )

  000d3	80 bc 06 23 01
	00 00 22	 cmp	 BYTE PTR [esi+eax+291], 34 ; 00000022H
  000db	75 18		 jne	 SHORT $LN4@SendCrywol

; 146  : 				{
; 147  : 					DataSend(i, (LPBYTE)&pNotice, pNotice.h.size);

  000dd	0f b6 85 ed fc
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  000e4	50		 push	 eax
  000e5	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  000eb	50		 push	 eax
  000ec	57		 push	 edi
  000ed	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000f2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@SendCrywol:

; 136  : 			break;
; 137  : 	}
; 138  : 
; 139  : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  000f5	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  000fb	47		 inc	 edi
  000fc	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  00102	7c bc		 jl	 SHORT $LL6@SendCrywol
  00104	5f		 pop	 edi
$LN5@SendCrywol:

; 148  : 				}
; 149  : 			}
; 150  : 		}
; 151  : 	}
; 152  : 
; 153  : }

  00105	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00108	33 cd		 xor	 ecx, ebp
  0010a	5e		 pop	 esi
  0010b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c3		 ret	 0
?SendCrywolfUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendCrywolfUserAnyMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z PROC	; CCrywolfUtil::SendCrywolfUserAnyData, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 96   : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  0000e	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
$LL4@SendCrywol:

; 97   : 	{
; 98   : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 1e		 jne	 SHORT $LN2@SendCrywol

; 99   : 		{
; 100  : 			if ( gObj[i].Type == OBJ_USER )

  0001f	80 7c 06 50 01	 cmp	 BYTE PTR [esi+eax+80], 1
  00024	75 17		 jne	 SHORT $LN2@SendCrywol

; 101  : 			{
; 102  : 				if ( gObj[i].MapNumber == MAP_INDEX_CRYWOLF_FIRSTZONE )

  00026	80 bc 06 23 01
	00 00 22	 cmp	 BYTE PTR [esi+eax+291], 34 ; 00000022H
  0002e	75 0d		 jne	 SHORT $LN2@SendCrywol

; 103  : 				{
; 104  : 					DataSend(i, lpMsg, iSize);

  00030	53		 push	 ebx
  00031	ff 75 08	 push	 DWORD PTR _lpMsg$[ebp]
  00034	57		 push	 edi
  00035	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendCrywol:

; 96   : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  0003d	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00043	47		 inc	 edi
  00044	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  0004a	7c c7		 jl	 SHORT $LL4@SendCrywol
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx

; 105  : 				}
; 106  : 			}
; 107  : 		}
; 108  : 	}
; 109  : }

  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?SendCrywolfUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ENDP	; CCrywolfUtil::SendCrywolfUserAnyData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ
_TEXT	SEGMENT
_pNotice$ = -788					; size = 272
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_iType$ = 12						; size = 4
_lpszMsg$ = 16						; size = 4
?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ PROC	; CCrywolfUtil::SendAllUserAnyMsg, COMDAT

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 03 00
	00		 sub	 esp, 788		; 00000314H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 65   : 	if ( !lpszMsg )

  00013	83 7d 10 00	 cmp	 DWORD PTR _lpszMsg$[ebp], 0
  00017	0f 84 ba 00 00
	00		 je	 $LN2@SendAllUse
  0001d	68 00 02 00 00	 push	 512			; 00000200H
  00022	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00028	6a 00		 push	 0
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _memset
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00033	8d 45 14	 lea	 eax, DWORD PTR _lpszMsg$[ebp+4]
  00036	50		 push	 eax
  00037	6a 00		 push	 0
  00039	ff 75 10	 push	 DWORD PTR _lpszMsg$[ebp]
  0003c	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00042	6a ff		 push	 -1
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	ff 70 04	 push	 DWORD PTR [eax+4]
  0004f	83 c9 01	 or	 ecx, 1
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp

; 77   : 	switch ( iType )

  00058	8b 45 0c	 mov	 eax, DWORD PTR _iType$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  0005b	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp

; 77   : 	switch ( iType )

  0005e	83 e8 01	 sub	 eax, 1
  00061	74 37		 je	 SHORT $LN5@SendAllUse
  00063	83 e8 01	 sub	 eax, 1
  00066	75 6f		 jne	 SHORT $LN2@SendAllUse

; 83   : 			break;
; 84   : 
; 85   : 		case 2:
; 86   : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  00068	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0006e	50		 push	 eax
  0006f	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00075	6a 00		 push	 0
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 87   : 			TNotice::SendNoticeToAllUser(&pNotice);

  0007d	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?SendNoticeToAllUser@TNotice@@SAXPAX@Z ; TNotice::SendNoticeToAllUser
  00089	83 c4 10	 add	 esp, 16			; 00000010H

; 88   : 			break;
; 89   : 	}
; 90   : }

  0008c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008f	33 cd		 xor	 ecx, ebp
  00091	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
$LN5@SendAllUse:

; 78   : 	{
; 79   : 		case 1:
; 80   : 			TNotice::MakeNoticeMsg(&pNotice, 0, szBuffer);

  0009a	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  000a0	50		 push	 eax
  000a1	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  000a7	6a 00		 push	 0
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 81   : 			TNotice::SetNoticeProperty(&pNotice, 10, _ARGB(255, 255, 200, 80), 1, 0, 20);

  000af	6a 14		 push	 20			; 00000014H
  000b1	6a 00		 push	 0
  000b3	6a 01		 push	 1
  000b5	68 ff c8 50 ff	 push	 -11482881		; ff50c8ffH
  000ba	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  000c0	6a 0a		 push	 10			; 0000000aH
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty

; 82   : 			TNotice::SendNoticeToAllUser(&pNotice);

  000c8	8d 85 ec fc ff
	ff		 lea	 eax, DWORD PTR _pNotice$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?SendNoticeToAllUser@TNotice@@SAXPAX@Z ; TNotice::SendNoticeToAllUser
  000d4	83 c4 28	 add	 esp, 40			; 00000028H
$LN2@SendAllUse:

; 88   : 			break;
; 89   : 	}
; 90   : }

  000d7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000da	33 cd		 xor	 ecx, ebp
  000dc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	c3		 ret	 0
?SendAllUserAnyMsg@CCrywolfUtil@@QAAXHPADZZ ENDP	; CCrywolfUtil::SendAllUserAnyMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
_iSize$ = 12						; size = 4
?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z PROC	; CCrywolfUtil::SendAllUserAnyData, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 49   : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _iSize$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  0000e	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
$LL4@SendAllUse:

; 50   : 	{
; 51   : 		if ( gObj[i].Connected == PLAYER_PLAYING )

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00018	83 7c 06 04 03	 cmp	 DWORD PTR [esi+eax+4], 3
  0001d	75 14		 jne	 SHORT $LN2@SendAllUse

; 52   : 		{
; 53   : 			if ( gObj[i].Type == OBJ_USER )

  0001f	80 7c 06 50 01	 cmp	 BYTE PTR [esi+eax+80], 1
  00024	75 0d		 jne	 SHORT $LN2@SendAllUse

; 54   : 			{
; 55   : 				DataSend(i, lpMsg, iSize);

  00026	53		 push	 ebx
  00027	ff 75 08	 push	 DWORD PTR _lpMsg$[ebp]
  0002a	57		 push	 edi
  0002b	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendAllUse:

; 49   : 	for ( int i=OBJ_STARTUSERINDEX;i<OBJMAX;i++)

  00033	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00039	47		 inc	 edi
  0003a	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  00040	7c d1		 jl	 SHORT $LL4@SendAllUse
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx

; 56   : 			}
; 57   : 		}
; 58   : 	}
; 59   : }

  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?SendAllUserAnyData@CCrywolfUtil@@QAEXPAEH@Z ENDP	; CCrywolfUtil::SendAllUserAnyData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ
_TEXT	SEGMENT
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_lpszMsg$ = 12						; size = 4
?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ PROC	; CCrywolfUtil::SendMapServerGroupMsg, COMDAT

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 33   : 	if ( !lpszMsg )

  00013	83 7d 0c 00	 cmp	 DWORD PTR _lpszMsg$[ebp], 0
  00017	74 60		 je	 SHORT $LN1@SendMapSer
  00019	68 00 02 00 00	 push	 512			; 00000200H
  0001e	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  00024	6a 00		 push	 0
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  0002f	8d 45 10	 lea	 eax, DWORD PTR _lpszMsg$[ebp+4]
  00032	50		 push	 eax
  00033	6a 00		 push	 0
  00035	ff 75 0c	 push	 DWORD PTR _lpszMsg$[ebp]
  00038	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0003e	6a ff		 push	 -1
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00046	8b 08		 mov	 ecx, DWORD PTR [eax]
  00048	ff 70 04	 push	 DWORD PTR [eax+4]
  0004b	83 c9 01	 or	 ecx, 1
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  00054	a1 f8 6a 01 00	 mov	 eax, DWORD PTR ?g_MapServerManager@@3VCMapServerManager@@A+92920
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00059	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  0005c	85 c0		 test	 eax, eax
  0005e	74 06		 je	 SHORT $LN9@SendMapSer

; 56   : 		{
; 57   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  00060	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]
  00064	eb 03		 jmp	 SHORT $LN8@SendMapSer
$LN9@SendMapSer:

; 58   : 		}
; 59   : 		return -1;

  00066	83 c8 ff	 or	 eax, -1
$LN8@SendMapSer:
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp

; 43   : 	GS_GDReqMapSvrMsgMultiCast(g_MapServerManager.GetMapSvrGroup(), szBuffer);

  00069	8d 8d fc fd ff
	ff		 lea	 ecx, DWORD PTR _szBuffer$[ebp]
  0006f	51		 push	 ecx
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?GS_GDReqMapSvrMsgMultiCast@@YAXHPAD@Z ; GS_GDReqMapSvrMsgMultiCast
  00076	83 c4 08	 add	 esp, 8
$LN1@SendMapSer:

; 44   : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?SendMapServerGroupMsg@CCrywolfUtil@@QAAXPADZZ ENDP	; CCrywolfUtil::SendMapServerGroupMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ??1CCrywolfUtil@@UAE@XZ
_TEXT	SEGMENT
??1CCrywolfUtil@@UAE@XZ PROC				; CCrywolfUtil::~CCrywolfUtil, COMDAT
; _this$ = ecx

; 26   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCrywolfUtil@@6B@

; 27   : 	return;
; 28   : }

  00006	c3		 ret	 0
??1CCrywolfUtil@@UAE@XZ ENDP				; CCrywolfUtil::~CCrywolfUtil
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ??0CCrywolfUtil@@QAE@XZ
_TEXT	SEGMENT
??0CCrywolfUtil@@QAE@XZ PROC				; CCrywolfUtil::CCrywolfUtil, COMDAT
; _this$ = ecx

; 21   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CCrywolfUtil@@6B@

; 22   : 	return;
; 23   : }

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0CCrywolfUtil@@QAE@XZ ENDP				; CCrywolfUtil::CCrywolfUtil
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char *>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@PAD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1776 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1777 :     int _Result;
; 1778 :     va_list _ArgList;
; 1779 :     __crt_va_start(_ArgList, _Format);
; 1780 : 
; 1781 :     #pragma warning(push)
; 1782 :     #pragma warning(disable: 4996) // Deprecation
; 1783 :     _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1784 :     #pragma warning(pop)
; 1785 : 
; 1786 :     __crt_va_end(_ArgList);
; 1787 :     return _Result;
; 1788 : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _vsprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsprintf PROC						; COMDAT

; 1473 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	ff 75 10	 push	 DWORD PTR __ArgList$[ebp]
  00006	6a 00		 push	 0
  00008	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000b	6a ff		 push	 -1
  0000d	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00010	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	ff 70 04	 push	 DWORD PTR [eax+4]
  0001a	83 c9 01	 or	 ecx, 1
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00023	83 c9 ff	 or	 ecx, -1
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH
  00029	85 c0		 test	 eax, eax
  0002b	0f 48 c1	 cmovs	 eax, ecx

; 1474 :     #pragma warning(push)
; 1475 :     #pragma warning(disable: 4996) // Deprecation
; 1476 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);
; 1477 :     #pragma warning(pop)
; 1478 : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	ff 75 14	 push	 DWORD PTR __ArgList$[ebp]
  00006	ff 75 10	 push	 DWORD PTR __Locale$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1456 :     #pragma warning(push)
; 1457 :     #pragma warning(disable: 4996) // Deprecation
; 1458 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 1459 :     #pragma warning(pop)
; 1460 : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1386 :     int const _Result = __stdio_common_vsprintf(

  00003	ff 75 18	 push	 DWORD PTR __ArgList$[ebp]
  00006	ff 75 14	 push	 DWORD PTR __Locale$[ebp]
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1391 : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\crywolfutil.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
