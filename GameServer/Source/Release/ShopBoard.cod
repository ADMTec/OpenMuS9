; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\ShopBoard.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??0ShopBoard@@QAE@XZ				; ShopBoard::ShopBoard
PUBLIC	??1ShopBoard@@UAE@XZ				; ShopBoard::~ShopBoard
PUBLIC	?CGReqItemSearch@ShopBoard@@QAEXHPAUSHOPBOARD_CGREQ_ITEM@@@Z ; ShopBoard::CGReqItemSearch
PUBLIC	?GCAnsItemSearch@ShopBoard@@QAEXHG@Z		; ShopBoard::GCAnsItemSearch
PUBLIC	??_GShopBoard@@UAEPAXI@Z			; ShopBoard::`scalar deleting destructor'
PUBLIC	??_7ShopBoard@@6B@				; ShopBoard::`vftable'
PUBLIC	?g_ShopBoard@@3VShopBoard@@A			; g_ShopBoard
PUBLIC	??_R4ShopBoard@@6B@				; ShopBoard::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVShopBoard@@@8				; ShopBoard `RTTI Type Descriptor'
PUBLIC	??_R3ShopBoard@@8				; ShopBoard::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ShopBoard@@8				; ShopBoard::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ShopBoard@@8			; ShopBoard::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	??_EShopBoard@@UAEPAXI@Z:PROC			; ShopBoard::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?g_ShopBoard@@3VShopBoard@@A DD 01H DUP (?)		; g_ShopBoard
_BSS	ENDS
CRT$XCU	SEGMENT
?g_ShopBoard$initializer$@@3P6AXXZA DD FLAT:??__Eg_ShopBoard@@YAXXZ ; g_ShopBoard$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@ShopBoard@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ShopBoard@@8 DD FLAT:??_R0?AVShopBoard@@@8 ; ShopBoard::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ShopBoard@@8
rdata$r	ENDS
;	COMDAT ??_R2ShopBoard@@8
rdata$r	SEGMENT
??_R2ShopBoard@@8 DD FLAT:??_R1A@?0A@EA@ShopBoard@@8	; ShopBoard::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ShopBoard@@8
rdata$r	SEGMENT
??_R3ShopBoard@@8 DD 00H				; ShopBoard::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ShopBoard@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVShopBoard@@@8
data$r	SEGMENT
??_R0?AVShopBoard@@@8 DD FLAT:??_7type_info@@6B@	; ShopBoard `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVShopBoard@@', 00H
data$r	ENDS
;	COMDAT ??_R4ShopBoard@@6B@
rdata$r	SEGMENT
??_R4ShopBoard@@6B@ DD 00H				; ShopBoard::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVShopBoard@@@8
	DD	FLAT:??_R3ShopBoard@@8
rdata$r	ENDS
;	COMDAT ??_7ShopBoard@@6B@
CONST	SEGMENT
??_7ShopBoard@@6B@ DD FLAT:??_R4ShopBoard@@6B@		; ShopBoard::`vftable'
	DD	FLAT:??_EShopBoard@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_ShopBoard@@YAXXZ
text$yd	SEGMENT
??__Fg_ShopBoard@@YAXXZ PROC				; `dynamic atexit destructor for 'g_ShopBoard'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ShopBoard@@3VShopBoard@@A ; g_ShopBoard
  00005	e9 00 00 00 00	 jmp	 ??1ShopBoard@@UAE@XZ	; ShopBoard::~ShopBoard
??__Fg_ShopBoard@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_ShopBoard''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\shopboard.cpp
;	COMDAT ??__Eg_ShopBoard@@YAXXZ
text$di	SEGMENT
??__Eg_ShopBoard@@YAXXZ PROC				; `dynamic initializer for 'g_ShopBoard'', COMDAT

; 5    : ShopBoard g_ShopBoard;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ShopBoard@@3VShopBoard@@A ; g_ShopBoard
  00005	e8 00 00 00 00	 call	 ??0ShopBoard@@QAE@XZ	; ShopBoard::ShopBoard
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_ShopBoard@@YAXXZ ; `dynamic atexit destructor for 'g_ShopBoard''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_ShopBoard@@YAXXZ ENDP				; `dynamic initializer for 'g_ShopBoard''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GShopBoard@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GShopBoard@@UAEPAXI@Z PROC				; ShopBoard::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ShopBoard@@UAE@XZ	; ShopBoard::~ShopBoard
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 04		 push	 4
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GShopBoard@@UAEPAXI@Z ENDP				; ShopBoard::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\shopboard.cpp
;	COMDAT ?GCAnsItemSearch@ShopBoard@@QAEXHG@Z
_TEXT	SEGMENT
_lpInfo$ = -60088					; size = 50
_UserIndex$GSCopy$1$ = -60036				; size = 4
tv431 = -60032						; size = 4
_lpAnswer$ = -60028					; size = 10
tv429 = -60016						; size = 4
_Count$1$ = -60012					; size = 4
_Offset$1$ = -60008					; size = 4
_Temp$ = -60004						; size = 60000
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_ItemID$ = 12						; size = 2
?GCAnsItemSearch@ShopBoard@@QAEXHG@Z PROC		; ShopBoard::GCAnsItemSearch, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 b8 ea 00 00	 mov	 eax, 60088		; 0000eab8H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 08	 mov	 eax, DWORD PTR _UserIndex$[ebp]
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00022	89 85 7c 15 ff
	ff		 mov	 DWORD PTR _UserIndex$GSCopy$1$[ebp], eax
  00028	8d 85 9c 15 ff
	ff		 lea	 eax, DWORD PTR _Temp$[ebp]
  0002e	6a 00		 push	 0
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _memset

; 40   : 	LPOBJ lpUser	= &gObj[UserIndex];
; 41   : 	const int Size	= (sizeof(SHOPBOARD_GCANS_SHOPCOUNT) + sizeof(SHOPBOARD_GCANS_SHOPINFO)) * OBJMAXUSER;
; 42   : 	BYTE Temp[Size]	= { 0 };
; 43   : 	int Offset		= sizeof(SHOPBOARD_GCANS_SHOPCOUNT);
; 44   : 	int Count		= 0;

  00036	33 f6		 xor	 esi, esi
  00038	c7 85 98 15 ff
	ff 0a 00 00 00	 mov	 DWORD PTR _Offset$1$[ebp], 10 ; 0000000aH
  00042	6a 32		 push	 50			; 00000032H
  00044	8d 85 48 15 ff
	ff		 lea	 eax, DWORD PTR _lpInfo$[ebp]
  0004a	89 b5 94 15 ff
	ff		 mov	 DWORD PTR _Count$1$[ebp], esi
  00050	56		 push	 esi
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _memset

; 45   : 	SHOPBOARD_GCANS_SHOPINFO lpInfo = { 0 };
; 46   : 	// ----
; 47   : 	for( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++ )

  00057	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005d	b9 00 dd 49 06	 mov	 ecx, 105504000		; 0649dd00H
  00062	66 8b 7d 0c	 mov	 di, WORD PTR _ItemID$[ebp]
  00066	83 c4 18	 add	 esp, 24			; 00000018H
  00069	bb 04 29 00 00	 mov	 ebx, 10500		; 00002904H
  0006e	89 8d 80 15 ff
	ff		 mov	 DWORD PTR tv431[ebp], ecx
  00074	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL27@GCAnsItemS:

; 48   : 	{
; 49   : 		if(		gObj[i].m_bPShopOpen == false 
; 50   : 			||	gObj[i].Connected < PLAYER_PLAYING 
; 51   : 			||	UserIndex == i )

  00080	80 bc 11 5c 12
	00 00 00	 cmp	 BYTE PTR [ecx+edx+4700], 0
  00088	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0008d	0f 84 37 01 00
	00		 je	 $LN24@GCAnsItemS
  00093	83 7c 11 04 03	 cmp	 DWORD PTR [ecx+edx+4], 3
  00098	0f 8c 2c 01 00
	00		 jl	 $LN24@GCAnsItemS
  0009e	39 9d 7c 15 ff
	ff		 cmp	 DWORD PTR _UserIndex$GSCopy$1$[ebp], ebx
  000a4	0f 84 20 01 00
	00		 je	 $LN24@GCAnsItemS

; 52   : 		{
; 53   : 			continue;
; 54   : 		}
; 55   : 		// ----
; 56   : 		if( ItemID != (WORD)-1 )

  000aa	66 3b f8	 cmp	 di, ax
  000ad	0f 84 ba 01 00
	00		 je	 $LN10@GCAnsItemS

; 57   : 		{
; 58   : 			for( int ItemPos = MAIN_INVENTORY_SIZE; ItemPos < INVENTORY_SIZE - 1; ItemPos++ )

  000b3	83 c1 5d	 add	 ecx, 93			; 0000005dH
  000b6	8d bd 9c 15 ff
	ff		 lea	 edi, DWORD PTR _Temp$[ebp]
  000bc	03 bd 98 15 ff
	ff		 add	 edi, DWORD PTR _Offset$1$[ebp]
  000c2	be f0 a8 00 00	 mov	 esi, 43248		; 0000a8f0H
  000c7	89 8d 90 15 ff
	ff		 mov	 DWORD PTR tv429[ebp], ecx
  000cd	0f 1f 00	 npad	 3
$LL7@GCAnsItemS:

; 59   : 			{
; 60   : 				if(		gObj[i].Inventory1[ItemPos].IsItem()
; 61   : 					&&	gObj[i].Inventory1[ItemPos].m_Type == ItemID )

  000d0	8b 8c 11 73 11
	00 00		 mov	 ecx, DWORD PTR [ecx+edx+4467]
  000d7	03 ce		 add	 ecx, esi
  000d9	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  000de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000e4	85 c0		 test	 eax, eax
  000e6	0f 84 b6 00 00
	00		 je	 $LN26@GCAnsItemS
  000ec	8b 85 90 15 ff
	ff		 mov	 eax, DWORD PTR tv429[ebp]
  000f2	8b 84 10 73 11
	00 00		 mov	 eax, DWORD PTR [eax+edx+4467]
  000f9	0f bf 4c 30 06	 movsx	 ecx, WORD PTR [eax+esi+6]
  000fe	0f b7 45 0c	 movzx	 eax, WORD PTR _ItemID$[ebp]
  00102	3b c8		 cmp	 ecx, eax

; 62   : 				{
; 63   : 					lpInfo.UserIndexH = SET_NUMBERH(i);
; 64   : 					lpInfo.UserIndexL = SET_NUMBERL(i);
; 65   : 					memcpy(lpInfo.UserName, gObj[i].Name, MAX_ACCOUNT_LEN);

  00104	8b 8d 90 15 ff
	ff		 mov	 ecx, DWORD PTR tv429[ebp]
  0010a	0f 85 98 00 00
	00		 jne	 $LN5@GCAnsItemS
  00110	f3 0f 7e 04 11	 movq	 xmm0, QWORD PTR [ecx+edx]
  00115	8b c3		 mov	 eax, ebx

; 66   : 					memcpy(lpInfo.ShopName, gObj[i].m_szPShopText, 36);
; 67   : 					Count++;

  00117	ff 85 94 15 ff
	ff		 inc	 DWORD PTR _Count$1$[ebp]

; 68   : 					memcpy(&Temp[Offset], (LPBYTE)&lpInfo, sizeof(SHOPBOARD_GCANS_SHOPINFO));
; 69   : 					Offset += sizeof(SHOPBOARD_GCANS_SHOPINFO);

  0011d	83 85 98 15 ff
	ff 32		 add	 DWORD PTR _Offset$1$[ebp], 50 ; 00000032H
  00124	66 0f d6 85 4a
	15 ff ff	 movq	 QWORD PTR _lpInfo$[ebp+2], xmm0
  0012c	0f 10 84 11 03
	12 00 00	 movups	 xmm0, XMMWORD PTR [ecx+edx+4611]
  00134	c1 e8 08	 shr	 eax, 8
  00137	88 85 48 15 ff
	ff		 mov	 BYTE PTR _lpInfo$[ebp], al
  0013d	0f b7 44 11 08	 movzx	 eax, WORD PTR [ecx+edx+8]
  00142	0f 11 85 55 15
	ff ff		 movups	 XMMWORD PTR _lpInfo$[ebp+13], xmm0
  00149	66 89 85 52 15
	ff ff		 mov	 WORD PTR _lpInfo$[ebp+10], ax
  00150	0f 10 84 11 13
	12 00 00	 movups	 xmm0, XMMWORD PTR [ecx+edx+4627]
  00158	8b 84 11 23 12
	00 00		 mov	 eax, DWORD PTR [ecx+edx+4643]
  0015f	88 9d 49 15 ff
	ff		 mov	 BYTE PTR _lpInfo$[ebp+1], bl
  00165	0f 11 85 65 15
	ff ff		 movups	 XMMWORD PTR _lpInfo$[ebp+29], xmm0
  0016c	89 85 75 15 ff
	ff		 mov	 DWORD PTR _lpInfo$[ebp+45], eax
  00172	0f 10 85 48 15
	ff ff		 movups	 xmm0, XMMWORD PTR _lpInfo$[ebp]
  00179	0f b7 85 78 15
	ff ff		 movzx	 eax, WORD PTR _lpInfo$[ebp+48]
  00180	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0
  00183	0f 10 85 58 15
	ff ff		 movups	 xmm0, XMMWORD PTR _lpInfo$[ebp+16]
  0018a	0f 11 47 10	 movups	 XMMWORD PTR [edi+16], xmm0
  0018e	0f 10 85 68 15
	ff ff		 movups	 xmm0, XMMWORD PTR _lpInfo$[ebp+32]
  00195	0f 11 47 20	 movups	 XMMWORD PTR [edi+32], xmm0
  00199	66 89 47 30	 mov	 WORD PTR [edi+48], ax
  0019d	83 c7 32	 add	 edi, 50			; 00000032H
  001a0	eb 06		 jmp	 SHORT $LN5@GCAnsItemS
$LN26@GCAnsItemS:
  001a2	8b 8d 90 15 ff
	ff		 mov	 ecx, DWORD PTR tv429[ebp]
$LN5@GCAnsItemS:

; 57   : 		{
; 58   : 			for( int ItemPos = MAIN_INVENTORY_SIZE; ItemPos < INVENTORY_SIZE - 1; ItemPos++ )

  001a8	81 c6 d4 00 00
	00		 add	 esi, 212		; 000000d4H
  001ae	81 fe 70 c3 00
	00		 cmp	 esi, 50032		; 0000c370H
  001b4	0f 8c 16 ff ff
	ff		 jl	 $LL7@GCAnsItemS

; 70   : 				}
; 71   : 			}
; 72   : 		}
; 73   : 		else

  001ba	8b 8d 80 15 ff
	ff		 mov	 ecx, DWORD PTR tv431[ebp]
  001c0	66 8b 7d 0c	 mov	 di, WORD PTR _ItemID$[ebp]
  001c4	8b b5 94 15 ff
	ff		 mov	 esi, DWORD PTR _Count$1$[ebp]
$LN24@GCAnsItemS:
  001ca	8b 85 98 15 ff
	ff		 mov	 eax, DWORD PTR _Offset$1$[ebp]
$LN2@GCAnsItemS:

; 45   : 	SHOPBOARD_GCANS_SHOPINFO lpInfo = { 0 };
; 46   : 	// ----
; 47   : 	for( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++ )

  001d0	81 c1 40 27 00
	00		 add	 ecx, 10048		; 00002740H
  001d6	43		 inc	 ebx
  001d7	89 8d 80 15 ff
	ff		 mov	 DWORD PTR tv431[ebp], ecx
  001dd	81 f9 00 2f e3
	06		 cmp	 ecx, 115552000		; 06e32f00H
  001e3	0f 8c 97 fe ff
	ff		 jl	 $LL27@GCAnsItemS

; 82   : 		}
; 83   : 	}
; 84   : 	// ----
; 85   : 	SHOPBOARD_GCANS_SHOPCOUNT lpAnswer = { 0 };
; 86   : 	lpAnswer.h.c		= 0xC2;
; 87   : 	lpAnswer.h.headcode = 0xEC;
; 88   : 	lpAnswer.h.subcode	= 0x31;
; 89   : 	lpAnswer.h.sizeH	= SET_NUMBERH(Offset);
; 90   : 	lpAnswer.h.sizeL	= SET_NUMBERL(Offset);

  001e9	8b 8d 98 15 ff
	ff		 mov	 ecx, DWORD PTR _Offset$1$[ebp]
  001ef	0f 57 c0	 xorps	 xmm0, xmm0
  001f2	66 0f d6 85 85
	15 ff ff	 movq	 QWORD PTR _lpAnswer$[ebp+1], xmm0
  001fa	c1 e8 08	 shr	 eax, 8
  001fd	88 85 85 15 ff
	ff		 mov	 BYTE PTR _lpAnswer$[ebp+1], al

; 91   : 	lpAnswer.Count		= Count;

  00203	89 b5 89 15 ff
	ff		 mov	 DWORD PTR _lpAnswer$[ebp+5], esi
  00209	c6 85 8d 15 ff
	ff 00		 mov	 BYTE PTR _lpAnswer$[ebp+9], 0

; 92   : 	memcpy(&Temp[0], (LPBYTE)&lpAnswer, sizeof(SHOPBOARD_GCANS_SHOPCOUNT));

  00210	66 8b 85 8c 15
	ff ff		 mov	 ax, WORD PTR _lpAnswer$[ebp+8]
  00217	66 89 85 a4 15
	ff ff		 mov	 WORD PTR _Temp$[ebp+8], ax

; 93   : 	// ----
; 94   : 	DataSend(UserIndex, Temp, Offset);

  0021e	8d 85 9c 15 ff
	ff		 lea	 eax, DWORD PTR _Temp$[ebp]
  00224	51		 push	 ecx
  00225	50		 push	 eax
  00226	ff b5 7c 15 ff
	ff		 push	 DWORD PTR _UserIndex$GSCopy$1$[ebp]
  0022c	88 8d 86 15 ff
	ff		 mov	 BYTE PTR _lpAnswer$[ebp+2], cl
  00232	c6 85 84 15 ff
	ff c2		 mov	 BYTE PTR _lpAnswer$[ebp], 194 ; 000000c2H
  00239	66 c7 85 87 15
	ff ff ec 31	 mov	 WORD PTR _lpAnswer$[ebp+3], 12780 ; 000031ecH
  00242	f3 0f 7e 85 84
	15 ff ff	 movq	 xmm0, QWORD PTR _lpAnswer$[ebp]
  0024a	66 0f d6 85 9c
	15 ff ff	 movq	 QWORD PTR _Temp$[ebp], xmm0
  00252	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 95   : }

  00257	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0025a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0025d	33 cd		 xor	 ecx, ebp
  0025f	5f		 pop	 edi
  00260	5e		 pop	 esi
  00261	5b		 pop	 ebx
  00262	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00267	8b e5		 mov	 esp, ebp
  00269	5d		 pop	 ebp
  0026a	c2 08 00	 ret	 8
$LN10@GCAnsItemS:

; 74   : 		{
; 75   : 			lpInfo.UserIndexH = SET_NUMBERH(i);
; 76   : 			lpInfo.UserIndexL = SET_NUMBERL(i);
; 77   : 			memcpy(lpInfo.UserName, gObj[i].Name, MAX_ACCOUNT_LEN);

  0026d	f3 0f 7e 44 11
	5d		 movq	 xmm0, QWORD PTR [ecx+edx+93]
  00273	8b c3		 mov	 eax, ebx
  00275	c1 e8 08	 shr	 eax, 8

; 78   : 			memcpy(lpInfo.ShopName, gObj[i].m_szPShopText, 36);
; 79   : 			Count++;

  00278	46		 inc	 esi
  00279	66 0f d6 85 4a
	15 ff ff	 movq	 QWORD PTR _lpInfo$[ebp+2], xmm0
  00281	0f 10 84 11 60
	12 00 00	 movups	 xmm0, XMMWORD PTR [ecx+edx+4704]
  00289	88 85 48 15 ff
	ff		 mov	 BYTE PTR _lpInfo$[ebp], al
  0028f	0f b7 44 11 65	 movzx	 eax, WORD PTR [ecx+edx+101]
  00294	66 89 85 52 15
	ff ff		 mov	 WORD PTR _lpInfo$[ebp+10], ax
  0029b	8b 84 11 80 12
	00 00		 mov	 eax, DWORD PTR [ecx+edx+4736]
  002a2	0f 11 85 55 15
	ff ff		 movups	 XMMWORD PTR _lpInfo$[ebp+13], xmm0
  002a9	89 85 75 15 ff
	ff		 mov	 DWORD PTR _lpInfo$[ebp+45], eax
  002af	0f 10 84 11 70
	12 00 00	 movups	 xmm0, XMMWORD PTR [ecx+edx+4720]

; 80   : 			memcpy(&Temp[Offset], (LPBYTE)&lpInfo, sizeof(SHOPBOARD_GCANS_SHOPINFO));

  002b7	8b 85 98 15 ff
	ff		 mov	 eax, DWORD PTR _Offset$1$[ebp]
  002bd	88 9d 49 15 ff
	ff		 mov	 BYTE PTR _lpInfo$[ebp+1], bl
  002c3	0f 11 85 65 15
	ff ff		 movups	 XMMWORD PTR _lpInfo$[ebp+29], xmm0
  002ca	89 b5 94 15 ff
	ff		 mov	 DWORD PTR _Count$1$[ebp], esi
  002d0	0f 10 85 48 15
	ff ff		 movups	 xmm0, XMMWORD PTR _lpInfo$[ebp]
  002d7	8b b5 98 15 ff
	ff		 mov	 esi, DWORD PTR _Offset$1$[ebp]
  002dd	0f 11 84 05 9c
	15 ff ff	 movups	 XMMWORD PTR _Temp$[ebp+eax], xmm0
  002e5	0f 10 85 58 15
	ff ff		 movups	 xmm0, XMMWORD PTR _lpInfo$[ebp+16]
  002ec	0f 11 84 05 ac
	15 ff ff	 movups	 XMMWORD PTR _Temp$[ebp+eax+16], xmm0
  002f4	0f 10 85 68 15
	ff ff		 movups	 xmm0, XMMWORD PTR _lpInfo$[ebp+32]
  002fb	0f 11 84 05 bc
	15 ff ff	 movups	 XMMWORD PTR _Temp$[ebp+eax+32], xmm0
  00303	0f b7 85 78 15
	ff ff		 movzx	 eax, WORD PTR _lpInfo$[ebp+48]
  0030a	66 89 84 35 cc
	15 ff ff	 mov	 WORD PTR _Temp$[ebp+esi+48], ax

; 81   : 			Offset += sizeof(SHOPBOARD_GCANS_SHOPINFO);

  00312	8b c6		 mov	 eax, esi
  00314	8b b5 94 15 ff
	ff		 mov	 esi, DWORD PTR _Count$1$[ebp]
  0031a	83 c0 32	 add	 eax, 50			; 00000032H
  0031d	89 85 98 15 ff
	ff		 mov	 DWORD PTR _Offset$1$[ebp], eax
  00323	e9 a8 fe ff ff	 jmp	 $LN2@GCAnsItemS
?GCAnsItemSearch@ShopBoard@@QAEXHG@Z ENDP		; ShopBoard::GCAnsItemSearch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\shopboard.cpp
;	COMDAT ?CGReqItemSearch@ShopBoard@@QAEXHPAUSHOPBOARD_CGREQ_ITEM@@@Z
_TEXT	SEGMENT
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqItemSearch@ShopBoard@@QAEXHPAUSHOPBOARD_CGREQ_ITEM@@@Z PROC ; ShopBoard::CGReqItemSearch, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 22   : 	if( !OBJMAX_RANGE(UserIndex) )

  00003	8b 55 08	 mov	 edx, DWORD PTR _UserIndex$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	85 d2		 test	 edx, edx
  0000b	78 31		 js	 SHORT $LN1@CGReqItemS
  0000d	33 c0		 xor	 eax, eax
  0000f	81 fa eb 2c 00
	00		 cmp	 edx, 11499		; 00002cebH
  00015	0f 9e c0	 setle	 al
  00018	85 c0		 test	 eax, eax
  0001a	74 22		 je	 SHORT $LN1@CGReqItemS

; 23   : 	{
; 24   : 		return;
; 25   : 	}
; 26   : 	// ----
; 27   : 	LPOBJ lpUser = &gObj[UserIndex];
; 28   : 	// ----
; 29   : 	if( lpUser->Connected < PLAYER_PLAYING )

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00021	69 ca 40 27 00
	00		 imul	 ecx, edx, 10048
  00027	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  0002c	7c 10		 jl	 SHORT $LN1@CGReqItemS

; 30   : 	{
; 31   : 		return;
; 32   : 	}
; 33   : 	// ----
; 34   : 	this->GCAnsItemSearch(UserIndex, lpData->ItemID);

  0002e	8b 45 0c	 mov	 eax, DWORD PTR _lpData$[ebp]
  00031	8b ce		 mov	 ecx, esi
  00033	0f b7 40 08	 movzx	 eax, WORD PTR [eax+8]
  00037	50		 push	 eax
  00038	52		 push	 edx
  00039	e8 00 00 00 00	 call	 ?GCAnsItemSearch@ShopBoard@@QAEXHG@Z ; ShopBoard::GCAnsItemSearch
$LN1@CGReqItemS:
  0003e	5e		 pop	 esi

; 35   : }

  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?CGReqItemSearch@ShopBoard@@QAEXHPAUSHOPBOARD_CGREQ_ITEM@@@Z ENDP ; ShopBoard::CGReqItemSearch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\shopboard.cpp
;	COMDAT ??1ShopBoard@@UAE@XZ
_TEXT	SEGMENT
??1ShopBoard@@UAE@XZ PROC				; ShopBoard::~ShopBoard, COMDAT
; _this$ = ecx

; 15   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ShopBoard@@6B@

; 16   : 
; 17   : }

  00006	c3		 ret	 0
??1ShopBoard@@UAE@XZ ENDP				; ShopBoard::~ShopBoard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\shopboard.cpp
;	COMDAT ??0ShopBoard@@QAE@XZ
_TEXT	SEGMENT
??0ShopBoard@@QAE@XZ PROC				; ShopBoard::ShopBoard, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ShopBoard@@6B@

; 10   : 
; 11   : }

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0ShopBoard@@QAE@XZ ENDP				; ShopBoard::ShopBoard
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\shopboard.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 97   : // -------------------------------------------------------------------------------

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\shopboard.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 97   : // -------------------------------------------------------------------------------

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
