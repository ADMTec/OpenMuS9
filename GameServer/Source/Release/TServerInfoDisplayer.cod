; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\TServerInfoDisplayer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0TServerInfoDisplayer@@QAE@XZ			; TServerInfoDisplayer::TServerInfoDisplayer
PUBLIC	??1TServerInfoDisplayer@@UAE@XZ			; TServerInfoDisplayer::~TServerInfoDisplayer
PUBLIC	?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z	; TServerInfoDisplayer::Run
PUBLIC	?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckLogFileSize
PUBLIC	?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckJSConnection
PUBLIC	?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckFSConnection
PUBLIC	?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::CheckDSConnection
PUBLIC	?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEXDSConnection
PUBLIC	?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEVDSConnection
PUBLIC	?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckRKDSConnection
PUBLIC	?InitGDIObject@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::InitGDIObject
PUBLIC	?DelGDIObject@TServerInfoDisplayer@@QAEXXZ	; TServerInfoDisplayer::DelGDIObject
PUBLIC	?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z ; TServerInfoDisplayer::PaintAllInfo
PUBLIC	??_GTServerInfoDisplayer@@UAEPAXI@Z		; TServerInfoDisplayer::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_7TServerInfoDisplayer@@6B@			; TServerInfoDisplayer::`vftable'
PUBLIC	?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A ; g_ServerInfoDisplayer
PUBLIC	?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A		; SERVER_CONN_STATE_LOG
PUBLIC	??_C@_0O@CJLJIALA@?4?2Log?2Connect?$AA@		; `string'
PUBLIC	??_C@_07FJPHLACI@Connect?$AA@			; `string'
PUBLIC	??_C@_0L@ELBCNCOF@GAMESERVER?$AA@		; `string'
PUBLIC	??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@ ; `string'
PUBLIC	??_C@_05MOECANKB@Times?$AA@			; `string'
PUBLIC	??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@ ; `string'
PUBLIC	??_R4TServerInfoDisplayer@@6B@			; TServerInfoDisplayer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTServerInfoDisplayer@@@8		; TServerInfoDisplayer `RTTI Type Descriptor'
PUBLIC	??_R3TServerInfoDisplayer@@8			; TServerInfoDisplayer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TServerInfoDisplayer@@8			; TServerInfoDisplayer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TServerInfoDisplayer@@8		; TServerInfoDisplayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	__imp__CreateFontA@56:PROC
EXTRN	__imp__CreateSolidBrush@4:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__SetBkMode@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__TextOutA@20:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__FillRect@12:PROC
EXTRN	??_ETServerInfoDisplayer@@UAEPAXI@Z:PROC	; TServerInfoDisplayer::`vector deleting destructor'
EXTRN	?GetSocket@MyWinsockBase@@QAEIXZ:PROC		; MyWinsockBase::GetSocket
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?Output@CLogToFile@@QAAXPADZZ:PROC		; CLogToFile::Output
EXTRN	??0CLogToFile@@QAE@QAD0H@Z:PROC			; CLogToFile::CLogToFile
EXTRN	??1CLogToFile@@QAE@XZ:PROC			; CLogToFile::~CLogToFile
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?IsEventChipServerConnected@@3HA:DWORD		; IsEventChipServerConnected
EXTRN	?wsJServerCli@@3VwsJoinServerCli@@A:BYTE	; wsJServerCli
EXTRN	?wsExDbCli@@3VwsJoinServerCli@@A:BYTE		; wsExDbCli
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A DB 028H DUP (?) ; g_ServerInfoDisplayer
?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A DB 010228H DUP (?) ; SERVER_CONN_STATE_LOG
_BSS	ENDS
CRT$XCU	SEGMENT
?g_ServerInfoDisplayer$initializer$@@3P6AXXZA DD FLAT:??__Eg_ServerInfoDisplayer@@YAXXZ ; g_ServerInfoDisplayer$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@TServerInfoDisplayer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TServerInfoDisplayer@@8 DD FLAT:??_R0?AVTServerInfoDisplayer@@@8 ; TServerInfoDisplayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TServerInfoDisplayer@@8
rdata$r	ENDS
;	COMDAT ??_R2TServerInfoDisplayer@@8
rdata$r	SEGMENT
??_R2TServerInfoDisplayer@@8 DD FLAT:??_R1A@?0A@EA@TServerInfoDisplayer@@8 ; TServerInfoDisplayer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TServerInfoDisplayer@@8
rdata$r	SEGMENT
??_R3TServerInfoDisplayer@@8 DD 00H			; TServerInfoDisplayer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TServerInfoDisplayer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTServerInfoDisplayer@@@8
data$r	SEGMENT
??_R0?AVTServerInfoDisplayer@@@8 DD FLAT:??_7type_info@@6B@ ; TServerInfoDisplayer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTServerInfoDisplayer@@', 00H
data$r	ENDS
;	COMDAT ??_R4TServerInfoDisplayer@@6B@
rdata$r	SEGMENT
??_R4TServerInfoDisplayer@@6B@ DD 00H			; TServerInfoDisplayer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTServerInfoDisplayer@@@8
	DD	FLAT:??_R3TServerInfoDisplayer@@8
rdata$r	ENDS
;	COMDAT ??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@
CONST	SEGMENT
??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@ DB 'Server I'
	DB	'nterconnection Check - [FS/%d] [DS/%d] [EX/%d] [ES/%d] [RS/%d'
	DB	']', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05MOECANKB@Times?$AA@
CONST	SEGMENT
??_C@_05MOECANKB@Times?$AA@ DB 'Times', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@ DB '5) Ran'
	DB	'kingServer - Disconnected', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@ DB '4) Event'
	DB	'Server - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@ DB '3) ExDBSe'
	DB	'rver - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@ DB '2) DataSe'
	DB	'rver - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@ DB '1) FsGa'
	DB	'teServer - Disconnected', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@
CONST	SEGMENT
??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@ DB '0) JoinSe'
	DB	'rver - Disconnected', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ELBCNCOF@GAMESERVER?$AA@
CONST	SEGMENT
??_C@_0L@ELBCNCOF@GAMESERVER?$AA@ DB 'GAMESERVER', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?ServerTypeText@@3PAPADA DD FLAT:??_C@_0L@ELBCNCOF@GAMESERVER?$AA@ ; ServerTypeText
?ErrorMessge@@3PAPADA DD FLAT:??_C@_0BN@ECDKHDNJ@0?$CJ?5JoinServer?5?9?5Disconnected?$AA@ ; ErrorMessge
	DD	FLAT:??_C@_0BP@FFDIJJDL@1?$CJ?5FsGateServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0BN@JKFHKNPO@2?$CJ?5DataServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0BN@DKGHECHI@3?$CJ?5ExDBServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0BO@EEEBINBE@4?$CJ?5EventServer?5?9?5Disconnected?$AA@
	DD	FLAT:??_C@_0CA@BLGEHOPE@5?$CJ?5RankingServer?5?9?5Disconnected?$AA@
	ORG $+8
_DATA	ENDS
;	COMDAT ??_C@_07FJPHLACI@Connect?$AA@
CONST	SEGMENT
??_C@_07FJPHLACI@Connect?$AA@ DB 'Connect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CJLJIALA@?4?2Log?2Connect?$AA@
CONST	SEGMENT
??_C@_0O@CJLJIALA@?4?2Log?2Connect?$AA@ DB '.\Log\Connect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7TServerInfoDisplayer@@6B@
CONST	SEGMENT
??_7TServerInfoDisplayer@@6B@ DD FLAT:??_R4TServerInfoDisplayer@@6B@ ; TServerInfoDisplayer::`vftable'
	DD	FLAT:??_ETServerInfoDisplayer@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
?SERVER_CONN_STATE_LOG$initializer$@@3P6AXXZA DD FLAT:??__ESERVER_CONN_STATE_LOG@@YAXXZ ; SERVER_CONN_STATE_LOG$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FSERVER_CONN_STATE_LOG@@YAXXZ
text$yd	SEGMENT
??__FSERVER_CONN_STATE_LOG@@YAXXZ PROC			; `dynamic atexit destructor for 'SERVER_CONN_STATE_LOG'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A ; SERVER_CONN_STATE_LOG
  00005	e9 00 00 00 00	 jmp	 ??1CLogToFile@@QAE@XZ	; CLogToFile::~CLogToFile
??__FSERVER_CONN_STATE_LOG@@YAXXZ ENDP			; `dynamic atexit destructor for 'SERVER_CONN_STATE_LOG''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ??__ESERVER_CONN_STATE_LOG@@YAXXZ
text$di	SEGMENT
??__ESERVER_CONN_STATE_LOG@@YAXXZ PROC			; `dynamic initializer for 'SERVER_CONN_STATE_LOG'', COMDAT

; 12   : CLogToFile SERVER_CONN_STATE_LOG(LOG_NAME_CONNECT, LOG_PATH_CONNECT, 1);

  00000	6a 01		 push	 1
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CJLJIALA@?4?2Log?2Connect?$AA@
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_07FJPHLACI@Connect?$AA@
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A ; SERVER_CONN_STATE_LOG
  00011	e8 00 00 00 00	 call	 ??0CLogToFile@@QAE@QAD0H@Z ; CLogToFile::CLogToFile
  00016	68 00 00 00 00	 push	 OFFSET ??__FSERVER_CONN_STATE_LOG@@YAXXZ ; `dynamic atexit destructor for 'SERVER_CONN_STATE_LOG''
  0001b	e8 00 00 00 00	 call	 _atexit
  00020	59		 pop	 ecx
  00021	c3		 ret	 0
??__ESERVER_CONN_STATE_LOG@@YAXXZ ENDP			; `dynamic initializer for 'SERVER_CONN_STATE_LOG''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_ServerInfoDisplayer@@YAXXZ
text$yd	SEGMENT
??__Fg_ServerInfoDisplayer@@YAXXZ PROC			; `dynamic atexit destructor for 'g_ServerInfoDisplayer'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A ; g_ServerInfoDisplayer
  00005	e9 00 00 00 00	 jmp	 ??1TServerInfoDisplayer@@UAE@XZ ; TServerInfoDisplayer::~TServerInfoDisplayer
??__Fg_ServerInfoDisplayer@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_ServerInfoDisplayer''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ??__Eg_ServerInfoDisplayer@@YAXXZ
text$di	SEGMENT
??__Eg_ServerInfoDisplayer@@YAXXZ PROC			; `dynamic initializer for 'g_ServerInfoDisplayer'', COMDAT

; 11   : TServerInfoDisplayer g_ServerInfoDisplayer;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ServerInfoDisplayer@@3VTServerInfoDisplayer@@A ; g_ServerInfoDisplayer
  00005	e8 00 00 00 00	 call	 ??0TServerInfoDisplayer@@QAE@XZ ; TServerInfoDisplayer::TServerInfoDisplayer
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_ServerInfoDisplayer@@YAXXZ ; `dynamic atexit destructor for 'g_ServerInfoDisplayer''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_ServerInfoDisplayer@@YAXXZ ENDP			; `dynamic initializer for 'g_ServerInfoDisplayer''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GTServerInfoDisplayer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GTServerInfoDisplayer@@UAEPAXI@Z PROC		; TServerInfoDisplayer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1TServerInfoDisplayer@@UAE@XZ ; TServerInfoDisplayer::~TServerInfoDisplayer
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 28		 push	 40			; 00000028H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GTServerInfoDisplayer@@UAEPAXI@Z ENDP		; TServerInfoDisplayer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z
_TEXT	SEGMENT
_hWnd$GSCopy$1$ = -32					; size = 4
_iOldBkMode$1$ = -28					; size = 4
tv308 = -24						; size = 4
tv297 = -24						; size = 4
tv290 = -24						; size = 4
tv283 = -24						; size = 4
tv262 = -24						; size = 4
tv141 = -24						; size = 4
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_iTopLeftX$ = 12					; size = 4
_iTopLeftY$ = 16					; size = 4
?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z PROC ; TServerInfoDisplayer::PaintAllInfo, COMDAT
; _this$ = ecx

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _hWnd$[ebp]
  00014	56		 push	 esi
  00015	57		 push	 edi

; 161  : 	HDC hDC = GetDC(hWnd);

  00016	53		 push	 ebx
  00017	8b f1		 mov	 esi, ecx
  00019	89 5d e0	 mov	 DWORD PTR _hWnd$GSCopy$1$[ebp], ebx
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  00022	8b f8		 mov	 edi, eax

; 162  : 	RECT rect;
; 163  : 	GetClientRect(hWnd, &rect);

  00024	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00027	50		 push	 eax
  00028	53		 push	 ebx
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8

; 164  : 	rect.top = 20;
; 165  : 	rect.bottom = 80;
; 166  : 	int iLineCount = 0;
; 167  : 
; 168  : 	int iOldBkMode = SetBkMode(hDC, TRANSPARENT);

  0002f	6a 01		 push	 1
  00031	57		 push	 edi
  00032	c7 45 f0 14 00
	00 00		 mov	 DWORD PTR _rect$[ebp+4], 20 ; 00000014H
  00039	33 db		 xor	 ebx, ebx
  0003b	c7 45 f8 50 00
	00 00		 mov	 DWORD PTR _rect$[ebp+12], 80 ; 00000050H
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetBkMode@8
  00048	89 45 e4	 mov	 DWORD PTR _iOldBkMode$1$[ebp], eax

; 169  : 
; 170  : 	if ( this->m_bValidJSConnection != FALSE && this->m_bValidDSConnection != FALSE && this->m_bValidFSConnection != FALSE )

  0004b	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  0004e	74 0f		 je	 SHORT $LN2@PaintAllIn
  00050	39 5e 0c	 cmp	 DWORD PTR [esi+12], ebx
  00053	74 0a		 je	 SHORT $LN2@PaintAllIn
  00055	39 5e 08	 cmp	 DWORD PTR [esi+8], ebx
  00058	74 05		 je	 SHORT $LN2@PaintAllIn

; 171  : 		FillRect(hDC, &rect, this->m_hNormalBrush);

  0005a	ff 76 20	 push	 DWORD PTR [esi+32]

; 172  : 	else

  0005d	eb 03		 jmp	 SHORT $LN20@PaintAllIn
$LN2@PaintAllIn:

; 173  : 		FillRect(hDC, &rect, this->m_hAbnormalBrush);

  0005f	ff 76 24	 push	 DWORD PTR [esi+36]
$LN20@PaintAllIn:
  00062	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00065	50		 push	 eax
  00066	57		 push	 edi
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FillRect@12

; 174  : 
; 175  : 	if ( this->m_bValidJSConnection == FALSE )

  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__SetTextColor@8
  00072	39 5e 04	 cmp	 DWORD PTR [esi+4], ebx
  00075	75 3b		 jne	 SHORT $LN4@PaintAllIn

; 176  : 	{
; 177  : 		SetTextColor(hDC, RGB(0, 0, 255));

  00077	68 00 00 ff 00	 push	 16711680		; 00ff0000H
  0007c	57		 push	 edi
  0007d	ff d0		 call	 eax

; 178  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[0], strlen(ErrorMessge[0]));

  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ErrorMessge@@3PAPADA
  00085	8b ca		 mov	 ecx, edx
  00087	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
  0008a	66 0f 1f 44 00
	00		 npad	 6
$LL13@PaintAllIn:
  00090	8a 01		 mov	 al, BYTE PTR [ecx]
  00092	41		 inc	 ecx
  00093	84 c0		 test	 al, al
  00095	75 f9		 jne	 SHORT $LL13@PaintAllIn
  00097	2b cb		 sub	 ecx, ebx
  00099	51		 push	 ecx
  0009a	52		 push	 edx
  0009b	ff 75 10	 push	 DWORD PTR _iTopLeftY$[ebp]
  0009e	ff 75 0c	 push	 DWORD PTR _iTopLeftX$[ebp]
  000a1	57		 push	 edi
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__SetTextColor@8

; 179  : 		iLineCount++;

  000ad	bb 01 00 00 00	 mov	 ebx, 1
$LN4@PaintAllIn:

; 180  : 	}
; 181  : 
; 182  : 	if ( this->m_bValidFSConnection == FALSE )

  000b2	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  000b6	75 3a		 jne	 SHORT $LN5@PaintAllIn

; 183  : 	{
; 184  : 		SetTextColor(hDC, RGB(0, 0, 255));

  000b8	68 00 00 ff 00	 push	 16711680		; 00ff0000H
  000bd	57		 push	 edi
  000be	ff d0		 call	 eax

; 185  : 		TextOut(hDC, iTopLeftX,  iTopLeftY+iLineCount*15, ErrorMessge[1], strlen(ErrorMessge[1]));

  000c0	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?ErrorMessge@@3PAPADA+4
  000c6	8b ca		 mov	 ecx, edx
  000c8	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000cb	89 45 e8	 mov	 DWORD PTR tv290[ebp], eax
  000ce	66 90		 npad	 2
$LL14@PaintAllIn:
  000d0	8a 01		 mov	 al, BYTE PTR [ecx]
  000d2	41		 inc	 ecx
  000d3	84 c0		 test	 al, al
  000d5	75 f9		 jne	 SHORT $LL14@PaintAllIn
  000d7	2b 4d e8	 sub	 ecx, DWORD PTR tv290[ebp]
  000da	8b c3		 mov	 eax, ebx
  000dc	51		 push	 ecx
  000dd	c1 e0 04	 shl	 eax, 4
  000e0	52		 push	 edx
  000e1	2b c3		 sub	 eax, ebx
  000e3	03 45 10	 add	 eax, DWORD PTR _iTopLeftY$[ebp]
  000e6	50		 push	 eax
  000e7	ff 75 0c	 push	 DWORD PTR _iTopLeftX$[ebp]
  000ea	57		 push	 edi
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 186  : 		iLineCount++;

  000f1	43		 inc	 ebx
$LN5@PaintAllIn:

; 187  : 	}
; 188  : 
; 189  : 	if ( this->m_bValidDSConnection == FALSE )

  000f2	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  000f6	75 3c		 jne	 SHORT $LN6@PaintAllIn

; 190  : 	{
; 191  : 		SetTextColor(hDC, RGB(0, 0, 255));

  000f8	68 00 00 ff 00	 push	 16711680		; 00ff0000H
  000fd	57		 push	 edi
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 192  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[2], strlen(ErrorMessge[2]));

  00104	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?ErrorMessge@@3PAPADA+8
  0010a	8b ca		 mov	 ecx, edx
  0010c	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0010f	89 45 e8	 mov	 DWORD PTR tv141[ebp], eax
$LL15@PaintAllIn:
  00112	8a 01		 mov	 al, BYTE PTR [ecx]
  00114	41		 inc	 ecx
  00115	84 c0		 test	 al, al
  00117	75 f9		 jne	 SHORT $LL15@PaintAllIn
  00119	2b 4d e8	 sub	 ecx, DWORD PTR tv141[ebp]
  0011c	8b c3		 mov	 eax, ebx
  0011e	51		 push	 ecx
  0011f	c1 e0 04	 shl	 eax, 4
  00122	52		 push	 edx
  00123	2b c3		 sub	 eax, ebx
  00125	03 45 10	 add	 eax, DWORD PTR _iTopLeftY$[ebp]
  00128	50		 push	 eax
  00129	ff 75 0c	 push	 DWORD PTR _iTopLeftX$[ebp]
  0012c	57		 push	 edi
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 193  : 		iLineCount++;

  00133	43		 inc	 ebx
$LN6@PaintAllIn:

; 194  : 	}
; 195  : 
; 196  : 	if ( this->m_bValidEXDSConnection == FALSE )

  00134	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00138	75 3c		 jne	 SHORT $LN7@PaintAllIn

; 197  : 	{
; 198  : 		SetTextColor(hDC, RGB(0, 0, 255));

  0013a	68 00 00 ff 00	 push	 16711680		; 00ff0000H
  0013f	57		 push	 edi
  00140	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 199  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[3], strlen(ErrorMessge[3]));

  00146	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?ErrorMessge@@3PAPADA+12
  0014c	8b ca		 mov	 ecx, edx
  0014e	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00151	89 45 e8	 mov	 DWORD PTR tv283[ebp], eax
$LL16@PaintAllIn:
  00154	8a 01		 mov	 al, BYTE PTR [ecx]
  00156	41		 inc	 ecx
  00157	84 c0		 test	 al, al
  00159	75 f9		 jne	 SHORT $LL16@PaintAllIn
  0015b	2b 4d e8	 sub	 ecx, DWORD PTR tv283[ebp]
  0015e	8b c3		 mov	 eax, ebx
  00160	51		 push	 ecx
  00161	c1 e0 04	 shl	 eax, 4
  00164	52		 push	 edx
  00165	2b c3		 sub	 eax, ebx
  00167	03 45 10	 add	 eax, DWORD PTR _iTopLeftY$[ebp]
  0016a	50		 push	 eax
  0016b	ff 75 0c	 push	 DWORD PTR _iTopLeftX$[ebp]
  0016e	57		 push	 edi
  0016f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 200  : 		iLineCount++;

  00175	43		 inc	 ebx
$LN7@PaintAllIn:

; 201  : 	}
; 202  : 
; 203  : 	if ( this->m_bValidEVDSConnection == FALSE )

  00176	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  0017a	75 3c		 jne	 SHORT $LN8@PaintAllIn

; 204  : 	{
; 205  : 		SetTextColor(hDC, RGB(0, 0, 255));

  0017c	68 00 00 ff 00	 push	 16711680		; 00ff0000H
  00181	57		 push	 edi
  00182	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 206  : 		TextOut(hDC, iTopLeftX,  iTopLeftY+iLineCount*15, ErrorMessge[4], strlen(ErrorMessge[4]));

  00188	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?ErrorMessge@@3PAPADA+16
  0018e	8b ca		 mov	 ecx, edx
  00190	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00193	89 45 e8	 mov	 DWORD PTR tv297[ebp], eax
$LL17@PaintAllIn:
  00196	8a 01		 mov	 al, BYTE PTR [ecx]
  00198	41		 inc	 ecx
  00199	84 c0		 test	 al, al
  0019b	75 f9		 jne	 SHORT $LL17@PaintAllIn
  0019d	2b 4d e8	 sub	 ecx, DWORD PTR tv297[ebp]
  001a0	8b c3		 mov	 eax, ebx
  001a2	51		 push	 ecx
  001a3	c1 e0 04	 shl	 eax, 4
  001a6	52		 push	 edx
  001a7	2b c3		 sub	 eax, ebx
  001a9	03 45 10	 add	 eax, DWORD PTR _iTopLeftY$[ebp]
  001ac	50		 push	 eax
  001ad	ff 75 0c	 push	 DWORD PTR _iTopLeftX$[ebp]
  001b0	57		 push	 edi
  001b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 207  : 		iLineCount++;

  001b7	43		 inc	 ebx
$LN8@PaintAllIn:

; 208  : 	}
; 209  : 
; 210  : 	if ( this->m_bValidRKDSConnection == FALSE )

  001b8	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  001bc	75 3b		 jne	 SHORT $LN9@PaintAllIn

; 211  : 	{
; 212  : 		SetTextColor(hDC, RGB(0, 0, 255));

  001be	68 00 00 ff 00	 push	 16711680		; 00ff0000H
  001c3	57		 push	 edi
  001c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 213  : 		TextOut(hDC, iTopLeftX, iTopLeftY+iLineCount*15, ErrorMessge[5], strlen(ErrorMessge[5]));

  001ca	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?ErrorMessge@@3PAPADA+20
  001d0	8b ca		 mov	 ecx, edx
  001d2	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  001d5	89 45 e8	 mov	 DWORD PTR tv308[ebp], eax
$LL18@PaintAllIn:
  001d8	8a 01		 mov	 al, BYTE PTR [ecx]
  001da	41		 inc	 ecx
  001db	84 c0		 test	 al, al
  001dd	75 f9		 jne	 SHORT $LL18@PaintAllIn
  001df	2b 4d e8	 sub	 ecx, DWORD PTR tv308[ebp]
  001e2	8b c3		 mov	 eax, ebx
  001e4	51		 push	 ecx
  001e5	c1 e0 04	 shl	 eax, 4
  001e8	52		 push	 edx
  001e9	2b c3		 sub	 eax, ebx
  001eb	03 45 10	 add	 eax, DWORD PTR _iTopLeftY$[ebp]
  001ee	50		 push	 eax
  001ef	ff 75 0c	 push	 DWORD PTR _iTopLeftX$[ebp]
  001f2	57		 push	 edi
  001f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20
$LN9@PaintAllIn:

; 214  : 		iLineCount++;
; 215  : 	}
; 216  : 
; 217  : 	if ( this->m_bValidJSConnection == FALSE || this->m_bValidDSConnection == FALSE || this->m_bValidFSConnection == FALSE || this->m_bValidEXDSConnection == FALSE || this->m_bValidEVDSConnection == FALSE || this->m_bValidRKDSConnection == FALSE )

  001f9	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  001fd	74 1e		 je	 SHORT $LN11@PaintAllIn
  001ff	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00203	74 18		 je	 SHORT $LN11@PaintAllIn
  00205	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00209	74 12		 je	 SHORT $LN11@PaintAllIn
  0020b	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0020f	74 0c		 je	 SHORT $LN11@PaintAllIn
  00211	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  00215	74 06		 je	 SHORT $LN11@PaintAllIn
  00217	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  0021b	75 21		 jne	 SHORT $LN10@PaintAllIn
$LN11@PaintAllIn:

; 218  : 	{
; 219  : 		SERVER_CONN_STATE_LOG.Output("Server Interconnection Check - [FS/%d] [DS/%d] [EX/%d] [ES/%d] [RS/%d]",

  0021d	ff 76 18	 push	 DWORD PTR [esi+24]
  00220	ff 76 14	 push	 DWORD PTR [esi+20]
  00223	ff 76 10	 push	 DWORD PTR [esi+16]
  00226	ff 76 0c	 push	 DWORD PTR [esi+12]
  00229	ff 76 08	 push	 DWORD PTR [esi+8]
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@JOCPMNLJ@Server?5Interconnection?5Check?5?9?5?$FL@
  00231	68 00 00 00 00	 push	 OFFSET ?SERVER_CONN_STATE_LOG@@3VCLogToFile@@A ; SERVER_CONN_STATE_LOG
  00236	e8 00 00 00 00	 call	 ?Output@CLogToFile@@QAAXPADZZ ; CLogToFile::Output
  0023b	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN10@PaintAllIn:

; 220  : 			this->m_bValidFSConnection, this->m_bValidDSConnection, 
; 221  : 			this->m_bValidEXDSConnection, this->m_bValidEVDSConnection,
; 222  : 			this->m_bValidRKDSConnection);
; 223  : 	}
; 224  : 
; 225  : 	HFONT pOldFont = (HFONT)SelectObject(hDC, this->m_hFont);

  0023e	ff 76 1c	 push	 DWORD PTR [esi+28]
  00241	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SelectObject@8
  00247	57		 push	 edi
  00248	ff d6		 call	 esi

; 226  : 	SetTextColor(hDC, RGB(250, 250, 250));

  0024a	68 fa fa fa 00	 push	 16448250		; 00fafafaH
  0024f	57		 push	 edi
  00250	8b d8		 mov	 ebx, eax
  00252	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 227  : 
; 228  : 	TextOutA(hDC, GAMESERVER_WIDTH / 2 - 200, 18, ServerTypeText[0], strlen(ServerTypeText[0]));

  00258	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ServerTypeText@@3PAPADA
  0025e	8b d1		 mov	 edx, ecx
  00260	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00263	89 45 e8	 mov	 DWORD PTR tv262[ebp], eax
$LL19@PaintAllIn:
  00266	8a 02		 mov	 al, BYTE PTR [edx]
  00268	42		 inc	 edx
  00269	84 c0		 test	 al, al
  0026b	75 f9		 jne	 SHORT $LL19@PaintAllIn
  0026d	2b 55 e8	 sub	 edx, DWORD PTR tv262[ebp]
  00270	52		 push	 edx
  00271	51		 push	 ecx
  00272	6a 12		 push	 18			; 00000012H
  00274	68 af 00 00 00	 push	 175			; 000000afH
  00279	57		 push	 edi
  0027a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TextOutA@20

; 229  : 	SelectObject(hDC, pOldFont);

  00280	53		 push	 ebx
  00281	57		 push	 edi
  00282	ff d6		 call	 esi

; 230  : 	SetBkMode(hDC, iOldBkMode);

  00284	ff 75 e4	 push	 DWORD PTR _iOldBkMode$1$[ebp]
  00287	57		 push	 edi
  00288	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetBkMode@8

; 231  : 	ReleaseDC(hWnd, hDC);

  0028e	57		 push	 edi
  0028f	ff 75 e0	 push	 DWORD PTR _hWnd$GSCopy$1$[ebp]
  00292	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8

; 232  : }

  00298	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029b	5f		 pop	 edi
  0029c	5e		 pop	 esi
  0029d	33 cd		 xor	 ecx, ebp
  0029f	5b		 pop	 ebx
  002a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a5	8b e5		 mov	 esp, ebp
  002a7	5d		 pop	 ebp
  002a8	c2 0c 00	 ret	 12			; 0000000cH
?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z ENDP ; TServerInfoDisplayer::PaintAllInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?DelGDIObject@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?DelGDIObject@TServerInfoDisplayer@@QAEXXZ PROC		; TServerInfoDisplayer::DelGDIObject, COMDAT
; _this$ = ecx

; 74   : {

  00000	56		 push	 esi

; 75   : 	DeleteObject(this->m_hFont);

  00001	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__DeleteObject@4
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	ff 77 1c	 push	 DWORD PTR [edi+28]
  0000d	ff d6		 call	 esi

; 76   : 	DeleteObject(this->m_hNormalBrush);

  0000f	ff 77 20	 push	 DWORD PTR [edi+32]
  00012	ff d6		 call	 esi

; 77   : 	DeleteObject(this->m_hAbnormalBrush);

  00014	ff 77 24	 push	 DWORD PTR [edi+36]
  00017	ff d6		 call	 esi
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi

; 78   : }

  0001b	c3		 ret	 0
?DelGDIObject@TServerInfoDisplayer@@QAEXXZ ENDP		; TServerInfoDisplayer::DelGDIObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?InitGDIObject@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?InitGDIObject@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::InitGDIObject, COMDAT
; _this$ = ecx

; 56   : {

  00000	57		 push	 edi

; 57   : #if (ZEONWINDOW == TRUE)
; 58   : 	this->m_hFont = CreateFont(60, 0, 0, 0, FW_REGULAR, FALSE, FALSE, FALSE, 

  00001	68 00 00 00 00	 push	 OFFSET ??_C@_05MOECANKB@Times?$AA@
  00006	6a 00		 push	 0
  00008	6a 00		 push	 0
  0000a	6a 00		 push	 0
  0000c	6a 00		 push	 0
  0000e	6a 01		 push	 1
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	68 90 01 00 00	 push	 400			; 00000190H
  0001b	6a 00		 push	 0
  0001d	6a 00		 push	 0
  0001f	6a 00		 push	 0
  00021	6a 3c		 push	 60			; 0000003cH
  00023	8b f9		 mov	 edi, ecx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontA@56

; 59   : 		1, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
; 60   : 		DEFAULT_PITCH|FF_DONTCARE, "Times");
; 61   : #else
; 62   : 	this->m_hFont = CreateFont(80, 0, 0, 0, FW_THIN, FALSE, TRUE, FALSE, 
; 63   : 		ANSI_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
; 64   : 		DEFAULT_PITCH|FF_DONTCARE, "Times");
; 65   : #endif
; 66   : 
; 67   : 	this->m_hNormalBrush = CreateSolidBrush(RGB(110, 240, 120));

  0002b	68 6e f0 78 00	 push	 7925870			; 0078f06eH
  00030	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateSolidBrush@4

; 68   : 	this->m_hAbnormalBrush = CreateSolidBrush(RGB(250, 110, 110));

  00039	68 fa 6e 6e 00	 push	 7237370			; 006e6efaH
  0003e	89 47 20	 mov	 DWORD PTR [edi+32], eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateSolidBrush@4
  00047	89 47 24	 mov	 DWORD PTR [edi+36], eax
  0004a	5f		 pop	 edi

; 69   : }

  0004b	c3		 ret	 0
?InitGDIObject@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::InitGDIObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckRKDSConnection, COMDAT
; _this$ = ecx

; 151  : 	//if ( IsDevilSquareEventConnected == FALSE )
; 152  : 		//this->m_bValidRKDSConnection = FALSE;
; 153  : 	//else
; 154  : 		this->m_bValidRKDSConnection = TRUE;

  00000	c7 41 18 01 00
	00 00		 mov	 DWORD PTR [ecx+24], 1

; 155  : }

  00007	c3		 ret	 0
?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckRKDSConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckEVDSConnection, COMDAT
; _this$ = ecx

; 141  : 	if ( IsEventChipServerConnected == FALSE )

  00000	33 c0		 xor	 eax, eax
  00002	39 05 00 00 00
	00		 cmp	 DWORD PTR ?IsEventChipServerConnected@@3HA, eax ; IsEventChipServerConnected
  00008	0f 95 c0	 setne	 al
  0000b	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 142  : 		this->m_bValidEVDSConnection = FALSE;
; 143  : 	else
; 144  : 		this->m_bValidEVDSConnection = TRUE;
; 145  : }

  0000e	c3		 ret	 0
?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckEVDSConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckEXDSConnection, COMDAT
; _this$ = ecx

; 131  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 132  : 	if ( wsExDbCli.GetSocket() == INVALID_SOCKET )

  00003	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsExDbCli@@3VwsJoinServerCli@@A+4
  00008	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  0000d	33 d2		 xor	 edx, edx
  0000f	83 f8 ff	 cmp	 eax, -1
  00012	0f 95 c2	 setne	 dl
  00015	89 56 10	 mov	 DWORD PTR [esi+16], edx
  00018	5e		 pop	 esi

; 133  : 		this->m_bValidEXDSConnection = FALSE;
; 134  : 	else
; 135  : 		this->m_bValidEXDSConnection = TRUE;
; 136  : }

  00019	c3		 ret	 0
?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckEXDSConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckDSConnection, COMDAT
; _this$ = ecx

; 115  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 116  : 	if ( cDBSMng.wsCDBS[0].GetSocket() == INVALID_SOCKET )

  00003	b9 08 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A+8
  00008	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  0000d	33 d2		 xor	 edx, edx
  0000f	83 f8 ff	 cmp	 eax, -1
  00012	0f 95 c2	 setne	 dl
  00015	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00018	5e		 pop	 esi

; 117  : 		this->m_bValidDSConnection = FALSE;
; 118  : 	else
; 119  : 		this->m_bValidDSConnection = TRUE;
; 120  : }

  00019	c3		 ret	 0
?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckDSConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckFSConnection, COMDAT
; _this$ = ecx

; 126  : 	this->m_bValidFSConnection = TRUE;

  00000	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1

; 127  : }

  00007	c3		 ret	 0
?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckFSConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckJSConnection, COMDAT
; _this$ = ecx

; 105  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 106  : 	if ( wsJServerCli.GetSocket() == INVALID_SOCKET )

  00003	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A+4
  00008	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  0000d	33 d2		 xor	 edx, edx
  0000f	83 f8 ff	 cmp	 eax, -1
  00012	0f 95 c2	 setne	 dl
  00015	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00018	5e		 pop	 esi

; 107  : 		this->m_bValidJSConnection = FALSE;
; 108  : 	else
; 109  : 		this->m_bValidJSConnection = TRUE;
; 110  : }

  00019	c3		 ret	 0
?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckJSConnection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ
_TEXT	SEGMENT
?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ PROC	; TServerInfoDisplayer::CheckLogFileSize, COMDAT
; _this$ = ecx

; 99   : 	return;
; 100  : }

  00000	c3		 ret	 0
?CheckLogFileSize@TServerInfoDisplayer@@QAEXXZ ENDP	; TServerInfoDisplayer::CheckLogFileSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z PROC	; TServerInfoDisplayer::Run, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 84   : 	this->CheckDSConnection();

  00006	e8 00 00 00 00	 call	 ?CheckDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckDSConnection

; 85   : 	this->CheckJSConnection();

  0000b	8b ce		 mov	 ecx, esi
  0000d	e8 00 00 00 00	 call	 ?CheckJSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckJSConnection

; 86   : 	this->CheckFSConnection();

  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?CheckFSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckFSConnection

; 87   : 	this->CheckEXDSConnection();

  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?CheckEXDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEXDSConnection

; 88   : 	this->CheckEVDSConnection();

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?CheckEVDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckEVDSConnection

; 89   : 	this->CheckRKDSConnection();

  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?CheckRKDSConnection@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::CheckRKDSConnection

; 90   : 
; 91   : 	this->CheckLogFileSize();
; 92   : 
; 93   : 	this->PaintAllInfo(hWnd, 0, 20);

  0002e	6a 14		 push	 20			; 00000014H
  00030	6a 00		 push	 0
  00032	ff 75 08	 push	 DWORD PTR _hWnd$[ebp]
  00035	8b ce		 mov	 ecx, esi
  00037	e8 00 00 00 00	 call	 ?PaintAllInfo@TServerInfoDisplayer@@QAEXPAUHWND__@@HH@Z ; TServerInfoDisplayer::PaintAllInfo
  0003c	5e		 pop	 esi

; 94   : }

  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?Run@TServerInfoDisplayer@@QAEXPAUHWND__@@@Z ENDP	; TServerInfoDisplayer::Run
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ??1TServerInfoDisplayer@@UAE@XZ
_TEXT	SEGMENT
??1TServerInfoDisplayer@@UAE@XZ PROC			; TServerInfoDisplayer::~TServerInfoDisplayer, COMDAT
; _this$ = ecx

; 49   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7TServerInfoDisplayer@@6B@

; 50   : 	this->DelGDIObject();

  00006	e9 00 00 00 00	 jmp	 ?DelGDIObject@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::DelGDIObject
??1TServerInfoDisplayer@@UAE@XZ ENDP			; TServerInfoDisplayer::~TServerInfoDisplayer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ??0TServerInfoDisplayer@@QAE@XZ
_TEXT	SEGMENT
??0TServerInfoDisplayer@@QAE@XZ PROC			; TServerInfoDisplayer::TServerInfoDisplayer, COMDAT
; _this$ = ecx

; 37   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TServerInfoDisplayer@@6B@

; 38   : 	this->m_bValidJSConnection = FALSE;

  00009	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 39   : 	this->m_bValidFSConnection = FALSE;

  00010	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 40   : 	this->m_bValidDSConnection = FALSE;

  00017	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 41   : 	this->m_bValidEXDSConnection = FALSE;

  0001e	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 42   : 	this->m_bValidEVDSConnection = FALSE;

  00025	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 43   : 	this->m_bValidRKDSConnection = FALSE;

  0002c	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0

; 44   : 
; 45   : 	this->InitGDIObject();

  00033	e8 00 00 00 00	 call	 ?InitGDIObject@TServerInfoDisplayer@@QAEXXZ ; TServerInfoDisplayer::InitGDIObject

; 46   : }

  00038	8b c6		 mov	 eax, esi
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
??0TServerInfoDisplayer@@QAE@XZ ENDP			; TServerInfoDisplayer::TServerInfoDisplayer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 233  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tserverinfodisplayer.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 233  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
