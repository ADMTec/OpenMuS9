; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\SProtocol.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	?SProtocolCore@@YAXEPAEH@Z			; SProtocolCore
PUBLIC	?GJServerLogin@@YAXXZ				; GJServerLogin
PUBLIC	?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z	; JGServerLoginResult
PUBLIC	?GJPUserClose@@YAXPAD@Z				; GJPUserClose
PUBLIC	?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z		; GJPUserClose
PUBLIC	?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z	; JGPAccountRequest
PUBLIC	?GJPAccountFail@@YAXFPADHH@Z			; GJPAccountFail
PUBLIC	?GJPAccountBlock@@YAXFPADHHH@Z			; GJPAccountBlock
PUBLIC	?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ; GJPBillCeckRecv
PUBLIC	?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z	; GJPUserKillRecv
PUBLIC	?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z	; JGOtherJoin
PUBLIC	?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserDisconnectRecv
PUBLIC	?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z	; JGPExitCodeRecv
PUBLIC	?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z	; JGPEventStart
PUBLIC	?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z	; JGPEventControl
PUBLIC	?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z	; JGPOptionControl
PUBLIC	?LoveHeartEventSend@@YAXHPAD0@Z			; LoveHeartEventSend
PUBLIC	?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ; LoveHeartEventRecv
PUBLIC	?LoveHeartCreateSend@@YAXXZ			; LoveHeartCreateSend
PUBLIC	?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z		; AllNoticeRecv
PUBLIC	?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z	; UserNoticeRecv
PUBLIC	?GJReqMapSvrMove@@YAXHGGEE@Z			; GJReqMapSvrMove
PUBLIC	?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z	; JGAnsMapSvrMove
PUBLIC	?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z		; GJReqMapSvrAuth
PUBLIC	?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z	; JGAnsMapSvrAuth
PUBLIC	?GJNotifyMaxUserCount@@YAXXZ			; GJNotifyMaxUserCount
PUBLIC	?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z	; JGPSendMail
PUBLIC	?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z ; GJUpdateMatchDBUserCharacters
PUBLIC	?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z ; BroadCastMessage
PUBLIC	??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@ ; `string'
PUBLIC	??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@ ; `string'
PUBLIC	??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ ; `string'
PUBLIC	??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@ ; `string'
PUBLIC	??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ ; `string'
PUBLIC	??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@ ; `string'
PUBLIC	??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ ; `string'
PUBLIC	??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ ; `string'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_strcpy_s:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	?gObjIsAccontConnect@@YAHHPAD@Z:PROC		; gObjIsAccontConnect
EXTRN	?gObjSetAccountLogin@@YAHHPADHH0@Z:PROC		; gObjSetAccountLogin
EXTRN	?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z:PROC ; gObjAddMsgSendDelay
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	?DataSendAll@@YAXPAEH@Z:PROC			; DataSendAll
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?GCJoinResult@@YAXEH@Z:PROC			; GCJoinResult
EXTRN	?GCAnsMapSvrAuth@@YAXHH@Z:PROC			; GCAnsMapSvrAuth
EXTRN	?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z:PROC ; MngFriendMemoSend
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	?Start@CDragonEvent@@QAEXXZ:PROC		; CDragonEvent::Start
EXTRN	?End@CDragonEvent@@QAEXXZ:PROC			; CDragonEvent::End
EXTRN	?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z:PROC ; CMonsterSetBase::MonsterSetBaseReload
EXTRN	?ReadCommonServerInfo@@YAXXZ:PROC		; ReadCommonServerInfo
EXTRN	?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z:PROC	; ReadEventInfo
EXTRN	?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z:PROC	; ReadGameEtcInfo
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
EXTRN	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ:PROC	; TNotice::MakeNoticeMsgEx
EXTRN	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z:PROC	; TNotice::SetNoticeProperty
EXTRN	?SendNoticeToUser@TNotice@@SAXHPAX@Z:PROC	; TNotice::SendNoticeToUser
EXTRN	?BuxConvert@@YAXPADH@Z:PROC			; BuxConvert
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?PHeadSubSetBE@@YAXPAEEEH@Z:PROC		; PHeadSubSetBE
EXTRN	?Reload@ShopManager@@QAEXXZ:PROC		; ShopManager::Reload
EXTRN	?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z:PROC ; CMapServerManager::GetSvrCodeData
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HHH@Z:PROC ; GJSetCharacterInfo
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?LogAddC@@3P6AXEPADZZA:DWORD			; LogAddC
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gServerMaxUser@@3HA:DWORD			; gServerMaxUser
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?m_ObjBill@@3PAVBILL_CLASS@@A:BYTE		; m_ObjBill
EXTRN	?gObjTotalUser@@3HA:DWORD			; gObjTotalUser
EXTRN	?gServerReady@@3HA:DWORD			; gServerReady
EXTRN	?ghWnd@@3PAUHWND__@@A:DWORD			; ghWnd
EXTRN	?JoinServerConnected@@3HA:DWORD			; JoinServerConnected
EXTRN	?DragonEvent@@3PAVCDragonEvent@@A:DWORD		; DragonEvent
EXTRN	?gFireCrackerEvent@@3HA:DWORD			; gFireCrackerEvent
EXTRN	?gHeartOfLoveEvent@@3HA:DWORD			; gHeartOfLoveEvent
EXTRN	?gMedalEvent@@3HA:DWORD				; gMedalEvent
EXTRN	?GameServerPort@@3HA:DWORD			; GameServerPort
EXTRN	?wsJServerCli@@3VwsJoinServerCli@@A:BYTE	; wsJServerCli
EXTRN	?gMSetBase@@3VCMonsterSetBase@@A:BYTE		; gMSetBase
EXTRN	?szServerName@@3PADA:BYTE			; szServerName
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
EXTRN	?g_ShopManager@@3VShopManager@@A:BYTE		; g_ShopManager
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
CONST	SEGMENT
??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7B] - Join Result OK : RST:%d, B'
	DB	'LK:%c', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
CONST	SEGMENT
??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7B] - Join Result Failed : RST:%'
	DB	'd, BLK:%c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@
CONST	SEGMENT
??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@ DB '[MapSer'
	DB	'verMng] MapSvr MoveReq Error JG [0x7B] - No Request [%s] (%d)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7B] - Index out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
CONST	SEGMENT
??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error GJ [0x7B] - Index out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - Failed to Authorize User'
	DB	' [%s][%s] Result:%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@
CONST	SEGMENT
??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7A] - Move Map Request OK : MAPS'
	DB	'VR_D:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - Failed to find Map Info '
	DB	'[%s]-[%s] (%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - User Info Mismatch [%s]['
	DB	'%s]-[%s][%s] (%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - User not Connected : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
CONST	SEGMENT
??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error GJ [0x7A] - User not Connected : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@
CONST	SEGMENT
??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@ DB '['
	DB	'Mu Manager][Notice Log][Type:USER] (%s) %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@
CONST	SEGMENT
??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@ DB '['
	DB	'Mu Manager][Notice Log][Type:ALL] %s', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
;	COMDAT ?GetMapSvrGroup@CMapServerManager@@QAEHXZ
_TEXT	SEGMENT
?GetMapSvrGroup@CMapServerManager@@QAEHXZ PROC		; CMapServerManager::GetMapSvrGroup, COMDAT
; _this$ = ecx

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  00000	8b 81 f8 6a 01
	00		 mov	 eax, DWORD PTR [ecx+92920]
  00006	85 c0		 test	 eax, eax
  00008	74 05		 je	 SHORT $LN2@GetMapSvrG

; 56   : 		{
; 57   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  0000a	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]

; 60   : 	}

  0000e	c3		 ret	 0
$LN2@GetMapSvrG:

; 58   : 		}
; 59   : 		return -1;

  0000f	83 c8 ff	 or	 eax, -1

; 60   : 	}

  00012	c3		 ret	 0
?GetMapSvrGroup@CMapServerManager@@QAEHXZ ENDP		; CMapServerManager::GetMapSvrGroup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tnotice.h
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 9    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  00007	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  0000b	c1 e0 08	 shl	 eax, 8
  0000e	03 c1		 add	 eax, ecx
  00010	0f b6 4d 10	 movzx	 ecx, BYTE PTR _g$[ebp]
  00014	c1 e0 08	 shl	 eax, 8
  00017	03 c1		 add	 eax, ecx
  00019	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  0001d	c1 e0 08	 shl	 eax, 8
  00020	03 c1		 add	 eax, ecx
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dragonevent.h
;	COMDAT ?GetState@CDragonEvent@@QAEEXZ
_TEXT	SEGMENT
?GetState@CDragonEvent@@QAEEXZ PROC			; CDragonEvent::GetState, COMDAT
; _this$ = ecx

; 20   : 	BYTE GetState(){return this->EventState;}	// Dagon event line 30.h

  00000	8a 41 04	 mov	 al, BYTE PTR [ecx+4]
  00003	c3		 ret	 0
?GetState@CDragonEvent@@QAEEXZ ENDP			; CDragonEvent::GetState
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z
_TEXT	SEGMENT
_lpInfo$1 = -120					; size = 113
__$ArrayPad$ = -4					; size = 4
_lpResult$ = 8						; size = 4
?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z PROC	; BroadCastMessage, COMDAT

; 972  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _lpResult$[ebp]

; 973  : 	if( strlen(lpResult->Text) < 2 )

  00015	8d 5e 10	 lea	 ebx, DWORD PTR [esi+16]
  00018	8b cb		 mov	 ecx, ebx
  0001a	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0001d	0f 1f 00	 npad	 3
$LL8@BroadCastM:
  00020	8a 01		 mov	 al, BYTE PTR [ecx]
  00022	41		 inc	 ecx
  00023	84 c0		 test	 al, al
  00025	75 f9		 jne	 SHORT $LL8@BroadCastM
  00027	2b ca		 sub	 ecx, edx
  00029	83 f9 02	 cmp	 ecx, 2
  0002c	0f 82 9f 00 00
	00		 jb	 $LN2@BroadCastM

; 974  : 	{
; 975  : 		return;
; 976  : 	}
; 977  : 	
; 978  : 	switch(lpResult->Type)

  00032	0f b6 46 04	 movzx	 eax, BYTE PTR [esi+4]
  00036	83 e8 00	 sub	 eax, 0
  00039	0f 84 86 00 00
	00		 je	 $LN5@BroadCastM
  0003f	83 e8 01	 sub	 eax, 1
  00042	0f 85 89 00 00
	00		 jne	 $LN2@BroadCastM

; 983  : 		}
; 984  : 		break;
; 985  : 	case 1:
; 986  : 		{
; 987  : 			USER_REQ_POST lpInfo = { 0 };
; 988  : 			PHeadSetB((LPBYTE)&lpInfo, 0, sizeof(lpInfo));

  00048	6a 71		 push	 113			; 00000071H
  0004a	50		 push	 eax
  0004b	8d 45 88	 lea	 eax, DWORD PTR _lpInfo$1[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _memset
  00054	6a 71		 push	 113			; 00000071H
  00056	8d 45 88	 lea	 eax, DWORD PTR _lpInfo$1[ebp]
  00059	6a 00		 push	 0
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 989  : 			lpInfo.h.headcode = 2;
; 990  : 			lpInfo.chatmsg[0] = '!';
; 991  : 			memcpy(lpInfo.id, lpResult->Sender, 10);

  00061	f3 0f 7e 46 06	 movq	 xmm0, QWORD PTR [esi+6]
  00066	83 c4 18	 add	 esp, 24			; 00000018H
  00069	66 8b 46 0e	 mov	 ax, WORD PTR [esi+14]

; 992  : 			strcat(lpInfo.chatmsg, lpResult->Text);

  0006d	8b f3		 mov	 esi, ebx
  0006f	c6 45 8a 02	 mov	 BYTE PTR _lpInfo$1[ebp+2], 2
  00073	c6 45 95 21	 mov	 BYTE PTR _lpInfo$1[ebp+13], 33 ; 00000021H
  00077	66 0f d6 45 8b	 movq	 QWORD PTR _lpInfo$1[ebp+3], xmm0
  0007c	66 89 45 93	 mov	 WORD PTR _lpInfo$1[ebp+11], ax
$LL9@BroadCastM:
  00080	8a 03		 mov	 al, BYTE PTR [ebx]
  00082	43		 inc	 ebx
  00083	84 c0		 test	 al, al
  00085	75 f9		 jne	 SHORT $LL9@BroadCastM
  00087	57		 push	 edi
  00088	8d 7d 95	 lea	 edi, DWORD PTR _lpInfo$1[ebp+13]
  0008b	2b de		 sub	 ebx, esi
  0008d	4f		 dec	 edi
  0008e	66 90		 npad	 2
$LL10@BroadCastM:
  00090	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00093	47		 inc	 edi
  00094	84 c0		 test	 al, al
  00096	75 f8		 jne	 SHORT $LL10@BroadCastM
  00098	8b cb		 mov	 ecx, ebx

; 993  : 			DataSendAll((LPBYTE)&lpInfo, sizeof(lpInfo));

  0009a	8d 45 88	 lea	 eax, DWORD PTR _lpInfo$1[ebp]
  0009d	c1 e9 02	 shr	 ecx, 2
  000a0	f3 a5		 rep movsd
  000a2	8b cb		 mov	 ecx, ebx
  000a4	83 e1 03	 and	 ecx, 3
  000a7	6a 71		 push	 113			; 00000071H
  000a9	f3 a4		 rep movsb
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?DataSendAll@@YAXPAEH@Z	; DataSendAll
  000b1	83 c4 08	 add	 esp, 8
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx

; 994  : 		}
; 995  : 		break;
; 996  : 	}
; 997  : 	
; 998  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN5@BroadCastM:

; 979  : 	{
; 980  : 	case 0:
; 981  : 		{
; 982  : 			AllSendServerMsg(&lpResult->Text[1]);

  000c5	8d 46 11	 lea	 eax, DWORD PTR [esi+17]
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  000ce	83 c4 04	 add	 esp, 4
$LN2@BroadCastM:

; 994  : 		}
; 995  : 		break;
; 996  : 	}
; 997  : 	
; 998  : }

  000d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d4	5e		 pop	 esi
  000d5	33 cd		 xor	 ecx, ebp
  000d7	5b		 pop	 ebx
  000d8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c3		 ret	 0
?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z ENDP	; BroadCastMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z PROC ; GJUpdateMatchDBUserCharacters, COMDAT

; 959  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 960  : 	SDHP_REQ_UPDATE_MATCHDB_USERCHARACTERS pMsg;
; 961  : 
; 962  : 	PHeadSetB((LPBYTE)&pMsg, 0x16, sizeof(SDHP_REQ_UPDATE_MATCHDB_USERCHARACTERS));

  00014	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00017	6a 1c		 push	 28			; 0000001cH
  00019	6a 16		 push	 22			; 00000016H
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 963  : 	pMsg.DbClass = lpObj->DbClass;

  00021	8a 86 92 00 00
	00		 mov	 al, BYTE PTR [esi+146]
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH

; 964  : 	pMsg.Level = lpObj->Level;
; 965  : 	memcpy(pMsg.szId, lpObj->AccountID, sizeof(pMsg.szId));

  0002a	f3 0f 7e 46 52	 movq	 xmm0, QWORD PTR [esi+82]

; 966  : 	//memcpy(pMsg.szName, lpObj->BackName, sizeof(pMsg.szName));
; 967  : 
; 968  : 	wsJServerCli.DataSend((PCHAR)&pMsg, pMsg.h.size);

  0002f	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00034	88 45 fa	 mov	 BYTE PTR _pMsg$[ebp+26], al
  00037	0f b7 86 96 00
	00 00		 movzx	 eax, WORD PTR [esi+150]
  0003e	66 89 45 f8	 mov	 WORD PTR _pMsg$[ebp+24], ax
  00042	0f b7 46 5a	 movzx	 eax, WORD PTR [esi+90]
  00046	66 89 45 eb	 mov	 WORD PTR _pMsg$[ebp+11], ax
  0004a	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0004e	50		 push	 eax
  0004f	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00052	66 0f d6 45 e3	 movq	 QWORD PTR _pMsg$[ebp+3], xmm0
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 969  : }

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00060	33 cd		 xor	 ecx, ebp
  00062	5e		 pop	 esi
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z ENDP ; GJUpdateMatchDBUserCharacters
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z PROC		; JGPSendMail, COMDAT

; 942  : 	MngFriendMemoSend(lpMsg);

  00000	e9 00 00 00 00	 jmp	 ?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ; MngFriendMemoSend
?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ENDP		; JGPSendMail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJNotifyMaxUserCount@@YAXXZ
_TEXT	SEGMENT
_pMsg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GJNotifyMaxUserCount@@YAXXZ PROC			; GJNotifyMaxUserCount, COMDAT

; 929  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 930  : 	PMSG_NOTIFY_MAXUSER pMsg;
; 931  : 
; 932  : 	PHeadSetB((LPBYTE)&pMsg, 0x7C, sizeof(PMSG_NOTIFY_MAXUSER));

  00010	6a 10		 push	 16			; 00000010H
  00012	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00015	6a 7c		 push	 124			; 0000007cH
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 933  : 	pMsg.iSvrCode = gGameServerCode;

  0001d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH
  00027	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+4], eax

; 934  : 	pMsg.iMaxUserCount = gServerMaxUser;
; 935  : 	pMsg.iCurUserCount = gObjTotalUser;
; 936  : 	
; 937  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  0002a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gServerMaxUser@@3HA ; gServerMaxUser
  00034	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+8], eax
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObjTotalUser@@3HA ; gObjTotalUser
  0003c	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+12], eax
  0003f	0f b6 45 ed	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00043	50		 push	 eax
  00044	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 938  : }

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00050	33 cd		 xor	 ecx, ebp
  00052	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?GJNotifyMaxUserCount@@YAXXZ ENDP			; GJNotifyMaxUserCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z
_TEXT	SEGMENT
_bAuthOK$1$ = -92					; size = 4
_iSendResult$1$ = -88					; size = 4
_iIndex$1$ = -84					; size = 4
_pMsg$ = -80						; size = 28
_szJN$ = -52						; size = 21
_szName$ = -28						; size = 11
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z PROC	; JGAnsMapSvrAuth, COMDAT

; 801  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 802  : 	if ( !OBJMAX_RANGE(lpMsg->iIndex))

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	85 c9		 test	 ecx, ecx
  00019	0f 88 e7 02 00
	00		 js	 $LN22@JGAnsMapSv
  0001f	33 c0		 xor	 eax, eax
  00021	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  00027	0f 9e c0	 setle	 al
  0002a	85 c0		 test	 eax, eax
  0002c	0f 84 d4 02 00
	00		 je	 $LN22@JGAnsMapSv

; 805  : 			lpMsg->iIndex);
; 806  : 		
; 807  : 		return;
; 808  : 	}
; 809  : 
; 810  : 	LPOBJ lpObj = &gObj[lpMsg->iIndex];
; 811  : 	memcpy(lpObj->Name, lpMsg->szCharName, MAX_ACCOUNT_LEN);

  00032	f3 0f 7e 46 13	 movq	 xmm0, QWORD PTR [esi+19]
  00037	53		 push	 ebx
  00038	69 d9 40 27 00
	00		 imul	 ebx, ecx, 10048
  0003e	03 1d 00 00 00
	00		 add	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 812  : 
; 813  : 
; 814  : 	if ( lpObj->m_bMapSvrMoveReq == false )

  00044	80 bb 3d 20 00
	00 00		 cmp	 BYTE PTR [ebx+8253], 0
  0004b	66 0f d6 43 5d	 movq	 QWORD PTR [ebx+93], xmm0
  00050	66 8b 46 1b	 mov	 ax, WORD PTR [esi+27]
  00054	66 89 43 65	 mov	 WORD PTR [ebx+101], ax
  00058	75 2e		 jne	 SHORT $LN7@JGAnsMapSv

; 815  : 	{
; 816  : 		LogAddC(2, "[MapServerMng] MapSvr MoveReq Error JG [0x7B] - No Request [%s] (%d)",

  0005a	ff 33		 push	 DWORD PTR [ebx]
  0005c	8d 43 52	 lea	 eax, DWORD PTR [ebx+82]
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@
  00065	6a 02		 push	 2
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 817  : 			lpObj->AccountID, lpObj->m_Index);
; 818  : 
; 819  : 		gObjDel(lpMsg->iIndex);

  0006d	ff 76 04	 push	 DWORD PTR [esi+4]
  00070	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  00075	83 c4 14	 add	 esp, 20			; 00000014H
  00078	5b		 pop	 ebx
  00079	5e		 pop	 esi

; 908  : 		szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);
; 909  : 
; 910  : }

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	33 cd		 xor	 ecx, ebp
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN7@JGAnsMapSv:

; 820  : 		return;
; 821  : 	}
; 822  : 
; 823  : 	BOOL bAuthOK = FALSE;
; 824  : 	int iSendResult = 0;
; 825  : 	char szId[11];
; 826  : 	char szJN[21] = "";
; 827  : 	int iIndex = lpMsg->iIndex;
; 828  : 	SDHP_DBCHARINFOREQUEST pMsg;
; 829  : 	char szName[11];
; 830  : 
; 831  : 	memset(szId, 0, sizeof(szId));
; 832  : 	memcpy(szId, lpMsg->szAccountID, MAX_ACCOUNT_LEN);
; 833  : 	memcpy(szJN, lpMsg->cJoominNumber, sizeof(lpMsg->cJoominNumber));
; 834  : 	
; 835  : 	switch ( lpMsg->iResult )

  00088	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
  0008c	0f 57 c0	 xorps	 xmm0, xmm0
  0008f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00092	0f 11 45 cd	 movups	 XMMWORD PTR _szJN$[ebp+1], xmm0
  00096	57		 push	 edi
  00097	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  0009c	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  0009f	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  000a3	89 45 ac	 mov	 DWORD PTR _iIndex$1$[ebp], eax
  000a6	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  000aa	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  000af	0f 10 46 30	 movups	 xmm0, XMMWORD PTR [esi+48]
  000b3	66 c7 45 f8 00
	00		 mov	 WORD PTR _szId$[ebp+8], 0
  000b9	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax
  000bd	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  000c0	c7 45 dd 00 00
	00 00		 mov	 DWORD PTR _szJN$[ebp+17], 0
  000c7	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0
  000cb	0f 11 45 cc	 movups	 XMMWORD PTR _szJN$[ebp], xmm0
  000cf	89 45 dc	 mov	 DWORD PTR _szJN$[ebp+16], eax
  000d2	74 0a		 je	 SHORT $LN8@JGAnsMapSv

; 862  : 					break;
; 863  : 			}
; 864  : 			break;
; 865  : 
; 866  : 		default:
; 867  : 			iSendResult = 0;

  000d4	33 c0		 xor	 eax, eax

; 868  : 			bAuthOK = FALSE;

  000d6	89 45 a4	 mov	 DWORD PTR _bAuthOK$1$[ebp], eax
  000d9	e9 d3 00 00 00	 jmp	 $LN4@JGAnsMapSv
$LN8@JGAnsMapSv:

; 836  : 	{
; 837  : 		case 0:
; 838  : 			iSendResult = 0;
; 839  : 			bAuthOK = FALSE;
; 840  : 
; 841  : 			if ( !gObjSetAccountLogin(iIndex, szId, lpMsg->iUserNumber, lpMsg->iDBNumber, szJN))

  000de	8d 45 cc	 lea	 eax, DWORD PTR _szJN$[ebp]
  000e1	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _iSendResult$1$[ebp], 0
  000e8	50		 push	 eax
  000e9	ff 76 2c	 push	 DWORD PTR [esi+44]
  000ec	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  000ef	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _bAuthOK$1$[ebp], 0
  000f6	ff 76 28	 push	 DWORD PTR [esi+40]
  000f9	50		 push	 eax
  000fa	ff 75 ac	 push	 DWORD PTR _iIndex$1$[ebp]
  000fd	e8 00 00 00 00	 call	 ?gObjSetAccountLogin@@YAHHPADHH0@Z ; gObjSetAccountLogin
  00102	83 c4 14	 add	 esp, 20			; 00000014H
  00105	85 c0		 test	 eax, eax

; 842  : 			{
; 843  : 				GJPAccountFail(iIndex, szId, lpMsg->iDBNumber, lpMsg->iUserNumber);

  00107	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0010a	75 1b		 jne	 SHORT $LN9@JGAnsMapSv
  0010c	ff 76 28	 push	 DWORD PTR [esi+40]
  0010f	ff 76 2c	 push	 DWORD PTR [esi+44]
  00112	50		 push	 eax
  00113	ff 75 ac	 push	 DWORD PTR _iIndex$1$[ebp]
  00116	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  0011b	83 c4 10	 add	 esp, 16			; 00000010H

; 844  : 				lpMsg->iResult = 4;

  0011e	c7 46 24 04 00
	00 00		 mov	 DWORD PTR [esi+36], 4

; 845  : 			}
; 846  : 			else

  00125	eb 40		 jmp	 SHORT $LN10@JGAnsMapSv
$LN9@JGAnsMapSv:

; 847  : 			{
; 848  : 				LogAddTD(lMsg.Get(MSGGET(1, 211)), gObj[iIndex].Ip_addr, szId, lpMsg->iUserNumber, lpMsg->iDBNumber);

  00127	ff 76 2c	 push	 DWORD PTR [esi+44]
  0012a	69 4d ac 40 27
	00 00		 imul	 ecx, DWORD PTR _iIndex$1$[ebp], 10048
  00131	ff 76 28	 push	 DWORD PTR [esi+40]
  00134	50		 push	 eax
  00135	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0013a	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0013d	03 c1		 add	 eax, ecx
  0013f	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00144	50		 push	 eax
  00145	68 d3 01 00 00	 push	 467			; 000001d3H
  0014a	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0014f	50		 push	 eax
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00156	83 c4 14	 add	 esp, 20			; 00000014H

; 849  : 				iSendResult = 1;

  00159	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _iSendResult$1$[ebp], 1

; 850  : 				bAuthOK = TRUE;

  00160	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR _bAuthOK$1$[ebp], 1
$LN10@JGAnsMapSv:

; 851  : 			}
; 852  : 
; 853  : 			if ( lpMsg->iUserNumber == 0 && lpMsg->iDBNumber == 0 )

  00167	83 7e 28 00	 cmp	 DWORD PTR [esi+40], 0
  0016b	75 27		 jne	 SHORT $LN11@JGAnsMapSv
  0016d	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  00171	75 21		 jne	 SHORT $LN11@JGAnsMapSv

; 854  : 			{
; 855  : 				LogAddTD(lMsg.Get(MSGGET(1, 212)), szId, lpMsg->iUserNumber, lpMsg->iDBNumber);

  00173	6a 00		 push	 0
  00175	6a 00		 push	 0
  00177	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0017a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0017f	50		 push	 eax
  00180	68 d4 01 00 00	 push	 468			; 000001d4H
  00185	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0018a	50		 push	 eax
  0018b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00191	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@JGAnsMapSv:

; 856  : 			}
; 857  : 
; 858  : 			switch ( lpMsg->btBlockCode )

  00194	80 7e 44 46	 cmp	 BYTE PTR [esi+68], 70	; 00000046H
  00198	75 14		 jne	 SHORT $LN23@JGAnsMapSv

; 859  : 			{
; 860  : 				case 70:	// 0x46
; 861  : 					gObj[iIndex].m_cAccountItemBlock = 1;

  0019a	69 4d ac 40 27
	00 00		 imul	 ecx, DWORD PTR _iIndex$1$[ebp], 10048
  001a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001a6	c6 84 01 c4 01
	00 00 01	 mov	 BYTE PTR [ecx+eax+452], 1
$LN23@JGAnsMapSv:
  001ae	8b 45 a8	 mov	 eax, DWORD PTR _iSendResult$1$[ebp]
$LN4@JGAnsMapSv:

; 869  : 			break;
; 870  : 	}
; 871  : 
; 872  : 	GCAnsMapSvrAuth(iIndex, iSendResult);

  001b1	50		 push	 eax
  001b2	ff 75 ac	 push	 DWORD PTR _iIndex$1$[ebp]
  001b5	e8 00 00 00 00	 call	 ?GCAnsMapSvrAuth@@YAXHH@Z ; GCAnsMapSvrAuth
  001ba	83 c4 08	 add	 esp, 8

; 873  : 
; 874  : 	if ( bAuthOK == FALSE )

  001bd	83 7d a4 00	 cmp	 DWORD PTR _bAuthOK$1$[ebp], 0
  001c1	75 39		 jne	 SHORT $LN14@JGAnsMapSv

; 875  : 	{
; 876  : 		LogAddC(2, "[MapServerMng] [%s][%s] JG [0x7B] - Join Result Failed : RST:%d, BLK:%c",

  001c3	0f b6 46 44	 movzx	 eax, BYTE PTR [esi+68]
  001c7	50		 push	 eax
  001c8	ff 76 24	 push	 DWORD PTR [esi+36]
  001cb	8d 46 13	 lea	 eax, DWORD PTR [esi+19]
  001ce	50		 push	 eax
  001cf	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  001d2	50		 push	 eax
  001d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
  001d8	6a 02		 push	 2
  001da	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 877  : 			szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);
; 878  : 		gObjDel(lpMsg->iIndex);

  001e0	ff 76 04	 push	 DWORD PTR [esi+4]
  001e3	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  001e8	83 c4 1c	 add	 esp, 28			; 0000001cH
  001eb	5f		 pop	 edi
  001ec	5b		 pop	 ebx
  001ed	5e		 pop	 esi

; 908  : 		szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);
; 909  : 
; 910  : }

  001ee	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f1	33 cd		 xor	 ecx, ebp
  001f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f8	8b e5		 mov	 esp, ebp
  001fa	5d		 pop	 ebp
  001fb	c3		 ret	 0
$LN14@JGAnsMapSv:

; 879  : 
; 880  : 		return;
; 881  : 	}
; 882  : 	
; 883  : 	gObj[iIndex].m_sPrevMapSvrCode = lpMsg->wPrevMapSvrCode;

  001fc	69 55 ac 40 27
	00 00		 imul	 edx, DWORD PTR _iIndex$1$[ebp], 10048
  00203	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00208	0f b7 4e 1e	 movzx	 ecx, WORD PTR [esi+30]

; 884  : 	gObj[iIndex].m_sDestMapNumber  = lpMsg->wMapNumber;
; 885  : 	gObj[iIndex].m_btDestX = lpMsg->btX;
; 886  : 	gObj[iIndex].m_btDestY = lpMsg->btY;
; 887  : 	gObj[iIndex].bEnableDelCharacter = FALSE;
; 888  : 
; 889  : #if (ENABLETEST_ARCA == 1)
; 890  : 	if( g_ArcaBattle.IsArcaBattleServer() )
; 891  :     {
; 892  :           g_ArcaBattle.SendArcaBattlePlayInfo(gObj[iIndex], 1);
; 893  :           g_ArcaBattle.SendArcaBattleCurrentState(gObj[iIndex]);
; 894  :     }
; 895  : #endif
; 896  : 
; 897  : 	PHeadSetB((LPBYTE)&pMsg, 0x06, sizeof(pMsg));

  0020c	6a 1c		 push	 28			; 0000001cH
  0020e	6a 06		 push	 6
  00210	66 89 8c 02 44
	20 00 00	 mov	 WORD PTR [edx+eax+8260], cx
  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0021d	0f b7 4e 20	 movzx	 ecx, WORD PTR [esi+32]
  00221	66 89 8c 02 46
	20 00 00	 mov	 WORD PTR [edx+eax+8262], cx
  00229	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0022e	0f b6 4e 22	 movzx	 ecx, BYTE PTR [esi+34]
  00232	88 8c 02 48 20
	00 00		 mov	 BYTE PTR [edx+eax+8264], cl
  00239	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0023e	0f b6 4e 23	 movzx	 ecx, BYTE PTR [esi+35]
  00242	88 8c 02 49 20
	00 00		 mov	 BYTE PTR [edx+eax+8265], cl
  00249	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0024e	c7 44 02 10 00
	00 00 00	 mov	 DWORD PTR [edx+eax+16], 0
  00256	8d 45 b0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00259	50		 push	 eax
  0025a	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 898  : 	memset(szName, 0, sizeof(szName));
; 899  : 	memcpy(szName, lpMsg->szCharName, MAX_ACCOUNT_LEN);

  0025f	0f b7 46 1b	 movzx	 eax, WORD PTR [esi+27]
  00263	0f 57 c0	 xorps	 xmm0, xmm0
  00266	66 c7 45 ec 00
	00		 mov	 WORD PTR _szName$[ebp+8], 0
  0026c	66 0f d6 45 e4	 movq	 QWORD PTR _szName$[ebp], xmm0
  00271	f3 0f 7e 46 13	 movq	 xmm0, QWORD PTR [esi+19]
  00276	66 89 45 ec	 mov	 WORD PTR _szName$[ebp+8], ax

; 900  : 	BuxConvert(szName, MAX_ACCOUNT_LEN);

  0027a	8d 45 e4	 lea	 eax, DWORD PTR _szName$[ebp]
  0027d	6a 0a		 push	 10			; 0000000aH
  0027f	50		 push	 eax
  00280	c6 45 ee 00	 mov	 BYTE PTR _szName$[ebp+10], 0
  00284	66 0f d6 45 e4	 movq	 QWORD PTR _szName$[ebp], xmm0
  00289	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert

; 901  : 	memcpy(pMsg.Name, szName, MAX_ACCOUNT_LEN);

  0028e	f3 0f 7e 45 e4	 movq	 xmm0, QWORD PTR _szName$[ebp]

; 902  : 	strcpy(pMsg.AccountID, lpMsg->szAccountID);

  00293	8d 4d b3	 lea	 ecx, DWORD PTR _pMsg$[ebp+3]
  00296	0f b7 45 ec	 movzx	 eax, WORD PTR _szName$[ebp+8]
  0029a	83 c4 14	 add	 esp, 20			; 00000014H
  0029d	66 0f d6 45 be	 movq	 QWORD PTR _pMsg$[ebp+14], xmm0
  002a2	2b cf		 sub	 ecx, edi
  002a4	66 89 45 c6	 mov	 WORD PTR _pMsg$[ebp+22], ax
  002a8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL18@JGAnsMapSv:
  002b0	8a 07		 mov	 al, BYTE PTR [edi]
  002b2	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  002b5	88 44 39 ff	 mov	 BYTE PTR [ecx+edi-1], al
  002b9	84 c0		 test	 al, al
  002bb	75 f3		 jne	 SHORT $LL18@JGAnsMapSv

; 903  : 	pMsg.Number = lpObj->m_Index;

  002bd	66 8b 03	 mov	 ax, WORD PTR [ebx]

; 904  : 
; 905  : 	cDBSMng.Send((PCHAR)&pMsg, pMsg.h.size);

  002c0	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  002c5	66 89 45 ca	 mov	 WORD PTR _pMsg$[ebp+26], ax
  002c9	0f b6 45 b1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  002cd	50		 push	 eax
  002ce	8d 45 b0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  002d1	50		 push	 eax
  002d2	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 906  : 
; 907  : 	LogAddTD("[MapServerMng] [%s][%s] JG [0x7B] - Join Result OK : RST:%d, BLK:%c",

  002d7	0f b6 46 44	 movzx	 eax, BYTE PTR [esi+68]
  002db	50		 push	 eax
  002dc	ff 76 24	 push	 DWORD PTR [esi+36]
  002df	8d 46 13	 lea	 eax, DWORD PTR [esi+19]
  002e2	50		 push	 eax
  002e3	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  002e6	50		 push	 eax
  002e7	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
  002ec	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  002f2	83 c4 14	 add	 esp, 20			; 00000014H
  002f5	5f		 pop	 edi
  002f6	5b		 pop	 ebx
  002f7	5e		 pop	 esi

; 908  : 		szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);
; 909  : 
; 910  : }

  002f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002fb	33 cd		 xor	 ecx, ebp
  002fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00302	8b e5		 mov	 esp, ebp
  00304	5d		 pop	 ebp
  00305	c3		 ret	 0
$LN22@JGAnsMapSv:

; 803  : 	{
; 804  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7B] - Index out of bound : %d",

  00306	51		 push	 ecx
  00307	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  0030c	6a 02		 push	 2
  0030e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 908  : 		szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);
; 909  : 
; 910  : }

  00314	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00317	83 c4 0c	 add	 esp, 12			; 0000000cH
  0031a	33 cd		 xor	 ecx, ebp
  0031c	5e		 pop	 esi
  0031d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00322	8b e5		 mov	 esp, ebp
  00324	5d		 pop	 ebp
  00325	c3		 ret	 0
?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z ENDP	; JGAnsMapSvrAuth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z
_TEXT	SEGMENT
_pMsg$ = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_lpszAccountID$ = 12					; size = 4
_lpszCharName$ = 16					; size = 4
_iJA1$ = 20						; size = 4
_iJA2$ = 24						; size = 4
_iJA3$ = 28						; size = 4
_iJA4$ = 32						; size = 4
?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z PROC			; GJReqMapSvrAuth, COMDAT

; 771  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 10	 mov	 ebx, DWORD PTR _lpszCharName$[ebp]
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]
  00018	57		 push	 edi
  00019	8b 7d 0c	 mov	 edi, DWORD PTR _lpszAccountID$[ebp]

; 772  : 	if ( !OBJMAX_RANGE(iIndex))

  0001c	85 f6		 test	 esi, esi
  0001e	0f 88 a2 00 00
	00		 js	 $LN6@GJReqMapSv
  00024	33 c0		 xor	 eax, eax
  00026	81 fe eb 2c 00
	00		 cmp	 esi, 11499		; 00002cebH
  0002c	0f 9e c0	 setle	 al
  0002f	85 c0		 test	 eax, eax
  00031	0f 84 8f 00 00
	00		 je	 $LN6@GJReqMapSv

; 775  : 		return;
; 776  : 	}
; 777  : 
; 778  : 	PMSG_REQ_MAPSVRAUTH pMsg;
; 779  : 
; 780  : 	PHeadSetB((LPBYTE)&pMsg, 0x7B, sizeof(pMsg));

  00037	6a 30		 push	 48			; 00000030H
  00039	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0003c	6a 7b		 push	 123			; 0000007bH
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 781  : 	pMsg.iIndex = iIndex;
; 782  : 	memcpy(pMsg.szAccountID, lpszAccountID, MAX_ACCOUNT_LEN);

  00044	0f b7 47 08	 movzx	 eax, WORD PTR [edi+8]
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]

; 783  : 	memcpy(pMsg.szCharName, lpszCharName, MAX_ACCOUNT_LEN);
; 784  : 	pMsg.wDstMapSvrCode = gGameServerCode;
; 785  : 	pMsg.iJoinAuthCode1 = iJA1;
; 786  : 	pMsg.iJoinAuthCode2 = iJA2;
; 787  : 	pMsg.iJoinAuthCode3 = iJA3;
; 788  : 	pMsg.iJoinAuthCode4 = iJA4;
; 789  : 
; 790  : 	wsJServerCli.DataSend((PCHAR)&pMsg, pMsg.h.size);

  0004f	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00054	66 89 45 dc	 mov	 WORD PTR _pMsg$[ebp+16], ax
  00058	0f b7 43 08	 movzx	 eax, WORD PTR [ebx+8]
  0005c	66 89 45 e7	 mov	 WORD PTR _pMsg$[ebp+27], ax
  00060	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00067	66 89 45 ea	 mov	 WORD PTR _pMsg$[ebp+30], ax
  0006b	8b 45 14	 mov	 eax, DWORD PTR _iJA1$[ebp]
  0006e	89 45 ec	 mov	 DWORD PTR _pMsg$[ebp+32], eax
  00071	8b 45 18	 mov	 eax, DWORD PTR _iJA2$[ebp]
  00074	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+36], eax
  00077	8b 45 1c	 mov	 eax, DWORD PTR _iJA3$[ebp]
  0007a	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+40], eax
  0007d	8b 45 20	 mov	 eax, DWORD PTR _iJA4$[ebp]
  00080	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+44], eax
  00083	0f b6 45 cd	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00087	50		 push	 eax
  00088	66 0f d6 45 d4	 movq	 QWORD PTR _pMsg$[ebp+8], xmm0
  0008d	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00090	f3 0f 7e 03	 movq	 xmm0, QWORD PTR [ebx]
  00094	50		 push	 eax
  00095	89 75 d0	 mov	 DWORD PTR _pMsg$[ebp+4], esi
  00098	66 0f d6 45 df	 movq	 QWORD PTR _pMsg$[ebp+19], xmm0
  0009d	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 791  : 
; 792  : 	gObj[iIndex].m_bMapSvrMoveReq = true;

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a7	69 ce 40 27 00
	00		 imul	 ecx, esi, 10048
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	c6 84 01 3d 20
	00 00 01	 mov	 BYTE PTR [ecx+eax+8253], 1

; 793  : }

  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bb	33 cd		 xor	 ecx, ebp
  000bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
$LN6@GJReqMapSv:

; 773  : 	{
; 774  : 		LogAddC(2, "[MapServerMng] Packet Error GJ [0x7B] - Index out of bound : %d", iIndex);

  000c6	56		 push	 esi
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
  000cc	6a 02		 push	 2
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 793  : }

  000d4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000da	33 cd		 xor	 ecx, ebp
  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c3		 ret	 0
?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z ENDP			; GJReqMapSvrAuth
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z
_TEXT	SEGMENT
tv193 = -320						; size = 4
_pNotice$1 = -316					; size = 272
_pMsg$2 = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z PROC	; JGAnsMapSvrMove, COMDAT

; 691  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 40 01 00
	00		 sub	 esp, 320		; 00000140H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 692  : 	if ( gObjIsConnected(lpMsg->iIndex ) == FALSE )

  00017	ff 76 04	 push	 DWORD PTR [esi+4]
  0001a	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001f	83 c4 04	 add	 esp, 4
  00022	85 c0		 test	 eax, eax
  00024	75 22		 jne	 SHORT $LN2@JGAnsMapSv

; 693  : 	{
; 694  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - User not Connected : %d", lpMsg->iIndex);

  00026	ff 76 04	 push	 DWORD PTR [esi+4]
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  0002e	6a 02		 push	 2
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	5e		 pop	 esi

; 744  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);
; 745  : 	}
; 746  : }

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003d	33 cd		 xor	 ecx, ebp
  0003f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN2@JGAnsMapSv:
  00048	57		 push	 edi

; 695  : 		return;
; 696  : 	}
; 697  : 
; 698  : 	LPOBJ lpObj = &gObj[lpMsg->iIndex];

  00049	69 7e 04 40 27
	00 00		 imul	 edi, DWORD PTR [esi+4], 10048

; 699  : 
; 700  : 	if ( strcmp( lpObj->AccountID , lpMsg->szAccountID )  ||  strcmp( lpObj->Name, lpMsg->szCharName) )

  00050	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00053	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00059	8d 47 52	 lea	 eax, DWORD PTR [edi+82]
  0005c	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv193[ebp], eax
$LL12@JGAnsMapSv:
  00062	8a 10		 mov	 dl, BYTE PTR [eax]
  00064	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00066	75 1a		 jne	 SHORT $LN13@JGAnsMapSv
  00068	84 d2		 test	 dl, dl
  0006a	74 12		 je	 SHORT $LN14@JGAnsMapSv
  0006c	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0006f	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00072	75 0e		 jne	 SHORT $LN13@JGAnsMapSv
  00074	83 c0 02	 add	 eax, 2
  00077	83 c1 02	 add	 ecx, 2
  0007a	84 d2		 test	 dl, dl
  0007c	75 e4		 jne	 SHORT $LL12@JGAnsMapSv
$LN14@JGAnsMapSv:
  0007e	33 c0		 xor	 eax, eax
  00080	eb 05		 jmp	 SHORT $LN15@JGAnsMapSv
$LN13@JGAnsMapSv:
  00082	1b c0		 sbb	 eax, eax
  00084	83 c8 01	 or	 eax, 1
$LN15@JGAnsMapSv:
  00087	53		 push	 ebx
  00088	85 c0		 test	 eax, eax
  0008a	0f 85 82 01 00
	00		 jne	 $LN4@JGAnsMapSv
  00090	8d 5f 5d	 lea	 ebx, DWORD PTR [edi+93]
  00093	8d 4e 13	 lea	 ecx, DWORD PTR [esi+19]
  00096	8b c3		 mov	 eax, ebx
$LL16@JGAnsMapSv:
  00098	8a 10		 mov	 dl, BYTE PTR [eax]
  0009a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0009c	75 1a		 jne	 SHORT $LN17@JGAnsMapSv
  0009e	84 d2		 test	 dl, dl
  000a0	74 12		 je	 SHORT $LN18@JGAnsMapSv
  000a2	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000a5	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000a8	75 0e		 jne	 SHORT $LN17@JGAnsMapSv
  000aa	83 c0 02	 add	 eax, 2
  000ad	83 c1 02	 add	 ecx, 2
  000b0	84 d2		 test	 dl, dl
  000b2	75 e4		 jne	 SHORT $LL16@JGAnsMapSv
$LN18@JGAnsMapSv:
  000b4	33 c0		 xor	 eax, eax
  000b6	eb 05		 jmp	 SHORT $LN19@JGAnsMapSv
$LN17@JGAnsMapSv:
  000b8	1b c0		 sbb	 eax, eax
  000ba	83 c8 01	 or	 eax, 1
$LN19@JGAnsMapSv:
  000bd	85 c0		 test	 eax, eax
  000bf	0f 85 4d 01 00
	00		 jne	 $LN4@JGAnsMapSv

; 703  : 		return;
; 704  : 	}
; 705  : 
; 706  : 	if ( lpMsg->iResult == 0	 )

  000c5	39 46 28	 cmp	 DWORD PTR [esi+40], eax
  000c8	0f 85 e7 00 00
	00		 jne	 $LN5@JGAnsMapSv

; 710  : 		PHeadSubSetBE((LPBYTE)&pMsg, 0xB1, 0x00, sizeof(pMsg));

  000ce	6a 28		 push	 40			; 00000028H
  000d0	50		 push	 eax
  000d1	8d 45 d4	 lea	 eax, DWORD PTR _pMsg$2[ebp]
  000d4	68 b1 00 00 00	 push	 177			; 000000b1H
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?PHeadSubSetBE@@YAXPAEEEH@Z ; PHeadSubSetBE
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  000df	a1 f8 6a 01 00	 mov	 eax, DWORD PTR ?g_MapServerManager@@3VCMapServerManager@@A+92920
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp

; 710  : 		PHeadSubSetBE((LPBYTE)&pMsg, 0xB1, 0x00, sizeof(pMsg));

  000e4	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\users\michel\desktop\source\gameserver\source\mapservermanager.h

; 55   : 		if ( this->m_lpThisMapSvrData != NULL )

  000e7	85 c0		 test	 eax, eax
  000e9	74 06		 je	 SHORT $LN10@JGAnsMapSv

; 56   : 		{
; 57   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  000eb	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]
  000ef	eb 03		 jmp	 SHORT $LN9@JGAnsMapSv
$LN10@JGAnsMapSv:

; 58   : 		}
; 59   : 		return -1;

  000f1	83 c8 ff	 or	 eax, -1
$LN9@JGAnsMapSv:
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp

; 712  : 		pMsg.wMapSvrCode = g_MapServerManager.GetMapSvrGroup();

  000f4	66 89 45 ea	 mov	 WORD PTR _pMsg$2[ebp+22], ax

; 713  : 		pMsg.iJoinAuthCode1 = lpMsg->iJoinAuthCode1 ;
; 714  : 		pMsg.iJoinAuthCode2 = lpMsg->iJoinAuthCode2 ;
; 715  : 		pMsg.iJoinAuthCode3 = lpMsg->iJoinAuthCode3;
; 716  : 		pMsg.iJoinAuthCode4 = lpMsg->iJoinAuthCode4 ;
; 717  : 	
; 718  : 		BOOL bRESULT = g_MapServerManager.GetSvrCodeData(lpMsg->wDstMapSvrCode, pMsg.szMapSvrIpAddress, &pMsg.wMapSvrPort);

  000f8	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  000fd	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00100	89 45 ec	 mov	 DWORD PTR _pMsg$2[ebp+24], eax
  00103	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
  00106	89 45 f0	 mov	 DWORD PTR _pMsg$2[ebp+28], eax
  00109	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  0010c	89 45 f4	 mov	 DWORD PTR _pMsg$2[ebp+32], eax
  0010f	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00112	89 45 f8	 mov	 DWORD PTR _pMsg$2[ebp+36], eax
  00115	8d 45 e8	 lea	 eax, DWORD PTR _pMsg$2[ebp+20]
  00118	50		 push	 eax
  00119	8d 45 d8	 lea	 eax, DWORD PTR _pMsg$2[ebp+4]
  0011c	50		 push	 eax
  0011d	0f b7 46 20	 movzx	 eax, WORD PTR [esi+32]
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z ; CMapServerManager::GetSvrCodeData

; 719  : 
; 720  : 		if ( bRESULT == FALSE )

  00127	85 c0		 test	 eax, eax
  00129	75 2e		 jne	 SHORT $LN7@JGAnsMapSv

; 721  : 		{
; 722  : 			LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - Failed to find Map Info [%s]-[%s] (%d)",

  0012b	0f b7 46 20	 movzx	 eax, WORD PTR [esi+32]
  0012f	50		 push	 eax
  00130	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv193[ebp]
  00136	53		 push	 ebx
  00137	50		 push	 eax
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  0013d	6a 02		 push	 2
  0013f	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  00145	83 c4 14	 add	 esp, 20			; 00000014H
  00148	5b		 pop	 ebx
  00149	5f		 pop	 edi
  0014a	5e		 pop	 esi

; 744  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);
; 745  : 	}
; 746  : }

  0014b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014e	33 cd		 xor	 ecx, ebp
  00150	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c3		 ret	 0
$LN7@JGAnsMapSv:

; 723  : 				lpObj->AccountID, lpObj->Name, lpMsg->wDstMapSvrCode);
; 724  : 			return;
; 725  : 		}
; 726  : 
; 727  : 		GJSetCharacterInfo(lpObj, lpObj->m_Index, TRUE);

  00159	6a 01		 push	 1
  0015b	6a 01		 push	 1
  0015d	ff 37		 push	 DWORD PTR [edi]
  0015f	57		 push	 edi
  00160	e8 00 00 00 00	 call	 ?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HHH@Z ; GJSetCharacterInfo
  00165	83 c4 10	 add	 esp, 16			; 00000010H

; 728  : 		lpObj->m_bMapSvrMoveQuit = TRUE;

  00168	c6 87 3c 20 00
	00 01		 mov	 BYTE PTR [edi+8252], 1

; 729  : 		lpObj->m_dwMapSvrQuitTick = GetTickCount();

  0016f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00175	89 87 40 20 00
	00		 mov	 DWORD PTR [edi+8256], eax

; 730  : 
; 731  : 		DataSend(lpMsg->iIndex, (LPBYTE)&pMsg, pMsg.h.size);

  0017b	0f b6 45 d5	 movzx	 eax, BYTE PTR _pMsg$2[ebp+1]
  0017f	50		 push	 eax
  00180	8d 45 d4	 lea	 eax, DWORD PTR _pMsg$2[ebp]
  00183	50		 push	 eax
  00184	ff 76 04	 push	 DWORD PTR [esi+4]
  00187	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 732  : 
; 733  : 		LogAddTD("[MapServerMng] [%s][%s] JG [0x7A] - Move Map Request OK : MAPSVR_D:%d",

  0018c	0f b7 46 20	 movzx	 eax, WORD PTR [esi+32]
  00190	50		 push	 eax
  00191	53		 push	 ebx
  00192	8d 47 52	 lea	 eax, DWORD PTR [edi+82]
  00195	50		 push	 eax
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  001a1	83 c4 1c	 add	 esp, 28			; 0000001cH
  001a4	5b		 pop	 ebx
  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi

; 744  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);
; 745  : 	}
; 746  : }

  001a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001aa	33 cd		 xor	 ecx, ebp
  001ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b1	8b e5		 mov	 esp, ebp
  001b3	5d		 pop	 ebp
  001b4	c3		 ret	 0
$LN5@JGAnsMapSv:

; 734  : 			lpObj->AccountID, lpObj->Name, lpMsg->wDstMapSvrCode);
; 735  : 	}
; 736  : 	else
; 737  : 	{
; 738  : 		PMSG_NOTICE pNotice;
; 739  : 
; 740  : 		TNotice::MakeNoticeMsgEx(&pNotice, 0, lMsg.Get(MSGGET(6, 77)));

  001b5	68 4d 06 00 00	 push	 1613			; 0000064dH
  001ba	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  001bf	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  001c4	50		 push	 eax
  001c5	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$1[ebp]
  001cb	6a 00		 push	 0
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx

; 741  : 		DataSend(lpObj->m_Index, (LPBYTE)&pNotice, pNotice.h.size);

  001d3	0f b6 85 c5 fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$1[ebp+1]
  001da	50		 push	 eax
  001db	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$1[ebp]
  001e1	50		 push	 eax
  001e2	ff 37		 push	 DWORD PTR [edi]
  001e4	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 742  : 
; 743  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - Failed to Authorize User [%s][%s] Result:%d",

  001e9	ff 76 28	 push	 DWORD PTR [esi+40]
  001ec	8d 47 52	 lea	 eax, DWORD PTR [edi+82]
  001ef	53		 push	 ebx
  001f0	50		 push	 eax
  001f1	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  001f6	6a 02		 push	 2
  001f8	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  001fe	83 c4 2c	 add	 esp, 44			; 0000002cH
  00201	5b		 pop	 ebx
  00202	5f		 pop	 edi
  00203	5e		 pop	 esi

; 744  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);
; 745  : 	}
; 746  : }

  00204	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00207	33 cd		 xor	 ecx, ebp
  00209	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020e	8b e5		 mov	 esp, ebp
  00210	5d		 pop	 ebp
  00211	c3		 ret	 0
$LN4@JGAnsMapSv:

; 701  : 	{
; 702  : 		LogAddC(2, "[MapServerMng] Packet Error JG [0x7A] - User Info Mismatch [%s][%s]-[%s][%s] (%d)", lpMsg->szAccountID, lpMsg->szCharName, lpObj->AccountID, lpObj->Name, lpObj->m_Index);

  00212	ff 37		 push	 DWORD PTR [edi]
  00214	8d 47 5d	 lea	 eax, DWORD PTR [edi+93]
  00217	50		 push	 eax
  00218	8d 47 52	 lea	 eax, DWORD PTR [edi+82]
  0021b	50		 push	 eax
  0021c	8d 46 13	 lea	 eax, DWORD PTR [esi+19]
  0021f	50		 push	 eax
  00220	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00223	50		 push	 eax
  00224	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  00229	6a 02		 push	 2
  0022b	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC

; 744  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);
; 745  : 	}
; 746  : }

  00231	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00234	83 c4 1c	 add	 esp, 28			; 0000001cH
  00237	33 cd		 xor	 ecx, ebp
  00239	5b		 pop	 ebx
  0023a	5f		 pop	 edi
  0023b	5e		 pop	 esi
  0023c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00241	8b e5		 mov	 esp, ebp
  00243	5d		 pop	 ebp
  00244	c3		 ret	 0
?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z ENDP	; JGAnsMapSvrMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJReqMapSvrMove@@YAXHGGEE@Z
_TEXT	SEGMENT
_pMsg$ = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_wDesMapSvrCode$ = 12					; size = 2
_wMapNumber$ = 16					; size = 2
_btX$ = 20						; size = 1
_btY$ = 24						; size = 1
?GJReqMapSvrMove@@YAXHGGEE@Z PROC			; GJReqMapSvrMove, COMDAT

; 646  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]

; 647  : 	PMSG_REQ_MAPSVRMOVE pMsg;
; 648  : 	
; 649  : 	if ( gObjIsConnected(iIndex) == PLAYER_EMPTY )

  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	75 20		 jne	 SHORT $LN2@GJReqMapSv

; 650  : 	{
; 651  : 		LogAddC(2, "[MapServerMng] Packet Error GJ [0x7A] - User not Connected : %d", iIndex);

  00021	56		 push	 esi
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
  00027	6a 02		 push	 2
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddC@@3P6AXEPADZZA ; LogAddC
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00032	5e		 pop	 esi

; 670  : 	}
; 671  : }

  00033	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00036	33 cd		 xor	 ecx, ebp
  00038	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
$LN2@GJReqMapSv:

; 652  : 	}
; 653  : 	else
; 654  : 	{
; 655  : 		PHeadSetB((LPBYTE)&pMsg, 0x7A, sizeof(PMSG_REQ_MAPSVRMOVE));

  00041	6a 28		 push	 40			; 00000028H
  00043	8d 45 d4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00046	6a 7a		 push	 122			; 0000007aH
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 656  : 		pMsg.iIndex = iIndex;
; 657  : 
; 658  : 		memcpy(pMsg.szAccountID , gObj[iIndex].AccountID, sizeof( pMsg.szAccountID)-1);

  0004e	69 ce 40 27 00
	00		 imul	 ecx, esi, 10048
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	89 75 d8	 mov	 DWORD PTR _pMsg$[ebp+4], esi
  0005a	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00060	f3 0f 7e 41 52	 movq	 xmm0, QWORD PTR [ecx+82]
  00065	66 0f d6 45 dc	 movq	 QWORD PTR _pMsg$[ebp+8], xmm0
  0006a	0f b7 41 5a	 movzx	 eax, WORD PTR [ecx+90]
  0006e	66 89 45 e4	 mov	 WORD PTR _pMsg$[ebp+16], ax

; 659  : 		pMsg.szAccountID[10] = 0;

  00072	c6 45 e6 00	 mov	 BYTE PTR _pMsg$[ebp+18], 0

; 660  : 		memcpy(pMsg.szCharName, gObj[iIndex].Name, sizeof( pMsg.szCharName)-1);

  00076	f3 0f 7e 41 5d	 movq	 xmm0, QWORD PTR [ecx+93]
  0007b	66 0f d6 45 e7	 movq	 QWORD PTR _pMsg$[ebp+19], xmm0
  00080	0f b7 41 65	 movzx	 eax, WORD PTR [ecx+101]

; 661  : 		pMsg.szCharName[10] = 0;
; 662  : 
; 663  : 		pMsg.wCurMapSvrCode = gGameServerCode;
; 664  : 		pMsg.wDstMapSvrCode = wDesMapSvrCode;
; 665  : 		pMsg.wMapNumber = wMapNumber;
; 666  : 		pMsg.btX = btX;
; 667  : 		pMsg.btY = btY;
; 668  : 
; 669  : 		wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00084	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00089	66 89 45 ef	 mov	 WORD PTR _pMsg$[ebp+27], ax
  0008d	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00094	66 89 45 f2	 mov	 WORD PTR _pMsg$[ebp+30], ax
  00098	66 8b 45 0c	 mov	 ax, WORD PTR _wDesMapSvrCode$[ebp]
  0009c	66 89 45 f4	 mov	 WORD PTR _pMsg$[ebp+32], ax
  000a0	66 8b 45 10	 mov	 ax, WORD PTR _wMapNumber$[ebp]
  000a4	66 89 45 f6	 mov	 WORD PTR _pMsg$[ebp+34], ax
  000a8	8a 45 14	 mov	 al, BYTE PTR _btX$[ebp]
  000ab	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp+36], al
  000ae	8a 45 18	 mov	 al, BYTE PTR _btY$[ebp]
  000b1	88 45 f9	 mov	 BYTE PTR _pMsg$[ebp+37], al
  000b4	0f b6 45 d5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  000b8	50		 push	 eax
  000b9	8d 45 d4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  000bc	c6 45 f1 00	 mov	 BYTE PTR _pMsg$[ebp+29], 0
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 670  : 	}
; 671  : }

  000c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c9	33 cd		 xor	 ecx, ebp
  000cb	5e		 pop	 esi
  000cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?GJReqMapSvrMove@@YAXHGGEE@Z ENDP			; GJReqMapSvrMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z
_TEXT	SEGMENT
_pNotice$1 = -392					; size = 272
_szNotice$ = -120					; size = 101
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z PROC	; UserNoticeRecv, COMDAT

; 602  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 01 00
	00		 sub	 esp, 392		; 00000188H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]

; 603  : 	char szNotice[101];
; 604  : 	char szId[11];
; 605  : 
; 606  : 	szNotice[100]=0;

  00016	c6 45 ec 00	 mov	 BYTE PTR _szNotice$[ebp+100], 0

; 607  : 	szId[10]=0;

  0001a	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 608  : 
; 609  : 	memcpy(szNotice, lpMsg->Notice , sizeof(lpMsg->Notice)-1);

  0001e	0f 10 41 0d	 movups	 xmm0, XMMWORD PTR [ecx+13]
  00022	8b 41 45	 mov	 eax, DWORD PTR [ecx+69]
  00025	89 45 c0	 mov	 DWORD PTR _szNotice$[ebp+56], eax

; 610  : 	memcpy(szId, lpMsg->szId , sizeof(lpMsg->szId));

  00028	66 8b 41 0b	 mov	 ax, WORD PTR [ecx+11]
  0002c	0f 11 45 88	 movups	 XMMWORD PTR _szNotice$[ebp], xmm0
  00030	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax

; 611  : 
; 612  : 	LogAddTD("[Mu Manager][Notice Log][Type:USER] (%s) %s", szId, szNotice);

  00034	8d 45 88	 lea	 eax, DWORD PTR _szNotice$[ebp]
  00037	0f 10 41 1d	 movups	 xmm0, XMMWORD PTR [ecx+29]
  0003b	50		 push	 eax
  0003c	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0003f	0f 11 45 98	 movups	 XMMWORD PTR _szNotice$[ebp+16], xmm0
  00043	50		 push	 eax
  00044	0f 10 41 2d	 movups	 xmm0, XMMWORD PTR [ecx+45]
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@
  0004d	0f 11 45 a8	 movups	 XMMWORD PTR _szNotice$[ebp+32], xmm0
  00051	f3 0f 7e 41 3d	 movq	 xmm0, QWORD PTR [ecx+61]
  00056	66 0f d6 45 b8	 movq	 QWORD PTR _szNotice$[ebp+48], xmm0
  0005b	f3 0f 7e 41 03	 movq	 xmm0, QWORD PTR [ecx+3]
  00060	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 613  : 
; 614  : 	if ( strlen(szNotice) > 1 )

  0006b	8d 4d 88	 lea	 ecx, DWORD PTR _szNotice$[ebp]
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00071	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL24@UserNotice:
  00074	8a 01		 mov	 al, BYTE PTR [ecx]
  00076	41		 inc	 ecx
  00077	84 c0		 test	 al, al
  00079	75 f9		 jne	 SHORT $LL24@UserNotice
  0007b	2b ca		 sub	 ecx, edx
  0007d	83 f9 01	 cmp	 ecx, 1
  00080	0f 86 d5 00 00
	00		 jbe	 $LN23@UserNotice

; 615  : 	{
; 616  : 		if ( strlen(szId) > 1 )

  00086	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  00089	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0008c	0f 1f 40 00	 npad	 4
$LL25@UserNotice:
  00090	8a 01		 mov	 al, BYTE PTR [ecx]
  00092	41		 inc	 ecx
  00093	84 c0		 test	 al, al
  00095	75 f9		 jne	 SHORT $LL25@UserNotice
  00097	2b ca		 sub	 ecx, edx
  00099	83 f9 01	 cmp	 ecx, 1
  0009c	0f 86 b9 00 00
	00		 jbe	 $LN23@UserNotice

; 617  : 		{
; 618  : 			for ( int n = OBJ_STARTUSERINDEX;n<OBJMAX; n++)

  000a2	8a 75 f0	 mov	 dh, BYTE PTR _szId$[ebp]
  000a5	53		 push	 ebx
  000a6	8a 5d f1	 mov	 bl, BYTE PTR _szId$[ebp+1]
  000a9	56		 push	 esi
  000aa	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000b0	57		 push	 edi
  000b1	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  000b6	81 c6 52 dd 49
	06		 add	 esi, 105504082		; 0649dd52H
  000bc	0f 1f 40 00	 npad	 4
$LL4@UserNotice:

; 619  : 			{
; 620  : 				if ( gObj[n].Connected >= PLAYER_LOGGED )

  000c0	83 7e b2 02	 cmp	 DWORD PTR [esi-78], 2
  000c4	7c 37		 jl	 SHORT $LN2@UserNotice

; 621  : 				{
; 622  : 					if ( gObj[n].AccountID[0] == szId[0] )

  000c6	38 36		 cmp	 BYTE PTR [esi], dh
  000c8	75 33		 jne	 SHORT $LN2@UserNotice

; 623  : 					{
; 624  : 						if ( gObj[n].AccountID[1] == szId[1] )

  000ca	38 5e 01	 cmp	 BYTE PTR [esi+1], bl
  000cd	75 2e		 jne	 SHORT $LN2@UserNotice

; 625  : 						{
; 626  : 							if ( strcmp( gObj[n].AccountID , szId) == 0 )

  000cf	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  000d2	8b ce		 mov	 ecx, esi
$LL26@UserNotice:
  000d4	8a 11		 mov	 dl, BYTE PTR [ecx]
  000d6	3a 10		 cmp	 dl, BYTE PTR [eax]
  000d8	75 1a		 jne	 SHORT $LN27@UserNotice
  000da	84 d2		 test	 dl, dl
  000dc	74 12		 je	 SHORT $LN28@UserNotice
  000de	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  000e1	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  000e4	75 0e		 jne	 SHORT $LN27@UserNotice
  000e6	83 c1 02	 add	 ecx, 2
  000e9	83 c0 02	 add	 eax, 2
  000ec	84 d2		 test	 dl, dl
  000ee	75 e4		 jne	 SHORT $LL26@UserNotice
$LN28@UserNotice:
  000f0	33 c0		 xor	 eax, eax
  000f2	eb 05		 jmp	 SHORT $LN29@UserNotice
$LN27@UserNotice:
  000f4	1b c0		 sbb	 eax, eax
  000f6	83 c8 01	 or	 eax, 1
$LN29@UserNotice:
  000f9	85 c0		 test	 eax, eax
  000fb	74 20		 je	 SHORT $LN19@UserNotice
$LN2@UserNotice:

; 617  : 		{
; 618  : 			for ( int n = OBJ_STARTUSERINDEX;n<OBJMAX; n++)

  000fd	47		 inc	 edi
  000fe	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00104	81 ff ec 2c 00
	00		 cmp	 edi, 11500		; 00002cecH
  0010a	7c b4		 jl	 SHORT $LL4@UserNotice
  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx

; 632  : 								break;
; 633  : 							}
; 634  : 						}
; 635  : 					}
; 636  : 				}
; 637  : 			} // For
; 638  : 		}
; 639  : 	}
; 640  : }

  0010f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00112	33 cd		 xor	 ecx, ebp
  00114	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
$LN19@UserNotice:

; 627  : 							{
; 628  : 								PMSG_NOTICE pNotice;
; 629  : 								TNotice::MakeNoticeMsg(&pNotice, 0, szNotice);

  0011d	8d 45 88	 lea	 eax, DWORD PTR _szNotice$[ebp]
  00120	50		 push	 eax
  00121	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$1[ebp]
  00127	6a 00		 push	 0
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 630  : 								TNotice::SetNoticeProperty(&pNotice, 10,  _ARGB(255, 254, 81, 81), 1, 0, 20);

  0012f	6a 14		 push	 20			; 00000014H
  00131	6a 00		 push	 0
  00133	6a 01		 push	 1
  00135	68 fe 51 51 ff	 push	 -11447810		; ff5151feH
  0013a	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$1[ebp]
  00140	6a 0a		 push	 10			; 0000000aH
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty

; 631  : 								TNotice::SendNoticeToUser(n, &pNotice);

  00148	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$1[ebp]
  0014e	50		 push	 eax
  0014f	57		 push	 edi
  00150	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  00155	83 c4 2c	 add	 esp, 44			; 0000002cH
  00158	5f		 pop	 edi
  00159	5e		 pop	 esi
  0015a	5b		 pop	 ebx
$LN23@UserNotice:

; 632  : 								break;
; 633  : 							}
; 634  : 						}
; 635  : 					}
; 636  : 				}
; 637  : 			} // For
; 638  : 		}
; 639  : 	}
; 640  : }

  0015b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015e	33 cd		 xor	 ecx, ebp
  00160	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00165	8b e5		 mov	 esp, ebp
  00167	5d		 pop	 ebp
  00168	c3		 ret	 0
?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z ENDP	; UserNoticeRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z
_TEXT	SEGMENT
_szNotice$ = -108					; size = 101
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z PROC		; AllNoticeRecv, COMDAT

; 583  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 584  : 	char szNotice[101];
; 585  : 
; 586  : 	szNotice[100]=0;

  00013	c6 45 f8 00	 mov	 BYTE PTR _szNotice$[ebp+100], 0

; 587  : 
; 588  : 	memcpy(szNotice, lpMsg->Notice , sizeof(lpMsg->Notice)-1);

  00017	0f 10 40 03	 movups	 xmm0, XMMWORD PTR [eax+3]
  0001b	0f 11 45 94	 movups	 XMMWORD PTR _szNotice$[ebp], xmm0
  0001f	0f 10 40 13	 movups	 xmm0, XMMWORD PTR [eax+19]
  00023	0f 11 45 a4	 movups	 XMMWORD PTR _szNotice$[ebp+16], xmm0
  00027	0f 10 40 23	 movups	 xmm0, XMMWORD PTR [eax+35]
  0002b	0f 11 45 b4	 movups	 XMMWORD PTR _szNotice$[ebp+32], xmm0
  0002f	f3 0f 7e 40 33	 movq	 xmm0, QWORD PTR [eax+51]
  00034	8b 40 3b	 mov	 eax, DWORD PTR [eax+59]
  00037	89 45 cc	 mov	 DWORD PTR _szNotice$[ebp+56], eax

; 589  : 
; 590  : 	LogAddTD("[Mu Manager][Notice Log][Type:ALL] %s", szNotice);

  0003a	8d 45 94	 lea	 eax, DWORD PTR _szNotice$[ebp]
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@
  00043	66 0f d6 45 c4	 movq	 QWORD PTR _szNotice$[ebp+48], xmm0
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 591  : 
; 592  : 	if ( strlen(szNotice) > 1 )

  0004e	8d 45 94	 lea	 eax, DWORD PTR _szNotice$[ebp]
  00051	83 c4 08	 add	 esp, 8
  00054	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL6@AllNoticeR:
  00057	8a 08		 mov	 cl, BYTE PTR [eax]
  00059	40		 inc	 eax
  0005a	84 c9		 test	 cl, cl
  0005c	75 f9		 jne	 SHORT $LL6@AllNoticeR
  0005e	2b c2		 sub	 eax, edx
  00060	83 f8 01	 cmp	 eax, 1
  00063	76 0c		 jbe	 SHORT $LN2@AllNoticeR

; 593  : 	{
; 594  : 		AllSendServerMsg(szNotice);

  00065	8d 45 94	 lea	 eax, DWORD PTR _szNotice$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  0006e	83 c4 04	 add	 esp, 4
$LN2@AllNoticeR:

; 595  : 	}
; 596  : }

  00071	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00074	33 cd		 xor	 ecx, ebp
  00076	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z ENDP		; AllNoticeRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?LoveHeartCreateSend@@YAXXZ
_TEXT	SEGMENT
_pMsg$ = -8						; size = 6
?LoveHeartCreateSend@@YAXXZ PROC			; LoveHeartCreateSend, COMDAT

; 569  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 570  : 	SDHP_LOVEHEARTCREATE pMsg;
; 571  : 
; 572  : 	pMsg.h.c= 0xC1;
; 573  : 	pMsg.h.headcode = 0x31;
; 574  : 	pMsg.h.size=sizeof(SDHP_LOVEHEARTCREATE);
; 575  : 
; 576  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00006	6a 06		 push	 6
  00008	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0000b	66 c7 45 f8 c1
	06		 mov	 WORD PTR _pMsg$[ebp], 1729 ; 000006c1H
  00011	50		 push	 eax
  00012	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00017	c6 45 fa 31	 mov	 BYTE PTR _pMsg$[ebp+2], 49 ; 00000031H
  0001b	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 577  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?LoveHeartCreateSend@@YAXXZ ENDP			; LoveHeartCreateSend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z
_TEXT	SEGMENT
_Msg$ = -272						; size = 256
_szName$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z PROC ; LoveHeartEventRecv, COMDAT

; 518  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]

; 519  : 	char szName[11];
; 520  : 	int number;
; 521  : 	char Msg[256];
; 522  : 
; 523  : 	szName[10]=0;

  00016	c6 45 fa 00	 mov	 BYTE PTR _szName$[ebp+10], 0

; 524  : 
; 525  : 	memcpy(szName, lpMsg->Name, sizeof(lpMsg->Name));

  0001a	66 8b 41 0c	 mov	 ax, WORD PTR [ecx+12]
  0001e	f3 0f 7e 41 04	 movq	 xmm0, QWORD PTR [ecx+4]

; 526  : 	number = lpMsg->Number;

  00023	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00026	66 89 45 f8	 mov	 WORD PTR _szName$[ebp+8], ax

; 527  : 
; 528  : 	switch ( lpMsg->Result )

  0002a	0f b6 41 03	 movzx	 eax, BYTE PTR [ecx+3]
  0002e	66 0f d6 45 f0	 movq	 QWORD PTR _szName$[ebp], xmm0
  00033	83 e8 00	 sub	 eax, 0
  00036	74 48		 je	 SHORT $LN7@LoveHeartE
  00038	83 e8 01	 sub	 eax, 1
  0003b	0f 85 20 01 00
	00		 jne	 $LN21@LoveHeartE

; 547  : 									return;
; 548  : 								}
; 549  : 							}
; 550  : 						}
; 551  : 					}
; 552  : 					continue;
; 553  : 				} // For
; 554  : 			}
; 555  : 		break;
; 556  : 
; 557  : 		case 1: // Winner of the Love Pang Pang Event
; 558  : 			wsprintf(Msg, lMsg.Get( MSGGET ( 4, 82 ) ), szName, number);

  00041	52		 push	 edx
  00042	8d 45 f0	 lea	 eax, DWORD PTR _szName$[ebp]
  00045	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004a	50		 push	 eax
  0004b	68 52 04 00 00	 push	 1106			; 00000452H
  00050	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00055	50		 push	 eax
  00056	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  0005c	50		 push	 eax
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 559  : 			AllSendServerMsg(Msg);

  00063	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  0006f	83 c4 14	 add	 esp, 20			; 00000014H

; 560  : 			break;
; 561  : 	}
; 562  : }

  00072	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00075	33 cd		 xor	 ecx, ebp
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN7@LoveHeartE:
  00080	53		 push	 ebx
  00081	56		 push	 esi
  00082	57		 push	 edi

; 529  : 	{
; 530  : 		case 0: // Registered Hearts of Love PangPangEvent
; 531  : 			{
; 532  : 				wsprintf(Msg, lMsg.Get( MSGGET(4, 80)), number );

  00083	52		 push	 edx
  00084	68 50 04 00 00	 push	 1104			; 00000450H
  00089	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0008e	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00093	50		 push	 eax
  00094	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  0009a	50		 push	 eax
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  000a1	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000aa	8a 5d f1	 mov	 bl, BYTE PTR _szName$[ebp+1]

; 533  : 
; 534  : 				for (int n = OBJ_STARTUSERINDEX;n<OBJMAX;n++)

  000ad	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  000b2	8a 75 f0	 mov	 dh, BYTE PTR _szName$[ebp]
  000b5	81 c6 5d dd 49
	06		 add	 esi, 105504093		; 0649dd5dH
  000bb	0f 1f 44 00 00	 npad	 5
$LL6@LoveHeartE:

; 535  : 				{
; 536  : 					if ( gObj[n].Connected >= PLAYER_LOGGED )

  000c0	83 7e a7 02	 cmp	 DWORD PTR [esi-89], 2
  000c4	7c 37		 jl	 SHORT $LN4@LoveHeartE

; 537  : 					{
; 538  : 						if (gObj[n].Name[0] == szName[0] )

  000c6	38 36		 cmp	 BYTE PTR [esi], dh
  000c8	75 33		 jne	 SHORT $LN4@LoveHeartE

; 539  : 						{
; 540  : 							if ( gObj[n].Name[1] == szName[1] )

  000ca	38 5e 01	 cmp	 BYTE PTR [esi+1], bl
  000cd	75 2e		 jne	 SHORT $LN4@LoveHeartE

; 541  : 							{
; 542  : 								if ( strcmp( gObj[n].Name, szName ) == 0 )

  000cf	8d 45 f0	 lea	 eax, DWORD PTR _szName$[ebp]
  000d2	8b ce		 mov	 ecx, esi
$LL22@LoveHeartE:
  000d4	8a 11		 mov	 dl, BYTE PTR [ecx]
  000d6	3a 10		 cmp	 dl, BYTE PTR [eax]
  000d8	75 1a		 jne	 SHORT $LN23@LoveHeartE
  000da	84 d2		 test	 dl, dl
  000dc	74 12		 je	 SHORT $LN24@LoveHeartE
  000de	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  000e1	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  000e4	75 0e		 jne	 SHORT $LN23@LoveHeartE
  000e6	83 c1 02	 add	 ecx, 2
  000e9	83 c0 02	 add	 eax, 2
  000ec	84 d2		 test	 dl, dl
  000ee	75 e4		 jne	 SHORT $LL22@LoveHeartE
$LN24@LoveHeartE:
  000f0	33 c0		 xor	 eax, eax
  000f2	eb 05		 jmp	 SHORT $LN25@LoveHeartE
$LN23@LoveHeartE:
  000f4	1b c0		 sbb	 eax, eax
  000f6	83 c8 01	 or	 eax, 1
$LN25@LoveHeartE:
  000f9	85 c0		 test	 eax, eax
  000fb	74 20		 je	 SHORT $LN17@LoveHeartE
$LN4@LoveHeartE:

; 533  : 
; 534  : 				for (int n = OBJ_STARTUSERINDEX;n<OBJMAX;n++)

  000fd	47		 inc	 edi
  000fe	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00104	81 ff ec 2c 00
	00		 cmp	 edi, 11500		; 00002cecH
  0010a	7c b4		 jl	 SHORT $LL6@LoveHeartE
  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx

; 560  : 			break;
; 561  : 	}
; 562  : }

  0010f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00112	33 cd		 xor	 ecx, ebp
  00114	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
$LN17@LoveHeartE:

; 543  : 								{
; 544  : 									GCServerMsgStringSend(Msg, n, 1);

  0011d	6a 01		 push	 1
  0011f	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  00125	57		 push	 edi
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0012c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 545  : 									wsprintf(Msg, lMsg.Get( MSGGET( 4, 81 ) ) );

  0012f	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00134	68 51 04 00 00	 push	 1105			; 00000451H
  00139	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0013e	50		 push	 eax
  0013f	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  00145	50		 push	 eax
  00146	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 546  : 									GCServerMsgStringSend(Msg, n, 1);

  0014c	6a 01		 push	 1
  0014e	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  00154	57		 push	 edi
  00155	50		 push	 eax
  00156	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  0015b	83 c4 14	 add	 esp, 20			; 00000014H
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
$LN21@LoveHeartE:

; 560  : 			break;
; 561  : 	}
; 562  : }

  00161	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00164	33 cd		 xor	 ecx, ebp
  00166	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016b	8b e5		 mov	 esp, ebp
  0016d	5d		 pop	 ebp
  0016e	c3		 ret	 0
?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ENDP ; LoveHeartEventRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?LoveHeartEventSend@@YAXHPAD0@Z
_TEXT	SEGMENT
_pMsg$ = -28						; size = 23
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_AcountId$ = 12						; size = 4
_Name$ = 16						; size = 4
?LoveHeartEventSend@@YAXHPAD0@Z PROC			; LoveHeartEventSend, COMDAT

; 500  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _AcountId$[ebp]
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _Name$[ebp]

; 501  : 	SDHP_LOVEHEARTEVENT pMsg;
; 502  : 
; 503  : 	pMsg.h.c = 0xC1;
; 504  : 	pMsg.h.headcode = 0x30;
; 505  : 	pMsg.h.size = sizeof(SDHP_LOVEHEARTEVENT);
; 506  : 
; 507  : 	memcpy(pMsg.Account , AcountId, sizeof(pMsg.Account));
; 508  : 	memcpy(pMsg.Name , Name, sizeof(pMsg.Name) );
; 509  : 
; 510  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00016	6a 17		 push	 23			; 00000017H
  00018	66 c7 45 e4 c1
	17		 mov	 WORD PTR _pMsg$[ebp], 6081 ; 000017c1H
  0001e	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00022	0f b7 40 08	 movzx	 eax, WORD PTR [eax+8]
  00026	66 89 45 ef	 mov	 WORD PTR _pMsg$[ebp+11], ax
  0002a	0f b7 41 08	 movzx	 eax, WORD PTR [ecx+8]
  0002e	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+21], ax
  00032	8d 45 e4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00035	66 0f d6 45 e7	 movq	 QWORD PTR _pMsg$[ebp+3], xmm0
  0003a	f3 0f 7e 01	 movq	 xmm0, QWORD PTR [ecx]
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00043	50		 push	 eax
  00044	c6 45 e6 30	 mov	 BYTE PTR _pMsg$[ebp+2], 48 ; 00000030H
  00048	66 0f d6 45 f1	 movq	 QWORD PTR _pMsg$[ebp+13], xmm0
  0004d	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 511  : }

  00052	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00055	33 cd		 xor	 ecx, ebp
  00057	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?LoveHeartEventSend@@YAXHPAD0@Z ENDP			; LoveHeartEventSend
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z PROC	; JGPOptionControl, COMDAT

; 464  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 465  : 	switch ( lpMsg->Option )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	0f b6 40 03	 movzx	 eax, BYTE PTR [eax+3]
  0000a	83 f8 05	 cmp	 eax, 5
  0000d	77 19		 ja	 SHORT $LN2@JGPOptionC
  0000f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@JGPOptionC[eax*4]
$LN4@JGPOptionC:

; 493  : 			break;
; 494  : 	}
; 495  : }

  00016	5d		 pop	 ebp

; 466  : 	{
; 467  : 		case OPTION_RELOAD:
; 468  : 			ReadCommonServerInfo();

  00017	e9 00 00 00 00	 jmp	 ?ReadCommonServerInfo@@YAXXZ ; ReadCommonServerInfo
$LN5@JGPOptionC:

; 469  : 			break;
; 470  : 
; 471  : 		case MONSTER_RELOAD:
; 472  : 			//GameMonsterAllCloseAndReLoad();
; 473  : 			gMSetBase.MonsterSetBaseReload(LOAD_ALLOBJ);

  0001c	6a ff		 push	 -1
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMSetBase@@3VCMonsterSetBase@@A ; gMSetBase
  00023	e8 00 00 00 00	 call	 ?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z ; CMonsterSetBase::MonsterSetBaseReload
$LN2@JGPOptionC:

; 493  : 			break;
; 494  : 	}
; 495  : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN7@JGPOptionC:

; 474  : 			break;
; 475  : 
; 476  : 		case SHOP_RELOAD:
; 477  : 			g_ShopManager.Reload();
; 478  : 			break;
; 479  : 
; 480  : 		case ALLOPTION_RELOAD:
; 481  : 			ReadCommonServerInfo();

  0002a	e8 00 00 00 00	 call	 ?ReadCommonServerInfo@@YAXXZ ; ReadCommonServerInfo

; 482  : 			//GameMonsterAllCloseAndReLoad();
; 483  : 			gMSetBase.MonsterSetBaseReload(LOAD_ALLOBJ);

  0002f	6a ff		 push	 -1
  00031	b9 00 00 00 00	 mov	 ecx, OFFSET ?gMSetBase@@3VCMonsterSetBase@@A ; gMSetBase
  00036	e8 00 00 00 00	 call	 ?MonsterSetBaseReload@CMonsterSetBase@@QAEXH@Z ; CMonsterSetBase::MonsterSetBaseReload
$LN6@JGPOptionC:

; 484  : 			g_ShopManager.Reload();

  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ShopManager@@3VShopManager@@A ; g_ShopManager

; 493  : 			break;
; 494  : 	}
; 495  : }

  00040	5d		 pop	 ebp

; 484  : 			g_ShopManager.Reload();

  00041	e9 00 00 00 00	 jmp	 ?Reload@ShopManager@@QAEXXZ ; ShopManager::Reload
$LN8@JGPOptionC:

; 485  : 			break;
; 486  : 
; 487  : 		case EVENTINFO_RELOAD:
; 488  : 			ReadEventInfo(MU_EVENT_ALL );

  00046	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _lpMsg$[ebp], 0

; 493  : 			break;
; 494  : 	}
; 495  : }

  0004d	5d		 pop	 ebp

; 485  : 			break;
; 486  : 
; 487  : 		case EVENTINFO_RELOAD:
; 488  : 			ReadEventInfo(MU_EVENT_ALL );

  0004e	e9 00 00 00 00	 jmp	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo
$LN9@JGPOptionC:

; 489  : 			break;
; 490  : 
; 491  : 		case ETCINFO_RELOAD:
; 492  : 			ReadGameEtcInfo(MU_ETC_ALL );

  00053	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _lpMsg$[ebp], 0

; 493  : 			break;
; 494  : 	}
; 495  : }

  0005a	5d		 pop	 ebp

; 489  : 			break;
; 490  : 
; 491  : 		case ETCINFO_RELOAD:
; 492  : 			ReadGameEtcInfo(MU_ETC_ALL );

  0005b	e9 00 00 00 00	 jmp	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
$LN14@JGPOptionC:

; 493  : 			break;
; 494  : 	}
; 495  : }

  00060	00 00 00 00	 DD	 $LN4@JGPOptionC
  00064	00 00 00 00	 DD	 $LN5@JGPOptionC
  00068	00 00 00 00	 DD	 $LN6@JGPOptionC
  0006c	00 00 00 00	 DD	 $LN7@JGPOptionC
  00070	00 00 00 00	 DD	 $LN8@JGPOptionC
  00074	00 00 00 00	 DD	 $LN9@JGPOptionC
?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z ENDP	; JGPOptionControl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z PROC	; JGPEventControl, COMDAT

; 428  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 429  : 	switch ( lpMsg->Event  )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0000a	83 f9 04	 cmp	 ecx, 4
  0000d	77 44		 ja	 SHORT $LN2@JGPEventCo
  0000f	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN17@JGPEventCo[ecx*4]
$LN4@JGPEventCo:

; 430  : 	{
; 431  : #if( __4GAMERS__ == 0 )
; 432  : 		case DRAGON_EVENT:
; 433  : 			if ( lpMsg->Stat != 0 )

  00016	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0

; 434  : 			{
; 435  : 				if (DragonEvent->GetState() == 0 )

  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00020	74 0c		 je	 SHORT $LN5@JGPEventCo
  00022	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00026	75 2b		 jne	 SHORT $LN2@JGPEventCo

; 457  : 			break;
; 458  : 	}
; 459  : }

  00028	5d		 pop	 ebp

; 436  : 				{
; 437  : 					DragonEvent->Start();

  00029	e9 00 00 00 00	 jmp	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start
$LN5@JGPEventCo:

; 457  : 			break;
; 458  : 	}
; 459  : }

  0002e	5d		 pop	 ebp

; 438  : 				}
; 439  : 			}
; 440  : 			else
; 441  : 			{
; 442  : 				DragonEvent->End();

  0002f	e9 00 00 00 00	 jmp	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End
$LN8@JGPEventCo:

; 443  : 			}
; 444  : 			break;
; 445  : #endif
; 446  : 
; 447  : 		case FIRECRACKER_EVENT:
; 448  : 			gFireCrackerEvent = lpMsg->Stat  ;

  00034	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00038	a3 00 00 00 00	 mov	 DWORD PTR ?gFireCrackerEvent@@3HA, eax ; gFireCrackerEvent

; 457  : 			break;
; 458  : 	}
; 459  : }

  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
$LN9@JGPEventCo:

; 449  : 			break;
; 450  : 
; 451  : 		case HEARTOFLOVE_EVENT:
; 452  : 			gHeartOfLoveEvent = lpMsg->Stat  ;

  0003f	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?gHeartOfLoveEvent@@3HA, eax ; gHeartOfLoveEvent

; 457  : 			break;
; 458  : 	}
; 459  : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN10@JGPEventCo:

; 453  : 			break;
; 454  : 
; 455  : 		case MEDAL_EVENT:
; 456  : 			gMedalEvent = lpMsg->Stat  ;

  0004a	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  0004e	a3 00 00 00 00	 mov	 DWORD PTR ?gMedalEvent@@3HA, eax ; gMedalEvent
$LN2@JGPEventCo:

; 457  : 			break;
; 458  : 	}
; 459  : }

  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
  00055	0f 1f 00	 npad	 3
$LN17@JGPEventCo:
  00058	00 00 00 00	 DD	 $LN4@JGPEventCo
  0005c	00 00 00 00	 DD	 $LN2@JGPEventCo
  00060	00 00 00 00	 DD	 $LN8@JGPEventCo
  00064	00 00 00 00	 DD	 $LN9@JGPEventCo
  00068	00 00 00 00	 DD	 $LN10@JGPEventCo
?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z ENDP	; JGPEventControl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z PROC		; JGPEventStart, COMDAT

; 410  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 411  : 	if ( lpMsg->Event == 1 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	80 78 03 01	 cmp	 BYTE PTR [eax+3], 1
  0000a	75 18		 jne	 SHORT $LN4@JGPEventSt

; 412  : 	{
; 413  : 		if (DragonEvent->GetState() != 0 )

  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00012	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00016	74 06		 je	 SHORT $LN3@JGPEventSt

; 420  : 		}
; 421  : 	}
; 422  : }

  00018	5d		 pop	 ebp

; 414  : 		{
; 415  : 			DragonEvent->End();

  00019	e9 00 00 00 00	 jmp	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End
$LN3@JGPEventSt:

; 420  : 		}
; 421  : 	}
; 422  : }

  0001e	5d		 pop	 ebp

; 416  : 		}
; 417  : 		else
; 418  : 		{
; 419  : 			DragonEvent->Start();

  0001f	e9 00 00 00 00	 jmp	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start
$LN4@JGPEventSt:

; 420  : 		}
; 421  : 	}
; 422  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z ENDP		; JGPEventStart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z PROC		; JGPExitCodeRecv, COMDAT

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 400  : 	if ( lpMsg->ExitCode[0] == 70 && lpMsg->ExitCode[1] == 70 && lpMsg->ExitCode[2] == 88 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	80 78 03 46	 cmp	 BYTE PTR [eax+3], 70	; 00000046H
  0000a	75 24		 jne	 SHORT $LN2@JGPExitCod
  0000c	80 78 04 46	 cmp	 BYTE PTR [eax+4], 70	; 00000046H
  00010	75 1e		 jne	 SHORT $LN2@JGPExitCod
  00012	80 78 05 58	 cmp	 BYTE PTR [eax+5], 88	; 00000058H
  00016	75 18		 jne	 SHORT $LN2@JGPExitCod

; 401  : 	{
; 402  : 		SendMessage( ghWnd, WM_COMMAND, IDM_3_MINUTE_CLOSE, 0 );

  00018	6a 00		 push	 0
  0001a	68 12 80 00 00	 push	 32786			; 00008012H
  0001f	68 11 01 00 00	 push	 273			; 00000111H
  00024	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$LN2@JGPExitCod:

; 403  : 	}
; 404  : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z ENDP		; JGPExitCodeRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z
_TEXT	SEGMENT
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z PROC ; GJPUserDisconnectRecv, COMDAT

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  00013	56		 push	 esi

; 379  : 	char szId[11];
; 380  : 	szId[10]=0;

  00014	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 381  : 	int number;
; 382  : 
; 383  : 	memcpy( szId, lpMsg->Id , sizeof( lpMsg->Id ) );

  00018	66 8b 41 0b	 mov	 ax, WORD PTR [ecx+11]

; 384  : 	number = lpMsg->Number;

  0001c	0f bf 71 0e	 movsx	 esi, WORD PTR [ecx+14]
  00020	f3 0f 7e 41 03	 movq	 xmm0, QWORD PTR [ecx+3]
  00025	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax

; 385  : 
; 386  : 	if ( gObjIsAccontConnect(number, szId ) == 0 )

  00029	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0002c	50		 push	 eax
  0002d	56		 push	 esi
  0002e	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  00033	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  00038	83 c4 08	 add	 esp, 8
  0003b	85 c0		 test	 eax, eax
  0003d	74 21		 je	 SHORT $LN1@GJPUserDis

; 387  : 	{
; 388  : 		return;
; 389  : 	}
; 390  : 
; 391  : 	GCServerMsgStringSend(lMsg.Get( MSGGET(6, 67) ), number, 0 );

  0003f	6a 00		 push	 0
  00041	56		 push	 esi
  00042	68 43 06 00 00	 push	 1603			; 00000643H
  00047	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004c	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 392  : 	//gObjUserKill(number);
; 393  : 	CloseClient(number);

  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  0005d	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@GJPUserDis:

; 394  : }

  00060	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00063	33 cd		 xor	 ecx, ebp
  00065	5e		 pop	 esi
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ENDP ; GJPUserDisconnectRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z
_TEXT	SEGMENT
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z PROC		; JGOtherJoin, COMDAT

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 351  : 	char szId[11];
; 352  : 	szId[10]=0;
; 353  : 	int n;
; 354  : 
; 355  : 	memcpy(szId, lpMsg->AccountID, sizeof(lpMsg->AccountID));

  00010	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001b	f3 0f 7e 40 03	 movq	 xmm0, QWORD PTR [eax+3]
  00020	81 c6 52 dd 49
	06		 add	 esi, 105504082		; 0649dd52H
  00026	66 8b 40 0b	 mov	 ax, WORD PTR [eax+11]
  0002a	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  0002f	8a 5d f1	 mov	 bl, BYTE PTR _szId$[ebp+1]
  00032	8a 75 f0	 mov	 dh, BYTE PTR _szId$[ebp]
  00035	57		 push	 edi
  00036	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 356  : 
; 357  : 	for (n= OBJ_STARTUSERINDEX; n<OBJMAX;n++)

  0003a	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  0003f	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax
$LL4@JGOtherJoi:

; 358  : 	{
; 359  : 		if ( gObj[n].Connected >= PLAYER_LOGGED )

  00043	83 7e b2 02	 cmp	 DWORD PTR [esi-78], 2
  00047	7c 37		 jl	 SHORT $LN2@JGOtherJoi

; 360  : 		{
; 361  : 			if ( gObj[n].AccountID[0] == szId[0] )

  00049	38 36		 cmp	 BYTE PTR [esi], dh
  0004b	75 33		 jne	 SHORT $LN2@JGOtherJoi

; 362  : 			{
; 363  : 				if ( gObj[n].AccountID[1] == szId[1] )

  0004d	38 5e 01	 cmp	 BYTE PTR [esi+1], bl
  00050	75 2e		 jne	 SHORT $LN2@JGOtherJoi

; 364  : 				{
; 365  : 					if ( strcmp(gObj[n].AccountID , szId) == 0 )

  00052	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00055	8b ce		 mov	 ecx, esi
$LL18@JGOtherJoi:
  00057	8a 11		 mov	 dl, BYTE PTR [ecx]
  00059	3a 10		 cmp	 dl, BYTE PTR [eax]
  0005b	75 1a		 jne	 SHORT $LN19@JGOtherJoi
  0005d	84 d2		 test	 dl, dl
  0005f	74 12		 je	 SHORT $LN20@JGOtherJoi
  00061	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00064	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00067	75 0e		 jne	 SHORT $LN19@JGOtherJoi
  00069	83 c1 02	 add	 ecx, 2
  0006c	83 c0 02	 add	 eax, 2
  0006f	84 d2		 test	 dl, dl
  00071	75 e4		 jne	 SHORT $LL18@JGOtherJoi
$LN20@JGOtherJoi:
  00073	33 c0		 xor	 eax, eax
  00075	eb 05		 jmp	 SHORT $LN21@JGOtherJoi
$LN19@JGOtherJoi:
  00077	1b c0		 sbb	 eax, eax
  00079	83 c8 01	 or	 eax, 1
$LN21@JGOtherJoi:
  0007c	85 c0		 test	 eax, eax
  0007e	74 20		 je	 SHORT $LN13@JGOtherJoi
$LN2@JGOtherJoi:

; 356  : 
; 357  : 	for (n= OBJ_STARTUSERINDEX; n<OBJMAX;n++)

  00080	47		 inc	 edi
  00081	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00087	81 ff ec 2c 00
	00		 cmp	 edi, 11500		; 00002cecH
  0008d	7c b4		 jl	 SHORT $LL4@JGOtherJoi
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx

; 368  : 						break;
; 369  : 					}
; 370  : 				}
; 371  : 			}
; 372  : 		}
; 373  : 	}
; 374  : }

  00092	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00095	33 cd		 xor	 ecx, ebp
  00097	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
$LN13@JGOtherJoi:

; 366  : 					{
; 367  : 						GCServerMsgStringSend(lMsg.Get( MSGGET(4, 107)), n, 1 );

  000a0	6a 01		 push	 1
  000a2	57		 push	 edi
  000a3	68 6b 04 00 00	 push	 1131			; 0000046bH
  000a8	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  000ad	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 368  : 						break;
; 369  : 					}
; 370  : 				}
; 371  : 			}
; 372  : 		}
; 373  : 	}
; 374  : }

  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000be	33 cd		 xor	 ecx, ebp
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z ENDP		; JGOtherJoin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z
_TEXT	SEGMENT
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z PROC	; GJPUserKillRecv, COMDAT

; 329  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _lpMsg$[ebp]
  00013	56		 push	 esi

; 330  : 	char szId[11];
; 331  : 	int number;
; 332  : 	szId[10] = 0;

  00014	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 333  : 
; 334  : 	memcpy(szId, lpMsg->Id , sizeof(lpMsg->Id) );

  00018	66 8b 41 0b	 mov	 ax, WORD PTR [ecx+11]

; 335  : 	number = lpMsg->Number;

  0001c	0f bf 71 0e	 movsx	 esi, WORD PTR [ecx+14]
  00020	f3 0f 7e 41 03	 movq	 xmm0, QWORD PTR [ecx+3]
  00025	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax

; 336  : 
; 337  : 	if (gObjIsAccontConnect(number, szId) == 0 )

  00029	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0002c	50		 push	 eax
  0002d	56		 push	 esi
  0002e	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  00033	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  00038	83 c4 08	 add	 esp, 8
  0003b	85 c0		 test	 eax, eax
  0003d	74 21		 je	 SHORT $LN1@GJPUserKil

; 338  : 	{
; 339  : 		return;
; 340  : 	}
; 341  : 
; 342  : 	GCServerMsgStringSend(lMsg.Get( MSGGET(6, 66)), number, 0);

  0003f	6a 00		 push	 0
  00041	56		 push	 esi
  00042	68 42 06 00 00	 push	 1602			; 00000642H
  00047	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  0004c	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 343  : 	//gObjUserKill(number);
; 344  : 	CloseClient(number);

  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  0005d	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@GJPUserKil:

; 345  : }

  00060	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00063	33 cd		 xor	 ecx, ebp
  00065	5e		 pop	 esi
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ENDP	; GJPUserKillRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
; File c:\users\michel\desktop\source\gameserver\source\user.h
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
; File c:\users\michel\desktop\source\gameserver\source\user.h
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z
_TEXT	SEGMENT
tv180 = -20						; size = 4
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z PROC	; GJPBillCeckRecv, COMDAT

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _lpMsg$[ebp]
  00014	57		 push	 edi

; 308  : 	int aIndex = lpMsg->Number ;
; 309  : 	char szId[11];
; 310  : 
; 311  : 	szId[10] = 0;
; 312  : 
; 313  : 	memcpy(szId, lpMsg->Id, sizeof(lpMsg->Id));

  00015	66 8b 43 0b	 mov	 ax, WORD PTR [ebx+11]
  00019	0f bf 7b 0e	 movsx	 edi, WORD PTR [ebx+14]
  0001d	f3 0f 7e 43 03	 movq	 xmm0, QWORD PTR [ebx+3]
  00022	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax
  00026	8a 43 0d	 mov	 al, BYTE PTR [ebx+13]
  00029	88 45 fa	 mov	 BYTE PTR _szId$[ebp+10], al

; 314  : 
; 315  : 	if (gObjIsAccontConnect(aIndex, szId) == 0 )

  0002c	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  00036	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  0003b	83 c4 08	 add	 esp, 8
  0003e	85 c0		 test	 eax, eax
  00040	74 5f		 je	 SHORT $LN3@GJPBillCec

; 320  : 	if ( m_ObjBill[aIndex].SetBill( lpMsg->PayCode, lpMsg->EndTime, &lpMsg->EndDays[0] ) == TRUE )

  00042	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00045	8d 14 7f	 lea	 edx, DWORD PTR [edi+edi*2]
  00048	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  0004b	c1 e2 04	 shl	 edx, 4
  0004e	81 c2 00 00 00
	00		 add	 edx, OFFSET ?m_ObjBill@@3PAVBILL_CLASS@@A ; m_ObjBill
; File c:\users\michel\desktop\source\gameserver\source\user.h

; 2005 : 		if ( this->PayCode == -1 )

  00054	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv180[ebp], 1
  0005b	56		 push	 esi

; 2003 : 		BOOL bRet=0;

  0005c	33 f6		 xor	 esi, esi

; 2005 : 		if ( this->PayCode == -1 )

  0005e	83 3a ff	 cmp	 DWORD PTR [edx], -1

; 2006 : 		{
; 2007 : 			bRet = 1;
; 2008 : 		}
; 2009 : 
; 2010 : 		this->PayCode = pay;

  00061	89 02		 mov	 DWORD PTR [edx], eax
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp

; 320  : 	if ( m_ObjBill[aIndex].SetBill( lpMsg->PayCode, lpMsg->EndTime, &lpMsg->EndDays[0] ) == TRUE )

  00063	8d 43 18	 lea	 eax, DWORD PTR [ebx+24]
; File c:\users\michel\desktop\source\gameserver\source\user.h

; 2005 : 		if ( this->PayCode == -1 )

  00066	0f 44 75 ec	 cmove	 esi, DWORD PTR tv180[ebp]

; 2011 : 		this->EndTime = end_time;
; 2012 : 		strcpy_s(EndsDays, sizeof(EndsDays), end_days);

  0006a	50		 push	 eax
  0006b	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  0006e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00071	6a 0d		 push	 13			; 0000000dH
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 _strcpy_s
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp

; 320  : 	if ( m_ObjBill[aIndex].SetBill( lpMsg->PayCode, lpMsg->EndTime, &lpMsg->EndDays[0] ) == TRUE )

  0007c	83 fe 01	 cmp	 esi, 1
  0007f	5e		 pop	 esi
  00080	75 1f		 jne	 SHORT $LN3@GJPBillCec

; 321  : 	{
; 322  : 		gObjAddMsgSendDelay(&gObj[aIndex], 1000, aIndex, 100, 0);

  00082	6a 00		 push	 0
  00084	6a 64		 push	 100			; 00000064H
  00086	69 c7 40 27 00
	00		 imul	 eax, edi, 10048
  0008c	57		 push	 edi
  0008d	68 e8 03 00 00	 push	 1000			; 000003e8H
  00092	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; gObjAddMsgSendDelay
  0009e	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@GJPBillCec:

; 323  : 	}
; 324  : }

  000a1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a4	5f		 pop	 edi
  000a5	33 cd		 xor	 ecx, ebp
  000a7	5b		 pop	 ebx
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ENDP	; GJPBillCeckRecv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJPAccountBlock@@YAXFPADHHH@Z
_TEXT	SEGMENT
_pMsg$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 2
_Id$ = 12						; size = 4
_DBNumber$ = 16						; size = 4
_UserNumber$ = 20					; size = 4
_BlockCode$ = 24					; size = 4
?GJPAccountBlock@@YAXFPADHHH@Z PROC			; GJPAccountBlock, COMDAT

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 287  : 	SDHP_COMMAND_BLOCK pMsg;
; 288  : 
; 289  : 	memset(&pMsg, 0, sizeof(SDHP_COMMAND_BLOCK));
; 290  : 
; 291  : 	pMsg.h.c=0xC1;
; 292  : 	pMsg.h.headcode= 0x04;
; 293  : 	pMsg.h.size = sizeof (SDHP_COMMAND_BLOCK);
; 294  : 	pMsg.Number = number;

  00010	66 8b 45 08	 mov	 ax, WORD PTR _number$[ebp]

; 295  : 	pMsg.DBNumber = DBNumber;
; 296  : 	pMsg.UserNumber = UserNumber;
; 297  : 	pMsg.BlockCode = BlockCode;
; 298  : 
; 299  : 	strcpy(pMsg.Id , Id);

  00014	8d 55 e2	 lea	 edx, DWORD PTR _pMsg$[ebp+6]
  00017	0f 57 c0	 xorps	 xmm0, xmm0
  0001a	0f 11 45 dc	 movups	 XMMWORD PTR _pMsg$[ebp], xmm0
  0001e	66 89 45 e0	 mov	 WORD PTR _pMsg$[ebp+4], ax
  00022	8b 45 10	 mov	 eax, DWORD PTR _DBNumber$[ebp]
  00025	0f 11 45 ec	 movups	 XMMWORD PTR _pMsg$[ebp+16], xmm0
  00029	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+24], eax
  0002c	8b 45 14	 mov	 eax, DWORD PTR _UserNumber$[ebp]
  0002f	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+20], eax
  00032	8a 45 18	 mov	 al, BYTE PTR _BlockCode$[ebp]
  00035	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp+28], al
  00038	8b 45 0c	 mov	 eax, DWORD PTR _Id$[ebp]
  0003b	2b d0		 sub	 edx, eax
  0003d	66 c7 45 dc c1
	20		 mov	 WORD PTR _pMsg$[ebp], 8385 ; 000020c1H
  00043	c6 45 de 04	 mov	 BYTE PTR _pMsg$[ebp+2], 4
$LL3@GJPAccount:
  00047	8a 08		 mov	 cl, BYTE PTR [eax]
  00049	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  0004c	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00050	84 c9		 test	 cl, cl
  00052	75 f3		 jne	 SHORT $LL3@GJPAccount

; 300  : 
; 301  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00054	0f b6 45 dd	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00058	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0005d	50		 push	 eax
  0005e	8d 45 dc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 302  : }

  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	33 cd		 xor	 ecx, ebp
  0006c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?GJPAccountBlock@@YAXFPADHHH@Z ENDP			; GJPAccountBlock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJPAccountFail@@YAXFPADHH@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 2
_Id$ = 12						; size = 4
_DBNumber$ = 16						; size = 4
_UserNumber$ = 20					; size = 4
?GJPAccountFail@@YAXFPADHH@Z PROC			; GJPAccountFail, COMDAT

; 266  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 267  : 	SDHP_JOINFAIL pMsg;
; 268  : 
; 269  : 	memset(&pMsg, 0, sizeof(SDHP_JOINFAIL));
; 270  : 
; 271  : 	pMsg.h.c=0xC1;
; 272  : 	pMsg.h.headcode= 0x02;
; 273  : 	pMsg.h.size = sizeof (SDHP_JOINFAIL);
; 274  : 	pMsg.Number = number;

  00010	66 8b 45 08	 mov	 ax, WORD PTR _number$[ebp]

; 275  : 	pMsg.DBNumber = DBNumber;
; 276  : 	pMsg.UserNumber = UserNumber;
; 277  : 
; 278  : 	strcpy(pMsg.Id , Id);

  00014	8d 55 e6	 lea	 edx, DWORD PTR _pMsg$[ebp+6]
  00017	0f 57 c0	 xorps	 xmm0, xmm0
  0001a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pMsg$[ebp+24], 0
  00021	0f 11 45 e0	 movups	 XMMWORD PTR _pMsg$[ebp], xmm0
  00025	66 89 45 e4	 mov	 WORD PTR _pMsg$[ebp+4], ax
  00029	8b 45 10	 mov	 eax, DWORD PTR _DBNumber$[ebp]
  0002c	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+24], eax
  0002f	8b 45 14	 mov	 eax, DWORD PTR _UserNumber$[ebp]
  00032	66 0f d6 45 f0	 movq	 QWORD PTR _pMsg$[ebp+16], xmm0
  00037	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+20], eax
  0003a	8b 45 0c	 mov	 eax, DWORD PTR _Id$[ebp]
  0003d	2b d0		 sub	 edx, eax
  0003f	66 c7 45 e0 c1
	1c		 mov	 WORD PTR _pMsg$[ebp], 7361 ; 00001cc1H
  00045	c6 45 e2 02	 mov	 BYTE PTR _pMsg$[ebp+2], 2
  00049	0f 1f 80 00 00
	00 00		 npad	 7
$LL3@GJPAccount:
  00050	8a 08		 mov	 cl, BYTE PTR [eax]
  00052	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00055	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00059	84 c9		 test	 cl, cl
  0005b	75 f3		 jne	 SHORT $LL3@GJPAccount

; 279  : 
; 280  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  0005d	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00061	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00066	50		 push	 eax
  00067	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 281  : }

  00070	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00073	33 cd		 xor	 ecx, ebp
  00075	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
?GJPAccountFail@@YAXFPADHH@Z ENDP			; GJPAccountFail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z
_TEXT	SEGMENT
_aIndex$1$ = -40					; size = 4
_szJN$ = -36						; size = 20
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z PROC	; JGPAccountRequest, COMDAT

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]
  00016	0f 57 c0	 xorps	 xmm0, xmm0

; 174  : 	char szId[11];
; 175  : 	int aIndex;
; 176  : 	char szJN[20]="";
; 177  : 	
; 178  : 	memset(szId, 0, sizeof(szId));

  00019	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  0001e	66 c7 45 f8 00
	00		 mov	 WORD PTR _szId$[ebp+8], 0
  00024	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0

; 179  : 	memcpy(szId, lpMsg->Id , sizeof(lpMsg->Id));

  00028	66 8b 47 0e	 mov	 ax, WORD PTR [edi+14]
  0002c	f3 0f 7e 47 06	 movq	 xmm0, QWORD PTR [edi+6]

; 180  : 	memcpy(szJN, lpMsg->JoominNumber , sizeof(lpMsg->JoominNumber));
; 181  : 
; 182  : 	aIndex = lpMsg->Number ;

  00031	0f bf 5f 04	 movsx	 ebx, WORD PTR [edi+4]
  00035	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax
  00039	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0003c	66 0f d6 45 f0	 movq	 QWORD PTR _szId$[ebp], xmm0
  00041	0f 10 47 18	 movups	 xmm0, XMMWORD PTR [edi+24]
  00045	89 45 ec	 mov	 DWORD PTR _szJN$[ebp+16], eax

; 183  : 
; 184  : 	switch ( lpMsg->result  )

  00048	0f b6 47 03	 movzx	 eax, BYTE PTR [edi+3]
  0004c	89 5d d8	 mov	 DWORD PTR _aIndex$1$[ebp], ebx
  0004f	0f 11 45 dc	 movups	 XMMWORD PTR _szJN$[ebp], xmm0
  00053	83 e8 01	 sub	 eax, 1
  00056	74 09		 je	 SHORT $LN7@JGPAccount
  00058	83 e8 0e	 sub	 eax, 14			; 0000000eH
  0005b	0f 85 92 00 00
	00		 jne	 $LN10@JGPAccount
$LN7@JGPAccount:

; 185  : 	{
; 186  : 		case 1:
; 187  : 		case 15:
; 188  : 			if (gObjSetAccountLogin(aIndex, szId, lpMsg->UserNumber , lpMsg->DBNumber, szJN ) == 0 )

  00061	8d 45 dc	 lea	 eax, DWORD PTR _szJN$[ebp]
  00064	50		 push	 eax
  00065	ff 77 14	 push	 DWORD PTR [edi+20]
  00068	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0006b	ff 77 10	 push	 DWORD PTR [edi+16]
  0006e	50		 push	 eax
  0006f	53		 push	 ebx
  00070	e8 00 00 00 00	 call	 ?gObjSetAccountLogin@@YAHHPADHH0@Z ; gObjSetAccountLogin
  00075	83 c4 14	 add	 esp, 20			; 00000014H
  00078	85 c0		 test	 eax, eax

; 189  : 			{
; 190  : 				GJPAccountFail(aIndex, szId, lpMsg->DBNumber , lpMsg->UserNumber  );

  0007a	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0007d	75 16		 jne	 SHORT $LN8@JGPAccount
  0007f	ff 77 10	 push	 DWORD PTR [edi+16]
  00082	ff 77 14	 push	 DWORD PTR [edi+20]
  00085	50		 push	 eax
  00086	53		 push	 ebx
  00087	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  0008c	83 c4 10	 add	 esp, 16			; 00000010H

; 191  : 				lpMsg->result  = 4;

  0008f	c6 47 03 04	 mov	 BYTE PTR [edi+3], 4

; 192  : 			}
; 193  : 			else

  00093	eb 31		 jmp	 SHORT $LN9@JGPAccount
$LN8@JGPAccount:

; 194  : 			{	
; 195  : 				LogAddTD(lMsg.Get(MSGGET(1, 211)), gObj[aIndex].Ip_addr, szId, lpMsg->UserNumber , lpMsg->DBNumber );

  00095	ff 77 14	 push	 DWORD PTR [edi+20]
  00098	69 cb 40 27 00
	00		 imul	 ecx, ebx, 10048
  0009e	ff 77 10	 push	 DWORD PTR [edi+16]
  000a1	50		 push	 eax
  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000a7	83 c0 1c	 add	 eax, 28			; 0000001cH
  000aa	03 c1		 add	 eax, ecx
  000ac	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  000b1	50		 push	 eax
  000b2	68 d3 01 00 00	 push	 467			; 000001d3H
  000b7	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  000bc	50		 push	 eax
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000c3	83 c4 14	 add	 esp, 20			; 00000014H
$LN9@JGPAccount:

; 196  : 			}
; 197  : 
; 198  : 			if ( lpMsg->UserNumber  == 0 && lpMsg->DBNumber  == 0)

  000c6	83 7f 10 00	 cmp	 DWORD PTR [edi+16], 0
  000ca	75 27		 jne	 SHORT $LN10@JGPAccount
  000cc	83 7f 14 00	 cmp	 DWORD PTR [edi+20], 0
  000d0	75 21		 jne	 SHORT $LN10@JGPAccount

; 199  : 			{
; 200  : 				LogAddTD(lMsg.Get(MSGGET(1, 212)), szId, lpMsg->UserNumber , lpMsg->DBNumber );

  000d2	6a 00		 push	 0
  000d4	6a 00		 push	 0
  000d6	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  000d9	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  000de	50		 push	 eax
  000df	68 d4 01 00 00	 push	 468			; 000001d4H
  000e4	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  000e9	50		 push	 eax
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000f0	83 c4 10	 add	 esp, 16			; 00000010H
$LN10@JGPAccount:

; 201  : 			}
; 202  : 	}
; 203  : #if (ENABLE_CUSTOM_OFFLINETRADE==1)
; 204  : 
; 205  : 	if( lpMsg->result == 6 )

  000f3	80 7f 03 06	 cmp	 BYTE PTR [edi+3], 6
  000f7	0f 85 83 00 00
	00		 jne	 $LN11@JGPAccount

; 206  : 	{
; 207  : 		for (int n=OBJ_STARTUSERINDEX;n<OBJMAX; n++)

  000fd	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00103	bb 04 29 00 00	 mov	 ebx, 10500		; 00002904H
  00108	8a 75 f0	 mov	 dh, BYTE PTR _szId$[ebp]
  0010b	81 c6 52 dd 49
	06		 add	 esi, 105504082		; 0649dd52H
$LL6@JGPAccount:

; 208  : 		{
; 209  : 			if ( gObj[n].Connected >= PLAYER_PLAYING)

  00111	83 7e b2 03	 cmp	 DWORD PTR [esi-78], 3
  00115	7c 32		 jl	 SHORT $LN4@JGPAccount

; 210  : 			{
; 211  : 				if ( gObj[n].AccountID[0] == *szId )

  00117	38 36		 cmp	 BYTE PTR [esi], dh
  00119	75 2e		 jne	 SHORT $LN4@JGPAccount

; 212  : 				{
; 213  : 					if ( strcmp(&gObj[n].AccountID[0] , szId) == 0)

  0011b	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  0011e	8b ce		 mov	 ecx, esi
$LL28@JGPAccount:
  00120	8a 11		 mov	 dl, BYTE PTR [ecx]
  00122	3a 10		 cmp	 dl, BYTE PTR [eax]
  00124	75 1a		 jne	 SHORT $LN29@JGPAccount
  00126	84 d2		 test	 dl, dl
  00128	74 12		 je	 SHORT $LN30@JGPAccount
  0012a	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0012d	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00130	75 0e		 jne	 SHORT $LN29@JGPAccount
  00132	83 c1 02	 add	 ecx, 2
  00135	83 c0 02	 add	 eax, 2
  00138	84 d2		 test	 dl, dl
  0013a	75 e4		 jne	 SHORT $LL28@JGPAccount
$LN30@JGPAccount:
  0013c	33 c0		 xor	 eax, eax
  0013e	eb 05		 jmp	 SHORT $LN31@JGPAccount
$LN29@JGPAccount:
  00140	1b c0		 sbb	 eax, eax
  00142	83 c8 01	 or	 eax, 1
$LN31@JGPAccount:
  00145	85 c0		 test	 eax, eax
  00147	74 11		 je	 SHORT $LN23@JGPAccount
$LN4@JGPAccount:

; 206  : 	{
; 207  : 		for (int n=OBJ_STARTUSERINDEX;n<OBJMAX; n++)

  00149	43		 inc	 ebx
  0014a	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  00150	81 fb ec 2c 00
	00		 cmp	 ebx, 11500		; 00002cecH
  00156	7c b9		 jl	 SHORT $LL6@JGPAccount
  00158	eb 1f		 jmp	 SHORT $LN27@JGPAccount
$LN23@JGPAccount:

; 214  : 					{
; 215  : 						if( gObj[n].bOffTrade )

  0015a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00160	69 c3 40 27 00
	00		 imul	 eax, ebx, 10048
  00166	80 bc 08 31 27
	00 00 00	 cmp	 BYTE PTR [eax+ecx+10033], 0
  0016e	74 09		 je	 SHORT $LN27@JGPAccount

; 216  : 						{
; 217  : 							gObjDel(n);

  00170	53		 push	 ebx
  00171	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  00176	83 c4 04	 add	 esp, 4
$LN27@JGPAccount:

; 218  : 						}
; 219  : 						break;
; 220  : 					}
; 221  : 				}
; 222  : 			}
; 223  : 		}
; 224  : 
; 225  : 		lpMsg->result = 3;

  00179	8b 5d d8	 mov	 ebx, DWORD PTR _aIndex$1$[ebp]
  0017c	c6 47 03 03	 mov	 BYTE PTR [edi+3], 3
$LN11@JGPAccount:

; 226  : 	}
; 227  : #else
; 228  : 
; 229  : 	if( lpMsg->result == 6 )
; 230  : 		lpMsg->result = 3;
; 231  : 
; 232  : #endif
; 233  : 
; 234  : 	if ( lpMsg->result == 0 )

  00180	80 7f 03 00	 cmp	 BYTE PTR [edi+3], 0
  00184	75 04		 jne	 SHORT $LN16@JGPAccount

; 235  : 		lpMsg->result = 2;

  00186	c6 47 03 02	 mov	 BYTE PTR [edi+3], 2
$LN16@JGPAccount:

; 236  : 
; 237  : 	if ( lpMsg->result  == 15 )

  0018a	80 7f 03 0f	 cmp	 BYTE PTR [edi+3], 15	; 0000000fH
  0018e	75 17		 jne	 SHORT $LN17@JGPAccount

; 238  : 	{
; 239  : 		lpMsg->result  = 1;
; 240  : 		gObj[aIndex].m_cAccountItemBlock = 1;

  00190	69 cb 40 27 00
	00		 imul	 ecx, ebx, 10048
  00196	c6 47 03 01	 mov	 BYTE PTR [edi+3], 1
  0019a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0019f	c6 84 01 c4 01
	00 00 01	 mov	 BYTE PTR [ecx+eax+452], 1
$LN17@JGPAccount:

; 241  : 	}
; 242  : 	
; 243  : 	gObj[aIndex].LoginMsgSnd = 0;

  001a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ac	69 f3 40 27 00
	00		 imul	 esi, ebx, 10048
  001b2	c6 44 06 0a 00	 mov	 BYTE PTR [esi+eax+10], 0

; 244  : 
; 245  : 	if (gObj[aIndex].LoginMsgCount >= 3 )

  001b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001bc	80 7c 06 0b 03	 cmp	 BYTE PTR [esi+eax+11], 3
  001c1	7c 04		 jl	 SHORT $LN18@JGPAccount

; 246  : 	{
; 247  : 		lpMsg->result = 8;

  001c3	c6 47 03 08	 mov	 BYTE PTR [edi+3], 8
$LN18@JGPAccount:

; 248  : 	}
; 249  : 
; 250  : 	GCJoinResult(lpMsg->result , aIndex);

  001c7	0f b6 47 03	 movzx	 eax, BYTE PTR [edi+3]
  001cb	53		 push	 ebx
  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 ?GCJoinResult@@YAXEH@Z	; GCJoinResult
  001d2	83 c4 08	 add	 esp, 8

; 251  : 
; 252  : 	if ( lpMsg->result  != 1 )

  001d5	80 7f 03 01	 cmp	 BYTE PTR [edi+3], 1
  001d9	74 15		 je	 SHORT $LN20@JGPAccount

; 253  : 	{
; 254  : 		if ( gObj[aIndex].LoginMsgCount > 3 )

  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001e0	80 7c 06 0b 03	 cmp	 BYTE PTR [esi+eax+11], 3
  001e5	7e 09		 jle	 SHORT $LN20@JGPAccount

; 255  : 		{
; 256  : 			CloseClient(aIndex);

  001e7	53		 push	 ebx
  001e8	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  001ed	83 c4 04	 add	 esp, 4
$LN20@JGPAccount:

; 257  : 		}
; 258  : 	}
; 259  : }

  001f0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f3	5f		 pop	 edi
  001f4	5e		 pop	 esi
  001f5	33 cd		 xor	 ecx, ebp
  001f7	5b		 pop	 ebx
  001f8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001fd	8b e5		 mov	 esp, ebp
  001ff	5d		 pop	 ebp
  00200	c3		 ret	 0
?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z ENDP	; JGPAccountRequest
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pClose$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z PROC		; GJPUserClose, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _lpObj$[ebp]

; 158  : 	SDHP_USERCLOSE_ID pClose;
; 159  : 
; 160  : 	pClose.h.c =0xC1;
; 161  : 	pClose.h.size= sizeof(SDHP_USERCLOSE_ID);
; 162  : 	pClose.h.headcode = 0x05;
; 163  : 	memcpy(pClose.szId , lpObj->AccountID, 10);
; 164  : 	//memcpy(pClose.szName, lpObj->BackName, 10);
; 165  : 	pClose.Level = lpObj->Level;
; 166  : 	pClose.DbClass = lpObj->DbClass;
; 167  : 
; 168  : 	wsJServerCli.DataSend((char*)&pClose, pClose.h.size);

  00013	6a 1c		 push	 28			; 0000001cH
  00015	66 c7 45 e0 c1
	1c		 mov	 WORD PTR _pClose$[ebp], 7361 ; 00001cc1H
  0001b	c6 45 e2 05	 mov	 BYTE PTR _pClose$[ebp+2], 5
  0001f	0f b7 41 5a	 movzx	 eax, WORD PTR [ecx+90]
  00023	f3 0f 7e 41 52	 movq	 xmm0, QWORD PTR [ecx+82]
  00028	66 89 45 eb	 mov	 WORD PTR _pClose$[ebp+11], ax
  0002c	0f b7 81 96 00
	00 00		 movzx	 eax, WORD PTR [ecx+150]
  00033	66 89 45 f8	 mov	 WORD PTR _pClose$[ebp+24], ax
  00037	8a 81 92 00 00
	00		 mov	 al, BYTE PTR [ecx+146]
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00042	88 45 fa	 mov	 BYTE PTR _pClose$[ebp+26], al
  00045	8d 45 e0	 lea	 eax, DWORD PTR _pClose$[ebp]
  00048	50		 push	 eax
  00049	66 0f d6 45 e3	 movq	 QWORD PTR _pClose$[ebp+3], xmm0
  0004e	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 169  : }

  00053	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00056	33 cd		 xor	 ecx, ebp
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z ENDP		; GJPUserClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJPUserClose@@YAXPAD@Z
_TEXT	SEGMENT
_pClose$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_szAccountID$ = 8					; size = 4
?GJPUserClose@@YAXPAD@Z PROC				; GJPUserClose, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _szAccountID$[ebp]

; 145  : 	SDHP_USERCLOSE_ID pClose;
; 146  : 
; 147  : 	pClose.h.c =0xC1;
; 148  : 	pClose.h.size= sizeof(SDHP_USERCLOSE_ID);
; 149  : 	pClose.h.headcode = 0x05;
; 150  : 	memcpy(pClose.szId , szAccountID, 10);
; 151  : 
; 152  : 	wsJServerCli.DataSend((char*)&pClose, pClose.h.size);

  00013	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00018	6a 1c		 push	 28			; 0000001cH
  0001a	66 c7 45 e0 c1
	1c		 mov	 WORD PTR _pClose$[ebp], 7361 ; 00001cc1H
  00020	c6 45 e2 05	 mov	 BYTE PTR _pClose$[ebp+2], 5
  00024	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00028	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  0002c	66 89 45 eb	 mov	 WORD PTR _pClose$[ebp+11], ax
  00030	8d 45 e0	 lea	 eax, DWORD PTR _pClose$[ebp]
  00033	50		 push	 eax
  00034	66 0f d6 45 e3	 movq	 QWORD PTR _pClose$[ebp+3], xmm0
  00039	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 153  : }

  0003e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00041	33 cd		 xor	 ecx, ebp
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?GJPUserClose@@YAXPAD@Z ENDP				; GJPUserClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z PROC	; JGServerLoginResult, COMDAT

; 128  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 129  : 	if ( lpMsg->Result == false )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	80 78 03 00	 cmp	 BYTE PTR [eax+3], 0
  0000a	75 19		 jne	 SHORT $LN2@JGServerLo

; 130  : 	{
; 131  : 		LogAdd(lMsg.Get(MSGGET(1, 210)));

  0000c	68 d2 01 00 00	 push	 466			; 000001d2H
  00011	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00016	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  0001b	89 45 08	 mov	 DWORD PTR _lpMsg$[ebp], eax

; 138  : 
; 139  : }

  0001e	5d		 pop	 ebp

; 130  : 	{
; 131  : 		LogAdd(lMsg.Get(MSGGET(1, 210)));

  0001f	ff 25 00 00 00
	00		 jmp	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
$LN2@JGServerLo:

; 132  : 		return;
; 133  : 	}
; 134  : 
; 135  : 	JoinServerConnected=TRUE;
; 136  : 	gServerReady++;

  00025	ff 05 00 00 00
	00		 inc	 DWORD PTR ?gServerReady@@3HA ; gServerReady

; 137  : 	SendMessage(ghWnd, WM_START_SERVER, 0, 0);

  0002b	6a 00		 push	 0
  0002d	6a 00		 push	 0
  0002f	68 05 04 00 00	 push	 1029			; 00000405H
  00034	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0003a	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?JoinServerConnected@@3HA, 1 ; JoinServerConnected
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 138  : 
; 139  : }

  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ENDP	; JGServerLoginResult
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?GJServerLogin@@YAXXZ
_TEXT	SEGMENT
_pInfo$ = -64						; size = 58
__$ArrayPad$ = -4					; size = 4
?GJServerLogin@@YAXXZ PROC				; GJServerLogin, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 110  : 	SDHP_SERVERINFO pInfo;
; 111  : 
; 112  : 	pInfo.h.c = 0xC1;
; 113  : 	pInfo.h.size = sizeof(SDHP_SERVERINFO);
; 114  : 	pInfo.h.headcode = 0x00;
; 115  : 	pInfo.Port = GameServerPort;

  00010	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?GameServerPort@@3HA
  00016	66 89 45 c4	 mov	 WORD PTR _pInfo$[ebp+4], ax

; 116  : 	pInfo.Type = 1;
; 117  : 	strcpy(pInfo.ServerName , szServerName);

  0001a	33 c0		 xor	 eax, eax
  0001c	c7 45 c0 c1 3a
	00 01		 mov	 DWORD PTR _pInfo$[ebp], 16792257 ; 01003ac1H
$LL3@GJServerLo:
  00023	8a 88 00 00 00
	00		 mov	 cl, BYTE PTR ?szServerName@@3PADA[eax]
  00029	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  0002c	88 4c 05 c5	 mov	 BYTE PTR _pInfo$[ebp+eax+5], cl
  00030	84 c9		 test	 cl, cl
  00032	75 ef		 jne	 SHORT $LL3@GJServerLo

; 118  : 	pInfo.ServerCode = gGameServerCode;

  00034	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode

; 119  : 
; 120  : 	wsJServerCli.DataSend((char*)&pInfo, pInfo.h.size);

  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0003f	66 89 45 f8	 mov	 WORD PTR _pInfo$[ebp+56], ax
  00043	0f b6 45 c1	 movzx	 eax, BYTE PTR _pInfo$[ebp+1]
  00047	50		 push	 eax
  00048	8d 45 c0	 lea	 eax, DWORD PTR _pInfo$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 121  : }

  00051	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00054	33 cd		 xor	 ecx, ebp
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?GJServerLogin@@YAXXZ ENDP				; GJServerLogin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?SProtocolCore@@YAXEPAEH@Z
_TEXT	SEGMENT
_protoNum$ = 8						; size = 1
_aRecv$ = 12						; size = 4
_aLen$ = 16						; size = 4
?SProtocolCore@@YAXEPAEH@Z PROC				; SProtocolCore, COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 
; 30   : 	#ifdef TRACE_PROTOCOL
; 31   : 		LogAddHeadHex("JOIN_SERVER", aRecv, aLen);
; 32   : 	#endif
; 33   : 
; 34   : 	switch ( protoNum )

  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _protoNum$[ebp]
  00007	3d cd 00 00 00	 cmp	 eax, 205		; 000000cdH
  0000c	0f 87 e9 00 00
	00		 ja	 $LN2@SProtocolC
  00012	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN22@SProtocolC[eax]
  00019	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN25@SProtocolC[eax*4]
$LN4@SProtocolC:

; 35   : 	{
; 36   : 		case 0x00:
; 37   : 			JGServerLoginResult((SDHP_RESULT *)aRecv);

  00020	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  00023	e8 00 00 00 00	 call	 ?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ; JGServerLoginResult

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00028	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN5@SProtocolC:

; 38   : 			break;
; 39   : 
; 40   : 		case 0x01:
; 41   : 			JGPAccountRequest((SDHP_IDPASSRESULT *)aRecv);

  0002d	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  00030	e8 00 00 00 00	 call	 ?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z ; JGPAccountRequest

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00035	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
$LN6@SProtocolC:

; 42   : 			break;
; 43   : 
; 44   : 		case 0x06:
; 45   : 			GJPBillCeckRecv((SDHP_BILLSEARCH_RESULT *)aRecv);

  0003a	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  0003d	e8 00 00 00 00	 call	 ?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ; GJPBillCeckRecv

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00042	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN7@SProtocolC:

; 46   : 			break;
; 47   : 
; 48   : 		case 0x07:
; 49   : 			GJPUserKillRecv((SDHP_BILLKILLUSER *)aRecv);

  00047	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  0004a	e8 00 00 00 00	 call	 ?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserKillRecv

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  0004f	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN8@SProtocolC:

; 50   : 			break;
; 51   : 
; 52   : 		case 0x08:
; 53   : 			JGOtherJoin((SDHP_OTHERJOINMSG *)aRecv);

  00054	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  00057	e8 00 00 00 00	 call	 ?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z ; JGOtherJoin

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  0005c	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN9@SProtocolC:

; 54   : 			break;
; 55   : 
; 56   : 		case 0x09:
; 57   : 			GJPUserDisconnectRecv((SDHP_BILLKILLUSER *)aRecv);

  00061	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  00064	e8 00 00 00 00	 call	 ?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserDisconnectRecv

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00069	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
$LN10@SProtocolC:

; 58   : 			break;
; 59   : 
; 60   : 		case 0x20:
; 61   : 			JGPExitCodeRecv((SDHP_EXITMSG *)aRecv);

  0006e	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  00071	e8 00 00 00 00	 call	 ?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z ; JGPExitCodeRecv

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00076	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
$LN11@SProtocolC:

; 62   : 			break;
; 63   : 
; 64   : 		case 0x60:
; 65   : 			JGPEventStart((SDHP_EVENTSTART *)aRecv);

  0007b	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  0007e	e8 00 00 00 00	 call	 ?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z ; JGPEventStart

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00083	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN12@SProtocolC:

; 66   : 			break;
; 67   : 
; 68   : 		case 0x61:
; 69   : 			JGPEventControl((SDHP_EVENTCONTROL *)aRecv);

  00088	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  0008b	e8 00 00 00 00	 call	 ?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z ; JGPEventControl

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  00090	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
$LN13@SProtocolC:

; 70   : 			break;
; 71   : 
; 72   : 		case 0x62:
; 73   : 			JGPOptionControl((SDHP_OPTIONCONTROL *)aRecv);

  00095	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  00098	e8 00 00 00 00	 call	 ?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z ; JGPOptionControl

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  0009d	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
$LN14@SProtocolC:

; 74   : 			break;
; 75   : 
; 76   : 		case 0x63:
; 77   : 			JGPSendMail((PMSG_JG_MEMO_SEND *)aRecv);

  000a2	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  000a5	e8 00 00 00 00	 call	 ?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ; JGPSendMail

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  000aa	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  000ad	5d		 pop	 ebp
  000ae	c3		 ret	 0
$LN15@SProtocolC:

; 78   : 			break;
; 79   : 
; 80   : 		case 0x30:
; 81   : 			LoveHeartEventRecv((SDHP_LOVEHEARTEVENT_RESULT *)aRecv);

  000af	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  000b2	e8 00 00 00 00	 call	 ?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ; LoveHeartEventRecv

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  000b7	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
$LN16@SProtocolC:

; 82   : 			break;
; 83   : 
; 84   : 		case 0x40:
; 85   : 			AllNoticeRecv((SDHP_NOTICE *)aRecv);

  000bc	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  000bf	e8 00 00 00 00	 call	 ?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z ; AllNoticeRecv

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  000c4	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  000c7	5d		 pop	 ebp
  000c8	c3		 ret	 0
$LN17@SProtocolC:

; 86   : 			break;
; 87   : 
; 88   : 		case 0x41:
; 89   : 			UserNoticeRecv((SDHP_USER_NOTICE *)aRecv);

  000c9	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  000cc	e8 00 00 00 00	 call	 ?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z ; UserNoticeRecv

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  000d1	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
$LN18@SProtocolC:

; 90   : 			break;
; 91   : 
; 92   : 		case 0x7A:
; 93   : 			JGAnsMapSvrMove((PMSG_ANS_MAPSVRMOVE *)aRecv);

  000d6	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  000d9	e8 00 00 00 00	 call	 ?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z ; JGAnsMapSvrMove

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  000de	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  000e1	5d		 pop	 ebp
  000e2	c3		 ret	 0
$LN19@SProtocolC:

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000e3	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  000e6	e8 00 00 00 00	 call	 ?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z ; JGAnsMapSvrAuth

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  000eb	83 c4 04	 add	 esp, 4

; 102  : 			break;
; 103  : 	}
; 104  : }

  000ee	5d		 pop	 ebp
  000ef	c3		 ret	 0
$LN20@SProtocolC:

; 98   : 			break;
; 99   : 
; 100  : 		case 0xCD:
; 101  : 			BroadCastMessage((BroadCastMessageInfo*)aRecv);

  000f0	ff 75 0c	 push	 DWORD PTR _aRecv$[ebp]
  000f3	e8 00 00 00 00	 call	 ?BroadCastMessage@@YAXPAUBroadCastMessageInfo@@@Z ; BroadCastMessage
  000f8	83 c4 04	 add	 esp, 4
$LN2@SProtocolC:

; 102  : 			break;
; 103  : 	}
; 104  : }

  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
  000fd	0f 1f 00	 npad	 3
$LN25@SProtocolC:
  00100	00 00 00 00	 DD	 $LN4@SProtocolC
  00104	00 00 00 00	 DD	 $LN5@SProtocolC
  00108	00 00 00 00	 DD	 $LN6@SProtocolC
  0010c	00 00 00 00	 DD	 $LN7@SProtocolC
  00110	00 00 00 00	 DD	 $LN8@SProtocolC
  00114	00 00 00 00	 DD	 $LN9@SProtocolC
  00118	00 00 00 00	 DD	 $LN10@SProtocolC
  0011c	00 00 00 00	 DD	 $LN15@SProtocolC
  00120	00 00 00 00	 DD	 $LN16@SProtocolC
  00124	00 00 00 00	 DD	 $LN17@SProtocolC
  00128	00 00 00 00	 DD	 $LN11@SProtocolC
  0012c	00 00 00 00	 DD	 $LN12@SProtocolC
  00130	00 00 00 00	 DD	 $LN13@SProtocolC
  00134	00 00 00 00	 DD	 $LN14@SProtocolC
  00138	00 00 00 00	 DD	 $LN18@SProtocolC
  0013c	00 00 00 00	 DD	 $LN19@SProtocolC
  00140	00 00 00 00	 DD	 $LN20@SProtocolC
  00144	00 00 00 00	 DD	 $LN2@SProtocolC
$LN22@SProtocolC:
  00148	00		 DB	 0
  00149	01		 DB	 1
  0014a	11		 DB	 17			; 00000011H
  0014b	11		 DB	 17			; 00000011H
  0014c	11		 DB	 17			; 00000011H
  0014d	11		 DB	 17			; 00000011H
  0014e	02		 DB	 2
  0014f	03		 DB	 3
  00150	04		 DB	 4
  00151	05		 DB	 5
  00152	11		 DB	 17			; 00000011H
  00153	11		 DB	 17			; 00000011H
  00154	11		 DB	 17			; 00000011H
  00155	11		 DB	 17			; 00000011H
  00156	11		 DB	 17			; 00000011H
  00157	11		 DB	 17			; 00000011H
  00158	11		 DB	 17			; 00000011H
  00159	11		 DB	 17			; 00000011H
  0015a	11		 DB	 17			; 00000011H
  0015b	11		 DB	 17			; 00000011H
  0015c	11		 DB	 17			; 00000011H
  0015d	11		 DB	 17			; 00000011H
  0015e	11		 DB	 17			; 00000011H
  0015f	11		 DB	 17			; 00000011H
  00160	11		 DB	 17			; 00000011H
  00161	11		 DB	 17			; 00000011H
  00162	11		 DB	 17			; 00000011H
  00163	11		 DB	 17			; 00000011H
  00164	11		 DB	 17			; 00000011H
  00165	11		 DB	 17			; 00000011H
  00166	11		 DB	 17			; 00000011H
  00167	11		 DB	 17			; 00000011H
  00168	06		 DB	 6
  00169	11		 DB	 17			; 00000011H
  0016a	11		 DB	 17			; 00000011H
  0016b	11		 DB	 17			; 00000011H
  0016c	11		 DB	 17			; 00000011H
  0016d	11		 DB	 17			; 00000011H
  0016e	11		 DB	 17			; 00000011H
  0016f	11		 DB	 17			; 00000011H
  00170	11		 DB	 17			; 00000011H
  00171	11		 DB	 17			; 00000011H
  00172	11		 DB	 17			; 00000011H
  00173	11		 DB	 17			; 00000011H
  00174	11		 DB	 17			; 00000011H
  00175	11		 DB	 17			; 00000011H
  00176	11		 DB	 17			; 00000011H
  00177	11		 DB	 17			; 00000011H
  00178	07		 DB	 7
  00179	11		 DB	 17			; 00000011H
  0017a	11		 DB	 17			; 00000011H
  0017b	11		 DB	 17			; 00000011H
  0017c	11		 DB	 17			; 00000011H
  0017d	11		 DB	 17			; 00000011H
  0017e	11		 DB	 17			; 00000011H
  0017f	11		 DB	 17			; 00000011H
  00180	11		 DB	 17			; 00000011H
  00181	11		 DB	 17			; 00000011H
  00182	11		 DB	 17			; 00000011H
  00183	11		 DB	 17			; 00000011H
  00184	11		 DB	 17			; 00000011H
  00185	11		 DB	 17			; 00000011H
  00186	11		 DB	 17			; 00000011H
  00187	11		 DB	 17			; 00000011H
  00188	08		 DB	 8
  00189	09		 DB	 9
  0018a	11		 DB	 17			; 00000011H
  0018b	11		 DB	 17			; 00000011H
  0018c	11		 DB	 17			; 00000011H
  0018d	11		 DB	 17			; 00000011H
  0018e	11		 DB	 17			; 00000011H
  0018f	11		 DB	 17			; 00000011H
  00190	11		 DB	 17			; 00000011H
  00191	11		 DB	 17			; 00000011H
  00192	11		 DB	 17			; 00000011H
  00193	11		 DB	 17			; 00000011H
  00194	11		 DB	 17			; 00000011H
  00195	11		 DB	 17			; 00000011H
  00196	11		 DB	 17			; 00000011H
  00197	11		 DB	 17			; 00000011H
  00198	11		 DB	 17			; 00000011H
  00199	11		 DB	 17			; 00000011H
  0019a	11		 DB	 17			; 00000011H
  0019b	11		 DB	 17			; 00000011H
  0019c	11		 DB	 17			; 00000011H
  0019d	11		 DB	 17			; 00000011H
  0019e	11		 DB	 17			; 00000011H
  0019f	11		 DB	 17			; 00000011H
  001a0	11		 DB	 17			; 00000011H
  001a1	11		 DB	 17			; 00000011H
  001a2	11		 DB	 17			; 00000011H
  001a3	11		 DB	 17			; 00000011H
  001a4	11		 DB	 17			; 00000011H
  001a5	11		 DB	 17			; 00000011H
  001a6	11		 DB	 17			; 00000011H
  001a7	11		 DB	 17			; 00000011H
  001a8	0a		 DB	 10			; 0000000aH
  001a9	0b		 DB	 11			; 0000000bH
  001aa	0c		 DB	 12			; 0000000cH
  001ab	0d		 DB	 13			; 0000000dH
  001ac	11		 DB	 17			; 00000011H
  001ad	11		 DB	 17			; 00000011H
  001ae	11		 DB	 17			; 00000011H
  001af	11		 DB	 17			; 00000011H
  001b0	11		 DB	 17			; 00000011H
  001b1	11		 DB	 17			; 00000011H
  001b2	11		 DB	 17			; 00000011H
  001b3	11		 DB	 17			; 00000011H
  001b4	11		 DB	 17			; 00000011H
  001b5	11		 DB	 17			; 00000011H
  001b6	11		 DB	 17			; 00000011H
  001b7	11		 DB	 17			; 00000011H
  001b8	11		 DB	 17			; 00000011H
  001b9	11		 DB	 17			; 00000011H
  001ba	11		 DB	 17			; 00000011H
  001bb	11		 DB	 17			; 00000011H
  001bc	11		 DB	 17			; 00000011H
  001bd	11		 DB	 17			; 00000011H
  001be	11		 DB	 17			; 00000011H
  001bf	11		 DB	 17			; 00000011H
  001c0	11		 DB	 17			; 00000011H
  001c1	11		 DB	 17			; 00000011H
  001c2	0e		 DB	 14			; 0000000eH
  001c3	0f		 DB	 15			; 0000000fH
  001c4	11		 DB	 17			; 00000011H
  001c5	11		 DB	 17			; 00000011H
  001c6	11		 DB	 17			; 00000011H
  001c7	11		 DB	 17			; 00000011H
  001c8	11		 DB	 17			; 00000011H
  001c9	11		 DB	 17			; 00000011H
  001ca	11		 DB	 17			; 00000011H
  001cb	11		 DB	 17			; 00000011H
  001cc	11		 DB	 17			; 00000011H
  001cd	11		 DB	 17			; 00000011H
  001ce	11		 DB	 17			; 00000011H
  001cf	11		 DB	 17			; 00000011H
  001d0	11		 DB	 17			; 00000011H
  001d1	11		 DB	 17			; 00000011H
  001d2	11		 DB	 17			; 00000011H
  001d3	11		 DB	 17			; 00000011H
  001d4	11		 DB	 17			; 00000011H
  001d5	11		 DB	 17			; 00000011H
  001d6	11		 DB	 17			; 00000011H
  001d7	11		 DB	 17			; 00000011H
  001d8	11		 DB	 17			; 00000011H
  001d9	11		 DB	 17			; 00000011H
  001da	11		 DB	 17			; 00000011H
  001db	11		 DB	 17			; 00000011H
  001dc	11		 DB	 17			; 00000011H
  001dd	11		 DB	 17			; 00000011H
  001de	11		 DB	 17			; 00000011H
  001df	11		 DB	 17			; 00000011H
  001e0	11		 DB	 17			; 00000011H
  001e1	11		 DB	 17			; 00000011H
  001e2	11		 DB	 17			; 00000011H
  001e3	11		 DB	 17			; 00000011H
  001e4	11		 DB	 17			; 00000011H
  001e5	11		 DB	 17			; 00000011H
  001e6	11		 DB	 17			; 00000011H
  001e7	11		 DB	 17			; 00000011H
  001e8	11		 DB	 17			; 00000011H
  001e9	11		 DB	 17			; 00000011H
  001ea	11		 DB	 17			; 00000011H
  001eb	11		 DB	 17			; 00000011H
  001ec	11		 DB	 17			; 00000011H
  001ed	11		 DB	 17			; 00000011H
  001ee	11		 DB	 17			; 00000011H
  001ef	11		 DB	 17			; 00000011H
  001f0	11		 DB	 17			; 00000011H
  001f1	11		 DB	 17			; 00000011H
  001f2	11		 DB	 17			; 00000011H
  001f3	11		 DB	 17			; 00000011H
  001f4	11		 DB	 17			; 00000011H
  001f5	11		 DB	 17			; 00000011H
  001f6	11		 DB	 17			; 00000011H
  001f7	11		 DB	 17			; 00000011H
  001f8	11		 DB	 17			; 00000011H
  001f9	11		 DB	 17			; 00000011H
  001fa	11		 DB	 17			; 00000011H
  001fb	11		 DB	 17			; 00000011H
  001fc	11		 DB	 17			; 00000011H
  001fd	11		 DB	 17			; 00000011H
  001fe	11		 DB	 17			; 00000011H
  001ff	11		 DB	 17			; 00000011H
  00200	11		 DB	 17			; 00000011H
  00201	11		 DB	 17			; 00000011H
  00202	11		 DB	 17			; 00000011H
  00203	11		 DB	 17			; 00000011H
  00204	11		 DB	 17			; 00000011H
  00205	11		 DB	 17			; 00000011H
  00206	11		 DB	 17			; 00000011H
  00207	11		 DB	 17			; 00000011H
  00208	11		 DB	 17			; 00000011H
  00209	11		 DB	 17			; 00000011H
  0020a	11		 DB	 17			; 00000011H
  0020b	11		 DB	 17			; 00000011H
  0020c	11		 DB	 17			; 00000011H
  0020d	11		 DB	 17			; 00000011H
  0020e	11		 DB	 17			; 00000011H
  0020f	11		 DB	 17			; 00000011H
  00210	11		 DB	 17			; 00000011H
  00211	11		 DB	 17			; 00000011H
  00212	11		 DB	 17			; 00000011H
  00213	11		 DB	 17			; 00000011H
  00214	11		 DB	 17			; 00000011H
  00215	10		 DB	 16			; 00000010H
?SProtocolCore@@YAXEPAEH@Z ENDP				; SProtocolCore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\user.h
;	COMDAT ?SetBill@BILL_CLASS@@QAEHHHPAD@Z
_TEXT	SEGMENT
_pay$ = 8						; size = 4
_end_time$ = 12						; size = 4
_end_days$ = 16						; size = 4
?SetBill@BILL_CLASS@@QAEHHHPAD@Z PROC			; BILL_CLASS::SetBill, COMDAT
; _this$ = ecx

; 2002 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b d1		 mov	 edx, ecx

; 2003 : 		BOOL bRet=0;
; 2004 : 
; 2005 : 		if ( this->PayCode == -1 )

  00005	b8 01 00 00 00	 mov	 eax, 1

; 2006 : 		{
; 2007 : 			bRet = 1;
; 2008 : 		}
; 2009 : 
; 2010 : 		this->PayCode = pay;
; 2011 : 		this->EndTime = end_time;

  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _end_time$[ebp]
  0000d	56		 push	 esi

; 2012 : 		strcpy_s(EndsDays, sizeof(EndsDays), end_days);

  0000e	ff 75 10	 push	 DWORD PTR _end_days$[ebp]
  00011	33 f6		 xor	 esi, esi
  00013	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00016	83 3a ff	 cmp	 DWORD PTR [edx], -1
  00019	8d 4a 08	 lea	 ecx, DWORD PTR [edx+8]
  0001c	6a 0d		 push	 13			; 0000000dH
  0001e	0f 44 f0	 cmove	 esi, eax
  00021	8b 45 08	 mov	 eax, DWORD PTR _pay$[ebp]
  00024	51		 push	 ecx
  00025	89 02		 mov	 DWORD PTR [edx], eax
  00027	e8 00 00 00 00	 call	 _strcpy_s
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2013 : 		return bRet;

  0002f	8b c6		 mov	 eax, esi
  00031	5e		 pop	 esi

; 2014 : 	}	// line : 237

  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
?SetBill@BILL_CLASS@@QAEHHHPAD@Z ENDP			; BILL_CLASS::SetBill
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\sprotocol.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 999  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
