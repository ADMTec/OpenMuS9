; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\DBSockMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??0DBSockMng@@QAE@XZ				; DBSockMng::DBSockMng
PUBLIC	??1DBSockMng@@UAE@XZ				; DBSockMng::~DBSockMng
PUBLIC	?Connect@DBSockMng@@QAEXXZ			; DBSockMng::Connect
PUBLIC	?ActiveChange@DBSockMng@@QAEXXZ			; DBSockMng::ActiveChange
PUBLIC	?Send@DBSockMng@@QAEHHPADH@Z			; DBSockMng::Send
PUBLIC	?Send@DBSockMng@@QAEHPADH@Z			; DBSockMng::Send
PUBLIC	?MsgProc@DBSockMng@@QAEHHIJ@Z			; DBSockMng::MsgProc
PUBLIC	?GetActiveDS@DBSockMng@@QAEHXZ			; DBSockMng::GetActiveDS
PUBLIC	??_GDBSockMng@@UAEPAXI@Z			; DBSockMng::`scalar deleting destructor'
PUBLIC	??_7DBSockMng@@6B@				; DBSockMng::`vftable'
PUBLIC	?cDBSMng@@3VDBSockMng@@A			; cDBSMng
PUBLIC	??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@	; `string'
PUBLIC	??_R4DBSockMng@@6B@				; DBSockMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDBSockMng@@@8				; DBSockMng `RTTI Type Descriptor'
PUBLIC	??_R3DBSockMng@@8				; DBSockMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DBSockMng@@8				; DBSockMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DBSockMng@@8			; DBSockMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_atexit:PROC
EXTRN	?Get@Message@@QAEPADH@Z:PROC			; Message::Get
EXTRN	?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z:PROC ; MyWinsockBase::CreateSocket
EXTRN	?Close@MyWinsockBase@@QAEHXZ:PROC		; MyWinsockBase::Close
EXTRN	?GetSocket@MyWinsockBase@@QAEIXZ:PROC		; MyWinsockBase::GetSocket
EXTRN	?GetConnect@MyWinsockBase@@QAEHXZ:PROC		; MyWinsockBase::GetConnect
EXTRN	?SetProtocolCore@wsJoinServerCli@@QAEHP6AXEPAEH@Z@Z:PROC ; wsJoinServerCli::SetProtocolCore
EXTRN	?FDWRITE_MsgDataSend@wsJoinServerCli@@QAEHXZ:PROC ; wsJoinServerCli::FDWRITE_MsgDataSend
EXTRN	?DataRecv@wsJoinServerCli@@QAEHXZ:PROC		; wsJoinServerCli::DataRecv
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	?Connect@wsJoinServerCli@@QAEHPADGK@Z:PROC	; wsJoinServerCli::Connect
EXTRN	??0wsJoinServerCli@@QAE@XZ:PROC			; wsJoinServerCli::wsJoinServerCli
EXTRN	??1wsJoinServerCli@@UAE@XZ:PROC			; wsJoinServerCli::~wsJoinServerCli
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	?ExDataServerConnect@@YAHPADK@Z:PROC		; ExDataServerConnect
EXTRN	??_EDBSockMng@@UAEPAXI@Z:PROC			; DBSockMng::`vector deleting destructor'
EXTRN	?DataServerProtocolCore@@YAXEPAEH@Z:PROC	; DataServerProtocolCore
EXTRN	?DataServerLogin@@YAXH@Z:PROC			; DataServerLogin
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?lMsg@@3VMessage@@A:BYTE			; lMsg
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?ghWnd@@3PAUHWND__@@A:DWORD			; ghWnd
EXTRN	?DataServerPort@@3HA:DWORD			; DataServerPort
EXTRN	?DataServerIP@@3PADA:BYTE			; DataServerIP
EXTRN	?DataServerPort2@@3HA:DWORD			; DataServerPort2
EXTRN	?DataServerIP2@@3PADA:BYTE			; DataServerIP2
EXTRN	?ExDBServerIP@@3PADA:BYTE			; ExDBServerIP
EXTRN	?wsExDbCli@@3VwsJoinServerCli@@A:BYTE		; wsExDbCli
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?cDBSMng@@3VDBSockMng@@A DB 0320058H DUP (?)		; cDBSMng
_BSS	ENDS
CRT$XCU	SEGMENT
?cDBSMng$initializer$@@3P6AXXZA DD FLAT:??__EcDBSMng@@YAXXZ ; cDBSMng$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@DBSockMng@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DBSockMng@@8 DD FLAT:??_R0?AVDBSockMng@@@8 ; DBSockMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DBSockMng@@8
rdata$r	ENDS
;	COMDAT ??_R2DBSockMng@@8
rdata$r	SEGMENT
??_R2DBSockMng@@8 DD FLAT:??_R1A@?0A@EA@DBSockMng@@8	; DBSockMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DBSockMng@@8
rdata$r	SEGMENT
??_R3DBSockMng@@8 DD 00H				; DBSockMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DBSockMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDBSockMng@@@8
data$r	SEGMENT
??_R0?AVDBSockMng@@@8 DD FLAT:??_7type_info@@6B@	; DBSockMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDBSockMng@@', 00H
data$r	ENDS
;	COMDAT ??_R4DBSockMng@@6B@
rdata$r	SEGMENT
??_R4DBSockMng@@6B@ DD 00H				; DBSockMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDBSockMng@@@8
	DD	FLAT:??_R3DBSockMng@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@
CONST	SEGMENT
??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@ DB 'Active DB Change', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7DBSockMng@@6B@
CONST	SEGMENT
??_7DBSockMng@@6B@ DD FLAT:??_R4DBSockMng@@6B@		; DBSockMng::`vftable'
	DD	FLAT:??_EDBSockMng@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1DBSockMng@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FcDBSMng@@YAXXZ
text$yd	SEGMENT
??__FcDBSMng@@YAXXZ PROC				; `dynamic atexit destructor for 'cDBSMng'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00005	e9 00 00 00 00	 jmp	 ??1DBSockMng@@UAE@XZ	; DBSockMng::~DBSockMng
??__FcDBSMng@@YAXXZ ENDP				; `dynamic atexit destructor for 'cDBSMng''
text$yd	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ??__EcDBSMng@@YAXXZ
text$di	SEGMENT
??__EcDBSMng@@YAXXZ PROC				; `dynamic initializer for 'cDBSMng'', COMDAT

; 20   : DBSockMng cDBSMng;	// DataServer Manager

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00005	e8 00 00 00 00	 call	 ??0DBSockMng@@QAE@XZ	; DBSockMng::DBSockMng
  0000a	68 00 00 00 00	 push	 OFFSET ??__FcDBSMng@@YAXXZ ; `dynamic atexit destructor for 'cDBSMng''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EcDBSMng@@YAXXZ ENDP				; `dynamic initializer for 'cDBSMng''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GDBSockMng@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GDBSockMng@@UAEPAXI@Z PROC				; DBSockMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1DBSockMng@@UAE@XZ	; DBSockMng::~DBSockMng
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 58 00 32 00	 push	 3276888			; 00320058H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GDBSockMng@@UAEPAXI@Z ENDP				; DBSockMng::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?GetActiveDS@DBSockMng@@QAEHXZ
_TEXT	SEGMENT
?GetActiveDS@DBSockMng@@QAEHXZ PROC			; DBSockMng::GetActiveDS, COMDAT
; _this$ = ecx

; 169  : 	return m_ActiveServer;

  00000	8b 81 54 00 32
	00		 mov	 eax, DWORD PTR [ecx+3276884]

; 170  : }

  00006	c3		 ret	 0
?GetActiveDS@DBSockMng@@QAEHXZ ENDP			; DBSockMng::GetActiveDS
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?MsgProc@DBSockMng@@QAEHHIJ@Z
_TEXT	SEGMENT
_line$ = 8						; size = 4
_wParam$ = 12						; size = 4
_lParam$ = 16						; size = 4
?MsgProc@DBSockMng@@QAEHHIJ@Z PROC			; DBSockMng::MsgProc, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 150  : 	switch (lParam & 0xFFFF & 0xFFFF)

  00003	0f b7 45 10	 movzx	 eax, WORD PTR _lParam$[ebp]
  00007	83 e8 01	 sub	 eax, 1
  0000a	74 3e		 je	 SHORT $LN4@MsgProc
  0000c	83 e8 01	 sub	 eax, 1
  0000f	74 1f		 je	 SHORT $LN5@MsgProc
  00011	83 e8 1e	 sub	 eax, 30			; 0000001eH
  00014	75 45		 jne	 SHORT $LN9@MsgProc

; 157  : 		break;
; 158  : 	case 32: // Close
; 159  : 		this->wsCDBS[line].Close();

  00016	69 45 08 28 00
	19 00		 imul	 eax, DWORD PTR _line$[ebp], 1638440
  0001d	83 c0 08	 add	 eax, 8
  00020	03 c8		 add	 ecx, eax
  00022	e8 00 00 00 00	 call	 ?Close@MyWinsockBase@@QAEHXZ ; MyWinsockBase::Close

; 160  : 		break;
; 161  : 	}
; 162  : 	return 1;

  00027	b8 01 00 00 00	 mov	 eax, 1

; 163  : }

  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
$LN5@MsgProc:

; 154  : 		break;
; 155  : 	case 2: // Send Data
; 156  : 		this->wsCDBS[line].FDWRITE_MsgDataSend();

  00030	69 45 08 28 00
	19 00		 imul	 eax, DWORD PTR _line$[ebp], 1638440
  00037	83 c0 04	 add	 eax, 4
  0003a	03 c8		 add	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ?FDWRITE_MsgDataSend@wsJoinServerCli@@QAEHXZ ; wsJoinServerCli::FDWRITE_MsgDataSend

; 160  : 		break;
; 161  : 	}
; 162  : 	return 1;

  00041	b8 01 00 00 00	 mov	 eax, 1

; 163  : }

  00046	5d		 pop	 ebp
  00047	c2 0c 00	 ret	 12			; 0000000cH
$LN4@MsgProc:

; 151  : 	{
; 152  : 	case 1: // Recv Data
; 153  : 		this->wsCDBS[line].DataRecv();

  0004a	69 45 08 28 00
	19 00		 imul	 eax, DWORD PTR _line$[ebp], 1638440
  00051	83 c0 04	 add	 eax, 4
  00054	03 c8		 add	 ecx, eax
  00056	e8 00 00 00 00	 call	 ?DataRecv@wsJoinServerCli@@QAEHXZ ; wsJoinServerCli::DataRecv
$LN9@MsgProc:

; 160  : 		break;
; 161  : 	}
; 162  : 	return 1;

  0005b	b8 01 00 00 00	 mov	 eax, 1

; 163  : }

  00060	5d		 pop	 ebp
  00061	c2 0c 00	 ret	 12			; 0000000cH
?MsgProc@DBSockMng@@QAEHHIJ@Z ENDP			; DBSockMng::MsgProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?Send@DBSockMng@@QAEHPADH@Z
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_len$ = 12						; size = 4
?Send@DBSockMng@@QAEHPADH@Z PROC			; DBSockMng::Send, COMDAT
; _this$ = ecx

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 113  : 	if (this->m_ActiveServer >= 2)

  00006	8b 86 54 00 32
	00		 mov	 eax, DWORD PTR [esi+3276884]
  0000c	83 f8 02	 cmp	 eax, 2
  0000f	7c 07		 jl	 SHORT $LN2@Send
$LN6@Send:

; 114  : 	{
; 115  : 		return 0;

  00011	33 c0		 xor	 eax, eax
  00013	5e		 pop	 esi

; 127  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
$LN2@Send:

; 116  : 	}
; 117  : 	if (this->m_ActiveServer < 0)

  00018	85 c0		 test	 eax, eax
  0001a	78 f5		 js	 SHORT $LN6@Send

; 118  : 	{
; 119  : 		return 0;
; 120  : 	}
; 121  : 	if ( this->wsCDBS[this->m_ActiveServer].DataSend((char*)buf, len) == 0)

  0001c	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  0001f	69 c0 28 00 19
	00		 imul	 eax, eax, 1638440
  00025	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00028	ff 75 08	 push	 DWORD PTR _buf$[ebp]
  0002b	03 c8		 add	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  00032	85 c0		 test	 eax, eax
  00034	75 21		 jne	 SHORT $LN4@Send

; 122  : 	{
; 123  : 		this->ActiveChange();

  00036	8b ce		 mov	 ecx, esi
  00038	e8 00 00 00 00	 call	 ?ActiveChange@DBSockMng@@QAEXXZ ; DBSockMng::ActiveChange

; 124  : 		this->wsCDBS[this->m_ActiveServer].DataSend((char*)buf, len);

  0003d	69 86 54 00 32
	00 28 00 19 00	 imul	 eax, DWORD PTR [esi+3276884], 1638440
  00047	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0004a	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  0004d	ff 75 08	 push	 DWORD PTR _buf$[ebp]
  00050	03 c8		 add	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
$LN4@Send:

; 125  : 	}
; 126  : 	return 1;

  00057	b8 01 00 00 00	 mov	 eax, 1
  0005c	5e		 pop	 esi

; 127  : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?Send@DBSockMng@@QAEHPADH@Z ENDP			; DBSockMng::Send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?Send@DBSockMng@@QAEHHPADH@Z
_TEXT	SEGMENT
_server$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
?Send@DBSockMng@@QAEHHPADH@Z PROC			; DBSockMng::Send, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 132  : 	if (server >= 2)

  00003	8b 45 08	 mov	 eax, DWORD PTR _server$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	83 f8 02	 cmp	 eax, 2
  0000c	7c 07		 jl	 SHORT $LN2@Send
$LN6@Send:

; 133  : 	{
; 134  : 		return 0;

  0000e	33 c0		 xor	 eax, eax
  00010	5e		 pop	 esi

; 145  : }

  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Send:

; 135  : 	}
; 136  : 	if (server < 0)

  00015	85 c0		 test	 eax, eax
  00017	78 f5		 js	 SHORT $LN6@Send

; 137  : 	{
; 138  : 		return 0;
; 139  : 	}
; 140  : 	if (this->wsCDBS[server].DataSend(buf, len) == 0)

  00019	ff 75 10	 push	 DWORD PTR _len$[ebp]
  0001c	69 c8 28 00 19
	00		 imul	 ecx, eax, 1638440
  00022	ff 75 0c	 push	 DWORD PTR _buf$[ebp]
  00025	83 c1 04	 add	 ecx, 4
  00028	03 ce		 add	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  0002f	85 c0		 test	 eax, eax
  00031	75 07		 jne	 SHORT $LN4@Send

; 141  : 	{
; 142  : 		this->ActiveChange();

  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?ActiveChange@DBSockMng@@QAEXXZ ; DBSockMng::ActiveChange
$LN4@Send:

; 143  : 	}
; 144  : 	return 1;

  0003a	b8 01 00 00 00	 mov	 eax, 1
  0003f	5e		 pop	 esi

; 145  : }

  00040	5d		 pop	 ebp
  00041	c2 0c 00	 ret	 12			; 0000000cH
?Send@DBSockMng@@QAEHHPADH@Z ENDP			; DBSockMng::Send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?ActiveChange@DBSockMng@@QAEXXZ
_TEXT	SEGMENT
?ActiveChange@DBSockMng@@QAEXXZ PROC			; DBSockMng::ActiveChange, COMDAT
; _this$ = ecx

; 95   : 	{
; 96   : 		int Status;
; 97   : 		if (this->m_ActiveServer==DS_0)

  00000	33 c0		 xor	 eax, eax
  00002	39 81 54 00 32
	00		 cmp	 DWORD PTR [ecx+3276884], eax

; 98   : 		{
; 99   : 			this->m_ActiveServer=DS_1;
; 100  : 			Status=1;
; 101  : 		}
; 102  : 		else
; 103  : 		{
; 104  : 			this->m_ActiveServer=DS_0;
; 105  : 			Status=0;
; 106  : 		}
; 107  : 		LogAdd("Active DB Change");

  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FLBAPBOE@Active?5DB?5Change?$AA@
  0000d	0f 94 c0	 sete	 al
  00010	89 81 54 00 32
	00		 mov	 DWORD PTR [ecx+3276884], eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0001c	59		 pop	 ecx

; 108  : 	}
; 109  : }

  0001d	c3		 ret	 0
?ActiveChange@DBSockMng@@QAEXXZ ENDP			; DBSockMng::ActiveChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?Connect@DBSockMng@@QAEXXZ
_TEXT	SEGMENT
?Connect@DBSockMng@@QAEXXZ PROC				; DBSockMng::Connect, COMDAT
; _this$ = ecx

; 34   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 35   : 	
; 36   : 	if (this->wsCDBS[0].GetSocket()  == INVALID_SOCKET )

  00005	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  00008	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  0000d	83 f8 ff	 cmp	 eax, -1
  00010	0f 85 8c 00 00
	00		 jne	 $LN4@Connect

; 37   : 	{
; 38   : 		int State;
; 39   : 		this->wsCDBS[0].CreateSocket(ghWnd);

  00016	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0001c	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  0001f	e8 00 00 00 00	 call	 ?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z ; MyWinsockBase::CreateSocket

; 40   : 		this->wsCDBS[0].SetProtocolCore(DataServerProtocolCore);

  00024	68 00 00 00 00	 push	 OFFSET ?DataServerProtocolCore@@YAXEPAEH@Z ; DataServerProtocolCore
  00029	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0002c	e8 00 00 00 00	 call	 ?SetProtocolCore@wsJoinServerCli@@QAEHP6AXEPAEH@Z@Z ; wsJoinServerCli::SetProtocolCore

; 41   : 		State=this->wsCDBS[0].Connect(DataServerIP, DataServerPort, WM_GM_DATA1_CLIENT_MSG_PROC);

  00031	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?DataServerPort@@3HA
  00038	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0003b	68 0a 04 00 00	 push	 1034			; 0000040aH
  00040	50		 push	 eax
  00041	68 00 00 00 00	 push	 OFFSET ?DataServerIP@@3PADA ; DataServerIP
  00046	e8 00 00 00 00	 call	 ?Connect@wsJoinServerCli@@QAEHPADGK@Z ; wsJoinServerCli::Connect

; 42   : 		if (State == 0)
; 43   : 		{
; 44   : 			LogAdd(lMsg.Get(MSGGET(1, 147)), DataServerIP, DataServerPort);

  0004b	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  00050	ff 35 00 00 00
	00		 push	 DWORD PTR ?DataServerPort@@3HA ; DataServerPort
  00056	68 00 00 00 00	 push	 OFFSET ?DataServerIP@@3PADA ; DataServerIP
  0005b	85 c0		 test	 eax, eax
  0005d	75 1e		 jne	 SHORT $LN3@Connect
  0005f	68 93 01 00 00	 push	 403			; 00000193H
  00064	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00069	50		 push	 eax
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH

; 45   : 			this->wsCDBS[0].Close();

  00073	8d 4f 08	 lea	 ecx, DWORD PTR [edi+8]
  00076	e8 00 00 00 00	 call	 ?Close@MyWinsockBase@@QAEHXZ ; MyWinsockBase::Close

; 46   : 		}
; 47   : 		else

  0007b	eb 25		 jmp	 SHORT $LN4@Connect
$LN3@Connect:

; 48   : 		{
; 49   : 			LogAdd(lMsg.Get(MSGGET(1, 146)), DataServerIP, DataServerPort);	

  0007d	68 92 01 00 00	 push	 402			; 00000192H
  00082	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00087	50		 push	 eax
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd

; 50   : 			this->m_ActiveServer=DS_0;
; 51   : 			DataServerLogin(DS_0);

  0008e	6a 00		 push	 0
  00090	c7 87 54 00 32
	00 00 00 00 00	 mov	 DWORD PTR [edi+3276884], 0
  0009a	e8 00 00 00 00	 call	 ?DataServerLogin@@YAXH@Z ; DataServerLogin
  0009f	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@Connect:

; 52   : 		}
; 53   : 	}
; 54   : 	
; 55   : 	if (this->wsCDBS[1].GetSocket() == INVALID_SOCKET)	

  000a2	8d 8f 30 00 19
	00		 lea	 ecx, DWORD PTR [edi+1638448]
  000a8	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket
  000ad	83 f8 ff	 cmp	 eax, -1
  000b0	0f 85 a4 00 00
	00		 jne	 $LN7@Connect

; 56   : 	{
; 57   : 		int State;
; 58   : 		this->wsCDBS[1].CreateSocket(ghWnd);

  000b6	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  000bc	8d 8f 30 00 19
	00		 lea	 ecx, DWORD PTR [edi+1638448]
  000c2	e8 00 00 00 00	 call	 ?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z ; MyWinsockBase::CreateSocket

; 59   : 		this->wsCDBS[1].SetProtocolCore(DataServerProtocolCore);

  000c7	68 00 00 00 00	 push	 OFFSET ?DataServerProtocolCore@@YAXEPAEH@Z ; DataServerProtocolCore
  000cc	8d 8f 2c 00 19
	00		 lea	 ecx, DWORD PTR [edi+1638444]
  000d2	e8 00 00 00 00	 call	 ?SetProtocolCore@wsJoinServerCli@@QAEHP6AXEPAEH@Z@Z ; wsJoinServerCli::SetProtocolCore

; 60   : 		State=this->wsCDBS[1].Connect(DataServerIP2, DataServerPort2, WM_GM_DATA2_CLIENT_MSG_PROC);// Two ports more than the used1

  000d7	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?DataServerPort2@@3HA
  000de	8d 8f 2c 00 19
	00		 lea	 ecx, DWORD PTR [edi+1638444]
  000e4	68 0b 04 00 00	 push	 1035			; 0000040bH
  000e9	50		 push	 eax
  000ea	68 00 00 00 00	 push	 OFFSET ?DataServerIP2@@3PADA ; DataServerIP2
  000ef	e8 00 00 00 00	 call	 ?Connect@wsJoinServerCli@@QAEHPADGK@Z ; wsJoinServerCli::Connect

; 61   : 		if (State==0)
; 62   : 		{
; 63   : 			LogAdd(lMsg.Get(MSGGET(1, 147)), DataServerIP2, DataServerPort2);

  000f4	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VMessage@@A ; lMsg
  000f9	ff 35 00 00 00
	00		 push	 DWORD PTR ?DataServerPort2@@3HA ; DataServerPort2
  000ff	68 00 00 00 00	 push	 OFFSET ?DataServerIP2@@3PADA ; DataServerIP2
  00104	85 c0		 test	 eax, eax
  00106	75 21		 jne	 SHORT $LN6@Connect
  00108	68 93 01 00 00	 push	 403			; 00000193H
  0010d	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00112	50		 push	 eax
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  00119	83 c4 0c	 add	 esp, 12			; 0000000cH

; 64   : 			this->wsCDBS[1].Close();

  0011c	8d 8f 30 00 19
	00		 lea	 ecx, DWORD PTR [edi+1638448]
  00122	e8 00 00 00 00	 call	 ?Close@MyWinsockBase@@QAEHXZ ; MyWinsockBase::Close

; 65   : 		}
; 66   : 		else

  00127	eb 31		 jmp	 SHORT $LN7@Connect
$LN6@Connect:

; 67   : 		{
; 68   : 			LogAdd(lMsg.Get(MSGGET(1, 146)), DataServerIP2, DataServerPort2);

  00129	68 92 01 00 00	 push	 402			; 00000192H
  0012e	e8 00 00 00 00	 call	 ?Get@Message@@QAEPADH@Z	; Message::Get
  00133	50		 push	 eax
  00134	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  0013a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 69   : 			if (this->m_ActiveServer==-1)

  0013d	83 bf 54 00 32
	00 ff		 cmp	 DWORD PTR [edi+3276884], -1
  00144	75 0a		 jne	 SHORT $LN8@Connect

; 70   : 			{
; 71   : 				this->m_ActiveServer=DS_1;

  00146	c7 87 54 00 32
	00 01 00 00 00	 mov	 DWORD PTR [edi+3276884], 1
$LN8@Connect:

; 72   : 			}
; 73   : 			DataServerLogin(DS_1);	// Second DataServer

  00150	6a 01		 push	 1
  00152	e8 00 00 00 00	 call	 ?DataServerLogin@@YAXH@Z ; DataServerLogin
  00157	83 c4 04	 add	 esp, 4
$LN7@Connect:

; 74   : 		}
; 75   : 	}
; 76   : 	
; 77   : 	if ( wsExDbCli.GetSocket()  == INVALID_SOCKET)

  0015a	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsExDbCli@@3VwsJoinServerCli@@A+4
  0015f	e8 00 00 00 00	 call	 ?GetSocket@MyWinsockBase@@QAEIXZ ; MyWinsockBase::GetSocket

; 78   : 	{
; 79   : 		//LogAddC(2, "ExDB Server Check..");
; 80   : 		wsExDbCli.CreateSocket(ghWnd);

  00164	b9 04 00 00 00	 mov	 ecx, OFFSET ?wsExDbCli@@3VwsJoinServerCli@@A+4
  00169	5f		 pop	 edi
  0016a	5e		 pop	 esi
  0016b	5b		 pop	 ebx
  0016c	83 f8 ff	 cmp	 eax, -1
  0016f	75 1e		 jne	 SHORT $LN9@Connect
  00171	ff 35 00 00 00
	00		 push	 DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00177	e8 00 00 00 00	 call	 ?CreateSocket@MyWinsockBase@@QAEHPAUHWND__@@@Z ; MyWinsockBase::CreateSocket

; 86   : 		{
; 87   : 			//LogAddC(2, "ExDB Server Check..");
; 88   : 			ExDataServerConnect(ExDBServerIP, WM_GM_EXDATA_CLIENT_MSG_PROC);

  0017c	68 0e 04 00 00	 push	 1038			; 0000040eH
  00181	68 00 00 00 00	 push	 OFFSET ?ExDBServerIP@@3PADA ; ExDBServerIP
  00186	e8 00 00 00 00	 call	 ?ExDataServerConnect@@YAHPADK@Z ; ExDataServerConnect
  0018b	83 c4 08	 add	 esp, 8

; 89   : 		}
; 90   : 	}
; 91   : }

  0018e	c3		 ret	 0
$LN9@Connect:

; 81   : 		ExDataServerConnect(ExDBServerIP, WM_GM_EXDATA_CLIENT_MSG_PROC);
; 82   : 	}
; 83   : 	else
; 84   : 	{
; 85   : 		if ( wsExDbCli.GetConnect() == 0 )

  0018f	e8 00 00 00 00	 call	 ?GetConnect@MyWinsockBase@@QAEHXZ ; MyWinsockBase::GetConnect
  00194	85 c0		 test	 eax, eax
  00196	75 12		 jne	 SHORT $LN11@Connect

; 86   : 		{
; 87   : 			//LogAddC(2, "ExDB Server Check..");
; 88   : 			ExDataServerConnect(ExDBServerIP, WM_GM_EXDATA_CLIENT_MSG_PROC);

  00198	68 0e 04 00 00	 push	 1038			; 0000040eH
  0019d	68 00 00 00 00	 push	 OFFSET ?ExDBServerIP@@3PADA ; ExDBServerIP
  001a2	e8 00 00 00 00	 call	 ?ExDataServerConnect@@YAHPADK@Z ; ExDataServerConnect
  001a7	83 c4 08	 add	 esp, 8
$LN11@Connect:

; 89   : 		}
; 90   : 	}
; 91   : }

  001aa	c3		 ret	 0
?Connect@DBSockMng@@QAEXXZ ENDP				; DBSockMng::Connect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ??1DBSockMng@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1DBSockMng@@UAE@XZ PROC				; DBSockMng::~DBSockMng, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1DBSockMng@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 29   : 
; 30   : }

  00022	68 00 00 00 00	 push	 OFFSET ??1wsJoinServerCli@@UAE@XZ ; wsJoinServerCli::~wsJoinServerCli
  00027	6a 02		 push	 2
  00029	68 28 00 19 00	 push	 1638440			; 00190028H
  0002e	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00031	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7DBSockMng@@6B@
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1DBSockMng@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1DBSockMng@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1DBSockMng@@UAE@XZ ENDP				; DBSockMng::~DBSockMng
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ??0DBSockMng@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DBSockMng@@QAE@XZ PROC				; DBSockMng::DBSockMng, COMDAT
; _this$ = ecx

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	68 00 00 00 00	 push	 OFFSET ??1wsJoinServerCli@@UAE@XZ ; wsJoinServerCli::~wsJoinServerCli
  0000a	8b f1		 mov	 esi, ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0wsJoinServerCli@@QAE@XZ ; wsJoinServerCli::wsJoinServerCli
  00011	6a 02		 push	 2
  00013	68 28 00 19 00	 push	 1638440			; 00190028H
  00018	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0001b	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0001e	50		 push	 eax
  0001f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7DBSockMng@@6B@
  00025	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z

; 24   : 	this->m_ActiveServer=DS_UNINITIALIZED;

  0002a	c7 86 54 00 32
	00 ff ff ff ff	 mov	 DWORD PTR [esi+3276884], -1

; 25   : }

  00034	8b c6		 mov	 eax, esi
  00036	5e		 pop	 esi
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0DBSockMng@@QAE@XZ ENDP				; DBSockMng::DBSockMng
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\dbsockmng.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
