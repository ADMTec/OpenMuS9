; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\BattleGround.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CBattleGround@@QAE@XZ			; CBattleGround::CBattleGround
PUBLIC	??1CBattleGround@@UAE@XZ			; CBattleGround::~CBattleGround
PUBLIC	?SetGroundRect@CBattleGround@@QAEXHHHHH@Z	; CBattleGround::SetGroundRect
PUBLIC	?SetBattleType@CBattleGround@@QAEXH@Z		; CBattleGround::SetBattleType
PUBLIC	?Enable@CBattleGround@@QAEXH@Z			; CBattleGround::Enable
PUBLIC	?GetUsed@CBattleGround@@QAEHXZ			; CBattleGround::GetUsed
PUBLIC	?SetTeamMaster@CBattleGround@@QAEXHPAD@Z	; CBattleGround::SetTeamMaster
PUBLIC	?SetTeamName@CBattleGround@@QAEXHPAD@Z		; CBattleGround::SetTeamName
PUBLIC	?GetTeamName@CBattleGround@@QAEPADH@Z		; CBattleGround::GetTeamName
PUBLIC	?SetTimer@CBattleGround@@QAEXH@Z		; CBattleGround::SetTimer
PUBLIC	?GetTimer@CBattleGround@@QAEHXZ			; CBattleGround::GetTimer
PUBLIC	?GetScore@CBattleGround@@QAEHH@Z		; CBattleGround::GetScore
PUBLIC	?SetScore@CBattleGround@@QAEXHH@Z		; CBattleGround::SetScore
PUBLIC	??_GCBattleGround@@UAEPAXI@Z			; CBattleGround::`scalar deleting destructor'
PUBLIC	??_7CBattleGround@@6B@				; CBattleGround::`vftable'
PUBLIC	??_R4CBattleGround@@6B@				; CBattleGround::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBattleGround@@@8			; CBattleGround `RTTI Type Descriptor'
PUBLIC	??_R3CBattleGround@@8				; CBattleGround::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBattleGround@@8				; CBattleGround::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBattleGround@@8			; CBattleGround::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	??_ECBattleGround@@UAEPAXI@Z:PROC		; CBattleGround::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CBattleGround@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBattleGround@@8 DD FLAT:??_R0?AVCBattleGround@@@8 ; CBattleGround::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBattleGround@@8
rdata$r	ENDS
;	COMDAT ??_R2CBattleGround@@8
rdata$r	SEGMENT
??_R2CBattleGround@@8 DD FLAT:??_R1A@?0A@EA@CBattleGround@@8 ; CBattleGround::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBattleGround@@8
rdata$r	SEGMENT
??_R3CBattleGround@@8 DD 00H				; CBattleGround::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBattleGround@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBattleGround@@@8
data$r	SEGMENT
??_R0?AVCBattleGround@@@8 DD FLAT:??_7type_info@@6B@	; CBattleGround `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBattleGround@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBattleGround@@6B@
rdata$r	SEGMENT
??_R4CBattleGround@@6B@ DD 00H				; CBattleGround::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBattleGround@@@8
	DD	FLAT:??_R3CBattleGround@@8
rdata$r	ENDS
;	COMDAT ??_7CBattleGround@@6B@
CONST	SEGMENT
??_7CBattleGround@@6B@ DD FLAT:??_R4CBattleGround@@6B@	; CBattleGround::`vftable'
	DD	FLAT:??_ECBattleGround@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBattleGround@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBattleGround@@UAEPAXI@Z PROC			; CBattleGround::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBattleGround@@UAE@XZ ; CBattleGround::~CBattleGround
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 60		 push	 96			; 00000060H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCBattleGround@@UAEPAXI@Z ENDP			; CBattleGround::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?SetScore@CBattleGround@@QAEXHH@Z
_TEXT	SEGMENT
_team$ = 8						; size = 4
_score$ = 12						; size = 4
?SetScore@CBattleGround@@QAEXHH@Z PROC			; CBattleGround::SetScore, COMDAT
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 108  : 	if ( team == 0 )

  00003	83 7d 08 00	 cmp	 DWORD PTR _team$[ebp], 0

; 109  : 	{
; 110  : 		this->m_Score1 = score;

  00007	8b 45 0c	 mov	 eax, DWORD PTR _score$[ebp]
  0000a	75 07		 jne	 SHORT $LN2@SetScore
  0000c	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 115  : 	}
; 116  : }

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
$LN2@SetScore:

; 111  : 	}
; 112  : 	else
; 113  : 	{
; 114  : 		this->m_Score2 = score;

  00013	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 115  : 	}
; 116  : }

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?SetScore@CBattleGround@@QAEXHH@Z ENDP			; CBattleGround::SetScore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?GetScore@CBattleGround@@QAEHH@Z
_TEXT	SEGMENT
_team$ = 8						; size = 4
?GetScore@CBattleGround@@QAEHH@Z PROC			; CBattleGround::GetScore, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	if ( team == 0 )

  00003	83 7d 08 00	 cmp	 DWORD PTR _team$[ebp], 0
  00007	75 07		 jne	 SHORT $LN2@GetScore

; 96   : 	{
; 97   : 		return this->m_Score1;

  00009	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 102  : 	}
; 103  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
$LN2@GetScore:

; 98   : 	}
; 99   : 	else
; 100  : 	{
; 101  : 		return this->m_Score2;

  00010	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 102  : 	}
; 103  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
?GetScore@CBattleGround@@QAEHH@Z ENDP			; CBattleGround::GetScore
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?GetTimer@CBattleGround@@QAEHXZ
_TEXT	SEGMENT
?GetTimer@CBattleGround@@QAEHXZ PROC			; CBattleGround::GetTimer, COMDAT
; _this$ = ecx

; 127  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 128  : 	return (GetTickCount() - this->m_dwCurTimer) / 1000;

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00009	8b d0		 mov	 edx, eax
  0000b	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  00010	2b 56 5c	 sub	 edx, DWORD PTR [esi+92]
  00013	f7 e2		 mul	 edx
  00015	5e		 pop	 esi
  00016	c1 ea 06	 shr	 edx, 6
  00019	8b c2		 mov	 eax, edx

; 129  : }

  0001b	c3		 ret	 0
?GetTimer@CBattleGround@@QAEHXZ ENDP			; CBattleGround::GetTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?SetTimer@CBattleGround@@QAEXH@Z
_TEXT	SEGMENT
_g_time$ = 8						; size = 4
?SetTimer@CBattleGround@@QAEXH@Z PROC			; CBattleGround::SetTimer, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 121  : 	this->m_nTimer = g_time;

  00003	8b 45 08	 mov	 eax, DWORD PTR _g_time$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 46 58	 mov	 DWORD PTR [esi+88], eax

; 122  : 	this->m_dwCurTimer = GetTickCount();

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  00015	5e		 pop	 esi

; 123  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?SetTimer@CBattleGround@@QAEXH@Z ENDP			; CBattleGround::SetTimer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?GetTeamName@CBattleGround@@QAEPADH@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetTeamName@CBattleGround@@QAEPADH@Z PROC		; CBattleGround::GetTeamName, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   : 	if ( n==0)

  00003	83 7d 08 00	 cmp	 DWORD PTR _n$[ebp], 0

; 83   : 	{
; 84   : 		return this->m_szTeamName1;

  00007	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000a	74 03		 je	 SHORT $LN3@GetTeamNam

; 85   : 	}
; 86   : 	else
; 87   : 	{
; 88   : 		return this->m_szTeamName2;

  0000c	8d 41 0d	 lea	 eax, DWORD PTR [ecx+13]
$LN3@GetTeamNam:

; 89   : 	}
; 90   : }

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetTeamName@CBattleGround@@QAEPADH@Z ENDP		; CBattleGround::GetTeamName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?SetTeamName@CBattleGround@@QAEXHPAD@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_szName$ = 12						; size = 4
?SetTeamName@CBattleGround@@QAEXHPAD@Z PROC		; CBattleGround::SetTeamName, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 	if ( n == 0 )

  00003	83 7d 08 00	 cmp	 DWORD PTR _n$[ebp], 0
  00007	75 19		 jne	 SHORT $LN2@SetTeamNam

; 70   : 	{
; 71   : 		strcpy(this->m_szTeamName1 , szName );

  00009	8b 55 0c	 mov	 edx, DWORD PTR _szName$[ebp]
  0000c	83 c1 04	 add	 ecx, 4
  0000f	2b ca		 sub	 ecx, edx
$LL5@SetTeamNam:
  00011	8a 02		 mov	 al, BYTE PTR [edx]
  00013	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00016	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  0001a	84 c0		 test	 al, al
  0001c	75 f3		 jne	 SHORT $LL5@SetTeamNam

; 76   : 	}
; 77   : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
$LN2@SetTeamNam:

; 72   : 	}
; 73   : 	else
; 74   : 	{
; 75   : 		strcpy( this->m_szTeamName2 , szName);

  00022	8b 45 0c	 mov	 eax, DWORD PTR _szName$[ebp]
  00025	8d 51 0d	 lea	 edx, DWORD PTR [ecx+13]
  00028	2b d0		 sub	 edx, eax
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL6@SetTeamNam:
  00030	8a 08		 mov	 cl, BYTE PTR [eax]
  00032	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00035	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00039	84 c9		 test	 cl, cl
  0003b	75 f3		 jne	 SHORT $LL6@SetTeamNam

; 76   : 	}
; 77   : }

  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?SetTeamName@CBattleGround@@QAEXHPAD@Z ENDP		; CBattleGround::SetTeamName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_szId$ = 12						; size = 4
?SetTeamMaster@CBattleGround@@QAEXHPAD@Z PROC		; CBattleGround::SetTeamMaster, COMDAT
; _this$ = ecx

; 55   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   : 	if ( n == 0 )

  00003	83 7d 08 00	 cmp	 DWORD PTR _n$[ebp], 0
  00007	75 19		 jne	 SHORT $LN2@SetTeamMas

; 57   : 	{
; 58   : 		strcpy(this->m_szID1 , szId );

  00009	8b 55 0c	 mov	 edx, DWORD PTR _szId$[ebp]
  0000c	83 c1 20	 add	 ecx, 32			; 00000020H
  0000f	2b ca		 sub	 ecx, edx
$LL5@SetTeamMas:
  00011	8a 02		 mov	 al, BYTE PTR [edx]
  00013	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00016	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  0001a	84 c0		 test	 al, al
  0001c	75 f3		 jne	 SHORT $LL5@SetTeamMas

; 63   : 	}
; 64   : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
$LN2@SetTeamMas:

; 59   : 	}
; 60   : 	else
; 61   : 	{
; 62   : 		strcpy( this->m_szID2 , szId);

  00022	8b 45 0c	 mov	 eax, DWORD PTR _szId$[ebp]
  00025	8d 51 2b	 lea	 edx, DWORD PTR [ecx+43]
  00028	2b d0		 sub	 edx, eax
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL6@SetTeamMas:
  00030	8a 08		 mov	 cl, BYTE PTR [eax]
  00032	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00035	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00039	84 c9		 test	 cl, cl
  0003b	75 f3		 jne	 SHORT $LL6@SetTeamMas

; 63   : 	}
; 64   : }

  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ENDP		; CBattleGround::SetTeamMaster
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?GetUsed@CBattleGround@@QAEHXZ
_TEXT	SEGMENT
?GetUsed@CBattleGround@@QAEHXZ PROC			; CBattleGround::GetUsed, COMDAT
; _this$ = ecx

; 38   : 	return this->m_Used;

  00000	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]

; 39   : }

  00003	c3		 ret	 0
?GetUsed@CBattleGround@@QAEHXZ ENDP			; CBattleGround::GetUsed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?Enable@CBattleGround@@QAEXH@Z
_TEXT	SEGMENT
_enable$ = 8						; size = 4
?Enable@CBattleGround@@QAEXH@Z PROC			; CBattleGround::Enable, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 44   : 	this->m_Used = enable;

  00003	8b 45 08	 mov	 eax, DWORD PTR _enable$[ebp]
  00006	89 41 50	 mov	 DWORD PTR [ecx+80], eax

; 45   : 
; 46   : 	if ( this->m_Used == TRUE)

  00009	83 f8 01	 cmp	 eax, 1
  0000c	75 0e		 jne	 SHORT $LN2@Enable

; 47   : 	{
; 48   : 		this->m_Score1 = 0;

  0000e	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 49   : 		this->m_Score2 = 0;

  00015	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
$LN2@Enable:

; 50   : 	}
; 51   : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?Enable@CBattleGround@@QAEXH@Z ENDP			; CBattleGround::Enable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?SetBattleType@CBattleGround@@QAEXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?SetBattleType@CBattleGround@@QAEXH@Z PROC		; CBattleGround::SetBattleType, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   : 	this->m_Type = type;

  00003	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00006	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 33   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetBattleType@CBattleGround@@QAEXH@Z ENDP		; CBattleGround::SetBattleType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?SetGroundRect@CBattleGround@@QAEXHHHHH@Z
_TEXT	SEGMENT
_map$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_xl$ = 20						; size = 4
_yl$ = 24						; size = 4
?SetGroundRect@CBattleGround@@QAEXHHHHH@Z PROC		; CBattleGround::SetGroundRect, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 21   : 	this->m_MapNumber = map;

  00003	8b 45 08	 mov	 eax, DWORD PTR _map$[ebp]
  00006	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 22   : 	this->m_rect.left = x;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  0000c	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 23   : 	this->m_rect.top = y;

  0000f	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  00012	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 24   : 	this->m_rect.right = xl;

  00015	8b 45 14	 mov	 eax, DWORD PTR _xl$[ebp]
  00018	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 25   : 	this->m_rect.bottom = yl;

  0001b	8b 45 18	 mov	 eax, DWORD PTR _yl$[ebp]
  0001e	89 41 44	 mov	 DWORD PTR [ecx+68], eax

; 26   : 	this->m_Set = true;

  00021	c7 41 48 01 00
	00 00		 mov	 DWORD PTR [ecx+72], 1

; 27   : }

  00028	5d		 pop	 ebp
  00029	c2 14 00	 ret	 20			; 00000014H
?SetGroundRect@CBattleGround@@QAEXHHHHH@Z ENDP		; CBattleGround::SetGroundRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ??1CBattleGround@@UAE@XZ
_TEXT	SEGMENT
??1CBattleGround@@UAE@XZ PROC				; CBattleGround::~CBattleGround, COMDAT
; _this$ = ecx

; 14   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBattleGround@@6B@

; 15   : 	return;
; 16   : }

  00006	c3		 ret	 0
??1CBattleGround@@UAE@XZ ENDP				; CBattleGround::~CBattleGround
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ??0CBattleGround@@QAE@XZ
_TEXT	SEGMENT
??0CBattleGround@@QAE@XZ PROC				; CBattleGround::CBattleGround, COMDAT
; _this$ = ecx

; 8    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBattleGround@@6B@

; 9    : 	this->m_Used = FALSE;
; 10   : 	this->m_Set = FALSE;
; 11   : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
  0000f	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], 0
  00016	c3		 ret	 0
??0CBattleGround@@QAE@XZ ENDP				; CBattleGround::CBattleGround
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 130  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\battleground.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 130  : }

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
