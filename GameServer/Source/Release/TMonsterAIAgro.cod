; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	C:\Users\Michel\Desktop\Source\GameServer\Source\TMonsterAIAgro.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0TMonsterAIAgroInfo@@QAE@XZ			; TMonsterAIAgroInfo::TMonsterAIAgroInfo
PUBLIC	??0TMonsterAIAgro@@QAE@XZ			; TMonsterAIAgro::TMonsterAIAgro
PUBLIC	??1TMonsterAIAgro@@UAE@XZ			; TMonsterAIAgro::~TMonsterAIAgro
PUBLIC	?ResetAll@TMonsterAIAgro@@QAEXXZ		; TMonsterAIAgro::ResetAll
PUBLIC	?SetAgro@TMonsterAIAgro@@QAEHHH@Z		; TMonsterAIAgro::SetAgro
PUBLIC	?DelAgro@TMonsterAIAgro@@QAEHH@Z		; TMonsterAIAgro::DelAgro
PUBLIC	?GetAgro@TMonsterAIAgro@@QAEHH@Z		; TMonsterAIAgro::GetAgro
PUBLIC	?IncAgro@TMonsterAIAgro@@QAEHHH@Z		; TMonsterAIAgro::IncAgro
PUBLIC	?DecAgro@TMonsterAIAgro@@QAEHHH@Z		; TMonsterAIAgro::DecAgro
PUBLIC	?DecAllAgro@TMonsterAIAgro@@QAEXH@Z		; TMonsterAIAgro::DecAllAgro
PUBLIC	?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z	; TMonsterAIAgro::GetMaxAgroUserIndex
PUBLIC	??_GTMonsterAIAgro@@UAEPAXI@Z			; TMonsterAIAgro::`scalar deleting destructor'
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??_7TMonsterAIAgro@@6B@				; TMonsterAIAgro::`vftable'
PUBLIC	??_R4TMonsterAIAgro@@6B@			; TMonsterAIAgro::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTMonsterAIAgro@@@8			; TMonsterAIAgro `RTTI Type Descriptor'
PUBLIC	??_R3TMonsterAIAgro@@8				; TMonsterAIAgro::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TMonsterAIAgro@@8				; TMonsterAIAgro::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TMonsterAIAgro@@8			; TMonsterAIAgro::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??_ETMonsterAIAgro@@UAEPAXI@Z:PROC		; TMonsterAIAgro::`vector deleting destructor'
EXTRN	?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z:PROC	; gObjIsConnected
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	?GetAttr@MapClass@@QAEEHH@Z:PROC		; MapClass::GetAttr
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?MapC@@3PAVMapClass@@A:BYTE			; MapC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@TMonsterAIAgro@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TMonsterAIAgro@@8 DD FLAT:??_R0?AVTMonsterAIAgro@@@8 ; TMonsterAIAgro::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TMonsterAIAgro@@8
rdata$r	ENDS
;	COMDAT ??_R2TMonsterAIAgro@@8
rdata$r	SEGMENT
??_R2TMonsterAIAgro@@8 DD FLAT:??_R1A@?0A@EA@TMonsterAIAgro@@8 ; TMonsterAIAgro::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TMonsterAIAgro@@8
rdata$r	SEGMENT
??_R3TMonsterAIAgro@@8 DD 00H				; TMonsterAIAgro::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TMonsterAIAgro@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTMonsterAIAgro@@@8
data$r	SEGMENT
??_R0?AVTMonsterAIAgro@@@8 DD FLAT:??_7type_info@@6B@	; TMonsterAIAgro `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTMonsterAIAgro@@', 00H
data$r	ENDS
;	COMDAT ??_R4TMonsterAIAgro@@6B@
rdata$r	SEGMENT
??_R4TMonsterAIAgro@@6B@ DD 00H				; TMonsterAIAgro::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTMonsterAIAgro@@@8
	DD	FLAT:??_R3TMonsterAIAgro@@8
rdata$r	ENDS
;	COMDAT ??_7TMonsterAIAgro@@6B@
CONST	SEGMENT
??_7TMonsterAIAgro@@6B@ DD FLAT:??_R4TMonsterAIAgro@@6B@ ; TMonsterAIAgro::`vftable'
	DD	FLAT:??_ETMonsterAIAgro@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx
  00027	8b 5d 08	 mov	 ebx, DWORD PTR ___flags$[ebp]
  0002a	f6 c3 02	 test	 bl, 2
  0002d	74 44		 je	 SHORT $LN2@vector
  0002f	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  00034	ff 76 fc	 push	 DWORD PTR [esi-4]
  00037	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003a	68 40 27 00 00	 push	 10048			; 00002740H
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	f6 c3 01	 test	 bl, 1
  00048	74 13		 je	 SHORT $LN3@vector
  0004a	69 0f 40 27 00
	00		 imul	 ecx, DWORD PTR [edi], 10048
  00050	83 c1 04	 add	 ecx, 4
  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0005a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0005d	8b c7		 mov	 eax, edi
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN2@vector:
  00073	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00079	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0007e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00084	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00089	f6 c3 01	 test	 bl, 1
  0008c	74 0e		 je	 SHORT $LN4@vector
  0008e	68 40 27 00 00	 push	 10048			; 00002740H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN4@vector:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00009	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000e	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GTMonsterAIAgro@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GTMonsterAIAgro@@UAEPAXI@Z PROC			; TMonsterAIAgro::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 24 03 00 00	 push	 804			; 00000324H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GTMonsterAIAgro@@UAEPAXI@Z ENDP			; TMonsterAIAgro::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z
_TEXT	SEGMENT
_iMaxAgro$1$ = -8					; size = 4
_iMaxAgroUserIndex$1$ = -4				; size = 4
_iMonsterIndex$ = 8					; size = 4
?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z PROC	; TMonsterAIAgro::GetMaxAgroUserIndex, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 128  : 	int iMaxAgroUserIndex = -1;

  00006	83 ca ff	 or	 edx, -1
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 129  : 	int iMaxAgro = -1;

  0000b	0b c2		 or	 eax, edx
  0000d	89 55 fc	 mov	 DWORD PTR _iMaxAgroUserIndex$1$[ebp], edx
  00010	57		 push	 edi
  00011	89 45 f8	 mov	 DWORD PTR _iMaxAgro$1$[ebp], eax
  00014	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00017	8d 5a 65	 lea	 ebx, DWORD PTR [edx+101]
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@GetMaxAgro:

; 132  : 	{
; 133  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  00020	8b 06		 mov	 eax, DWORD PTR [esi]
  00022	83 f8 ff	 cmp	 eax, -1
  00025	0f 84 92 00 00
	00		 je	 $LN2@GetMaxAgro

; 134  : 		{
; 135  : 			LPOBJ lpObj = &gObj[this->m_Agro[i].GetUserIndex()];

  0002b	69 f8 40 27 00
	00		 imul	 edi, eax, 10048
  00031	03 3d 00 00 00
	00		 add	 edi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 136  : 
; 137  : 			if ( (lpObj->Authority&2) == 2 )

  00037	f6 87 bc 01 00
	00 02		 test	 BYTE PTR [edi+444], 2
  0003e	75 7d		 jne	 SHORT $LN2@GetMaxAgro

; 138  : 				continue;
; 139  : 
; 140  : 			if ( !gObjIsConnected(lpObj) )

  00040	57		 push	 edi
  00041	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHPAUOBJECTSTRUCT@@@Z ; gObjIsConnected
  00046	83 c4 04	 add	 esp, 4
  00049	85 c0		 test	 eax, eax
  0004b	74 60		 je	 SHORT $LN36@GetMaxAgro

; 141  : 			{
; 142  : 				this->m_Agro[i].Reset();
; 143  : 				continue;
; 144  : 			}
; 145  : 
; 146  : 			if ( lpObj->Live == FALSE )

  0004d	80 7f 51 00	 cmp	 BYTE PTR [edi+81], 0
  00051	74 5a		 je	 SHORT $LN36@GetMaxAgro

; 147  : 			{
; 148  : 				this->m_Agro[i].Reset();
; 149  : 				continue;
; 150  : 			}
; 151  : 
; 152  : 			if ( gObjCalDistance(&gObj[iMonsterIndex], lpObj) > 7 )

  00053	69 45 08 40 27
	00 00		 imul	 eax, DWORD PTR _iMonsterIndex$[ebp], 10048
  0005a	57		 push	 edi
  0005b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  00067	83 c4 08	 add	 esp, 8
  0006a	83 f8 07	 cmp	 eax, 7
  0006d	7f 4b		 jg	 SHORT $LN34@GetMaxAgro

; 153  : 				continue;
; 154  : 
; 155  : 			BYTE btAttr = MapC[lpObj->MapNumber].GetAttr(lpObj->X, lpObj->Y);

  0006f	0f b6 87 21 01
	00 00		 movzx	 eax, BYTE PTR [edi+289]
  00076	50		 push	 eax
  00077	0f b6 87 20 01
	00 00		 movzx	 eax, BYTE PTR [edi+288]
  0007e	50		 push	 eax
  0007f	0f b6 87 23 01
	00 00		 movzx	 eax, BYTE PTR [edi+291]
  00086	69 c8 28 38 05
	00		 imul	 ecx, eax, 342056
  0008c	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?MapC@@3PAVMapClass@@A ; MapC
  00092	e8 00 00 00 00	 call	 ?GetAttr@MapClass@@QAEEHH@Z ; MapClass::GetAttr

; 156  : 
; 157  : 			if ( (btAttr&1) != 0 )

  00097	a8 01		 test	 al, 1
  00099	75 1f		 jne	 SHORT $LN34@GetMaxAgro

; 158  : 				continue;
; 159  : 
; 160  : 			if ( this->m_Agro[i].GetAgroValue() > iMaxAgro )

  0009b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0009e	3b 4d f8	 cmp	 ecx, DWORD PTR _iMaxAgro$1$[ebp]
  000a1	7e 17		 jle	 SHORT $LN34@GetMaxAgro
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 33   : 		return this->m_iUserIndex;

  000a3	8b 16		 mov	 edx, DWORD PTR [esi]
  000a5	89 55 fc	 mov	 DWORD PTR _iMaxAgroUserIndex$1$[ebp], edx

; 34   : 	}
; 35   : 
; 36   : 
; 37   : 	int GetAgroValue()
; 38   : 	{
; 39   : 		return this->m_iAgroValue;

  000a8	89 4d f8	 mov	 DWORD PTR _iMaxAgro$1$[ebp], ecx
  000ab	eb 10		 jmp	 SHORT $LN2@GetMaxAgro
$LN36@GetMaxAgro:

; 27   : 		this->m_iUserIndex = -1;

  000ad	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1

; 28   : 		this->m_iAgroValue = -1;

  000b3	c7 46 04 ff ff
	ff ff		 mov	 DWORD PTR [esi+4], -1
$LN34@GetMaxAgro:
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _iMaxAgroUserIndex$1$[ebp]
$LN2@GetMaxAgro:
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 131  : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  000bd	83 c6 08	 add	 esi, 8
  000c0	83 eb 01	 sub	 ebx, 1
  000c3	0f 85 57 ff ff
	ff		 jne	 $LL4@GetMaxAgro

; 161  : 			{
; 162  : 				iMaxAgroUserIndex =	this->m_Agro[i].GetUserIndex();
; 163  : 				iMaxAgro = this->m_Agro[i].GetAgroValue();
; 164  : 			}
; 165  : 		}
; 166  : 	}
; 167  : 
; 168  : 	return iMaxAgroUserIndex;

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	8b c2		 mov	 eax, edx
  000cd	5b		 pop	 ebx

; 169  : }

  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c2 04 00	 ret	 4
?GetMaxAgroUserIndex@TMonsterAIAgro@@QAEHH@Z ENDP	; TMonsterAIAgro::GetMaxAgroUserIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?DecAllAgro@TMonsterAIAgro@@QAEXH@Z
_TEXT	SEGMENT
_iDecValue$ = 8						; size = 4
?DecAllAgro@TMonsterAIAgro@@QAEXH@Z PROC		; TMonsterAIAgro::DecAllAgro, COMDAT
; _this$ = ecx

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00003	8b 55 08	 mov	 edx, DWORD PTR _iDecValue$[ebp]
  00006	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00009	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  0000e	66 90		 npad	 2
$LL4@DecAllAgro:

; 111  : 	{
; 112  : 		if ( this->m_Agro[i].GetUserIndex() != -1 )

  00010	83 78 fc ff	 cmp	 DWORD PTR [eax-4], -1
  00014	74 0c		 je	 SHORT $LN5@DecAllAgro
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 59   : 		this->m_iAgroValue -= iDecValue;

  00016	29 10		 sub	 DWORD PTR [eax], edx

; 60   : 
; 61   : 		if ( this->m_iAgroValue < 0 )

  00018	79 15		 jns	 SHORT $LN2@DecAllAgro

; 62   : 			this->m_iAgroValue = 0;

  0001a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 116  : 		else

  00020	eb 0d		 jmp	 SHORT $LN2@DecAllAgro
$LN5@DecAllAgro:
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 27   : 		this->m_iUserIndex = -1;

  00022	c7 40 fc ff ff
	ff ff		 mov	 DWORD PTR [eax-4], -1

; 28   : 		this->m_iAgroValue = -1;

  00029	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
$LN2@DecAllAgro:
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 110  : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  0002f	83 c0 08	 add	 eax, 8
  00032	83 e9 01	 sub	 ecx, 1
  00035	75 d9		 jne	 SHORT $LL4@DecAllAgro

; 117  : 		{
; 118  : 			this->m_Agro[i].Reset();
; 119  : 		}
; 120  : 	}
; 121  : }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?DecAllAgro@TMonsterAIAgro@@QAEXH@Z ENDP		; TMonsterAIAgro::DecAllAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?DecAgro@TMonsterAIAgro@@QAEHHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iDecValue$ = 12					; size = 4
?DecAgro@TMonsterAIAgro@@QAEHHH@Z PROC			; TMonsterAIAgro::DecAgro, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 95   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000a	33 c0		 xor	 eax, eax
  0000c	0f 1f 40 00	 npad	 4
$LL4@DecAgro:

; 96   : 	{
; 97   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex )

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 11		 je	 SHORT $LN13@DecAgro

; 95   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@DecAgro

; 100  : 		}
; 101  : 	}
; 102  : 
; 103  : 	return -1;

  0001d	83 c8 ff	 or	 eax, -1
  00020	5e		 pop	 esi

; 104  : }

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
$LN13@DecAgro:

; 99   : 			return this->m_Agro[i].DecAgro(iDecValue);

  00025	8d 0c c1	 lea	 ecx, DWORD PTR [ecx+eax*8]
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 59   : 		this->m_iAgroValue -= iDecValue;

  00028	8b 45 0c	 mov	 eax, DWORD PTR _iDecValue$[ebp]
  0002b	29 41 08	 sub	 DWORD PTR [ecx+8], eax

; 60   : 
; 61   : 		if ( this->m_iAgroValue < 0 )

  0002e	79 07		 jns	 SHORT $LN10@DecAgro

; 62   : 			this->m_iAgroValue = 0;

  00030	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
$LN10@DecAgro:
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 99   : 			return this->m_Agro[i].DecAgro(iDecValue);

  00037	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0003a	5e		 pop	 esi

; 104  : }

  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?DecAgro@TMonsterAIAgro@@QAEHHH@Z ENDP			; TMonsterAIAgro::DecAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?IncAgro@TMonsterAIAgro@@QAEHHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iIncValue$ = 12					; size = 4
?IncAgro@TMonsterAIAgro@@QAEHHH@Z PROC			; TMonsterAIAgro::IncAgro, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 81   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000a	33 c0		 xor	 eax, eax
  0000c	0f 1f 40 00	 npad	 4
$LL4@IncAgro:

; 82   : 	{
; 83   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex )

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 11		 je	 SHORT $LN12@IncAgro

; 81   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@IncAgro

; 86   : 		}
; 87   : 	}
; 88   : 
; 89   : 	return -1;

  0001d	83 c8 ff	 or	 eax, -1
  00020	5e		 pop	 esi

; 90   : }

  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
$LN12@IncAgro:

; 85   : 			return this->m_Agro[i].IncAgro(iIncValue);

  00025	8d 0c c1	 lea	 ecx, DWORD PTR [ecx+eax*8]
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 52   : 		this->m_iAgroValue += iIncValue;

  00028	8b 45 0c	 mov	 eax, DWORD PTR _iIncValue$[ebp]
  0002b	01 41 08	 add	 DWORD PTR [ecx+8], eax
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 85   : 			return this->m_Agro[i].IncAgro(iIncValue);

  0002e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00031	5e		 pop	 esi

; 90   : }

  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?IncAgro@TMonsterAIAgro@@QAEHHH@Z ENDP			; TMonsterAIAgro::IncAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?GetAgro@TMonsterAIAgro@@QAEHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
?GetAgro@TMonsterAIAgro@@QAEHH@Z PROC			; TMonsterAIAgro::GetAgro, COMDAT
; _this$ = ecx

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 66   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000a	33 c0		 xor	 eax, eax
  0000c	0f 1f 40 00	 npad	 4
$LL4@GetAgro:

; 67   : 	{
; 68   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex )

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 11		 je	 SHORT $LN12@GetAgro

; 66   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@GetAgro

; 71   : 		}
; 72   : 	}
; 73   : 
; 74   : 	return -1;

  0001d	83 c8 ff	 or	 eax, -1
  00020	5e		 pop	 esi

; 75   : }

  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
$LN12@GetAgro:

; 69   : 		{
; 70   : 			return this->m_Agro[i].GetAgroValue();

  00025	8b 44 c1 08	 mov	 eax, DWORD PTR [ecx+eax*8+8]
  00029	5e		 pop	 esi

; 75   : }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?GetAgro@TMonsterAIAgro@@QAEHH@Z ENDP			; TMonsterAIAgro::GetAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?DelAgro@TMonsterAIAgro@@QAEHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
?DelAgro@TMonsterAIAgro@@QAEHH@Z PROC			; TMonsterAIAgro::DelAgro, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 51   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00004	8b 75 08	 mov	 esi, DWORD PTR _iTargetIndex$[ebp]
  00007	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
  0000a	33 c0		 xor	 eax, eax
  0000c	0f 1f 40 00	 npad	 4
$LL4@DelAgro:

; 52   : 	{
; 53   : 		if ( this->m_Agro[i].GetUserIndex() == iTargetIndex)

  00010	39 32		 cmp	 DWORD PTR [edx], esi
  00012	74 10		 je	 SHORT $LN12@DelAgro

; 51   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00014	40		 inc	 eax
  00015	83 c2 08	 add	 edx, 8
  00018	83 f8 64	 cmp	 eax, 100		; 00000064H
  0001b	7c f3		 jl	 SHORT $LL4@DelAgro

; 57   : 		}
; 58   : 	}
; 59   : 
; 60   : 	return FALSE;

  0001d	33 c0		 xor	 eax, eax
  0001f	5e		 pop	 esi

; 61   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN12@DelAgro:
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 27   : 		this->m_iUserIndex = -1;

  00024	c7 44 c1 04 ff
	ff ff ff	 mov	 DWORD PTR [ecx+eax*8+4], -1

; 28   : 		this->m_iAgroValue = -1;

  0002c	c7 44 c1 08 ff
	ff ff ff	 mov	 DWORD PTR [ecx+eax*8+8], -1
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 56   : 			return TRUE;

  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	5e		 pop	 esi

; 61   : }

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?DelAgro@TMonsterAIAgro@@QAEHH@Z ENDP			; TMonsterAIAgro::DelAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?SetAgro@TMonsterAIAgro@@QAEHHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iValue$ = 12						; size = 4
?SetAgro@TMonsterAIAgro@@QAEHHH@Z PROC			; TMonsterAIAgro::SetAgro, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 36   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00003	33 c0		 xor	 eax, eax
  00005	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]
$LL4@SetAgro:

; 37   : 	{
; 38   : 		if ( this->m_Agro[i].GetUserIndex() == -1 )

  00008	83 3a ff	 cmp	 DWORD PTR [edx], -1
  0000b	74 0f		 je	 SHORT $LN12@SetAgro

; 36   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  0000d	40		 inc	 eax
  0000e	83 c2 08	 add	 edx, 8
  00011	83 f8 64	 cmp	 eax, 100		; 00000064H
  00014	7c f2		 jl	 SHORT $LL4@SetAgro

; 42   : 		}
; 43   : 	}
; 44   : 
; 45   : 	return FALSE;

  00016	33 c0		 xor	 eax, eax

; 46   : }

  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
$LN12@SetAgro:

; 39   : 		{
; 40   : 			this->m_Agro[i].SetAgro(iTargetIndex, iValue);

  0001c	8d 0c c1	 lea	 ecx, DWORD PTR [ecx+eax*8]
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 45   : 		this->m_iUserIndex = iTargetIndex;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _iTargetIndex$[ebp]
  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 46   : 		this->m_iAgroValue = iValue;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _iValue$[ebp]
  00028	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 41   : 			return TRUE;

  0002b	b8 01 00 00 00	 mov	 eax, 1

; 46   : }

  00030	5d		 pop	 ebp
  00031	c2 08 00	 ret	 8
?SetAgro@TMonsterAIAgro@@QAEHHH@Z ENDP			; TMonsterAIAgro::SetAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?ResetAll@TMonsterAIAgro@@QAEXXZ
_TEXT	SEGMENT
?ResetAll@TMonsterAIAgro@@QAEXXZ PROC			; TMonsterAIAgro::ResetAll, COMDAT
; _this$ = ecx

; 26   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00008	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@ResetAll:
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 27   : 		this->m_iUserIndex = -1;

  00010	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 26   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00016	8d 40 08	 lea	 eax, DWORD PTR [eax+8]
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 28   : 		this->m_iAgroValue = -1;

  00019	c7 40 fc ff ff
	ff ff		 mov	 DWORD PTR [eax-4], -1
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 26   : 	for ( int i=0;i<MAX_MONSTER_AI_AGRO;i++)

  00020	83 e9 01	 sub	 ecx, 1
  00023	75 eb		 jne	 SHORT $LL4@ResetAll

; 27   : 	{
; 28   : 		this->m_Agro[i].Reset();
; 29   : 	}
; 30   : }

  00025	c3		 ret	 0
?ResetAll@TMonsterAIAgro@@QAEXXZ ENDP			; TMonsterAIAgro::ResetAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ??1TMonsterAIAgro@@UAE@XZ
_TEXT	SEGMENT
??1TMonsterAIAgro@@UAE@XZ PROC				; TMonsterAIAgro::~TMonsterAIAgro, COMDAT
; _this$ = ecx

; 18   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7TMonsterAIAgro@@6B@

; 19   : 	return;
; 20   : }

  00006	c3		 ret	 0
??1TMonsterAIAgro@@UAE@XZ ENDP				; TMonsterAIAgro::~TMonsterAIAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ??0TMonsterAIAgro@@QAE@XZ
_TEXT	SEGMENT
??0TMonsterAIAgro@@QAE@XZ PROC				; TMonsterAIAgro::TMonsterAIAgro, COMDAT
; _this$ = ecx

; 13   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7TMonsterAIAgro@@6B@
  0000e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00011	0f 1f 40 00 66
	66 66 0f 1f 84
	00 00 00 00 00	 npad	 15
$LL4@TMonsterAI:
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h

; 27   : 		this->m_iUserIndex = -1;

  00020	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  00026	8d 40 08	 lea	 eax, DWORD PTR [eax+8]

; 28   : 		this->m_iAgroValue = -1;

  00029	c7 40 fc ff ff
	ff ff		 mov	 DWORD PTR [eax-4], -1
  00030	83 ea 01	 sub	 edx, 1
  00033	75 eb		 jne	 SHORT $LL4@TMonsterAI
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp

; 14   : 	this->ResetAll();

  00035	e8 00 00 00 00	 call	 ?ResetAll@TMonsterAIAgro@@QAEXXZ ; TMonsterAIAgro::ResetAll

; 15   : }

  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	c3		 ret	 0
??0TMonsterAIAgro@@QAE@XZ ENDP				; TMonsterAIAgro::TMonsterAIAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
;	COMDAT ?DecAgro@TMonsterAIAgroInfo@@QAEHH@Z
_TEXT	SEGMENT
_iDecValue$ = 8						; size = 4
?DecAgro@TMonsterAIAgroInfo@@QAEHH@Z PROC		; TMonsterAIAgroInfo::DecAgro, COMDAT
; _this$ = ecx

; 58   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 59   : 		this->m_iAgroValue -= iDecValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iDecValue$[ebp]
  00006	29 41 04	 sub	 DWORD PTR [ecx+4], eax

; 60   : 
; 61   : 		if ( this->m_iAgroValue < 0 )

  00009	79 07		 jns	 SHORT $LN4@DecAgro

; 62   : 			this->m_iAgroValue = 0;

  0000b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
$LN4@DecAgro:

; 63   : 
; 64   : 		return this->m_iAgroValue;

  00012	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 65   : 	}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?DecAgro@TMonsterAIAgroInfo@@QAEHH@Z ENDP		; TMonsterAIAgroInfo::DecAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
;	COMDAT ?IncAgro@TMonsterAIAgroInfo@@QAEHH@Z
_TEXT	SEGMENT
_iIncValue$ = 8						; size = 4
?IncAgro@TMonsterAIAgroInfo@@QAEHH@Z PROC		; TMonsterAIAgroInfo::IncAgro, COMDAT
; _this$ = ecx

; 51   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 52   : 		this->m_iAgroValue += iIncValue;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iIncValue$[ebp]
  00006	01 41 04	 add	 DWORD PTR [ecx+4], eax

; 53   : 		return this->m_iAgroValue;

  00009	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 54   : 	}

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?IncAgro@TMonsterAIAgroInfo@@QAEHH@Z ENDP		; TMonsterAIAgroInfo::IncAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
;	COMDAT ?SetAgro@TMonsterAIAgroInfo@@QAEXHH@Z
_TEXT	SEGMENT
_iTargetIndex$ = 8					; size = 4
_iValue$ = 12						; size = 4
?SetAgro@TMonsterAIAgroInfo@@QAEXHH@Z PROC		; TMonsterAIAgroInfo::SetAgro, COMDAT
; _this$ = ecx

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   : 		this->m_iUserIndex = iTargetIndex;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iTargetIndex$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax

; 46   : 		this->m_iAgroValue = iValue;

  00008	8b 45 0c	 mov	 eax, DWORD PTR _iValue$[ebp]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 47   : 	}

  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?SetAgro@TMonsterAIAgroInfo@@QAEXHH@Z ENDP		; TMonsterAIAgroInfo::SetAgro
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
;	COMDAT ?GetAgroValue@TMonsterAIAgroInfo@@QAEHXZ
_TEXT	SEGMENT
?GetAgroValue@TMonsterAIAgroInfo@@QAEHXZ PROC		; TMonsterAIAgroInfo::GetAgroValue, COMDAT
; _this$ = ecx

; 39   : 		return this->m_iAgroValue;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 40   : 	}

  00003	c3		 ret	 0
?GetAgroValue@TMonsterAIAgroInfo@@QAEHXZ ENDP		; TMonsterAIAgroInfo::GetAgroValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
;	COMDAT ?GetUserIndex@TMonsterAIAgroInfo@@QAEHXZ
_TEXT	SEGMENT
?GetUserIndex@TMonsterAIAgroInfo@@QAEHXZ PROC		; TMonsterAIAgroInfo::GetUserIndex, COMDAT
; _this$ = ecx

; 33   : 		return this->m_iUserIndex;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 34   : 	}

  00002	c3		 ret	 0
?GetUserIndex@TMonsterAIAgroInfo@@QAEHXZ ENDP		; TMonsterAIAgroInfo::GetUserIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
;	COMDAT ?Reset@TMonsterAIAgroInfo@@QAEXXZ
_TEXT	SEGMENT
?Reset@TMonsterAIAgroInfo@@QAEXXZ PROC			; TMonsterAIAgroInfo::Reset, COMDAT
; _this$ = ecx

; 27   : 		this->m_iUserIndex = -1;

  00000	c7 01 ff ff ff
	ff		 mov	 DWORD PTR [ecx], -1

; 28   : 		this->m_iAgroValue = -1;

  00006	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1

; 29   : 	}

  0000d	c3		 ret	 0
?Reset@TMonsterAIAgroInfo@@QAEXXZ ENDP			; TMonsterAIAgroInfo::Reset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.h
;	COMDAT ??0TMonsterAIAgroInfo@@QAE@XZ
_TEXT	SEGMENT
??0TMonsterAIAgroInfo@@QAE@XZ PROC			; TMonsterAIAgroInfo::TMonsterAIAgroInfo, COMDAT
; _this$ = ecx

; 24   : 
; 25   : 	void Reset()
; 26   : 	{
; 27   : 		this->m_iUserIndex = -1;

  00000	c7 01 ff ff ff
	ff		 mov	 DWORD PTR [ecx], -1

; 20   : 	{
; 21   : 		// Clean Data
; 22   : 		this->Reset();
; 23   : 	}

  00006	8b c1		 mov	 eax, ecx

; 28   : 		this->m_iAgroValue = -1;

  00008	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1

; 20   : 	{
; 21   : 		// Clean Data
; 22   : 		this->Reset();
; 23   : 	}

  0000f	c3		 ret	 0
??0TMonsterAIAgroInfo@@QAE@XZ ENDP			; TMonsterAIAgroInfo::TMonsterAIAgroInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\michel\desktop\source\gameserver\source\tmonsteraiagro.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
